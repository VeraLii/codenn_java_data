[{
	"Path": "com.amazonaws.services.workspaces.model.DescribeIpGroupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResult() != null)\r\n        sb.append(\"Result: \").append(getResult()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.GetEncryptionConfigResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEncryptionConfig() != null)\r\n        sb.append(\"EncryptionConfig: \").append(getEncryptionConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.CreateCachediSCSIVolumeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVolumeARN() != null)\r\n        sb.append(\"VolumeARN: \").append(getVolumeARN()).append(\",\");\r\n    if (getTargetARN() != null)\r\n        sb.append(\"TargetARN: \").append(getTargetARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.DeleteTranscriptionJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTranscriptionJobName() != null)\r\n        sb.append(\"TranscriptionJobName: \").append(getTranscriptionJobName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.ByteMatchSet.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getByteMatchSetId() != null)\r\n        sb.append(\"ByteMatchSetId: \").append(getByteMatchSetId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getByteMatchTuples() != null)\r\n        sb.append(\"ByteMatchTuples: \").append(getByteMatchTuples());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.support.model.Communication.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCaseId() != null)\r\n        sb.append(\"CaseId: \").append(getCaseId()).append(\",\");\r\n    if (getBody() != null)\r\n        sb.append(\"Body: \").append(getBody()).append(\",\");\r\n    if (getSubmittedBy() != null)\r\n        sb.append(\"SubmittedBy: \").append(getSubmittedBy()).append(\",\");\r\n    if (getTimeCreated() != null)\r\n        sb.append(\"TimeCreated: \").append(getTimeCreated()).append(\",\");\r\n    if (getAttachmentSet() != null)\r\n        sb.append(\"AttachmentSet: \").append(getAttachmentSet());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.DescribeGroupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroups() != null)\r\n        sb.append(\"Groups: \").append(getGroups()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.auth.WebIdentityFederationSessionCredentialsProvider.getSessionDuration",
	"Comment": "get the duration of the session credentials created by this client inseconds. values must be supported by assumerolewithwebidentityrequest.",
	"Method": "int getSessionDuration(){\r\n    return this.sessionDuration;\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.RetrieveTapeRecoveryPointResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTapeARN() != null)\r\n        sb.append(\"TapeARN: \").append(getTapeARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.RefreshCacheResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFileShareARN() != null)\r\n        sb.append(\"FileShareARN: \").append(getFileShareARN()).append(\",\");\r\n    if (getNotificationId() != null)\r\n        sb.append(\"NotificationId: \").append(getNotificationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.securitytoken.model.GetCallerIdentityResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserId() != null)\r\n        sb.append(\"UserId: \").append(getUserId()).append(\",\");\r\n    if (getAccount() != null)\r\n        sb.append(\"Account: \").append(getAccount()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.auth.ShouldDoBlockingSessionRefresh.expiring",
	"Comment": "session credentials that expire in less than a minute are considered expiring.",
	"Method": "boolean expiring(Date expiry){\r\n    long timeRemaining = expiry.getTime() - System.currentTimeMillis();\r\n    return timeRemaining < EXPIRY_TIME_MILLIS;\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.ResourceARNDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getARN() != null)\r\n        sb.append(\"ARN: \").append(getARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.GetResourcesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthenticationToken() != null)\r\n        sb.append(\"AuthenticationToken: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getUserId() != null)\r\n        sb.append(\"UserId: \").append(getUserId()).append(\",\");\r\n    if (getCollectionType() != null)\r\n        sb.append(\"CollectionType: \").append(getCollectionType()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.DeleteDocumentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.GetWebACLRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWebACLId() != null)\r\n        sb.append(\"WebACLId: \").append(getWebACLId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.UpdateDocumentVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthenticationToken() != null)\r\n        sb.append(\"AuthenticationToken: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getDocumentId() != null)\r\n        sb.append(\"DocumentId: \").append(getDocumentId()).append(\",\");\r\n    if (getVersionId() != null)\r\n        sb.append(\"VersionId: \").append(getVersionId()).append(\",\");\r\n    if (getVersionStatus() != null)\r\n        sb.append(\"VersionStatus: \").append(getVersionStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.AWSWAFClient.getRule",
	"Comment": "returns the rule that is specified by the ruleid that you included in thegetrule request.",
	"Method": "GetRuleResult getRule(GetRuleRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetRule(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.CreateXssMatchSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.AWSWAFClient.getGeoMatchSet",
	"Comment": "returns the geomatchset that is specified by geomatchsetid.",
	"Method": "GetGeoMatchSetResult getGeoMatchSet(GetGeoMatchSetRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetGeoMatchSet(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.GetRuleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRuleId() != null)\r\n        sb.append(\"RuleId: \").append(getRuleId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.ValueWithServiceIds.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAnnotationValue() != null)\r\n        sb.append(\"AnnotationValue: \").append(getAnnotationValue()).append(\",\");\r\n    if (getServiceIds() != null)\r\n        sb.append(\"ServiceIds: \").append(getServiceIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.GetSamplingTargetsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSamplingTargetDocuments() != null)\r\n        sb.append(\"SamplingTargetDocuments: \").append(getSamplingTargetDocuments()).append(\",\");\r\n    if (getLastRuleModification() != null)\r\n        sb.append(\"LastRuleModification: \").append(getLastRuleModification()).append(\",\");\r\n    if (getUnprocessedStatistics() != null)\r\n        sb.append(\"UnprocessedStatistics: \").append(getUnprocessedStatistics());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.AmazonTranscribeClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.UpdateBandwidthRateLimitResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.RegexMatchSetSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegexMatchSetId() != null)\r\n        sb.append(\"RegexMatchSetId: \").append(getRegexMatchSetId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.UpdateSnapshotScheduleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVolumeARN() != null)\r\n        sb.append(\"VolumeARN: \").append(getVolumeARN()).append(\",\");\r\n    if (getStartAt() != null)\r\n        sb.append(\"StartAt: \").append(getStartAt()).append(\",\");\r\n    if (getRecurrenceInHours() != null)\r\n        sb.append(\"RecurrenceInHours: \").append(getRecurrenceInHours()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "buildcraft.lib.chunkload.IChunkLoadingTile.getChunksToLoad",
	"Comment": "gets a list of all the additional chunks to load.the default implementation returns neighbouring chunks if this block is on a chunk boundary.",
	"Method": "Set<ChunkPos> getChunksToLoad(){\r\n    BlockPos pos = ((TileEntity) this).getPos();\r\n    Set<ChunkPos> chunkPoses = new HashSet(4);\r\n    for (EnumFacing face : EnumFacing.HORIZONTALS) {\r\n        chunkPoses.add(new ChunkPos(pos.offset(face)));\r\n    }\r\n    return chunkPoses;\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.Permission.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGranteeId() != null)\r\n        sb.append(\"GranteeId: \").append(getGranteeId()).append(\",\");\r\n    if (getGranteeType() != null)\r\n        sb.append(\"GranteeType: \").append(getGranteeType()).append(\",\");\r\n    if (getPermissionValues() != null)\r\n        sb.append(\"PermissionValues: \").append(getPermissionValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.AbstractAmazonWorkspacesAsync.describeWorkspacesAsync",
	"Comment": "simplified method form for invoking the describeworkspaces operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeWorkspacesResult> describeWorkspacesAsync(DescribeWorkspacesRequest request,java.util.concurrent.Future<DescribeWorkspacesResult> describeWorkspacesAsync,DescribeWorkspacesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeWorkspacesRequest, DescribeWorkspacesResult> asyncHandler,java.util.concurrent.Future<DescribeWorkspacesResult> describeWorkspacesAsync,java.util.concurrent.Future<DescribeWorkspacesResult> describeWorkspacesAsync,com.amazonaws.handlers.AsyncHandler<DescribeWorkspacesRequest, DescribeWorkspacesResult> asyncHandler){\r\n    return describeWorkspacesAsync(new DescribeWorkspacesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.transfer.AWSTransferAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.AmazonWorkDocsAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.XssMatchSetSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getXssMatchSetId() != null)\r\n        sb.append(\"XssMatchSetId: \").append(getXssMatchSetId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.DeleteBandwidthRateLimitRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN()).append(\",\");\r\n    if (getBandwidthType() != null)\r\n        sb.append(\"BandwidthType: \").append(getBandwidthType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.DeleteIpGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "cc.blynk.server.application.handlers.main.logic.dashboard.MobileUpdateDashLogic.messageReceived",
	"Comment": "todo should accept only dash info and ignore widgets. should be fixed after migration",
	"Method": "void messageReceived(Holder holder,ChannelHandlerContext ctx,MobileStateHolder state,StringMessage message){\r\n    String dashString = message.body;\r\n    if (dashString == null || dashString.isEmpty()) {\r\n        throw new IllegalCommandException(\"Income create dash message is empty.\");\r\n    }\r\n    if (dashString.length() > holder.limits.profileSizeLimitBytes) {\r\n        throw new NotAllowedException(\"User dashboard is larger then limit.\", message.id);\r\n    }\r\n    log.debug(\"Trying to parse user dash : {}\", dashString);\r\n    DashBoard updatedDash = JsonParser.parseDashboard(dashString, message.id);\r\n    if (updatedDash == null) {\r\n        throw new IllegalCommandException(\"Project parsing error.\");\r\n    }\r\n    log.debug(\"Saving dashboard.\");\r\n    User user = state.user;\r\n    DashBoard existingDash = user.profile.getDashByIdOrThrow(updatedDash.id);\r\n    TimerWorker timerWorker = holder.timerWorker;\r\n    timerWorker.deleteTimers(state.userKey, existingDash);\r\n    updatedDash.addTimers(timerWorker, state.userKey);\r\n    existingDash.updateFields(updatedDash);\r\n    user.profile.cleanPinStorage(existingDash, false, true);\r\n    user.lastModifiedTs = existingDash.updatedAt;\r\n    ctx.writeAndFlush(ok(message.id), ctx.voidPromise());\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.DescribeChapCredentialsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChapCredentials() != null)\r\n        sb.append(\"ChapCredentials: \").append(getChapCredentials());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.AWSWAFRegionalClient.getSqlInjectionMatchSet",
	"Comment": "returns the sqlinjectionmatchset that is specified by sqlinjectionmatchsetid.",
	"Method": "GetSqlInjectionMatchSetResult getSqlInjectionMatchSet(GetSqlInjectionMatchSetRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetSqlInjectionMatchSet(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.CreateRuleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRule() != null)\r\n        sb.append(\"Rule: \").append(getRule()).append(\",\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.UpdateFolderResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.DeleteUserResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.DeleteCustomMetadataRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthenticationToken() != null)\r\n        sb.append(\"AuthenticationToken: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId()).append(\",\");\r\n    if (getVersionId() != null)\r\n        sb.append(\"VersionId: \").append(getVersionId()).append(\",\");\r\n    if (getKeys() != null)\r\n        sb.append(\"Keys: \").append(getKeys()).append(\",\");\r\n    if (getDeleteAll() != null)\r\n        sb.append(\"DeleteAll: \").append(getDeleteAll());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.SizeConstraintSetSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSizeConstraintSetId() != null)\r\n        sb.append(\"SizeConstraintSetId: \").append(getSizeConstraintSetId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.RemoveTagsFromResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceARN() != null)\r\n        sb.append(\"ResourceARN: \").append(getResourceARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.auth.WebIdentityFederationSessionCredentialsProvider.withRefreshThreshold",
	"Comment": "set the refresh threshold for the session credentials created by this client inseconds. this value will be used internally to determine if newcredentials should be fetched from sts. returns a refrence to the objectso methods can be chained.",
	"Method": "WebIdentityFederationSessionCredentialsProvider withRefreshThreshold(int refreshThreshold){\r\n    this.setRefreshThreshold(refreshThreshold);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.DisassociateMemberFromGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOrganizationId() != null)\r\n        sb.append(\"OrganizationId: \").append(getOrganizationId()).append(\",\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId()).append(\",\");\r\n    if (getMemberId() != null)\r\n        sb.append(\"MemberId: \").append(getMemberId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.DeleteSqlInjectionMatchSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.ListSizeConstraintSetsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getSizeConstraintSets() != null)\r\n        sb.append(\"SizeConstraintSets: \").append(getSizeConstraintSets());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.translate.model.ImportTerminologyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getMergeStrategy() != null)\r\n        sb.append(\"MergeStrategy: \").append(getMergeStrategy()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getTerminologyData() != null)\r\n        sb.append(\"TerminologyData: \").append(getTerminologyData()).append(\",\");\r\n    if (getEncryptionKey() != null)\r\n        sb.append(\"EncryptionKey: \").append(getEncryptionKey());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.transfer.model.CreateServerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIdentityProviderDetails() != null)\r\n        sb.append(\"IdentityProviderDetails: \").append(getIdentityProviderDetails()).append(\",\");\r\n    if (getIdentityProviderType() != null)\r\n        sb.append(\"IdentityProviderType: \").append(getIdentityProviderType()).append(\",\");\r\n    if (getLoggingRole() != null)\r\n        sb.append(\"LoggingRole: \").append(getLoggingRole()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.DeleteMailboxPermissionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOrganizationId() != null)\r\n        sb.append(\"OrganizationId: \").append(getOrganizationId()).append(\",\");\r\n    if (getEntityId() != null)\r\n        sb.append(\"EntityId: \").append(getEntityId()).append(\",\");\r\n    if (getGranteeId() != null)\r\n        sb.append(\"GranteeId: \").append(getGranteeId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.ListSqlInjectionMatchSetsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getSqlInjectionMatchSets() != null)\r\n        sb.append(\"SqlInjectionMatchSets: \").append(getSqlInjectionMatchSets());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.AssociateIpGroupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.DescribeNotificationSubscriptionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOrganizationId() != null)\r\n        sb.append(\"OrganizationId: \").append(getOrganizationId()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.TelemetryRecord.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTimestamp() != null)\r\n        sb.append(\"Timestamp: \").append(getTimestamp()).append(\",\");\r\n    if (getSegmentsReceivedCount() != null)\r\n        sb.append(\"SegmentsReceivedCount: \").append(getSegmentsReceivedCount()).append(\",\");\r\n    if (getSegmentsSentCount() != null)\r\n        sb.append(\"SegmentsSentCount: \").append(getSegmentsSentCount()).append(\",\");\r\n    if (getSegmentsSpilloverCount() != null)\r\n        sb.append(\"SegmentsSpilloverCount: \").append(getSegmentsSpilloverCount()).append(\",\");\r\n    if (getSegmentsRejectedCount() != null)\r\n        sb.append(\"SegmentsRejectedCount: \").append(getSegmentsRejectedCount()).append(\",\");\r\n    if (getBackendConnectionErrors() != null)\r\n        sb.append(\"BackendConnectionErrors: \").append(getBackendConnectionErrors());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.SubscribedRuleGroupSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRuleGroupId() != null)\r\n        sb.append(\"RuleGroupId: \").append(getRuleGroupId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getMetricName() != null)\r\n        sb.append(\"MetricName: \").append(getMetricName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.AssociateMemberToGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOrganizationId() != null)\r\n        sb.append(\"OrganizationId: \").append(getOrganizationId()).append(\",\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId()).append(\",\");\r\n    if (getMemberId() != null)\r\n        sb.append(\"MemberId: \").append(getMemberId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.AmazonWorkspacesClient.rebuildWorkspaces",
	"Comment": "rebuilds the specified workspace.you cannot rebuild a workspace unless its state is available, error, orunhealthy.rebuilding a workspace is a potentially destructive action that can result in the loss of data. for moreinformation, see rebuild aworkspace.this operation is asynchronous and returns before the workspaces have been completely rebuilt.",
	"Method": "RebuildWorkspacesResult rebuildWorkspaces(RebuildWorkspacesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeRebuildWorkspaces(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.support.model.Service.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCode() != null)\r\n        sb.append(\"Code: \").append(getCode()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getCategories() != null)\r\n        sb.append(\"Categories: \").append(getCategories());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "buildcraft.lib.misc.WorkerThreadUtil.executeWorkTask",
	"Comment": "executes a task. if this is in debug mode then if this takes longer than 30ms the it assumes that something hasgone wrong, and will notify the log that a task took too long. if it goes on for longer than 10s then it willmake a big error in the log.",
	"Method": "void executeWorkTask(Runnable task,Future<T> executeWorkTask,Callable<T> task){\r\n    Class<?> taskClass = task.getClass();\r\n    if (task instanceof CallableDelegate) {\r\n        taskClass = ((CallableDelegate) task).getRealClass();\r\n    }\r\n    String taskType = taskClass.getSimpleName();\r\n    Task<T> taskMonitor = new Task(task, taskType);\r\n    Future<T> future = WORKING_POOL.submit(taskMonitor);\r\n    if (!future.isDone()) {\r\n        executeMonitoringTask(new MonitorTask(taskMonitor, future));\r\n    }\r\n    return future;\r\n}"
}, {
	"Path": "com.amazonaws.test.util.SdkAsserts.doesFileEqualStream",
	"Comment": "returns true if, and only if, the contents in the specified file are exactly equal to thecontents read from the specified input stream. the input stream will be closed at the end ofthis method.",
	"Method": "boolean doesFileEqualStream(File expectedFile,InputStream inputStream){\r\n    InputStream expectedInputStream = new FileInputStream(expectedFile);\r\n    return doesStreamEqualStream(expectedInputStream, inputStream);\r\n}"
}, {
	"Path": "com.amazonaws.services.translate.model.EncryptionKey.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.RootStorage.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCapacity() != null)\r\n        sb.append(\"Capacity: \").append(getCapacity());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.DescribeCacheResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN()).append(\",\");\r\n    if (getDiskIds() != null)\r\n        sb.append(\"DiskIds: \").append(getDiskIds()).append(\",\");\r\n    if (getCacheAllocatedInBytes() != null)\r\n        sb.append(\"CacheAllocatedInBytes: \").append(getCacheAllocatedInBytes()).append(\",\");\r\n    if (getCacheUsedPercentage() != null)\r\n        sb.append(\"CacheUsedPercentage: \").append(getCacheUsedPercentage()).append(\",\");\r\n    if (getCacheDirtyPercentage() != null)\r\n        sb.append(\"CacheDirtyPercentage: \").append(getCacheDirtyPercentage()).append(\",\");\r\n    if (getCacheHitPercentage() != null)\r\n        sb.append(\"CacheHitPercentage: \").append(getCacheHitPercentage()).append(\",\");\r\n    if (getCacheMissPercentage() != null)\r\n        sb.append(\"CacheMissPercentage: \").append(getCacheMissPercentage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.GetTraceGraphRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTraceIds() != null)\r\n        sb.append(\"TraceIds: \").append(getTraceIds()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.DescribeClientPropertiesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClientPropertiesList() != null)\r\n        sb.append(\"ClientPropertiesList: \").append(getClientPropertiesList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.CancelArchivalRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN()).append(\",\");\r\n    if (getTapeARN() != null)\r\n        sb.append(\"TapeARN: \").append(getTapeARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.translate.model.DeleteTerminologyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.DeletePermissionPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.ResourcePath.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getComponents() != null)\r\n        sb.append(\"Components: \").append(getComponents());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.ActivateUserResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUser() != null)\r\n        sb.append(\"User: \").append(getUser());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.PutMailboxPermissionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.AmazonWorkspacesClient.deleteWorkspaceImage",
	"Comment": "deletes the specified image from your account. to delete an image, you must first delete any bundles that areassociated with the image.",
	"Method": "DeleteWorkspaceImageResult deleteWorkspaceImage(DeleteWorkspaceImageRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteWorkspaceImage(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.GatewayInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayId() != null)\r\n        sb.append(\"GatewayId: \").append(getGatewayId()).append(\",\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN()).append(\",\");\r\n    if (getGatewayType() != null)\r\n        sb.append(\"GatewayType: \").append(getGatewayType()).append(\",\");\r\n    if (getGatewayOperationalState() != null)\r\n        sb.append(\"GatewayOperationalState: \").append(getGatewayOperationalState()).append(\",\");\r\n    if (getGatewayName() != null)\r\n        sb.append(\"GatewayName: \").append(getGatewayName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.AmazonWorkspacesClient.revokeIpRules",
	"Comment": "removes one or more rules from the specified ip access control group.",
	"Method": "RevokeIpRulesResult revokeIpRules(RevokeIpRulesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeRevokeIpRules(request);\r\n}"
}, {
	"Path": "io.bootique.test.junit.BQTestRuntimeBuilder.modules",
	"Comment": "adds an array of module types to the bootique di runtime. each type willbe instantiated by bootique and added to the guice di container.",
	"Method": "T modules(Class<? extends Module> moduleTypes,T modules,Module modules){\r\n    bootique.modules(modules);\r\n    return (T) this;\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.ListTagsForResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceARN() != null)\r\n        sb.append(\"ResourceARN: \").append(getResourceARN()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.AWSWAFRegionalClient.getRegexPatternSet",
	"Comment": "returns the regexpatternset specified by regexpatternsetid.",
	"Method": "GetRegexPatternSetResult getRegexPatternSet(GetRegexPatternSetRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetRegexPatternSet(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.securitytoken.model.AssumeRoleWithWebIdentityRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getRoleSessionName() != null)\r\n        sb.append(\"RoleSessionName: \").append(getRoleSessionName()).append(\",\");\r\n    if (getWebIdentityToken() != null)\r\n        sb.append(\"WebIdentityToken: \").append(getWebIdentityToken()).append(\",\");\r\n    if (getProviderId() != null)\r\n        sb.append(\"ProviderId: \").append(getProviderId()).append(\",\");\r\n    if (getPolicy() != null)\r\n        sb.append(\"Policy: \").append(getPolicy()).append(\",\");\r\n    if (getDurationSeconds() != null)\r\n        sb.append(\"DurationSeconds: \").append(getDurationSeconds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.GetTranscriptionJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTranscriptionJob() != null)\r\n        sb.append(\"TranscriptionJob: \").append(getTranscriptionJob());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.support.model.DescribeCasesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCases() != null)\r\n        sb.append(\"Cases: \").append(getCases()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.GetRegexMatchSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegexMatchSet() != null)\r\n        sb.append(\"RegexMatchSet: \").append(getRegexMatchSet());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.DeleteSamplingRuleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRuleName() != null)\r\n        sb.append(\"RuleName: \").append(getRuleName()).append(\",\");\r\n    if (getRuleARN() != null)\r\n        sb.append(\"RuleARN: \").append(getRuleARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.SamplingStatisticSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRuleName() != null)\r\n        sb.append(\"RuleName: \").append(getRuleName()).append(\",\");\r\n    if (getTimestamp() != null)\r\n        sb.append(\"Timestamp: \").append(getTimestamp()).append(\",\");\r\n    if (getRequestCount() != null)\r\n        sb.append(\"RequestCount: \").append(getRequestCount()).append(\",\");\r\n    if (getBorrowCount() != null)\r\n        sb.append(\"BorrowCount: \").append(getBorrowCount()).append(\",\");\r\n    if (getSampledCount() != null)\r\n        sb.append(\"SampledCount: \").append(getSampledCount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "buildcraft.lib.misc.data.DelayedList.advance",
	"Comment": "advances this list by one, effectively decrementing the delays of every element by one and returning allelements that have a delay of 0.",
	"Method": "List<E> advance(){\r\n    if (elements.isEmpty()) {\r\n        return ImmutableList.of();\r\n    }\r\n    return elements.remove(0);\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.ListVocabulariesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getVocabularies() != null)\r\n        sb.append(\"Vocabularies: \").append(getVocabularies());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.transfer.model.UpdateUserResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServerId() != null)\r\n        sb.append(\"ServerId: \").append(getServerId()).append(\",\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.Http.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHttpURL() != null)\r\n        sb.append(\"HttpURL: \").append(getHttpURL()).append(\",\");\r\n    if (getHttpStatus() != null)\r\n        sb.append(\"HttpStatus: \").append(getHttpStatus()).append(\",\");\r\n    if (getHttpMethod() != null)\r\n        sb.append(\"HttpMethod: \").append(getHttpMethod()).append(\",\");\r\n    if (getUserAgent() != null)\r\n        sb.append(\"UserAgent: \").append(getUserAgent()).append(\",\");\r\n    if (getClientIp() != null)\r\n        sb.append(\"ClientIp: \").append(getClientIp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "buildcraft.lib.misc.WorkerThreadUtil.executeMonitoringTask",
	"Comment": "executes a monitoring task. this is only run when this is in debug mode, so only use this for monitoring other",
	"Method": "void executeMonitoringTask(Runnable task){\r\n    if (DEBUG) {\r\n        MONITORING_POOL.execute(task);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.ModifyAccountRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDedicatedTenancySupport() != null)\r\n        sb.append(\"DedicatedTenancySupport: \").append(getDedicatedTenancySupport()).append(\",\");\r\n    if (getDedicatedTenancyManagementCidrRange() != null)\r\n        sb.append(\"DedicatedTenancyManagementCidrRange: \").append(getDedicatedTenancyManagementCidrRange());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "cc.blynk.cli.AlreadySelectedException.getOption",
	"Comment": "returns the option that was added to the group and triggered the exception.",
	"Method": "Option getOption(){\r\n    return option;\r\n}"
}, {
	"Path": "com.amazonaws.services.support.model.TrustedAdvisorCheckResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCheckId() != null)\r\n        sb.append(\"CheckId: \").append(getCheckId()).append(\",\");\r\n    if (getTimestamp() != null)\r\n        sb.append(\"Timestamp: \").append(getTimestamp()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getResourcesSummary() != null)\r\n        sb.append(\"ResourcesSummary: \").append(getResourcesSummary()).append(\",\");\r\n    if (getCategorySpecificSummary() != null)\r\n        sb.append(\"CategorySpecificSummary: \").append(getCategorySpecificSummary()).append(\",\");\r\n    if (getFlaggedResources() != null)\r\n        sb.append(\"FlaggedResources: \").append(getFlaggedResources());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "cc.blynk.cli.Util.stripLeadingHyphens",
	"Comment": "remove the hyphens from the beginning of str andreturn the new string.",
	"Method": "String stripLeadingHyphens(String str){\r\n    if (str == null) {\r\n        return null;\r\n    }\r\n    if (str.startsWith(\"--\")) {\r\n        return str.substring(2, str.length());\r\n    } else if (str.startsWith(\"-\")) {\r\n        return str.substring(1, str.length());\r\n    }\r\n    return str;\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.BookingOptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAutoAcceptRequests() != null)\r\n        sb.append(\"AutoAcceptRequests: \").append(getAutoAcceptRequests()).append(\",\");\r\n    if (getAutoDeclineRecurringRequests() != null)\r\n        sb.append(\"AutoDeclineRecurringRequests: \").append(getAutoDeclineRecurringRequests()).append(\",\");\r\n    if (getAutoDeclineConflictingRequests() != null)\r\n        sb.append(\"AutoDeclineConflictingRequests: \").append(getAutoDeclineConflictingRequests());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.support.model.TrustedAdvisorCheckRefreshStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCheckId() != null)\r\n        sb.append(\"CheckId: \").append(getCheckId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getMillisUntilNextRefreshable() != null)\r\n        sb.append(\"MillisUntilNextRefreshable: \").append(getMillisUntilNextRefreshable());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "io.bootique.Bootique.exec",
	"Comment": "executes this bootique application, returning the outcome object.",
	"Method": "CommandOutcome exec(){\r\n    CommandOutcome o;\r\n    try {\r\n        Thread shutdownThread = createJVMShutdownHook();\r\n        Runtime.getRuntime().addShutdownHook(shutdownThread);\r\n        try {\r\n            o = createRuntime().run();\r\n            if (o.forkedToBackground()) {\r\n                try {\r\n                    Thread.currentThread().join();\r\n                } catch (InterruptedException e) {\r\n                }\r\n            }\r\n        } finally {\r\n            shutdown(shutdownManager, bootLogger);\r\n            Runtime.getRuntime().removeShutdownHook(shutdownThread);\r\n        }\r\n    } catch (CreationException ce) {\r\n        o = processExceptions(ce.getCause(), ce);\r\n    } catch (ProvisionException pe) {\r\n        final Throwable cause = pe.getErrorMessages().stream().findFirst().map(Message::getCause).orElse(null);\r\n        o = processExceptions(cause, pe);\r\n    } catch (Throwable th) {\r\n        o = processExceptions(th, th);\r\n    }\r\n    if (!o.isSuccess()) {\r\n        if (o.getMessage() != null) {\r\n            bootLogger.stderr(String.format(\"Error running command '%s': %s\", getArgsAsString(), o.getMessage()), o.getException());\r\n        } else {\r\n            bootLogger.stderr(String.format(\"Error running command '%s'\", getArgsAsString()), o.getException());\r\n        }\r\n    }\r\n    return o;\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.UpdateResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.GetResourcesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFolders() != null)\r\n        sb.append(\"Folders: \").append(getFolders()).append(\",\");\r\n    if (getDocuments() != null)\r\n        sb.append(\"Documents: \").append(getDocuments()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "buildcraft.lib.gui.elem.ScrollbarElement.onMouseClicked",
	"Comment": "this is called even if the mouse is not inside your width and height!",
	"Method": "void onMouseClicked(int button){\r\n    if (contains(gui.mouse)) {\r\n        if (button == 0) {\r\n            isClicking = true;\r\n            updatePositionFromMouse();\r\n        }\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.AbortDocumentVersionUploadRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthenticationToken() != null)\r\n        sb.append(\"AuthenticationToken: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getDocumentId() != null)\r\n        sb.append(\"DocumentId: \").append(getDocumentId()).append(\",\");\r\n    if (getVersionId() != null)\r\n        sb.append(\"VersionId: \").append(getVersionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.securitytoken.model.GetCallerIdentityRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "io.bootique.BQModuleProvider.configs",
	"Comment": "a potentially empty map of configuration types supported by this module, keyed by default configurationprefix.",
	"Method": "Map<String, Type> configs(){\r\n    return Collections.emptyMap();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.GetDocumentPathResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPath() != null)\r\n        sb.append(\"Path: \").append(getPath());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "io.bootique.resource.FolderResourceFactory.getUrl",
	"Comment": "returns a url of a resource based on a path relative to this folder.",
	"Method": "URL getUrl(String subResourcePath){\r\n    if (subResourcePath.startsWith(\"/\")) {\r\n        subResourcePath = subResourcePath.substring(1);\r\n    }\r\n    return resolveUrl(this.resourceId + subResourcePath);\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.DeregisterFromWorkMailRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOrganizationId() != null)\r\n        sb.append(\"OrganizationId: \").append(getOrganizationId()).append(\",\");\r\n    if (getEntityId() != null)\r\n        sb.append(\"EntityId: \").append(getEntityId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.AmazonWorkspacesClient.disassociateIpGroups",
	"Comment": "disassociates the specified ip access control group from the specified directory.",
	"Method": "DisassociateIpGroupsResult disassociateIpGroups(DisassociateIpGroupsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDisassociateIpGroups(request);\r\n}"
}, {
	"Path": "io.bootique.command.Command.getMetadata",
	"Comment": "returns a metadata object for this command. default implementation\tgenerates barebone metadata based on class name.",
	"Method": "CommandMetadata getMetadata(){\r\n    return CommandMetadata.builder(getClass()).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.transfer.model.TagResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.GetLoggingConfigurationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.ContentManagerBuilder.build",
	"Comment": "construct contentmanager using the current builder configuration.",
	"Method": "ContentManager build(){\r\n    if (this.workDocsClient == null) {\r\n        this.workDocsClient = AmazonWorkDocsClientBuilder.defaultClient();\r\n    }\r\n    return new ContentManager(this);\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.DeleteGatewayRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.GetRateBasedRuleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRule() != null)\r\n        sb.append(\"Rule: \").append(getRule());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.support.model.DescribeTrustedAdvisorCheckResultRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCheckId() != null)\r\n        sb.append(\"CheckId: \").append(getCheckId()).append(\",\");\r\n    if (getLanguage() != null)\r\n        sb.append(\"Language: \").append(getLanguage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.AWSWAFRegionalClient.getXssMatchSet",
	"Comment": "returns the xssmatchset that is specified by xssmatchsetid.",
	"Method": "GetXssMatchSetResult getXssMatchSet(GetXssMatchSetRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetXssMatchSet(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.GetGroupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroups() != null)\r\n        sb.append(\"Groups: \").append(getGroups()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.support.model.RefreshTrustedAdvisorCheckResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.RetrieveTapeArchiveRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTapeARN() != null)\r\n        sb.append(\"TapeARN: \").append(getTapeARN()).append(\",\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.ResetPasswordResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.ModifyWorkspaceStateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWorkspaceId() != null)\r\n        sb.append(\"WorkspaceId: \").append(getWorkspaceId()).append(\",\");\r\n    if (getWorkspaceState() != null)\r\n        sb.append(\"WorkspaceState: \").append(getWorkspaceState());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "cc.blynk.server.workers.ReportingWorker.process",
	"Comment": "iterates over all reporting entries that were created during last minute.and stores all entries one by one to disk.",
	"Method": "Map<AggregationKey, AggregationValue> process(Map<AggregationKey, AggregationValue> map,GraphGranularityType type){\r\n    if (map.size() == 0) {\r\n        return Collections.emptyMap();\r\n    }\r\n    Set<AggregationKey> aggregationKeySet = map.keySet();\r\n    AggregationKey[] keys = aggregationKeySet.toArray(new AggregationKey[0]);\r\n    Arrays.sort(keys, AggregationKey.AGGREGATION_KEY_COMPARATOR);\r\n    var removedKeys = new HashMap<AggregationKey, AggregationValue>();\r\n    long nowTruncatedToPeriod = System.currentTimeMillis() / type.period;\r\n    for (AggregationKey keyToRemove : keys) {\r\n        if (keyToRemove.isOutdated(nowTruncatedToPeriod)) {\r\n            AggregationValue value = map.get(keyToRemove);\r\n            try {\r\n                Path userReportFolder = Paths.get(reportingPath, FileUtils.getUserStorageDir(keyToRemove.getEmail(), keyToRemove.getAppName()));\r\n                if (Files.notExists(userReportFolder)) {\r\n                    Files.createDirectories(userReportFolder);\r\n                }\r\n                String fileName = generateFilename(keyToRemove.getDashId(), keyToRemove.getDeviceId(), keyToRemove.getPinType(), keyToRemove.getPin(), type);\r\n                Path filePath = Paths.get(userReportFolder.toString(), fileName);\r\n                FileUtils.write(filePath, value.calcAverage(), keyToRemove.getTs(type));\r\n                removedKeys.put(keyToRemove, value);\r\n            } catch (Exception ioe) {\r\n                log.error(\"Error writing reporting file. Reason : {}\", ioe.getMessage());\r\n            } finally {\r\n                map.remove(keyToRemove);\r\n            }\r\n        }\r\n    }\r\n    return removedKeys;\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.ListAvailableManagementCidrRangesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getManagementCidrRanges() != null)\r\n        sb.append(\"ManagementCidrRanges: \").append(getManagementCidrRanges()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.transfer.model.ListServersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getServers() != null)\r\n        sb.append(\"Servers: \").append(getServers());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "io.bootique.BQCoreModuleExtender.addValueObjectsDescriptors",
	"Comment": "binds valueobjectsdescriptors with string description to value objects.",
	"Method": "BQCoreModuleExtender addValueObjectsDescriptors(Map<Class<?>, ValueObjectDescriptor> valueObjectsDescriptors){\r\n    MapBinder<Class<?>, ValueObjectDescriptor> binder = contributeValueObjectsDescriptors();\r\n    valueObjectsDescriptors.forEach((key, value) -> binder.addBinding(key).toInstance(value));\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.ContentManager.getDocumentStream",
	"Comment": "gets document stream from workdocs.if versionid of getdocumentstreamrequest is not specified,then the latest version of specified document is retrieved.clients must close the stream once content is read.",
	"Method": "GetDocumentStreamResult getDocumentStream(GetDocumentStreamRequest getDocumentStreamRequest){\r\n    String versionId = getDocumentStreamRequest.getVersionId();\r\n    if (versionId == null) {\r\n        GetDocumentRequest getDocumentRequest = new GetDocumentRequest();\r\n        getDocumentRequest.setDocumentId(getDocumentStreamRequest.getDocumentId());\r\n        String requestAuthenticationToken = getDocumentStreamRequest.getAuthenticationToken();\r\n        if (requestAuthenticationToken != null) {\r\n            getDocumentRequest.setAuthenticationToken(requestAuthenticationToken);\r\n        } else {\r\n            getDocumentRequest.setAuthenticationToken(authenticationToken);\r\n        }\r\n        GetDocumentResult result = client.getDocument(getDocumentRequest);\r\n        versionId = result.getMetadata().getLatestVersionMetadata().getId();\r\n    }\r\n    GetDocumentStreamResult getDocumentStreamResult = new GetDocumentStreamResult(getDocumentStreamRequest);\r\n    getDocumentStreamResult.setVersionId(versionId);\r\n    InputStream stream = getDocumentVersionStream(getDocumentStreamRequest.getDocumentId(), versionId);\r\n    getDocumentStreamResult.setStream(stream);\r\n    return getDocumentStreamResult;\r\n}"
}, {
	"Path": "com.amazonaws.auth.RefreshableTask.handleInterruptedException",
	"Comment": "if we are interrupted while waiting for a lock we just restore the interrupt status and throwan amazonclientexception back to the caller.",
	"Method": "void handleInterruptedException(String message,InterruptedException cause){\r\n    Thread.currentThread().interrupt();\r\n    throw new AbortedException(message, cause);\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.CreateNFSFileShareResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFileShareARN() != null)\r\n        sb.append(\"FileShareARN: \").append(getFileShareARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.StorageGatewayUtils.getActivationKey",
	"Comment": "sends a request to the aws storage gateway server running at thespecified address and activation region, and returns the activation keyfor that server.",
	"Method": "String getActivationKey(String gatewayAddress,String getActivationKey,String gatewayAddress,Region activationRegion,String getActivationKey,String gatewayAddress,String activationRegionName){\r\n    try {\r\n        HttpParams httpClientParams = new BasicHttpParams();\r\n        httpClientParams.setBooleanParameter(ClientPNames.HANDLE_REDIRECTS, false);\r\n        DefaultHttpClient client = new DefaultHttpClient(httpClientParams);\r\n        String url = \"http://\" + gatewayAddress;\r\n        if (activationRegionName != null) {\r\n            url += \"/?activationRegion=\" + activationRegionName;\r\n        }\r\n        HttpGet method = new HttpGet(url);\r\n        HttpResponse response = client.execute(method);\r\n        int statusCode = response.getStatusLine().getStatusCode();\r\n        if (statusCode != 302)\r\n            throw new AmazonClientException(\"Could not fetch activation key.  HTTP status code: \" + statusCode);\r\n        Header[] headers = response.getHeaders(\"Location\");\r\n        if (headers.length < 1)\r\n            throw new AmazonClientException(\"Could not fetch activation key, no location header found\");\r\n        String activationUrl = headers[0].getValue();\r\n        String[] parts = activationUrl.split(\"activationKey=\");\r\n        if (parts.length < 2 || null == parts[1])\r\n            throw new AmazonClientException(\"Unable to get activation key from : \" + activationUrl);\r\n        return parts[1];\r\n    } catch (IOException ioe) {\r\n        throw new AmazonClientException(\"Unable to get activation key\", ioe);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.AWSXRayClient.getSamplingTargets",
	"Comment": "requests a sampling quota for rules that the service is using to sample requests.",
	"Method": "GetSamplingTargetsResult getSamplingTargets(GetSamplingTargetsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetSamplingTargets(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.ChapInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTargetARN() != null)\r\n        sb.append(\"TargetARN: \").append(getTargetARN()).append(\",\");\r\n    if (getSecretToAuthenticateInitiator() != null)\r\n        sb.append(\"SecretToAuthenticateInitiator: \").append(getSecretToAuthenticateInitiator()).append(\",\");\r\n    if (getInitiatorName() != null)\r\n        sb.append(\"InitiatorName: \").append(getInitiatorName()).append(\",\");\r\n    if (getSecretToAuthenticateTarget() != null)\r\n        sb.append(\"SecretToAuthenticateTarget: \").append(getSecretToAuthenticateTarget());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.ListResourceDelegatesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOrganizationId() != null)\r\n        sb.append(\"OrganizationId: \").append(getOrganizationId()).append(\",\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "io.bootique.BQCoreModuleExtender.setDefaultCommand",
	"Comment": "initializes optional default command that will be executed if no explicit command is found in startup arguments.",
	"Method": "BQCoreModuleExtender setDefaultCommand(Class<? extends Command> commandType,BQCoreModuleExtender setDefaultCommand,Command command){\r\n    binder.bind(Key.get(Command.class, DefaultCommand.class)).toInstance(command);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.DeleteRuleGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.BackendConnectionErrors.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTimeoutCount() != null)\r\n        sb.append(\"TimeoutCount: \").append(getTimeoutCount()).append(\",\");\r\n    if (getConnectionRefusedCount() != null)\r\n        sb.append(\"ConnectionRefusedCount: \").append(getConnectionRefusedCount()).append(\",\");\r\n    if (getHTTPCode4XXCount() != null)\r\n        sb.append(\"HTTPCode4XXCount: \").append(getHTTPCode4XXCount()).append(\",\");\r\n    if (getHTTPCode5XXCount() != null)\r\n        sb.append(\"HTTPCode5XXCount: \").append(getHTTPCode5XXCount()).append(\",\");\r\n    if (getUnknownHostCount() != null)\r\n        sb.append(\"UnknownHostCount: \").append(getUnknownHostCount()).append(\",\");\r\n    if (getOtherCount() != null)\r\n        sb.append(\"OtherCount: \").append(getOtherCount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.UpdateChapCredentialsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTargetARN() != null)\r\n        sb.append(\"TargetARN: \").append(getTargetARN()).append(\",\");\r\n    if (getInitiatorName() != null)\r\n        sb.append(\"InitiatorName: \").append(getInitiatorName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.AmazonWorkspacesAsyncClient.describeWorkspaceDirectoriesAsync",
	"Comment": "simplified method form for invoking the describeworkspacedirectories operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeWorkspaceDirectoriesResult> describeWorkspaceDirectoriesAsync(DescribeWorkspaceDirectoriesRequest request,java.util.concurrent.Future<DescribeWorkspaceDirectoriesResult> describeWorkspaceDirectoriesAsync,DescribeWorkspaceDirectoriesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeWorkspaceDirectoriesRequest, DescribeWorkspaceDirectoriesResult> asyncHandler,java.util.concurrent.Future<DescribeWorkspaceDirectoriesResult> describeWorkspaceDirectoriesAsync,java.util.concurrent.Future<DescribeWorkspaceDirectoriesResult> describeWorkspaceDirectoriesAsync,com.amazonaws.handlers.AsyncHandler<DescribeWorkspaceDirectoriesRequest, DescribeWorkspaceDirectoriesResult> asyncHandler){\r\n    return describeWorkspaceDirectoriesAsync(new DescribeWorkspaceDirectoriesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.SqlInjectionMatchSetUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAction() != null)\r\n        sb.append(\"Action: \").append(getAction()).append(\",\");\r\n    if (getSqlInjectionMatchTuple() != null)\r\n        sb.append(\"SqlInjectionMatchTuple: \").append(getSqlInjectionMatchTuple());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.DeleteWebACLRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWebACLId() != null)\r\n        sb.append(\"WebACLId: \").append(getWebACLId()).append(\",\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "io.bootique.meta.config.ConfigObjectMetadata.builder",
	"Comment": "returns a builder that starts with an already available object. occasionally it is useful for the caller toprovide the initial object, e.g. to cache the instance before the builder is finished to avoid compilation cycles.",
	"Method": "Builder builder(ConfigObjectMetadata baseObject,Builder builder,Builder builder,String name){\r\n    return builder().name(name);\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.UpdateRuleGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRuleGroupId() != null)\r\n        sb.append(\"RuleGroupId: \").append(getRuleGroupId()).append(\",\");\r\n    if (getUpdates() != null)\r\n        sb.append(\"Updates: \").append(getUpdates()).append(\",\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.securitytoken.model.AssumeRoleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCredentials() != null)\r\n        sb.append(\"Credentials: \").append(getCredentials()).append(\",\");\r\n    if (getAssumedRoleUser() != null)\r\n        sb.append(\"AssumedRoleUser: \").append(getAssumedRoleUser()).append(\",\");\r\n    if (getPackedPolicySize() != null)\r\n        sb.append(\"PackedPolicySize: \").append(getPackedPolicySize());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.StopRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWorkspaceId() != null)\r\n        sb.append(\"WorkspaceId: \").append(getWorkspaceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.stepfunctions.model.StopExecutionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getExecutionArn() != null)\r\n        sb.append(\"ExecutionArn: \").append(getExecutionArn()).append(\",\");\r\n    if (getError() != null)\r\n        sb.append(\"Error: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getCause() != null)\r\n        sb.append(\"Cause: \").append(\"***Sensitive Data Redacted***\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.UpdateWebACLResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.UpdateUserRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthenticationToken() != null)\r\n        sb.append(\"AuthenticationToken: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getUserId() != null)\r\n        sb.append(\"UserId: \").append(getUserId()).append(\",\");\r\n    if (getGivenName() != null)\r\n        sb.append(\"GivenName: \").append(getGivenName()).append(\",\");\r\n    if (getSurname() != null)\r\n        sb.append(\"Surname: \").append(getSurname()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getStorageRule() != null)\r\n        sb.append(\"StorageRule: \").append(getStorageRule()).append(\",\");\r\n    if (getTimeZoneId() != null)\r\n        sb.append(\"TimeZoneId: \").append(getTimeZoneId()).append(\",\");\r\n    if (getLocale() != null)\r\n        sb.append(\"Locale: \").append(getLocale()).append(\",\");\r\n    if (getGrantPoweruserPrivileges() != null)\r\n        sb.append(\"GrantPoweruserPrivileges: \").append(getGrantPoweruserPrivileges());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "cc.blynk.utils.FileLoaderUtil.readFileAsString",
	"Comment": "first loads file from class path after that from current folder.so file in current folder is always overrides properties in classpath.",
	"Method": "String readFileAsString(String fileName){\r\n    if (!fileName.startsWith(\"/\")) {\r\n        fileName = \"/\" + fileName;\r\n    }\r\n    String result = null;\r\n    try (InputStream classPath = FileLoaderUtil.class.getResourceAsStream(fileName)) {\r\n        if (classPath != null) {\r\n            result = load(classPath);\r\n        }\r\n    } catch (Exception e) {\r\n        throw new RuntimeException(\"Error getting properties file : \" + fileName, e);\r\n    }\r\n    Path curDirPath = getFileInCurrentDir(fileName);\r\n    if (Files.exists(curDirPath)) {\r\n        try {\r\n            List<String> stringList = Files.readAllLines(curDirPath);\r\n            StringBuilder responseData = new StringBuilder();\r\n            for (String s : stringList) {\r\n                responseData.append(s).append(NEW_LINE);\r\n            }\r\n            result = responseData.toString();\r\n        } catch (Exception e) {\r\n            throw new RuntimeException(\"Error getting properties file : \" + fileName, e);\r\n        }\r\n    }\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.CreateIPSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.DeleteUserResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.DescribeResourcePermissionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthenticationToken() != null)\r\n        sb.append(\"AuthenticationToken: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId()).append(\",\");\r\n    if (getPrincipalId() != null)\r\n        sb.append(\"PrincipalId: \").append(getPrincipalId()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.ListResourcesForWebACLResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArns() != null)\r\n        sb.append(\"ResourceArns: \").append(getResourceArns());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.DescribeTagsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.AWSStorageGatewayClient.setSMBGuestPassword",
	"Comment": "sets the password for the guest user smbguest. the smbguest user is the user when theauthentication method for the file share is set to guestaccess.",
	"Method": "SetSMBGuestPasswordResult setSMBGuestPassword(SetSMBGuestPasswordRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeSetSMBGuestPassword(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.support.AWSSupportClient.resolveCase",
	"Comment": "takes a caseid and returns the initial state of the case along with the state of the case after thecall to resolvecase completed.",
	"Method": "ResolveCaseResult resolveCase(ResolveCaseRequest request,ResolveCaseResult resolveCase){\r\n    return resolveCase(new ResolveCaseRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.UpdateSqlInjectionMatchSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.GetPermissionPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicy() != null)\r\n        sb.append(\"Policy: \").append(getPolicy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.transfer.AWSTransferClientBuilder.build",
	"Comment": "construct a synchronous implementation of awstransfer using the current builder configuration.",
	"Method": "AWSTransfer build(AwsSyncClientParams params){\r\n    return new AWSTransferClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.ContentManagerAsync.getDocumentStreamAsync",
	"Comment": "asynchronously gets document stream of latest version of given document and version id.if version id is null, it retrieves latest version of requested document id.clients must close the stream once content is read.",
	"Method": "Future<GetDocumentStreamResult> getDocumentStreamAsync(GetDocumentStreamRequest getDocumentStreamRequest){\r\n    Callable<GetDocumentStreamResult> task = new Callable<GetDocumentStreamResult>() {\r\n        public GetDocumentStreamResult call() {\r\n            return getDocumentStream(getDocumentStreamRequest);\r\n        }\r\n    };\r\n    return executorService.submit(task);\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.ContentManagerAsync.getDocumentStreamAsync",
	"Comment": "asynchronously gets document stream of latest version of given document and version id.if version id is null, it retrieves latest version of requested document id.clients must close the stream once content is read.",
	"Method": "Future<GetDocumentStreamResult> getDocumentStreamAsync(GetDocumentStreamRequest getDocumentStreamRequest){\r\n    return getDocumentStream(getDocumentStreamRequest);\r\n}"
}, {
	"Path": "io.bootique.command.CommandRefWithArgs.typeRef",
	"Comment": "starts building an invocation with a command of a known type.",
	"Method": "ArgsBuilder typeRef(Class<? extends Command> commandType){\r\n    return new ArgsBuilder(commandType);\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.DescribeBandwidthRateLimitRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.CreateSMBFileShareRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken()).append(\",\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN()).append(\",\");\r\n    if (getKMSEncrypted() != null)\r\n        sb.append(\"KMSEncrypted: \").append(getKMSEncrypted()).append(\",\");\r\n    if (getKMSKey() != null)\r\n        sb.append(\"KMSKey: \").append(getKMSKey()).append(\",\");\r\n    if (getRole() != null)\r\n        sb.append(\"Role: \").append(getRole()).append(\",\");\r\n    if (getLocationARN() != null)\r\n        sb.append(\"LocationARN: \").append(getLocationARN()).append(\",\");\r\n    if (getDefaultStorageClass() != null)\r\n        sb.append(\"DefaultStorageClass: \").append(getDefaultStorageClass()).append(\",\");\r\n    if (getObjectACL() != null)\r\n        sb.append(\"ObjectACL: \").append(getObjectACL()).append(\",\");\r\n    if (getReadOnly() != null)\r\n        sb.append(\"ReadOnly: \").append(getReadOnly()).append(\",\");\r\n    if (getGuessMIMETypeEnabled() != null)\r\n        sb.append(\"GuessMIMETypeEnabled: \").append(getGuessMIMETypeEnabled()).append(\",\");\r\n    if (getRequesterPays() != null)\r\n        sb.append(\"RequesterPays: \").append(getRequesterPays()).append(\",\");\r\n    if (getValidUserList() != null)\r\n        sb.append(\"ValidUserList: \").append(getValidUserList()).append(\",\");\r\n    if (getInvalidUserList() != null)\r\n        sb.append(\"InvalidUserList: \").append(getInvalidUserList()).append(\",\");\r\n    if (getAuthentication() != null)\r\n        sb.append(\"Authentication: \").append(getAuthentication());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.support.AWSSupportAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awssupportasync using the current builder configuration.",
	"Method": "AWSSupportAsync build(AwsAsyncClientParams params){\r\n    return new AWSSupportAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.AmazonWorkDocsClient.deleteFolder",
	"Comment": "permanently deletes the specified folder and its contents.",
	"Method": "DeleteFolderResult deleteFolder(DeleteFolderRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteFolder(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.Tag.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.jmespath.NumericComparator.matches",
	"Comment": "abstract method definition that is overriden by thesubclasses to compare the given lhs and rhs numbersaccording to the given comparator",
	"Method": "boolean matches(JsonNode lhs,JsonNode rhs,boolean matches,BigDecimal lhs,BigDecimal rhs){\r\n    return matches(lhs.decimalValue(), rhs.decimalValue());\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.XssMatchSetUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAction() != null)\r\n        sb.append(\"Action: \").append(getAction()).append(\",\");\r\n    if (getXssMatchTuple() != null)\r\n        sb.append(\"XssMatchTuple: \").append(getXssMatchTuple());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.DescribeUsersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUsers() != null)\r\n        sb.append(\"Users: \").append(getUsers()).append(\",\");\r\n    if (getTotalNumberOfUsers() != null)\r\n        sb.append(\"TotalNumberOfUsers: \").append(getTotalNumberOfUsers()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "io.bootique.meta.application.ApplicationIntrospector.appNameFromRuntime",
	"Comment": "returns application name that is the name of the main class derived from runtime stack.",
	"Method": "String appNameFromRuntime(){\r\n    Class<?> main = mainClass();\r\n    String name = appNameFromJar(main);\r\n    return name != null ? name : appNameFromClassName(main);\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.AWSStorageGatewayClient.resetCache",
	"Comment": "resets all cache disks that have encountered a error and makes the disks available for reconfiguration as cachestorage. if your cache disk encounters a error, the gateway prevents read and write operations on virtual tapesin the gateway. for example, an error can occur when a disk is corrupted or removed from the gateway. when acache is reset, the gateway loses its cache storage. at this point you can reconfigure the disks as cache disks.this operation is only supported in the cached volume and tape types.if the cache disk you are resetting contains data that has not been uploaded to amazon s3 yet, that data can belost. after you reset cache disks, there will be no configured cache disks left in the gateway, so you mustconfigure at least one new cache disk for your gateway to function properly.",
	"Method": "ResetCacheResult resetCache(ResetCacheRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeResetCache(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.transfer.AWSTransferAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awstransferasync using the current builder configuration.",
	"Method": "AWSTransferAsync build(AwsAsyncClientParams params){\r\n    return new AWSTransferAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.UserMetadata.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getUsername() != null)\r\n        sb.append(\"Username: \").append(getUsername()).append(\",\");\r\n    if (getGivenName() != null)\r\n        sb.append(\"GivenName: \").append(getGivenName()).append(\",\");\r\n    if (getSurname() != null)\r\n        sb.append(\"Surname: \").append(getSurname()).append(\",\");\r\n    if (getEmailAddress() != null)\r\n        sb.append(\"EmailAddress: \").append(getEmailAddress());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "buildcraft.lib.misc.BlockUtil.getTileEntity",
	"Comment": "the following functions let you avoid unnecessary chunk loads, which is nice.",
	"Method": "TileEntity getTileEntity(World world,BlockPos pos,TileEntity getTileEntity,World world,BlockPos pos,boolean force){\r\n    return CompatManager.getTile(world, pos, force);\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.GetWebACLResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWebACL() != null)\r\n        sb.append(\"WebACL: \").append(getWebACL());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.DisassociateWebACLRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.AmazonWorkDocsClient.deleteDocument",
	"Comment": "permanently deletes the specified document and its associated metadata.",
	"Method": "DeleteDocumentResult deleteDocument(DeleteDocumentRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteDocument(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.UpdateSamplingRuleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSamplingRuleRecord() != null)\r\n        sb.append(\"SamplingRuleRecord: \").append(getSamplingRuleRecord());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.DescribeAccountModificationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountModifications() != null)\r\n        sb.append(\"AccountModifications: \").append(getAccountModifications()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.support.model.RecentCaseCommunications.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCommunications() != null)\r\n        sb.append(\"Communications: \").append(getCommunications()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.Activity.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getTimeStamp() != null)\r\n        sb.append(\"TimeStamp: \").append(getTimeStamp()).append(\",\");\r\n    if (getIsIndirectActivity() != null)\r\n        sb.append(\"IsIndirectActivity: \").append(getIsIndirectActivity()).append(\",\");\r\n    if (getOrganizationId() != null)\r\n        sb.append(\"OrganizationId: \").append(getOrganizationId()).append(\",\");\r\n    if (getInitiator() != null)\r\n        sb.append(\"Initiator: \").append(getInitiator()).append(\",\");\r\n    if (getParticipants() != null)\r\n        sb.append(\"Participants: \").append(getParticipants()).append(\",\");\r\n    if (getResourceMetadata() != null)\r\n        sb.append(\"ResourceMetadata: \").append(getResourceMetadata()).append(\",\");\r\n    if (getOriginalParent() != null)\r\n        sb.append(\"OriginalParent: \").append(getOriginalParent()).append(\",\");\r\n    if (getCommentMetadata() != null)\r\n        sb.append(\"CommentMetadata: \").append(getCommentMetadata());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.StartWorkspacesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStartWorkspaceRequests() != null)\r\n        sb.append(\"StartWorkspaceRequests: \").append(getStartWorkspaceRequests());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.EncryptionConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyId() != null)\r\n        sb.append(\"KeyId: \").append(getKeyId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.SetSMBGuestPasswordResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.ModifyClientPropertiesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId()).append(\",\");\r\n    if (getClientProperties() != null)\r\n        sb.append(\"ClientProperties: \").append(getClientProperties());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.support.model.DescribeServicesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServices() != null)\r\n        sb.append(\"Services: \").append(getServices());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.TimeWindow.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getEndTime() != null)\r\n        sb.append(\"EndTime: \").append(getEndTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.DescribeCommentsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getComments() != null)\r\n        sb.append(\"Comments: \").append(getComments()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.Participants.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUsers() != null)\r\n        sb.append(\"Users: \").append(getUsers()).append(\",\");\r\n    if (getGroups() != null)\r\n        sb.append(\"Groups: \").append(getGroups());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.DescribeIpGroupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupIds() != null)\r\n        sb.append(\"GroupIds: \").append(getGroupIds()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.CachediSCSIVolume.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVolumeARN() != null)\r\n        sb.append(\"VolumeARN: \").append(getVolumeARN()).append(\",\");\r\n    if (getVolumeId() != null)\r\n        sb.append(\"VolumeId: \").append(getVolumeId()).append(\",\");\r\n    if (getVolumeType() != null)\r\n        sb.append(\"VolumeType: \").append(getVolumeType()).append(\",\");\r\n    if (getVolumeStatus() != null)\r\n        sb.append(\"VolumeStatus: \").append(getVolumeStatus()).append(\",\");\r\n    if (getVolumeSizeInBytes() != null)\r\n        sb.append(\"VolumeSizeInBytes: \").append(getVolumeSizeInBytes()).append(\",\");\r\n    if (getVolumeProgress() != null)\r\n        sb.append(\"VolumeProgress: \").append(getVolumeProgress()).append(\",\");\r\n    if (getSourceSnapshotId() != null)\r\n        sb.append(\"SourceSnapshotId: \").append(getSourceSnapshotId()).append(\",\");\r\n    if (getVolumeiSCSIAttributes() != null)\r\n        sb.append(\"VolumeiSCSIAttributes: \").append(getVolumeiSCSIAttributes()).append(\",\");\r\n    if (getCreatedDate() != null)\r\n        sb.append(\"CreatedDate: \").append(getCreatedDate()).append(\",\");\r\n    if (getVolumeUsedInBytes() != null)\r\n        sb.append(\"VolumeUsedInBytes: \").append(getVolumeUsedInBytes()).append(\",\");\r\n    if (getKMSKey() != null)\r\n        sb.append(\"KMSKey: \").append(getKMSKey());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.WorkspaceProperties.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRunningMode() != null)\r\n        sb.append(\"RunningMode: \").append(getRunningMode()).append(\",\");\r\n    if (getRunningModeAutoStopTimeoutInMinutes() != null)\r\n        sb.append(\"RunningModeAutoStopTimeoutInMinutes: \").append(getRunningModeAutoStopTimeoutInMinutes()).append(\",\");\r\n    if (getRootVolumeSizeGib() != null)\r\n        sb.append(\"RootVolumeSizeGib: \").append(getRootVolumeSizeGib()).append(\",\");\r\n    if (getUserVolumeSizeGib() != null)\r\n        sb.append(\"UserVolumeSizeGib: \").append(getUserVolumeSizeGib()).append(\",\");\r\n    if (getComputeTypeName() != null)\r\n        sb.append(\"ComputeTypeName: \").append(getComputeTypeName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.support.model.CaseDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCaseId() != null)\r\n        sb.append(\"CaseId: \").append(getCaseId()).append(\",\");\r\n    if (getDisplayId() != null)\r\n        sb.append(\"DisplayId: \").append(getDisplayId()).append(\",\");\r\n    if (getSubject() != null)\r\n        sb.append(\"Subject: \").append(getSubject()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getServiceCode() != null)\r\n        sb.append(\"ServiceCode: \").append(getServiceCode()).append(\",\");\r\n    if (getCategoryCode() != null)\r\n        sb.append(\"CategoryCode: \").append(getCategoryCode()).append(\",\");\r\n    if (getSeverityCode() != null)\r\n        sb.append(\"SeverityCode: \").append(getSeverityCode()).append(\",\");\r\n    if (getSubmittedBy() != null)\r\n        sb.append(\"SubmittedBy: \").append(getSubmittedBy()).append(\",\");\r\n    if (getTimeCreated() != null)\r\n        sb.append(\"TimeCreated: \").append(getTimeCreated()).append(\",\");\r\n    if (getRecentCommunications() != null)\r\n        sb.append(\"RecentCommunications: \").append(getRecentCommunications()).append(\",\");\r\n    if (getCcEmailAddresses() != null)\r\n        sb.append(\"CcEmailAddresses: \").append(getCcEmailAddresses()).append(\",\");\r\n    if (getLanguage() != null)\r\n        sb.append(\"Language: \").append(getLanguage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.AmazonWorkspacesClient.modifyClientProperties",
	"Comment": "modifies the properties of the specified amazon workspaces client.",
	"Method": "ModifyClientPropertiesResult modifyClientProperties(ModifyClientPropertiesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeModifyClientProperties(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.CreateGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroup() != null)\r\n        sb.append(\"Group: \").append(getGroup());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.AWSWAFClient.deleteLoggingConfiguration",
	"Comment": "permanently deletes the loggingconfiguration from the specified web acl.",
	"Method": "DeleteLoggingConfigurationResult deleteLoggingConfiguration(DeleteLoggingConfigurationRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteLoggingConfiguration(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.AssociateDelegateToResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOrganizationId() != null)\r\n        sb.append(\"OrganizationId: \").append(getOrganizationId()).append(\",\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId()).append(\",\");\r\n    if (getEntityId() != null)\r\n        sb.append(\"EntityId: \").append(getEntityId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.AmazonWorkMailClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazonworkmail using the current builder configuration.",
	"Method": "AmazonWorkMail build(AwsSyncClientParams params){\r\n    return new AmazonWorkMailClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.ListAliasesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAliases() != null)\r\n        sb.append(\"Aliases: \").append(getAliases()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.VolumeInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVolumeARN() != null)\r\n        sb.append(\"VolumeARN: \").append(getVolumeARN()).append(\",\");\r\n    if (getVolumeId() != null)\r\n        sb.append(\"VolumeId: \").append(getVolumeId()).append(\",\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN()).append(\",\");\r\n    if (getGatewayId() != null)\r\n        sb.append(\"GatewayId: \").append(getGatewayId()).append(\",\");\r\n    if (getVolumeType() != null)\r\n        sb.append(\"VolumeType: \").append(getVolumeType()).append(\",\");\r\n    if (getVolumeSizeInBytes() != null)\r\n        sb.append(\"VolumeSizeInBytes: \").append(getVolumeSizeInBytes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.support.AbstractAWSSupportAsync.describeServicesAsync",
	"Comment": "simplified method form for invoking the describeservices operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeServicesResult> describeServicesAsync(DescribeServicesRequest request,java.util.concurrent.Future<DescribeServicesResult> describeServicesAsync,DescribeServicesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeServicesRequest, DescribeServicesResult> asyncHandler,java.util.concurrent.Future<DescribeServicesResult> describeServicesAsync,java.util.concurrent.Future<DescribeServicesResult> describeServicesAsync,com.amazonaws.handlers.AsyncHandler<DescribeServicesRequest, DescribeServicesResult> asyncHandler){\r\n    return describeServicesAsync(new DescribeServicesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.WafAction.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.GetSamplingRulesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.Tape.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTapeARN() != null)\r\n        sb.append(\"TapeARN: \").append(getTapeARN()).append(\",\");\r\n    if (getTapeBarcode() != null)\r\n        sb.append(\"TapeBarcode: \").append(getTapeBarcode()).append(\",\");\r\n    if (getTapeCreatedDate() != null)\r\n        sb.append(\"TapeCreatedDate: \").append(getTapeCreatedDate()).append(\",\");\r\n    if (getTapeSizeInBytes() != null)\r\n        sb.append(\"TapeSizeInBytes: \").append(getTapeSizeInBytes()).append(\",\");\r\n    if (getTapeStatus() != null)\r\n        sb.append(\"TapeStatus: \").append(getTapeStatus()).append(\",\");\r\n    if (getVTLDevice() != null)\r\n        sb.append(\"VTLDevice: \").append(getVTLDevice()).append(\",\");\r\n    if (getProgress() != null)\r\n        sb.append(\"Progress: \").append(getProgress()).append(\",\");\r\n    if (getTapeUsedInBytes() != null)\r\n        sb.append(\"TapeUsedInBytes: \").append(getTapeUsedInBytes()).append(\",\");\r\n    if (getKMSKey() != null)\r\n        sb.append(\"KMSKey: \").append(getKMSKey());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.AWSWAFRegionalClient.deleteLoggingConfiguration",
	"Comment": "permanently deletes the loggingconfiguration from the specified web acl.",
	"Method": "DeleteLoggingConfigurationResult deleteLoggingConfiguration(DeleteLoggingConfigurationRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteLoggingConfiguration(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.CreateRegexMatchSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.PutLoggingConfigurationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoggingConfiguration() != null)\r\n        sb.append(\"LoggingConfiguration: \").append(getLoggingConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.ListGatewaysResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGateways() != null)\r\n        sb.append(\"Gateways: \").append(getGateways()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.DeleteGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.GetWebACLForResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWebACLSummary() != null)\r\n        sb.append(\"WebACLSummary: \").append(getWebACLSummary());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.DescribeWorkingStorageRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.AssociateIpGroupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDirectoryId() != null)\r\n        sb.append(\"DirectoryId: \").append(getDirectoryId()).append(\",\");\r\n    if (getGroupIds() != null)\r\n        sb.append(\"GroupIds: \").append(getGroupIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.DescribeClientPropertiesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceIds() != null)\r\n        sb.append(\"ResourceIds: \").append(getResourceIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.CreateResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOrganizationId() != null)\r\n        sb.append(\"OrganizationId: \").append(getOrganizationId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.DescribeWorkspaceDirectoriesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDirectoryIds() != null)\r\n        sb.append(\"DirectoryIds: \").append(getDirectoryIds()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.AWSWAFRegionalClient.listGeoMatchSets",
	"Comment": "returns an array of geomatchsetsummary objects in the response.",
	"Method": "ListGeoMatchSetsResult listGeoMatchSets(ListGeoMatchSetsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListGeoMatchSets(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.DescribeResourcePermissionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPrincipals() != null)\r\n        sb.append(\"Principals: \").append(getPrincipals()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.translate.model.GetTerminologyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getTerminologyDataFormat() != null)\r\n        sb.append(\"TerminologyDataFormat: \").append(getTerminologyDataFormat());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.GetRateBasedRuleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRuleId() != null)\r\n        sb.append(\"RuleId: \").append(getRuleId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.DescribeUsersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthenticationToken() != null)\r\n        sb.append(\"AuthenticationToken: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getOrganizationId() != null)\r\n        sb.append(\"OrganizationId: \").append(getOrganizationId()).append(\",\");\r\n    if (getUserIds() != null)\r\n        sb.append(\"UserIds: \").append(getUserIds()).append(\",\");\r\n    if (getQuery() != null)\r\n        sb.append(\"Query: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getInclude() != null)\r\n        sb.append(\"Include: \").append(getInclude()).append(\",\");\r\n    if (getOrder() != null)\r\n        sb.append(\"Order: \").append(getOrder()).append(\",\");\r\n    if (getSort() != null)\r\n        sb.append(\"Sort: \").append(getSort()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getFields() != null)\r\n        sb.append(\"Fields: \").append(getFields());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.AuthorizeIpRulesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.support.AWSSupportClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.NotifyWhenUploadedRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFileShareARN() != null)\r\n        sb.append(\"FileShareARN: \").append(getFileShareARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.CreateUserRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOrganizationId() != null)\r\n        sb.append(\"OrganizationId: \").append(getOrganizationId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDisplayName() != null)\r\n        sb.append(\"DisplayName: \").append(getDisplayName()).append(\",\");\r\n    if (getPassword() != null)\r\n        sb.append(\"Password: \").append(\"***Sensitive Data Redacted***\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.auth.STSAssumeRoleSessionCredentialsProvider.close",
	"Comment": "shut down this credentials provider, shutting down the thread that performs asynchronous credential refreshing. thisshould not be invoked if the credentials provider is still in use by an aws client.",
	"Method": "void close(){\r\n    refreshableTask.close();\r\n}"
}, {
	"Path": "com.amazonaws.services.translate.model.TranslateTextRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getText() != null)\r\n        sb.append(\"Text: \").append(getText()).append(\",\");\r\n    if (getTerminologyNames() != null)\r\n        sb.append(\"TerminologyNames: \").append(getTerminologyNames()).append(\",\");\r\n    if (getSourceLanguageCode() != null)\r\n        sb.append(\"SourceLanguageCode: \").append(getSourceLanguageCode()).append(\",\");\r\n    if (getTargetLanguageCode() != null)\r\n        sb.append(\"TargetLanguageCode: \").append(getTargetLanguageCode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.DescribeUserRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOrganizationId() != null)\r\n        sb.append(\"OrganizationId: \").append(getOrganizationId()).append(\",\");\r\n    if (getUserId() != null)\r\n        sb.append(\"UserId: \").append(getUserId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.support.model.DescribeTrustedAdvisorCheckRefreshStatusesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCheckIds() != null)\r\n        sb.append(\"CheckIds: \").append(getCheckIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.NFSFileShareDefaults.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFileMode() != null)\r\n        sb.append(\"FileMode: \").append(getFileMode()).append(\",\");\r\n    if (getDirectoryMode() != null)\r\n        sb.append(\"DirectoryMode: \").append(getDirectoryMode()).append(\",\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId()).append(\",\");\r\n    if (getOwnerId() != null)\r\n        sb.append(\"OwnerId: \").append(getOwnerId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.ListGeoMatchSetsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.CreateCachediSCSIVolumeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN()).append(\",\");\r\n    if (getVolumeSizeInBytes() != null)\r\n        sb.append(\"VolumeSizeInBytes: \").append(getVolumeSizeInBytes()).append(\",\");\r\n    if (getSnapshotId() != null)\r\n        sb.append(\"SnapshotId: \").append(getSnapshotId()).append(\",\");\r\n    if (getTargetName() != null)\r\n        sb.append(\"TargetName: \").append(getTargetName()).append(\",\");\r\n    if (getSourceVolumeARN() != null)\r\n        sb.append(\"SourceVolumeARN: \").append(getSourceVolumeARN()).append(\",\");\r\n    if (getNetworkInterfaceId() != null)\r\n        sb.append(\"NetworkInterfaceId: \").append(getNetworkInterfaceId()).append(\",\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken()).append(\",\");\r\n    if (getKMSEncrypted() != null)\r\n        sb.append(\"KMSEncrypted: \").append(getKMSEncrypted()).append(\",\");\r\n    if (getKMSKey() != null)\r\n        sb.append(\"KMSKey: \").append(getKMSKey());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.AWSStorageGatewayClient.listTagsForResource",
	"Comment": "lists the tags that have been added to the specified resource. this operation is only supported in the cachedvolume, stored volume and tape gateway type.",
	"Method": "ListTagsForResourceResult listTagsForResource(ListTagsForResourceRequest request,ListTagsForResourceResult listTagsForResource){\r\n    return listTagsForResource(new ListTagsForResourceRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.stepfunctions.model.TaskSubmittedEventDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getResource() != null)\r\n        sb.append(\"Resource: \").append(getResource()).append(\",\");\r\n    if (getOutput() != null)\r\n        sb.append(\"Output: \").append(\"***Sensitive Data Redacted***\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.DescribeTapeArchivesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTapeARNs() != null)\r\n        sb.append(\"TapeARNs: \").append(getTapeARNs()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "cc.blynk.cli.DefaultParser.parse",
	"Comment": "parse the arguments according to the specified options and properties.",
	"Method": "CommandLine parse(Options options,String[] arguments){\r\n    this.options = options;\r\n    this.stopAtNonOption = false;\r\n    skipParsing = false;\r\n    currentOption = null;\r\n    expectedOpts = new ArrayList(options.getRequiredOptions());\r\n    for (OptionGroup group : options.getOptionGroups()) {\r\n        group.setSelected(null);\r\n    }\r\n    cmd = new CommandLine();\r\n    if (arguments != null) {\r\n        for (String argument : arguments) {\r\n            handleToken(argument);\r\n        }\r\n    }\r\n    checkRequiredArgs();\r\n    checkRequiredOptions();\r\n    return cmd;\r\n}"
}, {
	"Path": "com.amazonaws.services.securitytoken.model.GetSessionTokenResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCredentials() != null)\r\n        sb.append(\"Credentials: \").append(getCredentials());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.TapeRecoveryPointInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTapeARN() != null)\r\n        sb.append(\"TapeARN: \").append(getTapeARN()).append(\",\");\r\n    if (getTapeRecoveryPointTime() != null)\r\n        sb.append(\"TapeRecoveryPointTime: \").append(getTapeRecoveryPointTime()).append(\",\");\r\n    if (getTapeSizeInBytes() != null)\r\n        sb.append(\"TapeSizeInBytes: \").append(getTapeSizeInBytes()).append(\",\");\r\n    if (getTapeStatus() != null)\r\n        sb.append(\"TapeStatus: \").append(getTapeStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.securitytoken.model.DecodeAuthorizationMessageResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDecodedMessage() != null)\r\n        sb.append(\"DecodedMessage: \").append(getDecodedMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.DescribeFolderContentsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthenticationToken() != null)\r\n        sb.append(\"AuthenticationToken: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getFolderId() != null)\r\n        sb.append(\"FolderId: \").append(getFolderId()).append(\",\");\r\n    if (getSort() != null)\r\n        sb.append(\"Sort: \").append(getSort()).append(\",\");\r\n    if (getOrder() != null)\r\n        sb.append(\"Order: \").append(getOrder()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getInclude() != null)\r\n        sb.append(\"Include: \").append(getInclude());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.Workspace.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWorkspaceId() != null)\r\n        sb.append(\"WorkspaceId: \").append(getWorkspaceId()).append(\",\");\r\n    if (getDirectoryId() != null)\r\n        sb.append(\"DirectoryId: \").append(getDirectoryId()).append(\",\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getIpAddress() != null)\r\n        sb.append(\"IpAddress: \").append(getIpAddress()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getBundleId() != null)\r\n        sb.append(\"BundleId: \").append(getBundleId()).append(\",\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId()).append(\",\");\r\n    if (getErrorMessage() != null)\r\n        sb.append(\"ErrorMessage: \").append(getErrorMessage()).append(\",\");\r\n    if (getErrorCode() != null)\r\n        sb.append(\"ErrorCode: \").append(getErrorCode()).append(\",\");\r\n    if (getComputerName() != null)\r\n        sb.append(\"ComputerName: \").append(getComputerName()).append(\",\");\r\n    if (getVolumeEncryptionKey() != null)\r\n        sb.append(\"VolumeEncryptionKey: \").append(getVolumeEncryptionKey()).append(\",\");\r\n    if (getUserVolumeEncryptionEnabled() != null)\r\n        sb.append(\"UserVolumeEncryptionEnabled: \").append(getUserVolumeEncryptionEnabled()).append(\",\");\r\n    if (getRootVolumeEncryptionEnabled() != null)\r\n        sb.append(\"RootVolumeEncryptionEnabled: \").append(getRootVolumeEncryptionEnabled()).append(\",\");\r\n    if (getWorkspaceProperties() != null)\r\n        sb.append(\"WorkspaceProperties: \").append(getWorkspaceProperties()).append(\",\");\r\n    if (getModificationStates() != null)\r\n        sb.append(\"ModificationStates: \").append(getModificationStates());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.CreateFolderRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthenticationToken() != null)\r\n        sb.append(\"AuthenticationToken: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getParentFolderId() != null)\r\n        sb.append(\"ParentFolderId: \").append(getParentFolderId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.support.model.DescribeSeverityLevelsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSeverityLevels() != null)\r\n        sb.append(\"SeverityLevels: \").append(getSeverityLevels());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.ErrorStatistics.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThrottleCount() != null)\r\n        sb.append(\"ThrottleCount: \").append(getThrottleCount()).append(\",\");\r\n    if (getOtherCount() != null)\r\n        sb.append(\"OtherCount: \").append(getOtherCount()).append(\",\");\r\n    if (getTotalCount() != null)\r\n        sb.append(\"TotalCount: \").append(getTotalCount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.DisassociateIpGroupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.AWSXRayClient.batchGetTraces",
	"Comment": "retrieves a list of traces specified by id. each trace is a collection of segment documents that originates froma single request. use gettracesummaries to get a list of trace ids.",
	"Method": "BatchGetTracesResult batchGetTraces(BatchGetTracesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeBatchGetTraces(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.InstanceIdDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.DeleteAliasResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.transfer.model.IdentityProviderDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUrl() != null)\r\n        sb.append(\"Url: \").append(getUrl()).append(\",\");\r\n    if (getInvocationRole() != null)\r\n        sb.append(\"InvocationRole: \").append(getInvocationRole());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.CreateVocabularyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVocabularyName() != null)\r\n        sb.append(\"VocabularyName: \").append(getVocabularyName()).append(\",\");\r\n    if (getLanguageCode() != null)\r\n        sb.append(\"LanguageCode: \").append(getLanguageCode()).append(\",\");\r\n    if (getPhrases() != null)\r\n        sb.append(\"Phrases: \").append(getPhrases());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.DeleteXssMatchSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.support.model.DescribeCasesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCaseIdList() != null)\r\n        sb.append(\"CaseIdList: \").append(getCaseIdList()).append(\",\");\r\n    if (getDisplayId() != null)\r\n        sb.append(\"DisplayId: \").append(getDisplayId()).append(\",\");\r\n    if (getAfterTime() != null)\r\n        sb.append(\"AfterTime: \").append(getAfterTime()).append(\",\");\r\n    if (getBeforeTime() != null)\r\n        sb.append(\"BeforeTime: \").append(getBeforeTime()).append(\",\");\r\n    if (getIncludeResolvedCases() != null)\r\n        sb.append(\"IncludeResolvedCases: \").append(getIncludeResolvedCases()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getLanguage() != null)\r\n        sb.append(\"Language: \").append(getLanguage()).append(\",\");\r\n    if (getIncludeCommunications() != null)\r\n        sb.append(\"IncludeCommunications: \").append(getIncludeCommunications());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.AmazonWorkspacesClient.describeClientProperties",
	"Comment": "retrieves a list that describes one or more specified amazon workspaces clients.",
	"Method": "DescribeClientPropertiesResult describeClientProperties(DescribeClientPropertiesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeClientProperties(request);\r\n}"
}, {
	"Path": "com.amazonaws.jmespath.CamelCaseUtils.toCamelCase",
	"Comment": "this matches the algorithm that jackson uses to convert getter names to json field names. any names starting with alowercase character are left as is, any names starting with one or more uppercase characters have all consecutiveuppercase characters converted to lowercase. see tests for examples.",
	"Method": "String toCamelCase(String str){\r\n    if (str == null || str.isEmpty()) {\r\n        return str;\r\n    }\r\n    StringBuilder stringBuilder = new StringBuilder();\r\n    boolean foundFirstLowercase = false;\r\n    for (char cur : str.toCharArray()) {\r\n        if (Character.isUpperCase(cur) && !foundFirstLowercase) {\r\n            stringBuilder.append(Character.toLowerCase(cur));\r\n        } else {\r\n            foundFirstLowercase = true;\r\n            stringBuilder.append(cur);\r\n        }\r\n    }\r\n    return stringBuilder.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.stepfunctions.builder.StatesAsserts.roundTripPrettyStateMachine",
	"Comment": "serializes statemachine into pretty formatted json and deserialize back into a statemachine from the json.",
	"Method": "StateMachine roundTripPrettyStateMachine(StateMachine stateMachine){\r\n    return StateMachine.fromJson(stateMachine.toPrettyJson()).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.UpdateGatewayInformationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN()).append(\",\");\r\n    if (getGatewayName() != null)\r\n        sb.append(\"GatewayName: \").append(getGatewayName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.translate.model.ImportTerminologyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTerminologyProperties() != null)\r\n        sb.append(\"TerminologyProperties: \").append(getTerminologyProperties());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.AWSWAFAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awswafasync using the current builder configuration.",
	"Method": "AWSWAFAsync build(AwsAsyncClientParams params){\r\n    return new AWSWAFAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.PutEncryptionConfigResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEncryptionConfig() != null)\r\n        sb.append(\"EncryptionConfig: \").append(getEncryptionConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.SamplingRuleRecord.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSamplingRule() != null)\r\n        sb.append(\"SamplingRule: \").append(getSamplingRule()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getModifiedAt() != null)\r\n        sb.append(\"ModifiedAt: \").append(getModifiedAt());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.AmazonWorkDocsClient.describeGroups",
	"Comment": "describes the groups specified by the query. groups are defined by the underlying active directory.",
	"Method": "DescribeGroupsResult describeGroups(DescribeGroupsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeGroups(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.ResponseTimeRootCauseService.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getNames() != null)\r\n        sb.append(\"Names: \").append(getNames()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getEntityPath() != null)\r\n        sb.append(\"EntityPath: \").append(getEntityPath()).append(\",\");\r\n    if (getInferred() != null)\r\n        sb.append(\"Inferred: \").append(getInferred());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.ListVolumesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getVolumeInfos() != null)\r\n        sb.append(\"VolumeInfos: \").append(getVolumeInfos());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.RuleGroupSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRuleGroupId() != null)\r\n        sb.append(\"RuleGroupId: \").append(getRuleGroupId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.DeleteFolderContentsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthenticationToken() != null)\r\n        sb.append(\"AuthenticationToken: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getFolderId() != null)\r\n        sb.append(\"FolderId: \").append(getFolderId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.TranscriptionJobSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTranscriptionJobName() != null)\r\n        sb.append(\"TranscriptionJobName: \").append(getTranscriptionJobName()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getCompletionTime() != null)\r\n        sb.append(\"CompletionTime: \").append(getCompletionTime()).append(\",\");\r\n    if (getLanguageCode() != null)\r\n        sb.append(\"LanguageCode: \").append(getLanguageCode()).append(\",\");\r\n    if (getTranscriptionJobStatus() != null)\r\n        sb.append(\"TranscriptionJobStatus: \").append(getTranscriptionJobStatus()).append(\",\");\r\n    if (getFailureReason() != null)\r\n        sb.append(\"FailureReason: \").append(getFailureReason()).append(\",\");\r\n    if (getOutputLocationType() != null)\r\n        sb.append(\"OutputLocationType: \").append(getOutputLocationType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.CreateByteMatchSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.support.model.TrustedAdvisorCheckSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCheckId() != null)\r\n        sb.append(\"CheckId: \").append(getCheckId()).append(\",\");\r\n    if (getTimestamp() != null)\r\n        sb.append(\"Timestamp: \").append(getTimestamp()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getHasFlaggedResources() != null)\r\n        sb.append(\"HasFlaggedResources: \").append(getHasFlaggedResources()).append(\",\");\r\n    if (getResourcesSummary() != null)\r\n        sb.append(\"ResourcesSummary: \").append(getResourcesSummary()).append(\",\");\r\n    if (getCategorySpecificSummary() != null)\r\n        sb.append(\"CategorySpecificSummary: \").append(getCategorySpecificSummary());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.PutTraceSegmentsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTraceSegmentDocuments() != null)\r\n        sb.append(\"TraceSegmentDocuments: \").append(getTraceSegmentDocuments());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.AmazonTranscribeAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.ListWebACLsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getWebACLs() != null)\r\n        sb.append(\"WebACLs: \").append(getWebACLs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.UpdateSMBFileShareRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFileShareARN() != null)\r\n        sb.append(\"FileShareARN: \").append(getFileShareARN()).append(\",\");\r\n    if (getKMSEncrypted() != null)\r\n        sb.append(\"KMSEncrypted: \").append(getKMSEncrypted()).append(\",\");\r\n    if (getKMSKey() != null)\r\n        sb.append(\"KMSKey: \").append(getKMSKey()).append(\",\");\r\n    if (getDefaultStorageClass() != null)\r\n        sb.append(\"DefaultStorageClass: \").append(getDefaultStorageClass()).append(\",\");\r\n    if (getObjectACL() != null)\r\n        sb.append(\"ObjectACL: \").append(getObjectACL()).append(\",\");\r\n    if (getReadOnly() != null)\r\n        sb.append(\"ReadOnly: \").append(getReadOnly()).append(\",\");\r\n    if (getGuessMIMETypeEnabled() != null)\r\n        sb.append(\"GuessMIMETypeEnabled: \").append(getGuessMIMETypeEnabled()).append(\",\");\r\n    if (getRequesterPays() != null)\r\n        sb.append(\"RequesterPays: \").append(getRequesterPays()).append(\",\");\r\n    if (getValidUserList() != null)\r\n        sb.append(\"ValidUserList: \").append(getValidUserList()).append(\",\");\r\n    if (getInvalidUserList() != null)\r\n        sb.append(\"InvalidUserList: \").append(getInvalidUserList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.AWSStorageGatewayClient.deleteTape",
	"Comment": "deletes the specified virtual tape. this operation is only supported in the tape gateway type.",
	"Method": "DeleteTapeResult deleteTape(DeleteTapeRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteTape(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.AWSXRayClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.DescribeRootFoldersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthenticationToken() != null)\r\n        sb.append(\"AuthenticationToken: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.GetVocabularyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVocabularyName() != null)\r\n        sb.append(\"VocabularyName: \").append(getVocabularyName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.DeleteRegexMatchSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegexMatchSetId() != null)\r\n        sb.append(\"RegexMatchSetId: \").append(getRegexMatchSetId()).append(\",\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.CreateGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getFilterExpression() != null)\r\n        sb.append(\"FilterExpression: \").append(getFilterExpression());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.AssociateWebACLResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.ShutdownGatewayResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.UpdateBandwidthRateLimitRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN()).append(\",\");\r\n    if (getAverageUploadRateLimitInBitsPerSec() != null)\r\n        sb.append(\"AverageUploadRateLimitInBitsPerSec: \").append(getAverageUploadRateLimitInBitsPerSec()).append(\",\");\r\n    if (getAverageDownloadRateLimitInBitsPerSec() != null)\r\n        sb.append(\"AverageDownloadRateLimitInBitsPerSec: \").append(getAverageDownloadRateLimitInBitsPerSec());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.PutPermissionPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "buildcraft.lib.misc.BoundingBoxUtil.extrudeFace",
	"Comment": "creates a box that extrudes from the specified face of the given block position.",
	"Method": "AxisAlignedBB extrudeFace(BlockPos pos,EnumFacing face,double depth){\r\n    Vec3d from = new Vec3d(pos);\r\n    Vec3d to = new Vec3d(pos).addVector(1, 1, 1);\r\n    Axis axis = face.getAxis();\r\n    if (face.getAxisDirection() == AxisDirection.POSITIVE) {\r\n        from = VecUtil.replaceValue(from, axis, VecUtil.getValue(from, axis) + 1);\r\n        to = VecUtil.replaceValue(to, axis, VecUtil.getValue(to, axis) + depth);\r\n    } else {\r\n        to = VecUtil.replaceValue(to, axis, VecUtil.getValue(to, axis) - 1);\r\n        from = VecUtil.replaceValue(from, axis, VecUtil.getValue(from, axis) - depth);\r\n    }\r\n    return makeFrom(from, to);\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.ModificationState.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResource() != null)\r\n        sb.append(\"Resource: \").append(getResource()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.transfer.model.UntagResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getTagKeys() != null)\r\n        sb.append(\"TagKeys: \").append(getTagKeys());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.CancelArchivalResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTapeARN() != null)\r\n        sb.append(\"TapeARN: \").append(getTapeARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.AmazonWorkDocsClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazonworkdocs using the current builder configuration.",
	"Method": "AmazonWorkDocs build(AwsSyncClientParams params){\r\n    return new AmazonWorkDocsClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.AmazonWorkMailClient.listAliases",
	"Comment": "creates a paginated call to list the aliases associated with a given entity.",
	"Method": "ListAliasesResult listAliases(ListAliasesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListAliases(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.AmazonWorkspacesClient.describeWorkspaces",
	"Comment": "describes the specified workspaces.you can filter the results by using the bundle identifier, directory identifier, or owner, but you can specifyonly one filter at a time.",
	"Method": "DescribeWorkspacesResult describeWorkspaces(DescribeWorkspacesRequest request,DescribeWorkspacesResult describeWorkspaces){\r\n    return describeWorkspaces(new DescribeWorkspacesRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.AvailabilityZoneDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.PermissionInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRole() != null)\r\n        sb.append(\"Role: \").append(getRole()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.GetRateBasedRuleManagedKeysResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getManagedKeys() != null)\r\n        sb.append(\"ManagedKeys: \").append(getManagedKeys()).append(\",\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.ShutdownGatewayRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.auth.STSSessionCredentialsProvider.close",
	"Comment": "shut down this credentials provider, shutting down the thread that performs asynchronous credential refreshing. thisshould not be invoked if the credentials provider is still in use by an aws client.",
	"Method": "void close(){\r\n    refreshableTask.close();\r\n}"
}, {
	"Path": "com.amazonaws.services.support.model.TrustedAdvisorCostOptimizingSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEstimatedMonthlySavings() != null)\r\n        sb.append(\"EstimatedMonthlySavings: \").append(getEstimatedMonthlySavings()).append(\",\");\r\n    if (getEstimatedPercentMonthlySavings() != null)\r\n        sb.append(\"EstimatedPercentMonthlySavings: \").append(getEstimatedPercentMonthlySavings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "io.bootique.Bootique.modules",
	"Comment": "adds an array of module types to the bootique di runtime. each type willbe instantiated by bootique and added to the guice di container.",
	"Method": "Bootique modules(Class<? extends Module> moduleTypes,Bootique modules,Module modules){\r\n    Arrays.asList(modules).forEach(this::module);\r\n    return this;\r\n}"
}, {
	"Path": "io.bootique.value.Percent.getValue",
	"Comment": "returns a double value for this percentage that is a fraction of 1. i.e. will return 0.05 for 5%.",
	"Method": "double getValue(){\r\n    return percent / 100.;\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.AbstractAmazonWorkspacesAsync.describeWorkspaceBundlesAsync",
	"Comment": "simplified method form for invoking the describeworkspacebundles operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeWorkspaceBundlesResult> describeWorkspaceBundlesAsync(DescribeWorkspaceBundlesRequest request,java.util.concurrent.Future<DescribeWorkspaceBundlesResult> describeWorkspaceBundlesAsync,DescribeWorkspaceBundlesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeWorkspaceBundlesRequest, DescribeWorkspaceBundlesResult> asyncHandler,java.util.concurrent.Future<DescribeWorkspaceBundlesResult> describeWorkspaceBundlesAsync,java.util.concurrent.Future<DescribeWorkspaceBundlesResult> describeWorkspaceBundlesAsync,com.amazonaws.handlers.AsyncHandler<DescribeWorkspaceBundlesRequest, DescribeWorkspaceBundlesResult> asyncHandler){\r\n    return describeWorkspaceBundlesAsync(new DescribeWorkspaceBundlesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.UpdateGeoMatchSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGeoMatchSetId() != null)\r\n        sb.append(\"GeoMatchSetId: \").append(getGeoMatchSetId()).append(\",\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken()).append(\",\");\r\n    if (getUpdates() != null)\r\n        sb.append(\"Updates: \").append(getUpdates());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.CreateRegexPatternSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegexPatternSet() != null)\r\n        sb.append(\"RegexPatternSet: \").append(getRegexPatternSet()).append(\",\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.UpdateVTLDeviceTypeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVTLDeviceARN() != null)\r\n        sb.append(\"VTLDeviceARN: \").append(getVTLDeviceARN()).append(\",\");\r\n    if (getDeviceType() != null)\r\n        sb.append(\"DeviceType: \").append(getDeviceType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.transfer.model.StartServerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServerId() != null)\r\n        sb.append(\"ServerId: \").append(getServerId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.CreateSqlInjectionMatchSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSqlInjectionMatchSet() != null)\r\n        sb.append(\"SqlInjectionMatchSet: \").append(getSqlInjectionMatchSet()).append(\",\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.GetChangeTokenStatusRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.AmazonWorkspacesClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.AmazonWorkspacesClient.authorizeIpRules",
	"Comment": "adds one or more rules to the specified ip access control group.this action gives users permission to access their workspaces from the cidr address ranges specified in therules.",
	"Method": "AuthorizeIpRulesResult authorizeIpRules(AuthorizeIpRulesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeAuthorizeIpRules(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.GetRuleGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRuleGroup() != null)\r\n        sb.append(\"RuleGroup: \").append(getRuleGroup());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.ListOrganizationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.UpdateIPSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.IPSetUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAction() != null)\r\n        sb.append(\"Action: \").append(getAction()).append(\",\");\r\n    if (getIPSetDescriptor() != null)\r\n        sb.append(\"IPSetDescriptor: \").append(getIPSetDescriptor());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.AmazonWorkspacesClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazonworkspaces using the current builder configuration.",
	"Method": "AmazonWorkspaces build(AwsSyncClientParams params){\r\n    return new AmazonWorkspacesClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.support.model.DescribeTrustedAdvisorCheckRefreshStatusesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatuses() != null)\r\n        sb.append(\"Statuses: \").append(getStatuses());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.UpdateSamplingRuleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSamplingRuleUpdate() != null)\r\n        sb.append(\"SamplingRuleUpdate: \").append(getSamplingRuleUpdate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.AmazonWorkDocsAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazonworkdocsasync using the current builder configuration.",
	"Method": "AmazonWorkDocsAsync build(AwsAsyncClientParams params){\r\n    return new AmazonWorkDocsAsyncClient(params);\r\n}"
}, {
	"Path": "io.bootique.BQCoreModuleExtender.decorateCommand",
	"Comment": "decorates a given command. when that command is invoked, other commands defined in the decorator will be invokedas well.",
	"Method": "BQCoreModuleExtender decorateCommand(Class<? extends Command> commandType,CommandDecorator commandDecorator){\r\n    contributeCommandDecorators().addBinding().toInstance(new CommandRefDecorated(commandType, commandDecorator));\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.stepfunctions.model.TaskStartedEventDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getResource() != null)\r\n        sb.append(\"Resource: \").append(getResource());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "cc.blynk.server.core.stats.EWMA.tick",
	"Comment": "mark the passage of time and decay the current rate accordingly.",
	"Method": "void tick(){\r\n    final long count = uncounted.sumThenReset();\r\n    final double instantRate = count / interval;\r\n    if (initialized) {\r\n        rate += (alpha * (instantRate - rate));\r\n    } else {\r\n        rate = instantRate;\r\n        initialized = true;\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.StartGatewayResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.InitiateDocumentVersionUploadResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMetadata() != null)\r\n        sb.append(\"Metadata: \").append(getMetadata()).append(\",\");\r\n    if (getUploadMetadata() != null)\r\n        sb.append(\"UploadMetadata: \").append(getUploadMetadata());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "buildcraft.silicon.plug.PluggableLens.sideCheckAnyPos",
	"Comment": "called from eitherpipe, or the neighbouring pipe as given in compareside.",
	"Method": "void sideCheckAnyPos(PipeEventItem.SideCheck event,EnumFacing compareSide){\r\n    if (isFilter) {\r\n        if (event.colour == colour) {\r\n            event.increasePriority(compareSide);\r\n        } else if (event.colour != null) {\r\n            if (compareSide == side) {\r\n                event.disallow(compareSide);\r\n            }\r\n        } else {\r\n            event.decreasePriority(compareSide);\r\n        }\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.DeleteNotificationSubscriptionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubscriptionId() != null)\r\n        sb.append(\"SubscriptionId: \").append(getSubscriptionId()).append(\",\");\r\n    if (getOrganizationId() != null)\r\n        sb.append(\"OrganizationId: \").append(getOrganizationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.AddWorkingStorageResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.ActivateGatewayResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.UpdateRateBasedRuleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRuleId() != null)\r\n        sb.append(\"RuleId: \").append(getRuleId()).append(\",\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken()).append(\",\");\r\n    if (getUpdates() != null)\r\n        sb.append(\"Updates: \").append(getUpdates()).append(\",\");\r\n    if (getRateLimit() != null)\r\n        sb.append(\"RateLimit: \").append(getRateLimit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.DeleteGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.AWSWAFClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.UpdateGeoMatchSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.DescribeRootFoldersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFolders() != null)\r\n        sb.append(\"Folders: \").append(getFolders()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.AWSWAFRegionalClient.getRateBasedRuleManagedKeys",
	"Comment": "returns an array of ip addresses currently being blocked by the ratebasedrule that is specified by theruleid. the maximum number of managed keys that will be blocked is 10,000. if more than 10,000addresses exceed the rate limit, the 10,000 addresses with the highest rates will be blocked.",
	"Method": "GetRateBasedRuleManagedKeysResult getRateBasedRuleManagedKeys(GetRateBasedRuleManagedKeysRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetRateBasedRuleManagedKeys(request);\r\n}"
}, {
	"Path": "com.amazonaws.jmespath.JmesPathEvaluationVisitor.visit",
	"Comment": "evaluate the expressions as per the given comparisonoperator.",
	"Method": "JsonNode visit(JmesPathSubExpression subExpression,JsonNode input,JsonNode visit,JmesPathField fieldNode,JsonNode input,JsonNode visit,JmesPathProjection jmesPathProjection,JsonNode input,JsonNode visit,JmesPathFlatten flatten,JsonNode input,JsonNode visit,JmesPathIdentity jmesPathIdentity,JsonNode input,JsonNode visit,JmesPathValueProjection valueProjection,JsonNode input,JsonNode visit,JmesPathFunction function,JsonNode input,JsonNode visit,JmesPathLiteral literal,JsonNode input,JsonNode visit,JmesPathFilter filter,JsonNode input,JsonNode visit,Comparator op,JsonNode input,JsonNode visit,JmesPathNotExpression notExpression,JsonNode input,JsonNode visit,JmesPathAndExpression andExpression,JsonNode input,JsonNode visit,JmesPathMultiSelectList multiSelectList,JsonNode input){\r\n    List<JmesPathExpression> expressionsList = multiSelectList.getExpressions();\r\n    ArrayNode evaluatedExprList = ObjectMapperSingleton.getObjectMapper().createArrayNode();\r\n    for (JmesPathExpression expression : expressionsList) {\r\n        evaluatedExprList.add(expression.accept(this, input));\r\n    }\r\n    return evaluatedExprList;\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.FileShareInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFileShareType() != null)\r\n        sb.append(\"FileShareType: \").append(getFileShareType()).append(\",\");\r\n    if (getFileShareARN() != null)\r\n        sb.append(\"FileShareARN: \").append(getFileShareARN()).append(\",\");\r\n    if (getFileShareId() != null)\r\n        sb.append(\"FileShareId: \").append(getFileShareId()).append(\",\");\r\n    if (getFileShareStatus() != null)\r\n        sb.append(\"FileShareStatus: \").append(getFileShareStatus()).append(\",\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.GetGeoMatchSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGeoMatchSet() != null)\r\n        sb.append(\"GeoMatchSet: \").append(getGeoMatchSet());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.ListSqlInjectionMatchSetsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.DescribeTagsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTagList() != null)\r\n        sb.append(\"TagList: \").append(getTagList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.CreateCommentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getComment() != null)\r\n        sb.append(\"Comment: \").append(getComment());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.PutTelemetryRecordsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTelemetryRecords() != null)\r\n        sb.append(\"TelemetryRecords: \").append(getTelemetryRecords()).append(\",\");\r\n    if (getEC2InstanceId() != null)\r\n        sb.append(\"EC2InstanceId: \").append(getEC2InstanceId()).append(\",\");\r\n    if (getHostname() != null)\r\n        sb.append(\"Hostname: \").append(getHostname()).append(\",\");\r\n    if (getResourceARN() != null)\r\n        sb.append(\"ResourceARN: \").append(getResourceARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.GetTraceSummariesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTraceSummaries() != null)\r\n        sb.append(\"TraceSummaries: \").append(getTraceSummaries()).append(\",\");\r\n    if (getApproximateTime() != null)\r\n        sb.append(\"ApproximateTime: \").append(getApproximateTime()).append(\",\");\r\n    if (getTracesProcessedCount() != null)\r\n        sb.append(\"TracesProcessedCount: \").append(getTracesProcessedCount()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.AWSWAFClient.getLoggingConfiguration",
	"Comment": "returns the loggingconfiguration for the specified web acl.",
	"Method": "GetLoggingConfigurationResult getLoggingConfiguration(GetLoggingConfigurationRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetLoggingConfiguration(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.stepfunctions.model.TaskTimedOutEventDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getResource() != null)\r\n        sb.append(\"Resource: \").append(getResource()).append(\",\");\r\n    if (getError() != null)\r\n        sb.append(\"Error: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getCause() != null)\r\n        sb.append(\"Cause: \").append(\"***Sensitive Data Redacted***\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.test.util.InputStreamUtils.calculateMD5Digest",
	"Comment": "calculates the md5 digest for the given input stream and returns it.",
	"Method": "byte[] calculateMD5Digest(InputStream is){\r\n    int bytesRead = 0;\r\n    byte[] buffer = new byte[2048];\r\n    MessageDigest md5 = MessageDigest.getInstance(\"MD5\");\r\n    while ((bytesRead = is.read(buffer)) != -1) {\r\n        md5.update(buffer, 0, bytesRead);\r\n    }\r\n    return md5.digest();\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.Settings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVocabularyName() != null)\r\n        sb.append(\"VocabularyName: \").append(getVocabularyName()).append(\",\");\r\n    if (getShowSpeakerLabels() != null)\r\n        sb.append(\"ShowSpeakerLabels: \").append(getShowSpeakerLabels()).append(\",\");\r\n    if (getMaxSpeakerLabels() != null)\r\n        sb.append(\"MaxSpeakerLabels: \").append(getMaxSpeakerLabels()).append(\",\");\r\n    if (getChannelIdentification() != null)\r\n        sb.append(\"ChannelIdentification: \").append(getChannelIdentification());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.AbstractAmazonWorkspacesAsync.describeWorkspaceDirectoriesAsync",
	"Comment": "simplified method form for invoking the describeworkspacedirectories operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeWorkspaceDirectoriesResult> describeWorkspaceDirectoriesAsync(DescribeWorkspaceDirectoriesRequest request,java.util.concurrent.Future<DescribeWorkspaceDirectoriesResult> describeWorkspaceDirectoriesAsync,DescribeWorkspaceDirectoriesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeWorkspaceDirectoriesRequest, DescribeWorkspaceDirectoriesResult> asyncHandler,java.util.concurrent.Future<DescribeWorkspaceDirectoriesResult> describeWorkspaceDirectoriesAsync,java.util.concurrent.Future<DescribeWorkspaceDirectoriesResult> describeWorkspaceDirectoriesAsync,com.amazonaws.handlers.AsyncHandler<DescribeWorkspaceDirectoriesRequest, DescribeWorkspaceDirectoriesResult> asyncHandler){\r\n    return describeWorkspaceDirectoriesAsync(new DescribeWorkspaceDirectoriesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.transfer.model.DeleteServerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServerId() != null)\r\n        sb.append(\"ServerId: \").append(getServerId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.UserStorage.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCapacity() != null)\r\n        sb.append(\"Capacity: \").append(getCapacity());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.translate.AmazonTranslateClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.RebootWorkspacesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFailedRequests() != null)\r\n        sb.append(\"FailedRequests: \").append(getFailedRequests());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.securitytoken.model.FederatedUser.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFederatedUserId() != null)\r\n        sb.append(\"FederatedUserId: \").append(getFederatedUserId()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.AmazonTranscribeClient.deleteTranscriptionJob",
	"Comment": "deletes a previously submitted transcription job along with any other generated results such as thetranscription, models, and so on.",
	"Method": "DeleteTranscriptionJobResult deleteTranscriptionJob(DeleteTranscriptionJobRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteTranscriptionJob(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.transfer.model.UpdateServerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServerId() != null)\r\n        sb.append(\"ServerId: \").append(getServerId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.AmazonWorkDocsClient.createNotificationSubscription",
	"Comment": "configure amazon workdocs to use amazon sns notifications. the endpoint receives a confirmation message, and mustconfirm the subscription.for more information, see subscribe tonotifications in the amazon workdocs developer guide.",
	"Method": "CreateNotificationSubscriptionResult createNotificationSubscription(CreateNotificationSubscriptionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateNotificationSubscription(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.RootCauseException.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "buildcraft.lib.misc.StackUtil.containsAll",
	"Comment": "checks to see if the given required stacks are all contained within the collection of containers. note that thisassumes that all of the required stacks are different.",
	"Method": "boolean containsAll(Collection<ItemStack> required,Collection<ItemStack> containers){\r\n    for (ItemStack req : required) {\r\n        if (req == null) {\r\n            throw new NullPointerException(\"Found a null itemstack in \" + containers);\r\n        }\r\n        if (req.isEmpty())\r\n            continue;\r\n        if (!contains(req, containers)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.GetRegexPatternSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegexPatternSetId() != null)\r\n        sb.append(\"RegexPatternSetId: \").append(getRegexPatternSetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.CreateWorkspacesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFailedRequests() != null)\r\n        sb.append(\"FailedRequests: \").append(getFailedRequests()).append(\",\");\r\n    if (getPendingRequests() != null)\r\n        sb.append(\"PendingRequests: \").append(getPendingRequests());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.UnprocessedStatistics.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRuleName() != null)\r\n        sb.append(\"RuleName: \").append(getRuleName()).append(\",\");\r\n    if (getErrorCode() != null)\r\n        sb.append(\"ErrorCode: \").append(getErrorCode()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "io.bootique.command.CommandOutcome.succeededAndForkedToBackground",
	"Comment": "returns a successful outcome with an indicator that that a process was left running on the background.",
	"Method": "CommandOutcome succeededAndForkedToBackground(){\r\n    return new CommandOutcome(SUCCESS_EXIT_CODE, true, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.AmazonWorkDocsClient.abortDocumentVersionUpload",
	"Comment": "aborts the upload of the specified document version that was previously initiated byinitiatedocumentversionupload. the client should make this call only when it no longer intends to uploadthe document version, or fails to do so.",
	"Method": "AbortDocumentVersionUploadResult abortDocumentVersionUpload(AbortDocumentVersionUploadRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeAbortDocumentVersionUpload(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.AmazonWorkDocsClient.updateDocument",
	"Comment": "updates the specified attributes of a document. the user must have access to both the document and its parentfolder, if applicable.",
	"Method": "UpdateDocumentResult updateDocument(UpdateDocumentRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateDocument(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.BatchGetTracesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTraceIds() != null)\r\n        sb.append(\"TraceIds: \").append(getTraceIds()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.GetSamplingStatisticSummariesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSamplingStatisticSummaries() != null)\r\n        sb.append(\"SamplingStatisticSummaries: \").append(getSamplingStatisticSummaries()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.stepfunctions.model.SendTaskSuccessResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.CreateGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.DescribeWorkspaceBundlesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBundles() != null)\r\n        sb.append(\"Bundles: \").append(getBundles()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.GetServiceGraphResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getEndTime() != null)\r\n        sb.append(\"EndTime: \").append(getEndTime()).append(\",\");\r\n    if (getServices() != null)\r\n        sb.append(\"Services: \").append(getServices()).append(\",\");\r\n    if (getContainsOldGroupVersions() != null)\r\n        sb.append(\"ContainsOldGroupVersions: \").append(getContainsOldGroupVersions()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.AWSStorageGatewayClientBuilder.build",
	"Comment": "construct a synchronous implementation of awsstoragegateway using the current builder configuration.",
	"Method": "AWSStorageGateway build(AwsSyncClientParams params){\r\n    return new AWSStorageGatewayClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.ListTagsForResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceARN() != null)\r\n        sb.append(\"ResourceARN: \").append(getResourceARN()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.CreateAliasRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOrganizationId() != null)\r\n        sb.append(\"OrganizationId: \").append(getOrganizationId()).append(\",\");\r\n    if (getEntityId() != null)\r\n        sb.append(\"EntityId: \").append(getEntityId()).append(\",\");\r\n    if (getAlias() != null)\r\n        sb.append(\"Alias: \").append(getAlias());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.stepfunctions.model.TaskSubmitFailedEventDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getResource() != null)\r\n        sb.append(\"Resource: \").append(getResource()).append(\",\");\r\n    if (getError() != null)\r\n        sb.append(\"Error: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getCause() != null)\r\n        sb.append(\"Cause: \").append(\"***Sensitive Data Redacted***\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.securitytoken.model.AssumeRoleWithWebIdentityResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCredentials() != null)\r\n        sb.append(\"Credentials: \").append(getCredentials()).append(\",\");\r\n    if (getSubjectFromWebIdentityToken() != null)\r\n        sb.append(\"SubjectFromWebIdentityToken: \").append(getSubjectFromWebIdentityToken()).append(\",\");\r\n    if (getAssumedRoleUser() != null)\r\n        sb.append(\"AssumedRoleUser: \").append(getAssumedRoleUser()).append(\",\");\r\n    if (getPackedPolicySize() != null)\r\n        sb.append(\"PackedPolicySize: \").append(getPackedPolicySize()).append(\",\");\r\n    if (getProvider() != null)\r\n        sb.append(\"Provider: \").append(getProvider()).append(\",\");\r\n    if (getAudience() != null)\r\n        sb.append(\"Audience: \").append(getAudience());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.GeoMatchSet.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGeoMatchSetId() != null)\r\n        sb.append(\"GeoMatchSetId: \").append(getGeoMatchSetId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getGeoMatchConstraints() != null)\r\n        sb.append(\"GeoMatchConstraints: \").append(getGeoMatchConstraints());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.UnprocessedTraceSegment.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getErrorCode() != null)\r\n        sb.append(\"ErrorCode: \").append(getErrorCode()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.AuthorizeIpRulesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId()).append(\",\");\r\n    if (getUserRules() != null)\r\n        sb.append(\"UserRules: \").append(getUserRules());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.UpdateGatewayInformationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN()).append(\",\");\r\n    if (getGatewayName() != null)\r\n        sb.append(\"GatewayName: \").append(getGatewayName()).append(\",\");\r\n    if (getGatewayTimezone() != null)\r\n        sb.append(\"GatewayTimezone: \").append(getGatewayTimezone());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.ListRateBasedRulesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.GetDocumentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthenticationToken() != null)\r\n        sb.append(\"AuthenticationToken: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getDocumentId() != null)\r\n        sb.append(\"DocumentId: \").append(getDocumentId()).append(\",\");\r\n    if (getIncludeCustomMetadata() != null)\r\n        sb.append(\"IncludeCustomMetadata: \").append(getIncludeCustomMetadata());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "buildcraft.lib.net.cache.NetworkedObjectCache.serverStore",
	"Comment": "stores the given object in this cache, returning its id. server side.",
	"Method": "int serverStore(T object){\r\n    T canonical = getCanonical(object);\r\n    Integer current = serverObjectToId.get(canonical);\r\n    if (current == null) {\r\n        int id = serverCurrentId++;\r\n        serverObjectToId.put(canonical, id);\r\n        if (DEBUG_CPLX) {\r\n            String toString;\r\n            if (canonical instanceof FluidStack) {\r\n                FluidStack fluid = (FluidStack) canonical;\r\n                toString = fluid.getUnlocalizedName();\r\n            } else {\r\n                toString = canonical.toString();\r\n            }\r\n            BCLog.logger.info(\"[lib.net.cache] The cache \" + getNameAndId() + \" stored #\" + id + \" as \" + toString);\r\n        }\r\n        return id;\r\n    } else {\r\n        return current;\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.AmazonTranscribeClient.getTranscriptionJob",
	"Comment": "returns information about a transcription job. to see the status of the job, check thetranscriptionjobstatus field. if the status is completed, the job is finished and youcan find the results at the location specified in the transcriptionfileuri field.",
	"Method": "GetTranscriptionJobResult getTranscriptionJob(GetTranscriptionJobRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetTranscriptionJob(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.VocabularyInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVocabularyName() != null)\r\n        sb.append(\"VocabularyName: \").append(getVocabularyName()).append(\",\");\r\n    if (getLanguageCode() != null)\r\n        sb.append(\"LanguageCode: \").append(getLanguageCode()).append(\",\");\r\n    if (getLastModifiedTime() != null)\r\n        sb.append(\"LastModifiedTime: \").append(getLastModifiedTime()).append(\",\");\r\n    if (getVocabularyState() != null)\r\n        sb.append(\"VocabularyState: \").append(getVocabularyState());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.AmazonWorkspacesClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.stepfunctions.model.TaskSucceededEventDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getResource() != null)\r\n        sb.append(\"Resource: \").append(getResource()).append(\",\");\r\n    if (getOutput() != null)\r\n        sb.append(\"Output: \").append(\"***Sensitive Data Redacted***\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "io.bootique.jackson.deserializer.JSR310DeserializerBase._peelDTE",
	"Comment": "helper method used to peel off spurious wrappings of datetimeexception",
	"Method": "DateTimeException _peelDTE(DateTimeException e){\r\n    while (true) {\r\n        Throwable t = e.getCause();\r\n        if (t != null && t instanceof DateTimeException) {\r\n            e = (DateTimeException) t;\r\n            continue;\r\n        }\r\n        break;\r\n    }\r\n    return e;\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.AWSWAFAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.DescribeWorkspacesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWorkspaceIds() != null)\r\n        sb.append(\"WorkspaceIds: \").append(getWorkspaceIds()).append(\",\");\r\n    if (getDirectoryId() != null)\r\n        sb.append(\"DirectoryId: \").append(getDirectoryId()).append(\",\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getBundleId() != null)\r\n        sb.append(\"BundleId: \").append(getBundleId()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.DeregisterFromWorkMailResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.ErrorRootCauseService.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getNames() != null)\r\n        sb.append(\"Names: \").append(getNames()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getEntityPath() != null)\r\n        sb.append(\"EntityPath: \").append(getEntityPath()).append(\",\");\r\n    if (getInferred() != null)\r\n        sb.append(\"Inferred: \").append(getInferred());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.AWSXRayAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.TraceSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getDuration() != null)\r\n        sb.append(\"Duration: \").append(getDuration()).append(\",\");\r\n    if (getResponseTime() != null)\r\n        sb.append(\"ResponseTime: \").append(getResponseTime()).append(\",\");\r\n    if (getHasFault() != null)\r\n        sb.append(\"HasFault: \").append(getHasFault()).append(\",\");\r\n    if (getHasError() != null)\r\n        sb.append(\"HasError: \").append(getHasError()).append(\",\");\r\n    if (getHasThrottle() != null)\r\n        sb.append(\"HasThrottle: \").append(getHasThrottle()).append(\",\");\r\n    if (getIsPartial() != null)\r\n        sb.append(\"IsPartial: \").append(getIsPartial()).append(\",\");\r\n    if (getHttp() != null)\r\n        sb.append(\"Http: \").append(getHttp()).append(\",\");\r\n    if (getAnnotations() != null)\r\n        sb.append(\"Annotations: \").append(getAnnotations()).append(\",\");\r\n    if (getUsers() != null)\r\n        sb.append(\"Users: \").append(getUsers()).append(\",\");\r\n    if (getServiceIds() != null)\r\n        sb.append(\"ServiceIds: \").append(getServiceIds()).append(\",\");\r\n    if (getResourceARNs() != null)\r\n        sb.append(\"ResourceARNs: \").append(getResourceARNs()).append(\",\");\r\n    if (getInstanceIds() != null)\r\n        sb.append(\"InstanceIds: \").append(getInstanceIds()).append(\",\");\r\n    if (getAvailabilityZones() != null)\r\n        sb.append(\"AvailabilityZones: \").append(getAvailabilityZones()).append(\",\");\r\n    if (getEntryPoint() != null)\r\n        sb.append(\"EntryPoint: \").append(getEntryPoint()).append(\",\");\r\n    if (getFaultRootCauses() != null)\r\n        sb.append(\"FaultRootCauses: \").append(getFaultRootCauses()).append(\",\");\r\n    if (getErrorRootCauses() != null)\r\n        sb.append(\"ErrorRootCauses: \").append(getErrorRootCauses()).append(\",\");\r\n    if (getResponseTimeRootCauses() != null)\r\n        sb.append(\"ResponseTimeRootCauses: \").append(getResponseTimeRootCauses()).append(\",\");\r\n    if (getRevision() != null)\r\n        sb.append(\"Revision: \").append(getRevision());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.GetDocumentVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthenticationToken() != null)\r\n        sb.append(\"AuthenticationToken: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getDocumentId() != null)\r\n        sb.append(\"DocumentId: \").append(getDocumentId()).append(\",\");\r\n    if (getVersionId() != null)\r\n        sb.append(\"VersionId: \").append(getVersionId()).append(\",\");\r\n    if (getFields() != null)\r\n        sb.append(\"Fields: \").append(getFields()).append(\",\");\r\n    if (getIncludeCustomMetadata() != null)\r\n        sb.append(\"IncludeCustomMetadata: \").append(getIncludeCustomMetadata());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.DeleteTagsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.test.retry.RetryableAssertion.doRetryableAssert",
	"Comment": "static method to repeatedly call assertion logic until it succeeds or the max allowedattempts is reached.",
	"Method": "void doRetryableAssert(AssertCallable callable,RetryableParams params){\r\n    RetryableAction.doRetryableAction(callable, params);\r\n}"
}, {
	"Path": "cc.blynk.server.acme.AcmeClient.fetchCertificate",
	"Comment": "generates a certificate for the given domains. also takes care for the registrationprocess.",
	"Method": "void fetchCertificate(String contact,String domain){\r\n    KeyPair userKeyPair = loadOrCreateKeyPair(USER_KEY_FILE);\r\n    Session session = new Session(letsEncryptUrl);\r\n    Account account = new AccountBuilder().agreeToTermsOfService().useKeyPair(userKeyPair).addEmail(contact).create(session);\r\n    log.info(\"Registered a new user, URL: {}\", account.getLocation());\r\n    KeyPair domainKeyPair = loadOrCreateKeyPair(DOMAIN_KEY_FILE);\r\n    Order order = account.newOrder().domain(domain).create();\r\n    for (Authorization auth : order.getAuthorizations()) {\r\n        authorize(auth);\r\n    }\r\n    CSRBuilder csrb = new CSRBuilder();\r\n    csrb.addDomain(domain);\r\n    csrb.setOrganization(\"Blynk Inc.\");\r\n    csrb.sign(domainKeyPair);\r\n    order.execute(csrb.getEncoded());\r\n    try {\r\n        int attempts = ATTEMPTS;\r\n        while (order.getStatus() != Status.VALID && attempts-- > 0) {\r\n            if (order.getStatus() == Status.INVALID) {\r\n                throw new AcmeException(\"Order failed... Giving up.\");\r\n            }\r\n            Thread.sleep(WAIT_MILLIS);\r\n            order.update();\r\n        }\r\n    } catch (InterruptedException ex) {\r\n        log.error(\"interrupted\", ex);\r\n    }\r\n    Certificate certificate = order.getCertificate();\r\n    if (certificate != null) {\r\n        try (FileWriter fw = new FileWriter(DOMAIN_CHAIN_FILE)) {\r\n            certificate.writeCertificate(fw);\r\n        }\r\n        log.info(\"Overriding certificate. Expiration date is : {}\", certificate.getCertificate().getNotAfter());\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.GetRuleGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRuleGroupId() != null)\r\n        sb.append(\"RuleGroupId: \").append(getRuleGroupId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.FaultRootCauseService.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getNames() != null)\r\n        sb.append(\"Names: \").append(getNames()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getEntityPath() != null)\r\n        sb.append(\"EntityPath: \").append(getEntityPath()).append(\",\");\r\n    if (getInferred() != null)\r\n        sb.append(\"Inferred: \").append(getInferred());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.transfer.model.DescribeServerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServer() != null)\r\n        sb.append(\"Server: \").append(getServer());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.support.AWSSupportClient.describeTrustedAdvisorCheckSummaries",
	"Comment": "returns the summaries of the results of the trusted advisor checks that have the specified check ids. check idscan be obtained by calling describetrustedadvisorchecks.the response contains an array of trustedadvisorchecksummary objects.",
	"Method": "DescribeTrustedAdvisorCheckSummariesResult describeTrustedAdvisorCheckSummaries(DescribeTrustedAdvisorCheckSummariesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeTrustedAdvisorCheckSummaries(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.AmazonWorkDocsClient.describeDocumentVersions",
	"Comment": "retrieves the document versions for the specified document.by default, only active versions are returned.",
	"Method": "DescribeDocumentVersionsResult describeDocumentVersions(DescribeDocumentVersionsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeDocumentVersions(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.AWSStorageGatewayAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awsstoragegatewayasync using the current builder configuration.",
	"Method": "AWSStorageGatewayAsync build(AwsAsyncClientParams params){\r\n    return new AWSStorageGatewayAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.DisableGatewayResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.UpdateChapCredentialsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTargetARN() != null)\r\n        sb.append(\"TargetARN: \").append(getTargetARN()).append(\",\");\r\n    if (getSecretToAuthenticateInitiator() != null)\r\n        sb.append(\"SecretToAuthenticateInitiator: \").append(getSecretToAuthenticateInitiator()).append(\",\");\r\n    if (getInitiatorName() != null)\r\n        sb.append(\"InitiatorName: \").append(getInitiatorName()).append(\",\");\r\n    if (getSecretToAuthenticateTarget() != null)\r\n        sb.append(\"SecretToAuthenticateTarget: \").append(getSecretToAuthenticateTarget());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.support.AWSSupportClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.transfer.model.StopServerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.UpdateDocumentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.ErrorRootCauseEntity.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getExceptions() != null)\r\n        sb.append(\"Exceptions: \").append(getExceptions()).append(\",\");\r\n    if (getRemote() != null)\r\n        sb.append(\"Remote: \").append(getRemote());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.securitytoken.model.Credentials.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccessKeyId() != null)\r\n        sb.append(\"AccessKeyId: \").append(getAccessKeyId()).append(\",\");\r\n    if (getSecretAccessKey() != null)\r\n        sb.append(\"SecretAccessKey: \").append(getSecretAccessKey()).append(\",\");\r\n    if (getSessionToken() != null)\r\n        sb.append(\"SessionToken: \").append(getSessionToken()).append(\",\");\r\n    if (getExpiration() != null)\r\n        sb.append(\"Expiration: \").append(getExpiration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.AWSWAFClient.getXssMatchSet",
	"Comment": "returns the xssmatchset that is specified by xssmatchsetid.",
	"Method": "GetXssMatchSetResult getXssMatchSet(GetXssMatchSetRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetXssMatchSet(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.ClientProperties.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReconnectEnabled() != null)\r\n        sb.append(\"ReconnectEnabled: \").append(getReconnectEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.auth.RefreshableTask.getValue",
	"Comment": "return a valid value, refreshing if necessary. may return the current value, do an asyncrefresh if possible, or do a blocking refresh if needed.",
	"Method": "T getValue(){\r\n    if (shouldDoBlockingRefresh()) {\r\n        blockingRefresh();\r\n    } else if (shouldDoAsyncRefresh()) {\r\n        asyncRefresh();\r\n    }\r\n    return getRefreshedValue();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.AssociateDelegateToResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "cc.blynk.cli.Option.getValue",
	"Comment": "returns the specified value of this option ornull if there is no value.",
	"Method": "String getValue(){\r\n    return hasNoValues() ? null : values.get(0);\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.AmazonWorkspacesClient.startWorkspaces",
	"Comment": "starts the specified workspaces.you cannot start a workspace unless it has a running mode of autostop and a state ofstopped.",
	"Method": "StartWorkspacesResult startWorkspaces(StartWorkspacesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeStartWorkspaces(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.GetDocumentPathRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthenticationToken() != null)\r\n        sb.append(\"AuthenticationToken: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getDocumentId() != null)\r\n        sb.append(\"DocumentId: \").append(getDocumentId()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getFields() != null)\r\n        sb.append(\"Fields: \").append(getFields()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.Member.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getEnabledDate() != null)\r\n        sb.append(\"EnabledDate: \").append(getEnabledDate()).append(\",\");\r\n    if (getDisabledDate() != null)\r\n        sb.append(\"DisabledDate: \").append(getDisabledDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "io.bootique.meta.application.CommandMetadata.asOption",
	"Comment": "returns an option representation of this command, that may be used in help generation or exposing the commandin a cli parser.",
	"Method": "OptionMetadata asOption(){\r\n    return OptionMetadata.builder(getName()).shortName(getShortName()).description(getDescription()).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.AWSWAFRegionalAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awswafregionalasync using the current builder configuration.",
	"Method": "AWSWAFRegionalAsync build(AwsAsyncClientParams params){\r\n    return new AWSWAFRegionalAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.DeleteGeoMatchSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGeoMatchSetId() != null)\r\n        sb.append(\"GeoMatchSetId: \").append(getGeoMatchSetId()).append(\",\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.TapeArchive.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTapeARN() != null)\r\n        sb.append(\"TapeARN: \").append(getTapeARN()).append(\",\");\r\n    if (getTapeBarcode() != null)\r\n        sb.append(\"TapeBarcode: \").append(getTapeBarcode()).append(\",\");\r\n    if (getTapeCreatedDate() != null)\r\n        sb.append(\"TapeCreatedDate: \").append(getTapeCreatedDate()).append(\",\");\r\n    if (getTapeSizeInBytes() != null)\r\n        sb.append(\"TapeSizeInBytes: \").append(getTapeSizeInBytes()).append(\",\");\r\n    if (getCompletionTime() != null)\r\n        sb.append(\"CompletionTime: \").append(getCompletionTime()).append(\",\");\r\n    if (getRetrievedTo() != null)\r\n        sb.append(\"RetrievedTo: \").append(getRetrievedTo()).append(\",\");\r\n    if (getTapeStatus() != null)\r\n        sb.append(\"TapeStatus: \").append(getTapeStatus()).append(\",\");\r\n    if (getTapeUsedInBytes() != null)\r\n        sb.append(\"TapeUsedInBytes: \").append(getTapeUsedInBytes()).append(\",\");\r\n    if (getKMSKey() != null)\r\n        sb.append(\"KMSKey: \").append(getKMSKey());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.RefreshCacheRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFileShareARN() != null)\r\n        sb.append(\"FileShareARN: \").append(getFileShareARN()).append(\",\");\r\n    if (getFolderList() != null)\r\n        sb.append(\"FolderList: \").append(getFolderList()).append(\",\");\r\n    if (getRecursive() != null)\r\n        sb.append(\"Recursive: \").append(getRecursive());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.AmazonWorkMailClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.GetXssMatchSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getXssMatchSet() != null)\r\n        sb.append(\"XssMatchSet: \").append(getXssMatchSet());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "cc.blynk.cli.OptionValidator.isValidChar",
	"Comment": "returns whether the specified character is a valid character.",
	"Method": "boolean isValidChar(char c){\r\n    return Character.isJavaIdentifierPart(c);\r\n}"
}, {
	"Path": "io.bootique.BQCoreModuleExtender.addConfig",
	"Comment": "registers a url of a configuration resource to be loaded by the app unconditionally and prior to any explicitlyspecified configs. can be called multiple times for multiple resources.",
	"Method": "BQCoreModuleExtender addConfig(String configResourceId){\r\n    contributeConfigs().addBinding().toInstance(configResourceId);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.FailedWorkspaceChangeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWorkspaceId() != null)\r\n        sb.append(\"WorkspaceId: \").append(getWorkspaceId()).append(\",\");\r\n    if (getErrorCode() != null)\r\n        sb.append(\"ErrorCode: \").append(getErrorCode()).append(\",\");\r\n    if (getErrorMessage() != null)\r\n        sb.append(\"ErrorMessage: \").append(getErrorMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.DeleteRateBasedRuleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRuleId() != null)\r\n        sb.append(\"RuleId: \").append(getRuleId()).append(\",\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.OrganizationSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOrganizationId() != null)\r\n        sb.append(\"OrganizationId: \").append(getOrganizationId()).append(\",\");\r\n    if (getAlias() != null)\r\n        sb.append(\"Alias: \").append(getAlias()).append(\",\");\r\n    if (getErrorMessage() != null)\r\n        sb.append(\"ErrorMessage: \").append(getErrorMessage()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.stepfunctions.model.TaskFailedEventDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getResource() != null)\r\n        sb.append(\"Resource: \").append(getResource()).append(\",\");\r\n    if (getError() != null)\r\n        sb.append(\"Error: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getCause() != null)\r\n        sb.append(\"Cause: \").append(\"***Sensitive Data Redacted***\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.securitytoken.AWSSecurityTokenServiceClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.transfer.model.ListUsersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getServerId() != null)\r\n        sb.append(\"ServerId: \").append(getServerId()).append(\",\");\r\n    if (getUsers() != null)\r\n        sb.append(\"Users: \").append(getUsers());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.GetXssMatchSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getXssMatchSetId() != null)\r\n        sb.append(\"XssMatchSetId: \").append(getXssMatchSetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.InitiateDocumentVersionUploadRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthenticationToken() != null)\r\n        sb.append(\"AuthenticationToken: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getContentCreatedTimestamp() != null)\r\n        sb.append(\"ContentCreatedTimestamp: \").append(getContentCreatedTimestamp()).append(\",\");\r\n    if (getContentModifiedTimestamp() != null)\r\n        sb.append(\"ContentModifiedTimestamp: \").append(getContentModifiedTimestamp()).append(\",\");\r\n    if (getContentType() != null)\r\n        sb.append(\"ContentType: \").append(getContentType()).append(\",\");\r\n    if (getDocumentSizeInBytes() != null)\r\n        sb.append(\"DocumentSizeInBytes: \").append(getDocumentSizeInBytes()).append(\",\");\r\n    if (getParentFolderId() != null)\r\n        sb.append(\"ParentFolderId: \").append(getParentFolderId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.AWSWAFRegionalClient.getRateBasedRule",
	"Comment": "returns the ratebasedrule that is specified by the ruleid that you included in thegetratebasedrule request.",
	"Method": "GetRateBasedRuleResult getRateBasedRule(GetRateBasedRuleRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetRateBasedRule(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.AmazonWorkDocsClient.removeResourcePermission",
	"Comment": "removes the permission for the specified principal from the specified resource.",
	"Method": "RemoveResourcePermissionResult removeResourcePermission(RemoveResourcePermissionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeRemoveResourcePermission(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.DeleteRuleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRuleId() != null)\r\n        sb.append(\"RuleId: \").append(getRuleId()).append(\",\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.AmazonWorkMailClient.updateResource",
	"Comment": "updates data for the resource. it must be preceded by a describe call in order to have the latest information.the dataset in the request should be the one expected when performing another describe call.",
	"Method": "UpdateResourceResult updateResource(UpdateResourceRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateResource(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.AmazonWorkspacesClient.stopWorkspaces",
	"Comment": "stops the specified workspaces.you cannot stop a workspace unless it has a running mode of autostop and a state ofavailable, impaired, unhealthy, or error.",
	"Method": "StopWorkspacesResult stopWorkspaces(StopWorkspacesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeStopWorkspaces(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.IpRuleItem.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIpRule() != null)\r\n        sb.append(\"IpRule: \").append(getIpRule()).append(\",\");\r\n    if (getRuleDesc() != null)\r\n        sb.append(\"RuleDesc: \").append(getRuleDesc());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "cc.blynk.server.api.http.logic.HttpAPILogic.updateWidgetPinDataViaGet",
	"Comment": "todo it is a bit ugly right now. could be simplified by passing map of query params.",
	"Method": "Response updateWidgetPinDataViaGet(String token,String pinString,String[] pinValues,AbstractMap.SimpleImmutableEntry<WidgetProperty, String> widgetProperty){\r\n    if (pinValues != null) {\r\n        return updateWidgetPinData(token, pinString, pinValues);\r\n    }\r\n    if (widgetProperty != null) {\r\n        return updateWidgetProperty(token, pinString, widgetProperty.getKey(), widgetProperty.getValue());\r\n    }\r\n    return badRequest(\"Wrong request format.\");\r\n}"
}, {
	"Path": "io.bootique.command.ExecutionPlanBuilder.prepareForExecution",
	"Comment": "optionally decorates provided command to execute additional auxiliary commands if those are configured forthis type of command.",
	"Method": "Command prepareForExecution(Command mainCommand){\r\n    if (decorators.isEmpty()) {\r\n        return mainCommand;\r\n    }\r\n    CommandDecorator decorator = decorators.get(mainCommand.getClass());\r\n    if (decorator == null) {\r\n        return mainCommand;\r\n    }\r\n    return new MultiCommand(mainCommand, decorator, cliFactoryProvider, commandManagerProvider, executorProvider, logger);\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.RemoveTagsFromResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceARN() != null)\r\n        sb.append(\"ResourceARN: \").append(getResourceARN()).append(\",\");\r\n    if (getTagKeys() != null)\r\n        sb.append(\"TagKeys: \").append(getTagKeys());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.support.model.DescribeAttachmentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttachment() != null)\r\n        sb.append(\"Attachment: \").append(getAttachment());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.DeleteByteMatchSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getByteMatchSetId() != null)\r\n        sb.append(\"ByteMatchSetId: \").append(getByteMatchSetId()).append(\",\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "cc.blynk.cli.Option.getId",
	"Comment": "returns the id of this option.this is only set when theoption shortopt is a single character.this is used for switchstatements.",
	"Method": "int getId(){\r\n    return getKey().charAt(0);\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.AmazonWorkspacesAsyncClient.describeWorkspacesAsync",
	"Comment": "simplified method form for invoking the describeworkspaces operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeWorkspacesResult> describeWorkspacesAsync(DescribeWorkspacesRequest request,java.util.concurrent.Future<DescribeWorkspacesResult> describeWorkspacesAsync,DescribeWorkspacesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeWorkspacesRequest, DescribeWorkspacesResult> asyncHandler,java.util.concurrent.Future<DescribeWorkspacesResult> describeWorkspacesAsync,java.util.concurrent.Future<DescribeWorkspacesResult> describeWorkspacesAsync,com.amazonaws.handlers.AsyncHandler<DescribeWorkspacesRequest, DescribeWorkspacesResult> asyncHandler){\r\n    return describeWorkspacesAsync(new DescribeWorkspacesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.support.model.AttachmentDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttachmentId() != null)\r\n        sb.append(\"AttachmentId: \").append(getAttachmentId()).append(\",\");\r\n    if (getFileName() != null)\r\n        sb.append(\"FileName: \").append(getFileName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.AWSStorageGatewayClient.disableGateway",
	"Comment": "disables a tape gateway when the gateway is no longer functioning. for example, if your gateway vm is damaged,you can disable the gateway so you can recover virtual tapes.use this operation for a tape gateway that is not reachable or not functioning. this operation is only supportedin the tape gateway type.once a gateway is disabled it cannot be enabled.",
	"Method": "DisableGatewayResult disableGateway(DisableGatewayRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDisableGateway(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.DeleteGatewayResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.CreateLabelsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId()).append(\",\");\r\n    if (getLabels() != null)\r\n        sb.append(\"Labels: \").append(getLabels()).append(\",\");\r\n    if (getAuthenticationToken() != null)\r\n        sb.append(\"AuthenticationToken: \").append(\"***Sensitive Data Redacted***\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.DeleteVocabularyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVocabularyName() != null)\r\n        sb.append(\"VocabularyName: \").append(getVocabularyName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.GetSizeConstraintSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSizeConstraintSetId() != null)\r\n        sb.append(\"SizeConstraintSetId: \").append(getSizeConstraintSetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.UpdateFolderRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthenticationToken() != null)\r\n        sb.append(\"AuthenticationToken: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getFolderId() != null)\r\n        sb.append(\"FolderId: \").append(getFolderId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getParentFolderId() != null)\r\n        sb.append(\"ParentFolderId: \").append(getParentFolderId()).append(\",\");\r\n    if (getResourceState() != null)\r\n        sb.append(\"ResourceState: \").append(getResourceState());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.CreateTagsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.auth.WebIdentityFederationSessionCredentialsProvider.setSessionDuration",
	"Comment": "set the duration of the session credentials created by this client inseconds. values must be supported by assumerolewithwebidentityrequest.",
	"Method": "void setSessionDuration(int sessionDuration){\r\n    this.sessionDuration = sessionDuration;\r\n}"
}, {
	"Path": "com.amazonaws.services.transfer.model.TestIdentityProviderRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServerId() != null)\r\n        sb.append(\"ServerId: \").append(getServerId()).append(\",\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getUserPassword() != null)\r\n        sb.append(\"UserPassword: \").append(getUserPassword());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.CreateSizeConstraintSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.XssMatchTuple.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFieldToMatch() != null)\r\n        sb.append(\"FieldToMatch: \").append(getFieldToMatch()).append(\",\");\r\n    if (getTextTransformation() != null)\r\n        sb.append(\"TextTransformation: \").append(getTextTransformation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.CreateSnapshotFromVolumeRecoveryPointResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSnapshotId() != null)\r\n        sb.append(\"SnapshotId: \").append(getSnapshotId()).append(\",\");\r\n    if (getVolumeARN() != null)\r\n        sb.append(\"VolumeARN: \").append(getVolumeARN()).append(\",\");\r\n    if (getVolumeRecoveryPointTime() != null)\r\n        sb.append(\"VolumeRecoveryPointTime: \").append(getVolumeRecoveryPointTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.DeleteFileShareRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFileShareARN() != null)\r\n        sb.append(\"FileShareARN: \").append(getFileShareARN()).append(\",\");\r\n    if (getForceDelete() != null)\r\n        sb.append(\"ForceDelete: \").append(getForceDelete());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.CreateTapesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTapeARNs() != null)\r\n        sb.append(\"TapeARNs: \").append(getTapeARNs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.DeleteResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOrganizationId() != null)\r\n        sb.append(\"OrganizationId: \").append(getOrganizationId()).append(\",\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "cc.blynk.cli.Option.hasValueSeparator",
	"Comment": "return whether this option has specified a value separator.",
	"Method": "boolean hasValueSeparator(){\r\n    return valuesep > 0;\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.AmazonWorkDocsClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.SamplingTargetDocument.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRuleName() != null)\r\n        sb.append(\"RuleName: \").append(getRuleName()).append(\",\");\r\n    if (getFixedRate() != null)\r\n        sb.append(\"FixedRate: \").append(getFixedRate()).append(\",\");\r\n    if (getReservoirQuota() != null)\r\n        sb.append(\"ReservoirQuota: \").append(getReservoirQuota()).append(\",\");\r\n    if (getReservoirQuotaTTL() != null)\r\n        sb.append(\"ReservoirQuotaTTL: \").append(getReservoirQuotaTTL()).append(\",\");\r\n    if (getInterval() != null)\r\n        sb.append(\"Interval: \").append(getInterval());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.ModifyWorkspaceStateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.ListResourcesForWebACLRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWebACLId() != null)\r\n        sb.append(\"WebACLId: \").append(getWebACLId()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.DeleteChapCredentialsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTargetARN() != null)\r\n        sb.append(\"TargetARN: \").append(getTargetARN()).append(\",\");\r\n    if (getInitiatorName() != null)\r\n        sb.append(\"InitiatorName: \").append(getInitiatorName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.ByteMatchSetSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getByteMatchSetId() != null)\r\n        sb.append(\"ByteMatchSetId: \").append(getByteMatchSetId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.JoinDomainRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN()).append(\",\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getPassword() != null)\r\n        sb.append(\"Password: \").append(\"***Sensitive Data Redacted***\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.stepfunctions.model.StopExecutionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStopDate() != null)\r\n        sb.append(\"StopDate: \").append(getStopDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.DescribeAccountModificationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.CreateByteMatchSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getByteMatchSet() != null)\r\n        sb.append(\"ByteMatchSet: \").append(getByteMatchSet()).append(\",\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.DeleteRuleGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRuleGroupId() != null)\r\n        sb.append(\"RuleGroupId: \").append(getRuleGroupId()).append(\",\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.UpdateVocabularyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVocabularyName() != null)\r\n        sb.append(\"VocabularyName: \").append(getVocabularyName()).append(\",\");\r\n    if (getLanguageCode() != null)\r\n        sb.append(\"LanguageCode: \").append(getLanguageCode()).append(\",\");\r\n    if (getPhrases() != null)\r\n        sb.append(\"Phrases: \").append(getPhrases());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.AWSWAFClient.getSizeConstraintSet",
	"Comment": "returns the sizeconstraintset specified by sizeconstraintsetid.",
	"Method": "GetSizeConstraintSetResult getSizeConstraintSet(GetSizeConstraintSetRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetSizeConstraintSet(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.ServiceStatistics.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOkCount() != null)\r\n        sb.append(\"OkCount: \").append(getOkCount()).append(\",\");\r\n    if (getErrorStatistics() != null)\r\n        sb.append(\"ErrorStatistics: \").append(getErrorStatistics()).append(\",\");\r\n    if (getFaultStatistics() != null)\r\n        sb.append(\"FaultStatistics: \").append(getFaultStatistics()).append(\",\");\r\n    if (getTotalCount() != null)\r\n        sb.append(\"TotalCount: \").append(getTotalCount()).append(\",\");\r\n    if (getTotalResponseTime() != null)\r\n        sb.append(\"TotalResponseTime: \").append(getTotalResponseTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.GroupSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getGroupARN() != null)\r\n        sb.append(\"GroupARN: \").append(getGroupARN()).append(\",\");\r\n    if (getFilterExpression() != null)\r\n        sb.append(\"FilterExpression: \").append(getFilterExpression());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.CreateUserRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOrganizationId() != null)\r\n        sb.append(\"OrganizationId: \").append(getOrganizationId()).append(\",\");\r\n    if (getUsername() != null)\r\n        sb.append(\"Username: \").append(getUsername()).append(\",\");\r\n    if (getEmailAddress() != null)\r\n        sb.append(\"EmailAddress: \").append(getEmailAddress()).append(\",\");\r\n    if (getGivenName() != null)\r\n        sb.append(\"GivenName: \").append(getGivenName()).append(\",\");\r\n    if (getSurname() != null)\r\n        sb.append(\"Surname: \").append(getSurname()).append(\",\");\r\n    if (getPassword() != null)\r\n        sb.append(\"Password: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getTimeZoneId() != null)\r\n        sb.append(\"TimeZoneId: \").append(getTimeZoneId()).append(\",\");\r\n    if (getStorageRule() != null)\r\n        sb.append(\"StorageRule: \").append(getStorageRule()).append(\",\");\r\n    if (getAuthenticationToken() != null)\r\n        sb.append(\"AuthenticationToken: \").append(\"***Sensitive Data Redacted***\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.UpdateIPSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIPSetId() != null)\r\n        sb.append(\"IPSetId: \").append(getIPSetId()).append(\",\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken()).append(\",\");\r\n    if (getUpdates() != null)\r\n        sb.append(\"Updates: \").append(getUpdates());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "io.bootique.BQCoreModuleExtender.setApplicationDescription",
	"Comment": "binds an optional application description used in help messages, etc.",
	"Method": "BQCoreModuleExtender setApplicationDescription(String description){\r\n    binder.bind(ApplicationDescription.class).toInstance(new ApplicationDescription(description));\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.DescribeCachediSCSIVolumesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCachediSCSIVolumes() != null)\r\n        sb.append(\"CachediSCSIVolumes: \").append(getCachediSCSIVolumes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.CreateWebACLResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWebACL() != null)\r\n        sb.append(\"WebACL: \").append(getWebACL()).append(\",\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.GetSqlInjectionMatchSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSqlInjectionMatchSet() != null)\r\n        sb.append(\"SqlInjectionMatchSet: \").append(getSqlInjectionMatchSet());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.ListSubscribedRuleGroupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.AbstractAWSStorageGatewayAsync.describeTapeArchivesAsync",
	"Comment": "simplified method form for invoking the describetapearchives operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeTapeArchivesResult> describeTapeArchivesAsync(DescribeTapeArchivesRequest request,java.util.concurrent.Future<DescribeTapeArchivesResult> describeTapeArchivesAsync,DescribeTapeArchivesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeTapeArchivesRequest, DescribeTapeArchivesResult> asyncHandler,java.util.concurrent.Future<DescribeTapeArchivesResult> describeTapeArchivesAsync,java.util.concurrent.Future<DescribeTapeArchivesResult> describeTapeArchivesAsync,com.amazonaws.handlers.AsyncHandler<DescribeTapeArchivesRequest, DescribeTapeArchivesResult> asyncHandler){\r\n    return describeTapeArchivesAsync(new DescribeTapeArchivesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.RetrieveTapeArchiveResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTapeARN() != null)\r\n        sb.append(\"TapeARN: \").append(getTapeARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.AmazonWorkMailClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.DisassociateDelegateFromResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.CreateSnapshotFromVolumeRecoveryPointRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVolumeARN() != null)\r\n        sb.append(\"VolumeARN: \").append(getVolumeARN()).append(\",\");\r\n    if (getSnapshotDescription() != null)\r\n        sb.append(\"SnapshotDescription: \").append(getSnapshotDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.securitytoken.AWSSecurityTokenServiceAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awssecuritytokenserviceasync using the current builder configuration.",
	"Method": "AWSSecurityTokenServiceAsync build(AwsAsyncClientParams params){\r\n    return new AWSSecurityTokenServiceAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.AWSWAFClient.getSqlInjectionMatchSet",
	"Comment": "returns the sqlinjectionmatchset that is specified by sqlinjectionmatchsetid.",
	"Method": "GetSqlInjectionMatchSetResult getSqlInjectionMatchSet(GetSqlInjectionMatchSetRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetSqlInjectionMatchSet(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.GetRegexMatchSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegexMatchSetId() != null)\r\n        sb.append(\"RegexMatchSetId: \").append(getRegexMatchSetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.translate.model.DeleteTerminologyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.FolderMetadata.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getCreatorId() != null)\r\n        sb.append(\"CreatorId: \").append(getCreatorId()).append(\",\");\r\n    if (getParentFolderId() != null)\r\n        sb.append(\"ParentFolderId: \").append(getParentFolderId()).append(\",\");\r\n    if (getCreatedTimestamp() != null)\r\n        sb.append(\"CreatedTimestamp: \").append(getCreatedTimestamp()).append(\",\");\r\n    if (getModifiedTimestamp() != null)\r\n        sb.append(\"ModifiedTimestamp: \").append(getModifiedTimestamp()).append(\",\");\r\n    if (getResourceState() != null)\r\n        sb.append(\"ResourceState: \").append(getResourceState()).append(\",\");\r\n    if (getSignature() != null)\r\n        sb.append(\"Signature: \").append(getSignature()).append(\",\");\r\n    if (getLabels() != null)\r\n        sb.append(\"Labels: \").append(getLabels()).append(\",\");\r\n    if (getSize() != null)\r\n        sb.append(\"Size: \").append(getSize()).append(\",\");\r\n    if (getLatestVersionSize() != null)\r\n        sb.append(\"LatestVersionSize: \").append(getLatestVersionSize());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.CreateSMBFileShareResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFileShareARN() != null)\r\n        sb.append(\"FileShareARN: \").append(getFileShareARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.DescribeMaintenanceStartTimeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN()).append(\",\");\r\n    if (getHourOfDay() != null)\r\n        sb.append(\"HourOfDay: \").append(getHourOfDay()).append(\",\");\r\n    if (getMinuteOfHour() != null)\r\n        sb.append(\"MinuteOfHour: \").append(getMinuteOfHour()).append(\",\");\r\n    if (getDayOfWeek() != null)\r\n        sb.append(\"DayOfWeek: \").append(getDayOfWeek()).append(\",\");\r\n    if (getTimezone() != null)\r\n        sb.append(\"Timezone: \").append(getTimezone());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.CreateSnapshotResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVolumeARN() != null)\r\n        sb.append(\"VolumeARN: \").append(getVolumeARN()).append(\",\");\r\n    if (getSnapshotId() != null)\r\n        sb.append(\"SnapshotId: \").append(getSnapshotId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.ResetCacheResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.CreateSnapshotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVolumeARN() != null)\r\n        sb.append(\"VolumeARN: \").append(getVolumeARN()).append(\",\");\r\n    if (getSnapshotDescription() != null)\r\n        sb.append(\"SnapshotDescription: \").append(getSnapshotDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.transfer.model.UpdateUserRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHomeDirectory() != null)\r\n        sb.append(\"HomeDirectory: \").append(getHomeDirectory()).append(\",\");\r\n    if (getPolicy() != null)\r\n        sb.append(\"Policy: \").append(getPolicy()).append(\",\");\r\n    if (getRole() != null)\r\n        sb.append(\"Role: \").append(getRole()).append(\",\");\r\n    if (getServerId() != null)\r\n        sb.append(\"ServerId: \").append(getServerId()).append(\",\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.DeleteTapeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN()).append(\",\");\r\n    if (getTapeARN() != null)\r\n        sb.append(\"TapeARN: \").append(getTapeARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.IPSetSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIPSetId() != null)\r\n        sb.append(\"IPSetId: \").append(getIPSetId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.TranscriptionJob.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTranscriptionJobName() != null)\r\n        sb.append(\"TranscriptionJobName: \").append(getTranscriptionJobName()).append(\",\");\r\n    if (getTranscriptionJobStatus() != null)\r\n        sb.append(\"TranscriptionJobStatus: \").append(getTranscriptionJobStatus()).append(\",\");\r\n    if (getLanguageCode() != null)\r\n        sb.append(\"LanguageCode: \").append(getLanguageCode()).append(\",\");\r\n    if (getMediaSampleRateHertz() != null)\r\n        sb.append(\"MediaSampleRateHertz: \").append(getMediaSampleRateHertz()).append(\",\");\r\n    if (getMediaFormat() != null)\r\n        sb.append(\"MediaFormat: \").append(getMediaFormat()).append(\",\");\r\n    if (getMedia() != null)\r\n        sb.append(\"Media: \").append(getMedia()).append(\",\");\r\n    if (getTranscript() != null)\r\n        sb.append(\"Transcript: \").append(getTranscript()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getCompletionTime() != null)\r\n        sb.append(\"CompletionTime: \").append(getCompletionTime()).append(\",\");\r\n    if (getFailureReason() != null)\r\n        sb.append(\"FailureReason: \").append(getFailureReason()).append(\",\");\r\n    if (getSettings() != null)\r\n        sb.append(\"Settings: \").append(getSettings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.AmazonWorkspacesClient.describeWorkspaceImages",
	"Comment": "retrieves a list that describes one or more specified images, if the image identifiers are provided. otherwise,all images in the account are described.",
	"Method": "DescribeWorkspaceImagesResult describeWorkspaceImages(DescribeWorkspaceImagesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeWorkspaceImages(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.ModifyClientPropertiesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.support.model.CreateCaseResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCaseId() != null)\r\n        sb.append(\"CaseId: \").append(getCaseId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.support.AbstractAWSSupportAsync.resolveCaseAsync",
	"Comment": "simplified method form for invoking the resolvecase operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ResolveCaseResult> resolveCaseAsync(ResolveCaseRequest request,java.util.concurrent.Future<ResolveCaseResult> resolveCaseAsync,ResolveCaseRequest request,com.amazonaws.handlers.AsyncHandler<ResolveCaseRequest, ResolveCaseResult> asyncHandler,java.util.concurrent.Future<ResolveCaseResult> resolveCaseAsync,java.util.concurrent.Future<ResolveCaseResult> resolveCaseAsync,com.amazonaws.handlers.AsyncHandler<ResolveCaseRequest, ResolveCaseResult> asyncHandler){\r\n    return resolveCaseAsync(new ResolveCaseRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.ListLoggingConfigurationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.support.model.DescribeCommunicationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCaseId() != null)\r\n        sb.append(\"CaseId: \").append(getCaseId()).append(\",\");\r\n    if (getBeforeTime() != null)\r\n        sb.append(\"BeforeTime: \").append(getBeforeTime()).append(\",\");\r\n    if (getAfterTime() != null)\r\n        sb.append(\"AfterTime: \").append(getAfterTime()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.GetIPSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIPSet() != null)\r\n        sb.append(\"IPSet: \").append(getIPSet());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.DescribeTapesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTapes() != null)\r\n        sb.append(\"Tapes: \").append(getTapes()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.AWSStorageGatewayClient.describeStorediSCSIVolumes",
	"Comment": "returns the description of the gateway volumes specified in the request. the list of gateway volumes in therequest must be from one gateway. in the response amazon storage gateway returns volume information sorted byvolume arns. this operation is only supported in stored volume gateway type.",
	"Method": "DescribeStorediSCSIVolumesResult describeStorediSCSIVolumes(DescribeStorediSCSIVolumesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeStorediSCSIVolumes(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.SqlInjectionMatchTuple.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFieldToMatch() != null)\r\n        sb.append(\"FieldToMatch: \").append(getFieldToMatch()).append(\",\");\r\n    if (getTextTransformation() != null)\r\n        sb.append(\"TextTransformation: \").append(getTextTransformation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.support.model.Category.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCode() != null)\r\n        sb.append(\"Code: \").append(getCode()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.LoggingConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn()).append(\",\");\r\n    if (getLogDestinationConfigs() != null)\r\n        sb.append(\"LogDestinationConfigs: \").append(getLogDestinationConfigs()).append(\",\");\r\n    if (getRedactedFields() != null)\r\n        sb.append(\"RedactedFields: \").append(getRedactedFields());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.CreateTagsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.CreateXssMatchSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getXssMatchSet() != null)\r\n        sb.append(\"XssMatchSet: \").append(getXssMatchSet()).append(\",\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.Principal.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getRoles() != null)\r\n        sb.append(\"Roles: \").append(getRoles());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.ListSubscribedRuleGroupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getRuleGroups() != null)\r\n        sb.append(\"RuleGroups: \").append(getRuleGroups());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.GeoMatchSetUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAction() != null)\r\n        sb.append(\"Action: \").append(getAction()).append(\",\");\r\n    if (getGeoMatchConstraint() != null)\r\n        sb.append(\"GeoMatchConstraint: \").append(getGeoMatchConstraint());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.ListRuleGroupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getRuleGroups() != null)\r\n        sb.append(\"RuleGroups: \").append(getRuleGroups());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.UpdateRegexMatchSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegexMatchSetId() != null)\r\n        sb.append(\"RegexMatchSetId: \").append(getRegexMatchSetId()).append(\",\");\r\n    if (getUpdates() != null)\r\n        sb.append(\"Updates: \").append(getUpdates()).append(\",\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "cc.blynk.server.acme.AcmeClient.authorize",
	"Comment": "authorize a domain. it will be associated with your account, so you will be able toretrieve a signed certificate for the domain later.",
	"Method": "void authorize(Authorization auth){\r\n    log.info(\"Starting authorization for domain {}\", auth.getIdentifier().getDomain());\r\n    Http01Challenge challenge = httpChallenge(auth);\r\n    if (challenge == null) {\r\n        throw new AcmeException(\"No challenge found\");\r\n    }\r\n    contentHolder.content = challenge.getAuthorization();\r\n    if (challenge.getStatus() == Status.VALID) {\r\n        return;\r\n    }\r\n    challenge.trigger();\r\n    try {\r\n        int attempts = ATTEMPTS;\r\n        while (challenge.getStatus() != Status.VALID && attempts-- > 0) {\r\n            if (challenge.getStatus() == Status.INVALID) {\r\n                throw new AcmeException(\"Challenge failed... Giving up.\");\r\n            }\r\n            Thread.sleep(WAIT_MILLIS);\r\n            challenge.update();\r\n        }\r\n    } catch (InterruptedException ex) {\r\n        log.error(\"interrupted\", ex);\r\n        return;\r\n    }\r\n    if (challenge.getStatus() != Status.VALID) {\r\n        throw new AcmeException(\"Failed to pass the challenge for domain \" + auth.getIdentifier().getDomain() + \", ... Giving up.\");\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.PutTraceSegmentsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUnprocessedTraceSegments() != null)\r\n        sb.append(\"UnprocessedTraceSegments: \").append(getUnprocessedTraceSegments());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.GetChangeTokenStatusResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChangeTokenStatus() != null)\r\n        sb.append(\"ChangeTokenStatus: \").append(getChangeTokenStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.AddCacheRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN()).append(\",\");\r\n    if (getDiskIds() != null)\r\n        sb.append(\"DiskIds: \").append(getDiskIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.Comment.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCommentId() != null)\r\n        sb.append(\"CommentId: \").append(getCommentId()).append(\",\");\r\n    if (getParentId() != null)\r\n        sb.append(\"ParentId: \").append(getParentId()).append(\",\");\r\n    if (getThreadId() != null)\r\n        sb.append(\"ThreadId: \").append(getThreadId()).append(\",\");\r\n    if (getText() != null)\r\n        sb.append(\"Text: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getContributor() != null)\r\n        sb.append(\"Contributor: \").append(getContributor()).append(\",\");\r\n    if (getCreatedTimestamp() != null)\r\n        sb.append(\"CreatedTimestamp: \").append(getCreatedTimestamp()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getVisibility() != null)\r\n        sb.append(\"Visibility: \").append(getVisibility()).append(\",\");\r\n    if (getRecipientId() != null)\r\n        sb.append(\"RecipientId: \").append(getRecipientId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.translate.AmazonTranslateAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.CreateWebACLRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getMetricName() != null)\r\n        sb.append(\"MetricName: \").append(getMetricName()).append(\",\");\r\n    if (getDefaultAction() != null)\r\n        sb.append(\"DefaultAction: \").append(getDefaultAction()).append(\",\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.CreateCustomMetadataResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "cc.blynk.cli.Option.getValues",
	"Comment": "return the values of this option as a string arrayor null if there are no values",
	"Method": "String[] getValues(){\r\n    return hasNoValues() ? null : values.toArray(new String[0]);\r\n}"
}, {
	"Path": "com.amazonaws.services.transfer.model.ImportSshPublicKeyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServerId() != null)\r\n        sb.append(\"ServerId: \").append(getServerId()).append(\",\");\r\n    if (getSshPublicKeyBody() != null)\r\n        sb.append(\"SshPublicKeyBody: \").append(getSshPublicKeyBody()).append(\",\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.RegexMatchSetUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAction() != null)\r\n        sb.append(\"Action: \").append(getAction()).append(\",\");\r\n    if (getRegexMatchTuple() != null)\r\n        sb.append(\"RegexMatchTuple: \").append(getRegexMatchTuple());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.AWSStorageGatewayClient.removeTagsFromResource",
	"Comment": "removes one or more tags from the specified resource. this operation is only supported in the cached volume,stored volume and tape gateway types.",
	"Method": "RemoveTagsFromResourceResult removeTagsFromResource(RemoveTagsFromResourceRequest request,RemoveTagsFromResourceResult removeTagsFromResource){\r\n    return removeTagsFromResource(new RemoveTagsFromResourceRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.ListUsersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOrganizationId() != null)\r\n        sb.append(\"OrganizationId: \").append(getOrganizationId()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.DescribeTapeRecoveryPointsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.DeleteResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "buildcraft.lib.tile.TileBC_Neptune.cannotUpdate",
	"Comment": "checks to see if this tile can update. the base implementation only checks to see if it has a world.",
	"Method": "boolean cannotUpdate(){\r\n    return !hasWorld();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.AWSStorageGatewayClient.describeSnapshotSchedule",
	"Comment": "describes the snapshot schedule for the specified gateway volume. the snapshot schedule information includesintervals at which snapshots are automatically initiated on the volume. this operation is only supported in thecached volume and stored volume types.",
	"Method": "DescribeSnapshotScheduleResult describeSnapshotSchedule(DescribeSnapshotScheduleRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeSnapshotSchedule(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.securitytoken.model.AssumedRoleUser.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssumedRoleId() != null)\r\n        sb.append(\"AssumedRoleId: \").append(getAssumedRoleId()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.GetSamplingTargetsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSamplingStatisticsDocuments() != null)\r\n        sb.append(\"SamplingStatisticsDocuments: \").append(getSamplingStatisticsDocuments());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.stepfunctions.model.StartExecutionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStateMachineArn() != null)\r\n        sb.append(\"StateMachineArn: \").append(getStateMachineArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getInput() != null)\r\n        sb.append(\"Input: \").append(\"***Sensitive Data Redacted***\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.Trace.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getDuration() != null)\r\n        sb.append(\"Duration: \").append(getDuration()).append(\",\");\r\n    if (getSegments() != null)\r\n        sb.append(\"Segments: \").append(getSegments());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.AmazonWorkMailClient.createUser",
	"Comment": "creates a user who can be used in amazon workmail by calling the registertoworkmail operation.",
	"Method": "CreateUserResult createUser(CreateUserRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateUser(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.DescribeResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOrganizationId() != null)\r\n        sb.append(\"OrganizationId: \").append(getOrganizationId()).append(\",\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.AWSXRayClient.createGroup",
	"Comment": "creates a group resource with a name and a filter expression.",
	"Method": "CreateGroupResult createGroup(CreateGroupRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateGroup(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.ListRuleGroupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.DescribeUserResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserId() != null)\r\n        sb.append(\"UserId: \").append(getUserId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getEmail() != null)\r\n        sb.append(\"Email: \").append(getEmail()).append(\",\");\r\n    if (getDisplayName() != null)\r\n        sb.append(\"DisplayName: \").append(getDisplayName()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getUserRole() != null)\r\n        sb.append(\"UserRole: \").append(getUserRole()).append(\",\");\r\n    if (getEnabledDate() != null)\r\n        sb.append(\"EnabledDate: \").append(getEnabledDate()).append(\",\");\r\n    if (getDisabledDate() != null)\r\n        sb.append(\"DisabledDate: \").append(getDisabledDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.EdgeStatistics.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOkCount() != null)\r\n        sb.append(\"OkCount: \").append(getOkCount()).append(\",\");\r\n    if (getErrorStatistics() != null)\r\n        sb.append(\"ErrorStatistics: \").append(getErrorStatistics()).append(\",\");\r\n    if (getFaultStatistics() != null)\r\n        sb.append(\"FaultStatistics: \").append(getFaultStatistics()).append(\",\");\r\n    if (getTotalCount() != null)\r\n        sb.append(\"TotalCount: \").append(getTotalCount()).append(\",\");\r\n    if (getTotalResponseTime() != null)\r\n        sb.append(\"TotalResponseTime: \").append(getTotalResponseTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.support.model.ResolveCaseRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCaseId() != null)\r\n        sb.append(\"CaseId: \").append(getCaseId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.CreateGeoMatchSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGeoMatchSet() != null)\r\n        sb.append(\"GeoMatchSet: \").append(getGeoMatchSet()).append(\",\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.ListLocalDisksResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN()).append(\",\");\r\n    if (getDisks() != null)\r\n        sb.append(\"Disks: \").append(getDisks());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.GetTraceGraphResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServices() != null)\r\n        sb.append(\"Services: \").append(getServices()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.ListVolumeInitiatorsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInitiators() != null)\r\n        sb.append(\"Initiators: \").append(getInitiators());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.UpdateSizeConstraintSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSizeConstraintSetId() != null)\r\n        sb.append(\"SizeConstraintSetId: \").append(getSizeConstraintSetId()).append(\",\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken()).append(\",\");\r\n    if (getUpdates() != null)\r\n        sb.append(\"Updates: \").append(getUpdates());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.ResourcePathComponent.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.DescribeSnapshotScheduleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVolumeARN() != null)\r\n        sb.append(\"VolumeARN: \").append(getVolumeARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.AWSWAFRegionalClient.listResourcesForWebACL",
	"Comment": "returns an array of resources associated with the specified web acl.",
	"Method": "ListResourcesForWebACLResult listResourcesForWebACL(ListResourcesForWebACLRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListResourcesForWebACL(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.DescribeTapeRecoveryPointsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN()).append(\",\");\r\n    if (getTapeRecoveryPointInfos() != null)\r\n        sb.append(\"TapeRecoveryPointInfos: \").append(getTapeRecoveryPointInfos()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.AWSWAFRegionalClient.getSizeConstraintSet",
	"Comment": "returns the sizeconstraintset specified by sizeconstraintsetid.",
	"Method": "GetSizeConstraintSetResult getSizeConstraintSet(GetSizeConstraintSetRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetSizeConstraintSet(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.ShareResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPrincipalId() != null)\r\n        sb.append(\"PrincipalId: \").append(getPrincipalId()).append(\",\");\r\n    if (getInviteePrincipalId() != null)\r\n        sb.append(\"InviteePrincipalId: \").append(getInviteePrincipalId()).append(\",\");\r\n    if (getRole() != null)\r\n        sb.append(\"Role: \").append(getRole()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getShareId() != null)\r\n        sb.append(\"ShareId: \").append(getShareId()).append(\",\");\r\n    if (getStatusMessage() != null)\r\n        sb.append(\"StatusMessage: \").append(\"***Sensitive Data Redacted***\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.CreateUserResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUser() != null)\r\n        sb.append(\"User: \").append(getUser());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "cc.blynk.server.core.dao.FileManager.deserializeUsers",
	"Comment": "loads all user profiles one by one from disk using datadir as starting point.",
	"Method": "ConcurrentMap<UserKey, User> deserializeUsers(){\r\n    log.debug(\"Starting reading user DB.\");\r\n    PathMatcher pathMatcher = FileSystems.getDefault().getPathMatcher(\"glob:**\" + USER_FILE_EXTENSION);\r\n    ConcurrentMap<UserKey, User> temp;\r\n    try {\r\n        temp = Files.walk(dataDir, 1).parallel().filter(path -> Files.isRegularFile(path) && pathMatcher.matches(path)).flatMap(path -> {\r\n            try {\r\n                User user = JsonParser.parseUserFromFile(path);\r\n                makeProfileChanges(user);\r\n                return Stream.of(user);\r\n            } catch (IOException ioe) {\r\n                String errorMessage = ioe.getMessage();\r\n                log.error(\"Error parsing file '{}'. Error : {}\", path, errorMessage);\r\n                if (errorMessage != null && (errorMessage.contains(\"end-of-input\") || errorMessage.contains(\"Illegal character\"))) {\r\n                    return restoreFromBackup(path.getFileName());\r\n                }\r\n            }\r\n            return Stream.empty();\r\n        }).collect(Collectors.toConcurrentMap(UserKey::new, identity()));\r\n    } catch (Exception e) {\r\n        log.error(\"Error reading user profiles from disk. {}\", e.getMessage());\r\n        throw new RuntimeException(e);\r\n    }\r\n    log.debug(\"Reading user DB finished.\");\r\n    return temp;\r\n}"
}, {
	"Path": "com.amazonaws.services.stepfunctions.model.UpdateStateMachineRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStateMachineArn() != null)\r\n        sb.append(\"StateMachineArn: \").append(getStateMachineArn()).append(\",\");\r\n    if (getDefinition() != null)\r\n        sb.append(\"Definition: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.GetTraceSummariesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getEndTime() != null)\r\n        sb.append(\"EndTime: \").append(getEndTime()).append(\",\");\r\n    if (getSampling() != null)\r\n        sb.append(\"Sampling: \").append(getSampling()).append(\",\");\r\n    if (getFilterExpression() != null)\r\n        sb.append(\"FilterExpression: \").append(getFilterExpression()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "io.bootique.Bootique.module",
	"Comment": "adds a module generated by the provider. provider may optionally specifythat the module overrides services in some other module.",
	"Method": "Bootique module(Class<? extends Module> moduleType,Bootique module,Module m,Bootique module,BQModuleProvider moduleProvider){\r\n    Objects.requireNonNull(moduleProvider);\r\n    providers.add(moduleProvider);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.AWSWAFClient.getRuleGroup",
	"Comment": "returns the rulegroup that is specified by the rulegroupid that you included in thegetrulegroup request.to view the rules in a rule group, use listactivatedrulesinrulegroup.",
	"Method": "GetRuleGroupResult getRuleGroup(GetRuleGroupRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetRuleGroup(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.StorageGatewayError.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getErrorCode() != null)\r\n        sb.append(\"ErrorCode: \").append(getErrorCode()).append(\",\");\r\n    if (getErrorDetails() != null)\r\n        sb.append(\"ErrorDetails: \").append(getErrorDetails());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.ListAvailableManagementCidrRangesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getManagementCidrRangeConstraint() != null)\r\n        sb.append(\"ManagementCidrRangeConstraint: \").append(getManagementCidrRangeConstraint()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.AWSStorageGatewayClient.listVolumeInitiators",
	"Comment": "lists iscsi initiators that are connected to a volume. you can use this operation to determine whether a volumeis being used or not. this operation is only supported in the cached volume and stored volume gateway types.",
	"Method": "ListVolumeInitiatorsResult listVolumeInitiators(ListVolumeInitiatorsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListVolumeInitiators(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.securitytoken.model.GetFederationTokenRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getPolicy() != null)\r\n        sb.append(\"Policy: \").append(getPolicy()).append(\",\");\r\n    if (getDurationSeconds() != null)\r\n        sb.append(\"DurationSeconds: \").append(getDurationSeconds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.CreateUserResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserId() != null)\r\n        sb.append(\"UserId: \").append(getUserId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.DeleteLoggingConfigurationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.ContentManagerAsyncBuilder.build",
	"Comment": "construct contentmanager using the current builder configuration.",
	"Method": "ContentManagerAsync build(){\r\n    if (this.executorService == null) {\r\n        this.executorService = Executors.newFixedThreadPool(50);\r\n    }\r\n    return new ContentManagerAsync(this);\r\n}"
}, {
	"Path": "cc.blynk.cli.CommandLine.resolveOption",
	"Comment": "retrieves the option object given the long or short option as a string",
	"Method": "Option resolveOption(String opt){\r\n    opt = Util.stripLeadingHyphens(opt);\r\n    for (Option option : options) {\r\n        if (opt.equals(option.getOpt())) {\r\n            return option;\r\n        }\r\n        if (opt.equals(option.getLongOpt())) {\r\n            return option;\r\n        }\r\n    }\r\n    return null;\r\n}"
}, {
	"Path": "com.amazonaws.services.stepfunctions.model.TaskScheduledEventDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getResource() != null)\r\n        sb.append(\"Resource: \").append(getResource()).append(\",\");\r\n    if (getRegion() != null)\r\n        sb.append(\"Region: \").append(getRegion()).append(\",\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getTimeoutInSeconds() != null)\r\n        sb.append(\"TimeoutInSeconds: \").append(getTimeoutInSeconds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.AWSStorageGatewayAsyncClient.describeTapeArchivesAsync",
	"Comment": "simplified method form for invoking the describetapearchives operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeTapeArchivesResult> describeTapeArchivesAsync(DescribeTapeArchivesRequest request,java.util.concurrent.Future<DescribeTapeArchivesResult> describeTapeArchivesAsync,DescribeTapeArchivesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeTapeArchivesRequest, DescribeTapeArchivesResult> asyncHandler,java.util.concurrent.Future<DescribeTapeArchivesResult> describeTapeArchivesAsync,java.util.concurrent.Future<DescribeTapeArchivesResult> describeTapeArchivesAsync,com.amazonaws.handlers.AsyncHandler<DescribeTapeArchivesRequest, DescribeTapeArchivesResult> asyncHandler){\r\n    return describeTapeArchivesAsync(new DescribeTapeArchivesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.GetRateBasedRuleManagedKeysRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRuleId() != null)\r\n        sb.append(\"RuleId: \").append(getRuleId()).append(\",\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.WorkspaceConnectionStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWorkspaceId() != null)\r\n        sb.append(\"WorkspaceId: \").append(getWorkspaceId()).append(\",\");\r\n    if (getConnectionState() != null)\r\n        sb.append(\"ConnectionState: \").append(getConnectionState()).append(\",\");\r\n    if (getConnectionStateCheckTimestamp() != null)\r\n        sb.append(\"ConnectionStateCheckTimestamp: \").append(getConnectionStateCheckTimestamp()).append(\",\");\r\n    if (getLastKnownUserConnectionTimestamp() != null)\r\n        sb.append(\"LastKnownUserConnectionTimestamp: \").append(getLastKnownUserConnectionTimestamp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "buildcraft.lib.misc.ConfigUtil.setLang",
	"Comment": "sets a good default language key for all of the properties contained in the given configuration",
	"Method": "void setLang(Configuration cfg){\r\n    for (String s : cfg.getCategoryNames()) {\r\n        ConfigCategory cat = cfg.getCategory(s);\r\n        ConfigCategory p = cat;\r\n        while (p != null) {\r\n            p.setLanguageKey(\"config.\" + p.getQualifiedName());\r\n            p = p.parent;\r\n        }\r\n        for (Property prop : cat.values()) {\r\n            prop.setLanguageKey(cat.getLanguagekey() + \".\" + prop.getName());\r\n        }\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.ListGatewaysRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.DisassociateMemberFromGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.AWSWAFClientBuilder.build",
	"Comment": "construct a synchronous implementation of awswaf using the current builder configuration.",
	"Method": "AWSWAF build(AwsSyncClientParams params){\r\n    return new AWSWAFClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.ErrorRootCause.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServices() != null)\r\n        sb.append(\"Services: \").append(getServices());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.ListByteMatchSetsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getByteMatchSets() != null)\r\n        sb.append(\"ByteMatchSets: \").append(getByteMatchSets());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.AbortDocumentVersionUploadResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.AddResourcePermissionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthenticationToken() != null)\r\n        sb.append(\"AuthenticationToken: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId()).append(\",\");\r\n    if (getPrincipals() != null)\r\n        sb.append(\"Principals: \").append(getPrincipals()).append(\",\");\r\n    if (getNotificationOptions() != null)\r\n        sb.append(\"NotificationOptions: \").append(getNotificationOptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.DisassociateDelegateFromResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOrganizationId() != null)\r\n        sb.append(\"OrganizationId: \").append(getOrganizationId()).append(\",\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId()).append(\",\");\r\n    if (getEntityId() != null)\r\n        sb.append(\"EntityId: \").append(getEntityId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.ListRateBasedRulesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getRules() != null)\r\n        sb.append(\"Rules: \").append(getRules());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.AWSWAFClient.getRateBasedRule",
	"Comment": "returns the ratebasedrule that is specified by the ruleid that you included in thegetratebasedrule request.",
	"Method": "GetRateBasedRuleResult getRateBasedRule(GetRateBasedRuleRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetRateBasedRule(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.DeleteSnapshotScheduleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVolumeARN() != null)\r\n        sb.append(\"VolumeARN: \").append(getVolumeARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.CreateRegexMatchSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegexMatchSet() != null)\r\n        sb.append(\"RegexMatchSet: \").append(getRegexMatchSet()).append(\",\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.UpdateResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOrganizationId() != null)\r\n        sb.append(\"OrganizationId: \").append(getOrganizationId()).append(\",\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getBookingOptions() != null)\r\n        sb.append(\"BookingOptions: \").append(getBookingOptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.StopWorkspacesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStopWorkspaceRequests() != null)\r\n        sb.append(\"StopWorkspaceRequests: \").append(getStopWorkspaceRequests());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.DescribeStorediSCSIVolumesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVolumeARNs() != null)\r\n        sb.append(\"VolumeARNs: \").append(getVolumeARNs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.AmazonWorkDocsClient.deleteUser",
	"Comment": "deletes the specified user from a simple ad or microsoft ad directory.",
	"Method": "DeleteUserResult deleteUser(DeleteUserRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteUser(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.GetFolderResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMetadata() != null)\r\n        sb.append(\"Metadata: \").append(getMetadata()).append(\",\");\r\n    if (getCustomMetadata() != null)\r\n        sb.append(\"CustomMetadata: \").append(getCustomMetadata());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.AbstractAWSStorageGatewayAsync.listGatewaysAsync",
	"Comment": "simplified method form for invoking the listgateways operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListGatewaysResult> listGatewaysAsync(ListGatewaysRequest request,java.util.concurrent.Future<ListGatewaysResult> listGatewaysAsync,ListGatewaysRequest request,com.amazonaws.handlers.AsyncHandler<ListGatewaysRequest, ListGatewaysResult> asyncHandler,java.util.concurrent.Future<ListGatewaysResult> listGatewaysAsync,java.util.concurrent.Future<ListGatewaysResult> listGatewaysAsync,com.amazonaws.handlers.AsyncHandler<ListGatewaysRequest, ListGatewaysResult> asyncHandler){\r\n    return listGatewaysAsync(new ListGatewaysRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.ListXssMatchSetsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getXssMatchSets() != null)\r\n        sb.append(\"XssMatchSets: \").append(getXssMatchSets());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.UpdateRuleGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "buildcraft.lib.client.model.MutableQuad.normald",
	"Comment": "sets the normal for all vertices to the specified double coordinates.",
	"Method": "MutableQuad normald(double x,double y,double z){\r\n    return normalf((float) x, (float) y, (float) z);\r\n}"
}, {
	"Path": "com.amazonaws.services.transfer.model.DeleteSshPublicKeyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServerId() != null)\r\n        sb.append(\"ServerId: \").append(getServerId()).append(\",\");\r\n    if (getSshPublicKeyId() != null)\r\n        sb.append(\"SshPublicKeyId: \").append(getSshPublicKeyId()).append(\",\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "cc.blynk.cli.Option.add",
	"Comment": "add the value to this option.if the number of argumentsis greater than zero and there is enough space in the list thenadd the value.otherwise, throw a runtime exception.",
	"Method": "void add(String value){\r\n    if (!acceptsArg()) {\r\n        throw new RuntimeException(\"Cannot add value, list full.\");\r\n    }\r\n    values.add(value);\r\n}"
}, {
	"Path": "buildcraft.lib.client.model.MutableQuad.normalf",
	"Comment": "sets the normal for all vertices to the specified float coordinates.",
	"Method": "MutableQuad normalf(float x,float y,float z){\r\n    vertex_0.normalf(x, y, z);\r\n    vertex_1.normalf(x, y, z);\r\n    vertex_2.normalf(x, y, z);\r\n    vertex_3.normalf(x, y, z);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.DeleteMailboxPermissionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "cc.blynk.server.acme.AcmeClient.loadOrCreateKeyPair",
	"Comment": "loads a key pair from specified file. if the file does not exist,a new key pair is generated and saved.",
	"Method": "KeyPair loadOrCreateKeyPair(File file){\r\n    if (file.exists()) {\r\n        try (FileReader fr = new FileReader(file)) {\r\n            return KeyPairUtils.readKeyPair(fr);\r\n        }\r\n    } else {\r\n        KeyPair domainKeyPair = KeyPairUtils.createKeyPair(KEY_SIZE);\r\n        try (FileWriter fw = new FileWriter(file)) {\r\n            KeyPairUtils.writeKeyPair(domainKeyPair, fw);\r\n        }\r\n        return domainKeyPair;\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.smoketest.ReflectionUtils.setValue",
	"Comment": "uses reflection to set the value of the given property on the targetobject.",
	"Method": "void setValue(Object target,String field,Object value){\r\n    if (\"0\".equals(field)) {\r\n        if (!(target instanceof Collection)) {\r\n            throw new IllegalArgumentException(\"Cannot evaluate '0' on object \" + target);\r\n        }\r\n        @SuppressWarnings(\"unchecked\")\r\n        Collection<Object> collection = (Collection<Object>) target;\r\n        collection.add(value);\r\n    } else {\r\n        Method setter = findMethod(target, \"set\" + field, value.getClass());\r\n        try {\r\n            setter.invoke(target, value);\r\n        } catch (IllegalAccessException exception) {\r\n            throw new IllegalStateException(\"Unable to access setter method\", exception);\r\n        } catch (InvocationTargetException exception) {\r\n            if (exception.getCause() instanceof RuntimeException) {\r\n                throw (RuntimeException) exception.getCause();\r\n            }\r\n            throw new IllegalStateException(\"Checked exception thrown from setter method\", exception);\r\n        }\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.RebuildRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWorkspaceId() != null)\r\n        sb.append(\"WorkspaceId: \").append(getWorkspaceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.RemoveResourcePermissionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthenticationToken() != null)\r\n        sb.append(\"AuthenticationToken: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId()).append(\",\");\r\n    if (getPrincipalId() != null)\r\n        sb.append(\"PrincipalId: \").append(getPrincipalId()).append(\",\");\r\n    if (getPrincipalType() != null)\r\n        sb.append(\"PrincipalType: \").append(getPrincipalType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.AddTagsToResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceARN() != null)\r\n        sb.append(\"ResourceARN: \").append(getResourceARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.UpdateGatewaySoftwareNowRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.support.model.TrustedAdvisorCheckDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getCategory() != null)\r\n        sb.append(\"Category: \").append(getCategory()).append(\",\");\r\n    if (getMetadata() != null)\r\n        sb.append(\"Metadata: \").append(getMetadata());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.DeleteFolderResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.CreateNFSFileShareRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken()).append(\",\");\r\n    if (getNFSFileShareDefaults() != null)\r\n        sb.append(\"NFSFileShareDefaults: \").append(getNFSFileShareDefaults()).append(\",\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN()).append(\",\");\r\n    if (getKMSEncrypted() != null)\r\n        sb.append(\"KMSEncrypted: \").append(getKMSEncrypted()).append(\",\");\r\n    if (getKMSKey() != null)\r\n        sb.append(\"KMSKey: \").append(getKMSKey()).append(\",\");\r\n    if (getRole() != null)\r\n        sb.append(\"Role: \").append(getRole()).append(\",\");\r\n    if (getLocationARN() != null)\r\n        sb.append(\"LocationARN: \").append(getLocationARN()).append(\",\");\r\n    if (getDefaultStorageClass() != null)\r\n        sb.append(\"DefaultStorageClass: \").append(getDefaultStorageClass()).append(\",\");\r\n    if (getObjectACL() != null)\r\n        sb.append(\"ObjectACL: \").append(getObjectACL()).append(\",\");\r\n    if (getClientList() != null)\r\n        sb.append(\"ClientList: \").append(getClientList()).append(\",\");\r\n    if (getSquash() != null)\r\n        sb.append(\"Squash: \").append(getSquash()).append(\",\");\r\n    if (getReadOnly() != null)\r\n        sb.append(\"ReadOnly: \").append(getReadOnly()).append(\",\");\r\n    if (getGuessMIMETypeEnabled() != null)\r\n        sb.append(\"GuessMIMETypeEnabled: \").append(getGuessMIMETypeEnabled()).append(\",\");\r\n    if (getRequesterPays() != null)\r\n        sb.append(\"RequesterPays: \").append(getRequesterPays());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.ListIPSetsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.GetGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getGroupARN() != null)\r\n        sb.append(\"GroupARN: \").append(getGroupARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.ActivateUserRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserId() != null)\r\n        sb.append(\"UserId: \").append(getUserId()).append(\",\");\r\n    if (getAuthenticationToken() != null)\r\n        sb.append(\"AuthenticationToken: \").append(\"***Sensitive Data Redacted***\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.DisassociateIpGroupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDirectoryId() != null)\r\n        sb.append(\"DirectoryId: \").append(getDirectoryId()).append(\",\");\r\n    if (getGroupIds() != null)\r\n        sb.append(\"GroupIds: \").append(getGroupIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.AWSWAFClient.listSubscribedRuleGroups",
	"Comment": "returns an array of rulegroup objects that you are subscribed to.",
	"Method": "ListSubscribedRuleGroupsResult listSubscribedRuleGroups(ListSubscribedRuleGroupsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListSubscribedRuleGroups(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.ListTapesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTapeInfos() != null)\r\n        sb.append(\"TapeInfos: \").append(getTapeInfos()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.ListMailboxPermissionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPermissions() != null)\r\n        sb.append(\"Permissions: \").append(getPermissions()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.WorkspaceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDirectoryId() != null)\r\n        sb.append(\"DirectoryId: \").append(getDirectoryId()).append(\",\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getBundleId() != null)\r\n        sb.append(\"BundleId: \").append(getBundleId()).append(\",\");\r\n    if (getVolumeEncryptionKey() != null)\r\n        sb.append(\"VolumeEncryptionKey: \").append(getVolumeEncryptionKey()).append(\",\");\r\n    if (getUserVolumeEncryptionEnabled() != null)\r\n        sb.append(\"UserVolumeEncryptionEnabled: \").append(getUserVolumeEncryptionEnabled()).append(\",\");\r\n    if (getRootVolumeEncryptionEnabled() != null)\r\n        sb.append(\"RootVolumeEncryptionEnabled: \").append(getRootVolumeEncryptionEnabled()).append(\",\");\r\n    if (getWorkspaceProperties() != null)\r\n        sb.append(\"WorkspaceProperties: \").append(getWorkspaceProperties()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.UpdateGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getGroupARN() != null)\r\n        sb.append(\"GroupARN: \").append(getGroupARN()).append(\",\");\r\n    if (getFilterExpression() != null)\r\n        sb.append(\"FilterExpression: \").append(getFilterExpression());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.test.retry.RetryableAction.doRetryableAction",
	"Comment": "static method to repeatedly call action until it succeeds or the max allowed attempts isreached.",
	"Method": "T doRetryableAction(Callable<T> callable,RetryableParams params){\r\n    ValidationUtils.assertIsPositive(params.getMaxAttempts(), \"maxAttempts\");\r\n    return new RetryableAction<T>(callable, params).call();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.GetDocumentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMetadata() != null)\r\n        sb.append(\"Metadata: \").append(getMetadata()).append(\",\");\r\n    if (getCustomMetadata() != null)\r\n        sb.append(\"CustomMetadata: \").append(getCustomMetadata());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.DeleteLoggingConfigurationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.AddResourcePermissionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getShareResults() != null)\r\n        sb.append(\"ShareResults: \").append(getShareResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.DescribeWorkspaceBundlesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBundleIds() != null)\r\n        sb.append(\"BundleIds: \").append(getBundleIds()).append(\",\");\r\n    if (getOwner() != null)\r\n        sb.append(\"Owner: \").append(getOwner()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.StopWorkspacesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFailedRequests() != null)\r\n        sb.append(\"FailedRequests: \").append(getFailedRequests());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.support.AWSSupportClient.describeSeverityLevels",
	"Comment": "returns the list of severity levels that you can assign to an aws support case. the severity level for a case isalso a field in the casedetails data type included in any createcase request.",
	"Method": "DescribeSeverityLevelsResult describeSeverityLevels(DescribeSeverityLevelsRequest request,DescribeSeverityLevelsResult describeSeverityLevels){\r\n    return describeSeverityLevels(new DescribeSeverityLevelsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.DeleteVolumeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVolumeARN() != null)\r\n        sb.append(\"VolumeARN: \").append(getVolumeARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.IPSetDescriptor.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "cc.blynk.utils.JarUtil.find",
	"Comment": "returns list of resources that were found in staticresourcesfolder",
	"Method": "ArrayList<String> find(String staticResourcesFolder){\r\n    if (!staticResourcesFolder.endsWith(\"/\")) {\r\n        staticResourcesFolder = staticResourcesFolder + \"/\";\r\n    }\r\n    CodeSource src = JarUtil.class.getProtectionDomain().getCodeSource();\r\n    ArrayList<String> staticResources = new ArrayList();\r\n    if (src != null) {\r\n        URL jar = src.getLocation();\r\n        try (ZipInputStream zip = new ZipInputStream(jar.openStream())) {\r\n            ZipEntry ze;\r\n            while ((ze = zip.getNextEntry()) != null) {\r\n                String entryName = ze.getName();\r\n                if (!ze.isDirectory() && entryName.startsWith(staticResourcesFolder)) {\r\n                    staticResources.add(entryName);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return staticResources;\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.ListVolumeInitiatorsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVolumeARN() != null)\r\n        sb.append(\"VolumeARN: \").append(getVolumeARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.auth.RefreshableTask.blockingRefresh",
	"Comment": "used when there is no valid value to return. callers are blocked until a new value is createdor an exception is thrown.",
	"Method": "void blockingRefresh(){\r\n    try {\r\n        if (blockingRefreshLock.tryLock(BLOCKING_REFRESH_MAX_WAIT_IN_SECONDS, TimeUnit.SECONDS)) {\r\n            try {\r\n                if (!shouldDoBlockingRefresh()) {\r\n                    return;\r\n                } else {\r\n                    refreshValue();\r\n                    return;\r\n                }\r\n            } finally {\r\n                blockingRefreshLock.unlock();\r\n            }\r\n        }\r\n    } catch (InterruptedException ex) {\r\n        handleInterruptedException(\"Interrupted waiting to refresh the value.\", ex);\r\n    }\r\n    refreshValue();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.CreateRuleGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getMetricName() != null)\r\n        sb.append(\"MetricName: \").append(getMetricName()).append(\",\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.auth.STSSessionCredentials.getSessionCredentials",
	"Comment": "gets a current session credentials object, reinitializing if necessary.",
	"Method": "Credentials getSessionCredentials(){\r\n    if (needsNewSession())\r\n        refreshCredentials();\r\n    return sessionCredentials;\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.ListGroupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroups() != null)\r\n        sb.append(\"Groups: \").append(getGroups()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.support.model.AddCommunicationToCaseRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCaseId() != null)\r\n        sb.append(\"CaseId: \").append(getCaseId()).append(\",\");\r\n    if (getCommunicationBody() != null)\r\n        sb.append(\"CommunicationBody: \").append(getCommunicationBody()).append(\",\");\r\n    if (getCcEmailAddresses() != null)\r\n        sb.append(\"CcEmailAddresses: \").append(getCcEmailAddresses()).append(\",\");\r\n    if (getAttachmentSetId() != null)\r\n        sb.append(\"AttachmentSetId: \").append(getAttachmentSetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.DeleteSizeConstraintSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSizeConstraintSetId() != null)\r\n        sb.append(\"SizeConstraintSetId: \").append(getSizeConstraintSetId()).append(\",\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.GetByteMatchSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getByteMatchSet() != null)\r\n        sb.append(\"ByteMatchSet: \").append(getByteMatchSet());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.DescribeActivitiesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthenticationToken() != null)\r\n        sb.append(\"AuthenticationToken: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getEndTime() != null)\r\n        sb.append(\"EndTime: \").append(getEndTime()).append(\",\");\r\n    if (getOrganizationId() != null)\r\n        sb.append(\"OrganizationId: \").append(getOrganizationId()).append(\",\");\r\n    if (getActivityTypes() != null)\r\n        sb.append(\"ActivityTypes: \").append(getActivityTypes()).append(\",\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId()).append(\",\");\r\n    if (getUserId() != null)\r\n        sb.append(\"UserId: \").append(getUserId()).append(\",\");\r\n    if (getIncludeIndirectActivities() != null)\r\n        sb.append(\"IncludeIndirectActivities: \").append(getIncludeIndirectActivities()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.UpdateRateBasedRuleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.ComputeType.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.support.model.DescribeTrustedAdvisorChecksResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChecks() != null)\r\n        sb.append(\"Checks: \").append(getChecks());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.Group.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getGroupARN() != null)\r\n        sb.append(\"GroupARN: \").append(getGroupARN()).append(\",\");\r\n    if (getFilterExpression() != null)\r\n        sb.append(\"FilterExpression: \").append(getFilterExpression());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.support.model.DescribeTrustedAdvisorCheckResultResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResult() != null)\r\n        sb.append(\"Result: \").append(getResult());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.support.model.SeverityLevel.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCode() != null)\r\n        sb.append(\"Code: \").append(getCode()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.DescribeSMBFileSharesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFileShareARNList() != null)\r\n        sb.append(\"FileShareARNList: \").append(getFileShareARNList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.AmazonTranscribeClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.translate.AmazonTranslateClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.AmazonTranscribeAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazontranscribeasync using the current builder configuration.",
	"Method": "AmazonTranscribeAsync build(AwsAsyncClientParams params){\r\n    return new AmazonTranscribeAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.HTTPHeader.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.AddTagsToResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceARN() != null)\r\n        sb.append(\"ResourceARN: \").append(getResourceARN()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.translate.model.ListTerminologiesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.GetGroupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.DeleteGeoMatchSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.AmazonWorkspacesClient.describeWorkspacesConnectionStatus",
	"Comment": "describes the connection status of the specified workspaces.",
	"Method": "DescribeWorkspacesConnectionStatusResult describeWorkspacesConnectionStatus(DescribeWorkspacesConnectionStatusRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeWorkspacesConnectionStatus(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.AWSWAFRegionalClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.SizeConstraint.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFieldToMatch() != null)\r\n        sb.append(\"FieldToMatch: \").append(getFieldToMatch()).append(\",\");\r\n    if (getTextTransformation() != null)\r\n        sb.append(\"TextTransformation: \").append(getTextTransformation()).append(\",\");\r\n    if (getComparisonOperator() != null)\r\n        sb.append(\"ComparisonOperator: \").append(getComparisonOperator()).append(\",\");\r\n    if (getSize() != null)\r\n        sb.append(\"Size: \").append(getSize());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.DeleteSqlInjectionMatchSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSqlInjectionMatchSetId() != null)\r\n        sb.append(\"SqlInjectionMatchSetId: \").append(getSqlInjectionMatchSetId()).append(\",\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.ListSizeConstraintSetsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.AmazonWorkMailAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.Resource.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getEmail() != null)\r\n        sb.append(\"Email: \").append(getEmail()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getEnabledDate() != null)\r\n        sb.append(\"EnabledDate: \").append(getEnabledDate()).append(\",\");\r\n    if (getDisabledDate() != null)\r\n        sb.append(\"DisabledDate: \").append(getDisabledDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.RegexPatternSet.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegexPatternSetId() != null)\r\n        sb.append(\"RegexPatternSetId: \").append(getRegexPatternSetId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getRegexPatternStrings() != null)\r\n        sb.append(\"RegexPatternStrings: \").append(getRegexPatternStrings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.RebootRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWorkspaceId() != null)\r\n        sb.append(\"WorkspaceId: \").append(getWorkspaceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.securitytoken.AWSSecurityTokenServiceAsyncClient.getSessionTokenAsync",
	"Comment": "simplified method form for invoking the getsessiontoken operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<GetSessionTokenResult> getSessionTokenAsync(GetSessionTokenRequest request,java.util.concurrent.Future<GetSessionTokenResult> getSessionTokenAsync,GetSessionTokenRequest request,com.amazonaws.handlers.AsyncHandler<GetSessionTokenRequest, GetSessionTokenResult> asyncHandler,java.util.concurrent.Future<GetSessionTokenResult> getSessionTokenAsync,java.util.concurrent.Future<GetSessionTokenResult> getSessionTokenAsync,com.amazonaws.handlers.AsyncHandler<GetSessionTokenRequest, GetSessionTokenResult> asyncHandler){\r\n    return getSessionTokenAsync(new GetSessionTokenRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.DeleteIpGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.AmazonWorkspacesAsyncClient.describeWorkspaceBundlesAsync",
	"Comment": "simplified method form for invoking the describeworkspacebundles operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeWorkspaceBundlesResult> describeWorkspaceBundlesAsync(DescribeWorkspaceBundlesRequest request,java.util.concurrent.Future<DescribeWorkspaceBundlesResult> describeWorkspaceBundlesAsync,DescribeWorkspaceBundlesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeWorkspaceBundlesRequest, DescribeWorkspaceBundlesResult> asyncHandler,java.util.concurrent.Future<DescribeWorkspaceBundlesResult> describeWorkspaceBundlesAsync,java.util.concurrent.Future<DescribeWorkspaceBundlesResult> describeWorkspaceBundlesAsync,com.amazonaws.handlers.AsyncHandler<DescribeWorkspaceBundlesRequest, DescribeWorkspaceBundlesResult> asyncHandler){\r\n    return describeWorkspaceBundlesAsync(new DescribeWorkspaceBundlesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.CreateTapesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN()).append(\",\");\r\n    if (getTapeSizeInBytes() != null)\r\n        sb.append(\"TapeSizeInBytes: \").append(getTapeSizeInBytes()).append(\",\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken()).append(\",\");\r\n    if (getNumTapesToCreate() != null)\r\n        sb.append(\"NumTapesToCreate: \").append(getNumTapesToCreate()).append(\",\");\r\n    if (getTapeBarcodePrefix() != null)\r\n        sb.append(\"TapeBarcodePrefix: \").append(getTapeBarcodePrefix()).append(\",\");\r\n    if (getKMSEncrypted() != null)\r\n        sb.append(\"KMSEncrypted: \").append(getKMSEncrypted()).append(\",\");\r\n    if (getKMSKey() != null)\r\n        sb.append(\"KMSKey: \").append(getKMSKey());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.CreateSqlInjectionMatchSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.UpdateXssMatchSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.UpdateSqlInjectionMatchSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSqlInjectionMatchSetId() != null)\r\n        sb.append(\"SqlInjectionMatchSetId: \").append(getSqlInjectionMatchSetId()).append(\",\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken()).append(\",\");\r\n    if (getUpdates() != null)\r\n        sb.append(\"Updates: \").append(getUpdates());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.transfer.model.DescribeUserResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServerId() != null)\r\n        sb.append(\"ServerId: \").append(getServerId()).append(\",\");\r\n    if (getUser() != null)\r\n        sb.append(\"User: \").append(getUser());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.AWSWAFRegionalClient.getRule",
	"Comment": "returns the rule that is specified by the ruleid that you included in thegetrule request.",
	"Method": "GetRuleResult getRule(GetRuleRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetRule(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.UpdateRegexMatchSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.ListRegexPatternSetsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getRegexPatternSets() != null)\r\n        sb.append(\"RegexPatternSets: \").append(getRegexPatternSets());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.UpdateXssMatchSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getXssMatchSetId() != null)\r\n        sb.append(\"XssMatchSetId: \").append(getXssMatchSetId()).append(\",\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken()).append(\",\");\r\n    if (getUpdates() != null)\r\n        sb.append(\"Updates: \").append(getUpdates());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.StorediSCSIVolume.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVolumeARN() != null)\r\n        sb.append(\"VolumeARN: \").append(getVolumeARN()).append(\",\");\r\n    if (getVolumeId() != null)\r\n        sb.append(\"VolumeId: \").append(getVolumeId()).append(\",\");\r\n    if (getVolumeType() != null)\r\n        sb.append(\"VolumeType: \").append(getVolumeType()).append(\",\");\r\n    if (getVolumeStatus() != null)\r\n        sb.append(\"VolumeStatus: \").append(getVolumeStatus()).append(\",\");\r\n    if (getVolumeSizeInBytes() != null)\r\n        sb.append(\"VolumeSizeInBytes: \").append(getVolumeSizeInBytes()).append(\",\");\r\n    if (getVolumeProgress() != null)\r\n        sb.append(\"VolumeProgress: \").append(getVolumeProgress()).append(\",\");\r\n    if (getVolumeDiskId() != null)\r\n        sb.append(\"VolumeDiskId: \").append(getVolumeDiskId()).append(\",\");\r\n    if (getSourceSnapshotId() != null)\r\n        sb.append(\"SourceSnapshotId: \").append(getSourceSnapshotId()).append(\",\");\r\n    if (getPreservedExistingData() != null)\r\n        sb.append(\"PreservedExistingData: \").append(getPreservedExistingData()).append(\",\");\r\n    if (getVolumeiSCSIAttributes() != null)\r\n        sb.append(\"VolumeiSCSIAttributes: \").append(getVolumeiSCSIAttributes()).append(\",\");\r\n    if (getCreatedDate() != null)\r\n        sb.append(\"CreatedDate: \").append(getCreatedDate()).append(\",\");\r\n    if (getVolumeUsedInBytes() != null)\r\n        sb.append(\"VolumeUsedInBytes: \").append(getVolumeUsedInBytes()).append(\",\");\r\n    if (getKMSKey() != null)\r\n        sb.append(\"KMSKey: \").append(getKMSKey());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.GeoMatchSetSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGeoMatchSetId() != null)\r\n        sb.append(\"GeoMatchSetId: \").append(getGeoMatchSetId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.GetWebACLForResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.DisableGatewayRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.SqlInjectionMatchSetSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSqlInjectionMatchSetId() != null)\r\n        sb.append(\"SqlInjectionMatchSetId: \").append(getSqlInjectionMatchSetId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.DeleteRateBasedRuleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.NetworkInterface.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIpv4Address() != null)\r\n        sb.append(\"Ipv4Address: \").append(getIpv4Address()).append(\",\");\r\n    if (getMacAddress() != null)\r\n        sb.append(\"MacAddress: \").append(getMacAddress()).append(\",\");\r\n    if (getIpv6Address() != null)\r\n        sb.append(\"Ipv6Address: \").append(getIpv6Address());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.DeleteGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOrganizationId() != null)\r\n        sb.append(\"OrganizationId: \").append(getOrganizationId()).append(\",\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.transfer.model.TagResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.ListIPSetsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getIPSets() != null)\r\n        sb.append(\"IPSets: \").append(getIPSets());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.Edge.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReferenceId() != null)\r\n        sb.append(\"ReferenceId: \").append(getReferenceId()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getEndTime() != null)\r\n        sb.append(\"EndTime: \").append(getEndTime()).append(\",\");\r\n    if (getSummaryStatistics() != null)\r\n        sb.append(\"SummaryStatistics: \").append(getSummaryStatistics()).append(\",\");\r\n    if (getResponseTimeHistogram() != null)\r\n        sb.append(\"ResponseTimeHistogram: \").append(getResponseTimeHistogram()).append(\",\");\r\n    if (getAliases() != null)\r\n        sb.append(\"Aliases: \").append(getAliases());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.DescribeStorediSCSIVolumesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStorediSCSIVolumes() != null)\r\n        sb.append(\"StorediSCSIVolumes: \").append(getStorediSCSIVolumes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.transfer.model.CreateServerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServerId() != null)\r\n        sb.append(\"ServerId: \").append(getServerId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "buildcraft.lib.misc.PositionUtil.isOnEdge",
	"Comment": "checks to see if the given position is on one of the edges of the box given by min and max",
	"Method": "boolean isOnEdge(BlockPos min,BlockPos max,BlockPos pos){\r\n    return getBoxAxisCount(min, max, pos) >= 2;\r\n}"
}, {
	"Path": "com.amazonaws.auth.WebIdentityFederationSessionCredentialsProvider.withSessionDuration",
	"Comment": "set the duration of the session credentials created by this client inseconds. values must be supported by assumerolewithwebidentityrequest.returns refreence to object so methods can be chained together.",
	"Method": "WebIdentityFederationSessionCredentialsProvider withSessionDuration(int sessionDuration){\r\n    this.setSessionDuration(sessionDuration);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.DeleteCommentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.Delegate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.test.util.InputStreamUtils.drainInputStream",
	"Comment": "reads to the end of the inputstream returning a byte array of the contents",
	"Method": "byte[] drainInputStream(InputStream inputStream){\r\n    ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\r\n    try {\r\n        byte[] buffer = new byte[1024];\r\n        long bytesRead = 0;\r\n        while ((bytesRead = inputStream.read(buffer)) > -1) {\r\n            byteArrayOutputStream.write(buffer, 0, (int) bytesRead);\r\n        }\r\n        return byteArrayOutputStream.toByteArray();\r\n    } catch (IOException e) {\r\n        throw new RuntimeException(e);\r\n    } finally {\r\n        IOUtils.closeQuietly(byteArrayOutputStream, null);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.translate.model.ListTerminologiesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTerminologyPropertiesList() != null)\r\n        sb.append(\"TerminologyPropertiesList: \").append(getTerminologyPropertiesList()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.CreateGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOrganizationId() != null)\r\n        sb.append(\"OrganizationId: \").append(getOrganizationId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.DescribeOrganizationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOrganizationId() != null)\r\n        sb.append(\"OrganizationId: \").append(getOrganizationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.AmazonWorkMailAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazonworkmailasync using the current builder configuration.",
	"Method": "AmazonWorkMailAsync build(AwsAsyncClientParams params){\r\n    return new AmazonWorkMailAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.AWSXRayClient.getSamplingStatisticSummaries",
	"Comment": "retrieves information about recent sampling results for all sampling rules.",
	"Method": "GetSamplingStatisticSummariesResult getSamplingStatisticSummaries(GetSamplingStatisticSummariesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetSamplingStatisticSummaries(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.ResetCacheRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.ListByteMatchSetsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.DescribeUploadBufferResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN()).append(\",\");\r\n    if (getDiskIds() != null)\r\n        sb.append(\"DiskIds: \").append(getDiskIds()).append(\",\");\r\n    if (getUploadBufferUsedInBytes() != null)\r\n        sb.append(\"UploadBufferUsedInBytes: \").append(getUploadBufferUsedInBytes()).append(\",\");\r\n    if (getUploadBufferAllocatedInBytes() != null)\r\n        sb.append(\"UploadBufferAllocatedInBytes: \").append(getUploadBufferAllocatedInBytes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.DescribeOrganizationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOrganizationId() != null)\r\n        sb.append(\"OrganizationId: \").append(getOrganizationId()).append(\",\");\r\n    if (getAlias() != null)\r\n        sb.append(\"Alias: \").append(getAlias()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getDirectoryId() != null)\r\n        sb.append(\"DirectoryId: \").append(getDirectoryId()).append(\",\");\r\n    if (getDirectoryType() != null)\r\n        sb.append(\"DirectoryType: \").append(getDirectoryType()).append(\",\");\r\n    if (getDefaultMailDomain() != null)\r\n        sb.append(\"DefaultMailDomain: \").append(getDefaultMailDomain()).append(\",\");\r\n    if (getCompletedDate() != null)\r\n        sb.append(\"CompletedDate: \").append(getCompletedDate()).append(\",\");\r\n    if (getErrorMessage() != null)\r\n        sb.append(\"ErrorMessage: \").append(getErrorMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.DescribeResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId()).append(\",\");\r\n    if (getEmail() != null)\r\n        sb.append(\"Email: \").append(getEmail()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getBookingOptions() != null)\r\n        sb.append(\"BookingOptions: \").append(getBookingOptions()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getEnabledDate() != null)\r\n        sb.append(\"EnabledDate: \").append(getEnabledDate()).append(\",\");\r\n    if (getDisabledDate() != null)\r\n        sb.append(\"DisabledDate: \").append(getDisabledDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.support.model.AddAttachmentsToSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttachmentSetId() != null)\r\n        sb.append(\"AttachmentSetId: \").append(getAttachmentSetId()).append(\",\");\r\n    if (getExpiryTime() != null)\r\n        sb.append(\"ExpiryTime: \").append(getExpiryTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "buildcraft.lib.misc.PositionUtil.isOnFace",
	"Comment": "checks to see if the given position is on one of the faces of the box given by min and max",
	"Method": "boolean isOnFace(BlockPos min,BlockPos max,BlockPos pos){\r\n    return getBoxAxisCount(min, max, pos) >= 1;\r\n}"
}, {
	"Path": "com.amazonaws.services.support.model.CreateCaseRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubject() != null)\r\n        sb.append(\"Subject: \").append(getSubject()).append(\",\");\r\n    if (getServiceCode() != null)\r\n        sb.append(\"ServiceCode: \").append(getServiceCode()).append(\",\");\r\n    if (getSeverityCode() != null)\r\n        sb.append(\"SeverityCode: \").append(getSeverityCode()).append(\",\");\r\n    if (getCategoryCode() != null)\r\n        sb.append(\"CategoryCode: \").append(getCategoryCode()).append(\",\");\r\n    if (getCommunicationBody() != null)\r\n        sb.append(\"CommunicationBody: \").append(getCommunicationBody()).append(\",\");\r\n    if (getCcEmailAddresses() != null)\r\n        sb.append(\"CcEmailAddresses: \").append(getCcEmailAddresses()).append(\",\");\r\n    if (getLanguage() != null)\r\n        sb.append(\"Language: \").append(getLanguage()).append(\",\");\r\n    if (getIssueType() != null)\r\n        sb.append(\"IssueType: \").append(getIssueType()).append(\",\");\r\n    if (getAttachmentSetId() != null)\r\n        sb.append(\"AttachmentSetId: \").append(getAttachmentSetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.ListRulesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getRules() != null)\r\n        sb.append(\"Rules: \").append(getRules());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.securitytoken.model.DecodeAuthorizationMessageRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEncodedMessage() != null)\r\n        sb.append(\"EncodedMessage: \").append(getEncodedMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.support.model.DescribeTrustedAdvisorChecksRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLanguage() != null)\r\n        sb.append(\"Language: \").append(getLanguage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.DescribeCachediSCSIVolumesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVolumeARNs() != null)\r\n        sb.append(\"VolumeARNs: \").append(getVolumeARNs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.ListXssMatchSetsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.ContentManagerAsyncBuilder.withWorkDocsClient",
	"Comment": "sets the low level client used to make the service calls to amazonworkdocs. if no client is specified, a default client will be created.",
	"Method": "ContentManagerAsyncBuilder withWorkDocsClient(AmazonWorkDocs workDocsClient){\r\n    super.setWorkDocsClient(workDocsClient);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.UpdateGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroup() != null)\r\n        sb.append(\"Group: \").append(getGroup());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.AWSWAFClient.getRateBasedRuleManagedKeys",
	"Comment": "returns an array of ip addresses currently being blocked by the ratebasedrule that is specified by theruleid. the maximum number of managed keys that will be blocked is 10,000. if more than 10,000addresses exceed the rate limit, the 10,000 addresses with the highest rates will be blocked.",
	"Method": "GetRateBasedRuleManagedKeysResult getRateBasedRuleManagedKeys(GetRateBasedRuleManagedKeysRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetRateBasedRuleManagedKeys(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.CreateNotificationSubscriptionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubscription() != null)\r\n        sb.append(\"Subscription: \").append(getSubscription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.DescribeNFSFileSharesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFileShareARNList() != null)\r\n        sb.append(\"FileShareARNList: \").append(getFileShareARNList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.DescribeFolderContentsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFolders() != null)\r\n        sb.append(\"Folders: \").append(getFolders()).append(\",\");\r\n    if (getDocuments() != null)\r\n        sb.append(\"Documents: \").append(getDocuments()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "cc.blynk.utils.ReflectionUtil.generateMapOfValueNameInteger",
	"Comment": "used to generate map of class fields where key is field value and value is field name.",
	"Method": "Map<Integer, String> generateMapOfValueNameInteger(Class<?> clazz){\r\n    var valuesName = new HashMap<Integer, String>();\r\n    try {\r\n        for (var field : clazz.getFields()) {\r\n            valuesName.put((Integer) field.get(int.class), field.getName());\r\n        }\r\n    } catch (IllegalAccessException e) {\r\n        e.printStackTrace();\r\n    }\r\n    return valuesName;\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.ByteMatchTuple.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFieldToMatch() != null)\r\n        sb.append(\"FieldToMatch: \").append(getFieldToMatch()).append(\",\");\r\n    if (getTargetString() != null)\r\n        sb.append(\"TargetString: \").append(getTargetString()).append(\",\");\r\n    if (getTextTransformation() != null)\r\n        sb.append(\"TextTransformation: \").append(getTextTransformation()).append(\",\");\r\n    if (getPositionalConstraint() != null)\r\n        sb.append(\"PositionalConstraint: \").append(getPositionalConstraint());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.DeleteIPSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.CreateResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.transfer.model.ListTagsForResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.AWSStorageGatewayAsyncClient.listGatewaysAsync",
	"Comment": "simplified method form for invoking the listgateways operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListGatewaysResult> listGatewaysAsync(ListGatewaysRequest request,java.util.concurrent.Future<ListGatewaysResult> listGatewaysAsync,ListGatewaysRequest request,com.amazonaws.handlers.AsyncHandler<ListGatewaysRequest, ListGatewaysResult> asyncHandler,java.util.concurrent.Future<ListGatewaysResult> listGatewaysAsync,java.util.concurrent.Future<ListGatewaysResult> listGatewaysAsync,com.amazonaws.handlers.AsyncHandler<ListGatewaysRequest, ListGatewaysResult> asyncHandler){\r\n    return listGatewaysAsync(new ListGatewaysRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.NotificationOptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSendEmail() != null)\r\n        sb.append(\"SendEmail: \").append(getSendEmail()).append(\",\");\r\n    if (getEmailMessage() != null)\r\n        sb.append(\"EmailMessage: \").append(\"***Sensitive Data Redacted***\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.ListLocalDisksRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.ListGroupMembersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOrganizationId() != null)\r\n        sb.append(\"OrganizationId: \").append(getOrganizationId()).append(\",\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.support.AWSSupportAsyncClient.describeSeverityLevelsAsync",
	"Comment": "simplified method form for invoking the describeseveritylevels operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeSeverityLevelsResult> describeSeverityLevelsAsync(DescribeSeverityLevelsRequest request,java.util.concurrent.Future<DescribeSeverityLevelsResult> describeSeverityLevelsAsync,DescribeSeverityLevelsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeSeverityLevelsRequest, DescribeSeverityLevelsResult> asyncHandler,java.util.concurrent.Future<DescribeSeverityLevelsResult> describeSeverityLevelsAsync,java.util.concurrent.Future<DescribeSeverityLevelsResult> describeSeverityLevelsAsync,com.amazonaws.handlers.AsyncHandler<DescribeSeverityLevelsRequest, DescribeSeverityLevelsResult> asyncHandler){\r\n    return describeSeverityLevelsAsync(new DescribeSeverityLevelsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.stepfunctions.model.StateEnteredEventDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getInput() != null)\r\n        sb.append(\"Input: \").append(\"***Sensitive Data Redacted***\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.FailedCreateWorkspaceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWorkspaceRequest() != null)\r\n        sb.append(\"WorkspaceRequest: \").append(getWorkspaceRequest()).append(\",\");\r\n    if (getErrorCode() != null)\r\n        sb.append(\"ErrorCode: \").append(getErrorCode()).append(\",\");\r\n    if (getErrorMessage() != null)\r\n        sb.append(\"ErrorMessage: \").append(getErrorMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.CreateRuleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getMetricName() != null)\r\n        sb.append(\"MetricName: \").append(getMetricName()).append(\",\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.GetFolderPathResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPath() != null)\r\n        sb.append(\"Path: \").append(getPath());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.AmazonWorkMailClient.describeOrganization",
	"Comment": "provides more information regarding a given organization based on its identifier.",
	"Method": "DescribeOrganizationResult describeOrganization(DescribeOrganizationRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeOrganization(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.ListGroupMembersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMembers() != null)\r\n        sb.append(\"Members: \").append(getMembers()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.DescribeNFSFileSharesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNFSFileShareInfoList() != null)\r\n        sb.append(\"NFSFileShareInfoList: \").append(getNFSFileShareInfoList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.DescribeAccountRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.AmazonWorkDocsClient.activateUser",
	"Comment": "activates the specified user. only active users can access amazon workdocs.",
	"Method": "ActivateUserResult activateUser(ActivateUserRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeActivateUser(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.support.AWSSupportClient.describeAttachment",
	"Comment": "returns the attachment that has the specified id. attachment ids are generated by the case management system whenyou add an attachment to a case or case communication. attachment ids are returned in theattachmentdetails objects that are returned by the describecommunications operation.",
	"Method": "DescribeAttachmentResult describeAttachment(DescribeAttachmentRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeAttachment(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.VolumeiSCSIAttributes.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTargetARN() != null)\r\n        sb.append(\"TargetARN: \").append(getTargetARN()).append(\",\");\r\n    if (getNetworkInterfaceId() != null)\r\n        sb.append(\"NetworkInterfaceId: \").append(getNetworkInterfaceId()).append(\",\");\r\n    if (getNetworkInterfacePort() != null)\r\n        sb.append(\"NetworkInterfacePort: \").append(getNetworkInterfacePort()).append(\",\");\r\n    if (getLunNumber() != null)\r\n        sb.append(\"LunNumber: \").append(getLunNumber()).append(\",\");\r\n    if (getChapEnabled() != null)\r\n        sb.append(\"ChapEnabled: \").append(getChapEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.support.AWSSupportAsyncClient.resolveCaseAsync",
	"Comment": "simplified method form for invoking the resolvecase operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ResolveCaseResult> resolveCaseAsync(ResolveCaseRequest request,java.util.concurrent.Future<ResolveCaseResult> resolveCaseAsync,ResolveCaseRequest request,com.amazonaws.handlers.AsyncHandler<ResolveCaseRequest, ResolveCaseResult> asyncHandler,java.util.concurrent.Future<ResolveCaseResult> resolveCaseAsync,java.util.concurrent.Future<ResolveCaseResult> resolveCaseAsync,com.amazonaws.handlers.AsyncHandler<ResolveCaseRequest, ResolveCaseResult> asyncHandler){\r\n    return resolveCaseAsync(new ResolveCaseRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.DescribeUploadBufferRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.AmazonWorkspacesClient.deleteIpGroup",
	"Comment": "deletes the specified ip access control group.you cannot delete an ip access control group that is associated with a directory.",
	"Method": "DeleteIpGroupResult deleteIpGroup(DeleteIpGroupRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteIpGroup(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.GetSizeConstraintSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSizeConstraintSet() != null)\r\n        sb.append(\"SizeConstraintSet: \").append(getSizeConstraintSet());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.GetChangeTokenRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.support.model.RefreshTrustedAdvisorCheckRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCheckId() != null)\r\n        sb.append(\"CheckId: \").append(getCheckId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.support.model.AddCommunicationToCaseResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResult() != null)\r\n        sb.append(\"Result: \").append(getResult());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.AWSWAFRegionalClient.listSubscribedRuleGroups",
	"Comment": "returns an array of rulegroup objects that you are subscribed to.",
	"Method": "ListSubscribedRuleGroupsResult listSubscribedRuleGroups(ListSubscribedRuleGroupsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListSubscribedRuleGroups(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.WorkspaceImage.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getImageId() != null)\r\n        sb.append(\"ImageId: \").append(getImageId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getOperatingSystem() != null)\r\n        sb.append(\"OperatingSystem: \").append(getOperatingSystem()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getRequiredTenancy() != null)\r\n        sb.append(\"RequiredTenancy: \").append(getRequiredTenancy()).append(\",\");\r\n    if (getErrorCode() != null)\r\n        sb.append(\"ErrorCode: \").append(getErrorCode()).append(\",\");\r\n    if (getErrorMessage() != null)\r\n        sb.append(\"ErrorMessage: \").append(getErrorMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "buildcraft.lib.gui.IInteractionElement.onKeyPress",
	"Comment": "this is called even if the mouse is not inside your width and height!",
	"Method": "boolean onKeyPress(char typedChar,int keyCode){\r\n    return false;\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.ListResourceDelegatesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDelegates() != null)\r\n        sb.append(\"Delegates: \").append(getDelegates()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.DeleteVolumeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVolumeARN() != null)\r\n        sb.append(\"VolumeARN: \").append(getVolumeARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.SharePrincipal.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getRole() != null)\r\n        sb.append(\"Role: \").append(getRole());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "cc.blynk.utils.validators.EmailValidator.isValidDomain",
	"Comment": "returns true if the domain component of an email address is valid.",
	"Method": "boolean isValidDomain(String domain){\r\n    Matcher ipDomainMatcher = IP_DOMAIN_PATTERN.matcher(domain);\r\n    if (ipDomainMatcher.matches()) {\r\n        InetAddressValidator inetAddressValidator = InetAddressValidator.getInstance();\r\n        return inetAddressValidator.isValid(ipDomainMatcher.group(1));\r\n    }\r\n    DomainValidator domainValidator = DomainValidator.getInstance(allowLocal);\r\n    if (allowTld) {\r\n        return domainValidator.isValid(domain) || (!domain.startsWith(\".\") && domainValidator.isValidTld(domain));\r\n    } else {\r\n        return domainValidator.isValid(domain);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.ListVolumeRecoveryPointsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.RevokeIpRulesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.DeleteTapeArchiveRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTapeARN() != null)\r\n        sb.append(\"TapeARN: \").append(getTapeARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.RegexMatchTuple.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFieldToMatch() != null)\r\n        sb.append(\"FieldToMatch: \").append(getFieldToMatch()).append(\",\");\r\n    if (getTextTransformation() != null)\r\n        sb.append(\"TextTransformation: \").append(getTextTransformation()).append(\",\");\r\n    if (getRegexPatternSetId() != null)\r\n        sb.append(\"RegexPatternSetId: \").append(getRegexPatternSetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.DeviceiSCSIAttributes.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTargetARN() != null)\r\n        sb.append(\"TargetARN: \").append(getTargetARN()).append(\",\");\r\n    if (getNetworkInterfaceId() != null)\r\n        sb.append(\"NetworkInterfaceId: \").append(getNetworkInterfaceId()).append(\",\");\r\n    if (getNetworkInterfacePort() != null)\r\n        sb.append(\"NetworkInterfacePort: \").append(getNetworkInterfacePort()).append(\",\");\r\n    if (getChapEnabled() != null)\r\n        sb.append(\"ChapEnabled: \").append(getChapEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.SamplingRule.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRuleName() != null)\r\n        sb.append(\"RuleName: \").append(getRuleName()).append(\",\");\r\n    if (getRuleARN() != null)\r\n        sb.append(\"RuleARN: \").append(getRuleARN()).append(\",\");\r\n    if (getResourceARN() != null)\r\n        sb.append(\"ResourceARN: \").append(getResourceARN()).append(\",\");\r\n    if (getPriority() != null)\r\n        sb.append(\"Priority: \").append(getPriority()).append(\",\");\r\n    if (getFixedRate() != null)\r\n        sb.append(\"FixedRate: \").append(getFixedRate()).append(\",\");\r\n    if (getReservoirSize() != null)\r\n        sb.append(\"ReservoirSize: \").append(getReservoirSize()).append(\",\");\r\n    if (getServiceName() != null)\r\n        sb.append(\"ServiceName: \").append(getServiceName()).append(\",\");\r\n    if (getServiceType() != null)\r\n        sb.append(\"ServiceType: \").append(getServiceType()).append(\",\");\r\n    if (getHost() != null)\r\n        sb.append(\"Host: \").append(getHost()).append(\",\");\r\n    if (getHTTPMethod() != null)\r\n        sb.append(\"HTTPMethod: \").append(getHTTPMethod()).append(\",\");\r\n    if (getURLPath() != null)\r\n        sb.append(\"URLPath: \").append(getURLPath()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.GetByteMatchSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getByteMatchSetId() != null)\r\n        sb.append(\"ByteMatchSetId: \").append(getByteMatchSetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.UpdateNFSFileShareResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFileShareARN() != null)\r\n        sb.append(\"FileShareARN: \").append(getFileShareARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.GetCurrentUserRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthenticationToken() != null)\r\n        sb.append(\"AuthenticationToken: \").append(\"***Sensitive Data Redacted***\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.AssociateWebACLRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWebACLId() != null)\r\n        sb.append(\"WebACLId: \").append(getWebACLId()).append(\",\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.WorkspacesIpGroup.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId()).append(\",\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getGroupDesc() != null)\r\n        sb.append(\"GroupDesc: \").append(getGroupDesc()).append(\",\");\r\n    if (getUserRules() != null)\r\n        sb.append(\"UserRules: \").append(getUserRules());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.SMBFileShareInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFileShareARN() != null)\r\n        sb.append(\"FileShareARN: \").append(getFileShareARN()).append(\",\");\r\n    if (getFileShareId() != null)\r\n        sb.append(\"FileShareId: \").append(getFileShareId()).append(\",\");\r\n    if (getFileShareStatus() != null)\r\n        sb.append(\"FileShareStatus: \").append(getFileShareStatus()).append(\",\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN()).append(\",\");\r\n    if (getKMSEncrypted() != null)\r\n        sb.append(\"KMSEncrypted: \").append(getKMSEncrypted()).append(\",\");\r\n    if (getKMSKey() != null)\r\n        sb.append(\"KMSKey: \").append(getKMSKey()).append(\",\");\r\n    if (getPath() != null)\r\n        sb.append(\"Path: \").append(getPath()).append(\",\");\r\n    if (getRole() != null)\r\n        sb.append(\"Role: \").append(getRole()).append(\",\");\r\n    if (getLocationARN() != null)\r\n        sb.append(\"LocationARN: \").append(getLocationARN()).append(\",\");\r\n    if (getDefaultStorageClass() != null)\r\n        sb.append(\"DefaultStorageClass: \").append(getDefaultStorageClass()).append(\",\");\r\n    if (getObjectACL() != null)\r\n        sb.append(\"ObjectACL: \").append(getObjectACL()).append(\",\");\r\n    if (getReadOnly() != null)\r\n        sb.append(\"ReadOnly: \").append(getReadOnly()).append(\",\");\r\n    if (getGuessMIMETypeEnabled() != null)\r\n        sb.append(\"GuessMIMETypeEnabled: \").append(getGuessMIMETypeEnabled()).append(\",\");\r\n    if (getRequesterPays() != null)\r\n        sb.append(\"RequesterPays: \").append(getRequesterPays()).append(\",\");\r\n    if (getValidUserList() != null)\r\n        sb.append(\"ValidUserList: \").append(getValidUserList()).append(\",\");\r\n    if (getInvalidUserList() != null)\r\n        sb.append(\"InvalidUserList: \").append(getInvalidUserList()).append(\",\");\r\n    if (getAuthentication() != null)\r\n        sb.append(\"Authentication: \").append(getAuthentication());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.support.model.DescribeTrustedAdvisorCheckSummariesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCheckIds() != null)\r\n        sb.append(\"CheckIds: \").append(getCheckIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.ResponseTimeRootCauseEntity.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getCoverage() != null)\r\n        sb.append(\"Coverage: \").append(getCoverage()).append(\",\");\r\n    if (getRemote() != null)\r\n        sb.append(\"Remote: \").append(getRemote());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.DeleteLabelsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.Alias.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getNames() != null)\r\n        sb.append(\"Names: \").append(getNames()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.DeleteRegexPatternSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.CreateStorediSCSIVolumeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN()).append(\",\");\r\n    if (getDiskId() != null)\r\n        sb.append(\"DiskId: \").append(getDiskId()).append(\",\");\r\n    if (getSnapshotId() != null)\r\n        sb.append(\"SnapshotId: \").append(getSnapshotId()).append(\",\");\r\n    if (getPreserveExistingData() != null)\r\n        sb.append(\"PreserveExistingData: \").append(getPreserveExistingData()).append(\",\");\r\n    if (getTargetName() != null)\r\n        sb.append(\"TargetName: \").append(getTargetName()).append(\",\");\r\n    if (getNetworkInterfaceId() != null)\r\n        sb.append(\"NetworkInterfaceId: \").append(getNetworkInterfaceId()).append(\",\");\r\n    if (getKMSEncrypted() != null)\r\n        sb.append(\"KMSEncrypted: \").append(getKMSEncrypted()).append(\",\");\r\n    if (getKMSKey() != null)\r\n        sb.append(\"KMSKey: \").append(getKMSKey());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "io.bootique.meta.config.ConfigObjectMetadata.getTypeLabel",
	"Comment": "returns an optional label that is used as a type designator for polymorphic config objects.",
	"Method": "String getTypeLabel(){\r\n    return typeLabel;\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.WebACL.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWebACLId() != null)\r\n        sb.append(\"WebACLId: \").append(getWebACLId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getMetricName() != null)\r\n        sb.append(\"MetricName: \").append(getMetricName()).append(\",\");\r\n    if (getDefaultAction() != null)\r\n        sb.append(\"DefaultAction: \").append(getDefaultAction()).append(\",\");\r\n    if (getRules() != null)\r\n        sb.append(\"Rules: \").append(getRules()).append(\",\");\r\n    if (getWebACLArn() != null)\r\n        sb.append(\"WebACLArn: \").append(getWebACLArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.ListWebACLsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.UpdateSizeConstraintSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.GetTranscriptionJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTranscriptionJobName() != null)\r\n        sb.append(\"TranscriptionJobName: \").append(getTranscriptionJobName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.DescribeWorkspaceImagesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getImageIds() != null)\r\n        sb.append(\"ImageIds: \").append(getImageIds()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.AWSStorageGatewayClient.joinDomain",
	"Comment": "adds a file gateway to an active directory domain. this operation is only supported for file gateways thatsupport the smb file protocol.",
	"Method": "JoinDomainResult joinDomain(JoinDomainRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeJoinDomain(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.ListActivatedRulesInRuleGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRuleGroupId() != null)\r\n        sb.append(\"RuleGroupId: \").append(getRuleGroupId()).append(\",\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "io.bootique.command.CommandManager.lookupByName",
	"Comment": "returns a command matching the name. throws an exception if the command type is not registered in the bootique stack.",
	"Method": "ManagedCommand lookupByName(String commandName){\r\n    ManagedCommand match = getAllCommands().get(commandName);\r\n    if (match == null) {\r\n        throw new IllegalArgumentException(\"Unknown command name: \" + commandName);\r\n    }\r\n    return match;\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.GetGeoMatchSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGeoMatchSetId() != null)\r\n        sb.append(\"GeoMatchSetId: \").append(getGeoMatchSetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.ListActivatedRulesInRuleGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getActivatedRules() != null)\r\n        sb.append(\"ActivatedRules: \").append(getActivatedRules());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.GetSqlInjectionMatchSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSqlInjectionMatchSetId() != null)\r\n        sb.append(\"SqlInjectionMatchSetId: \").append(getSqlInjectionMatchSetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.AmazonWorkDocsClient.deleteNotificationSubscription",
	"Comment": "deletes the specified subscription from the specified organization.",
	"Method": "DeleteNotificationSubscriptionResult deleteNotificationSubscription(DeleteNotificationSubscriptionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteNotificationSubscription(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.transfer.model.ListServersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.DescribeVTLDevicesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN()).append(\",\");\r\n    if (getVTLDeviceARNs() != null)\r\n        sb.append(\"VTLDeviceARNs: \").append(getVTLDeviceARNs()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.CreateLabelsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "io.bootique.test.junit.BQDaemonTestFactory.stop",
	"Comment": "shuts down the specified runtime running on the background as well as the thread pool supporting its execution.",
	"Method": "void stop(BQRuntime runtime){\r\n    getDaemon(runtime).stop();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.GetSamplingRulesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSamplingRuleRecords() != null)\r\n        sb.append(\"SamplingRuleRecords: \").append(getSamplingRuleRecords()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.AWSWAFRegionalAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.TerminateWorkspacesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTerminateWorkspaceRequests() != null)\r\n        sb.append(\"TerminateWorkspaceRequests: \").append(getTerminateWorkspaceRequests());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.translate.AmazonTranslateClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazontranslate using the current builder configuration.",
	"Method": "AmazonTranslate build(AwsSyncClientParams params){\r\n    return new AmazonTranslateClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.AWSWAFRegionalClient.getLoggingConfiguration",
	"Comment": "returns the loggingconfiguration for the specified web acl.",
	"Method": "GetLoggingConfigurationResult getLoggingConfiguration(GetLoggingConfigurationRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetLoggingConfiguration(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.AmazonWorkDocsClient.updateUser",
	"Comment": "updates the specified attributes of the specified user, and grants or revokes administrative privileges to theamazon workdocs site.",
	"Method": "UpdateUserResult updateUser(UpdateUserRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateUser(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.CreateSamplingRuleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSamplingRuleRecord() != null)\r\n        sb.append(\"SamplingRuleRecord: \").append(getSamplingRuleRecord());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.ListVolumesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.ListMailboxPermissionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOrganizationId() != null)\r\n        sb.append(\"OrganizationId: \").append(getOrganizationId()).append(\",\");\r\n    if (getEntityId() != null)\r\n        sb.append(\"EntityId: \").append(getEntityId()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.support.model.DescribeAttachmentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttachmentId() != null)\r\n        sb.append(\"AttachmentId: \").append(getAttachmentId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.transfer.AWSTransferClient.listUsers",
	"Comment": "lists the users for the server that you specify by passing the serverid parameter.",
	"Method": "ListUsersResult listUsers(ListUsersRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListUsers(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.DescribeWorkspaceImagesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getImages() != null)\r\n        sb.append(\"Images: \").append(getImages()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.DescribeWorkspacesConnectionStatusResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWorkspacesConnectionStatus() != null)\r\n        sb.append(\"WorkspacesConnectionStatus: \").append(getWorkspacesConnectionStatus()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.AbstractAWSStorageGatewayAsync.removeTagsFromResourceAsync",
	"Comment": "simplified method form for invoking the removetagsfromresource operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<RemoveTagsFromResourceResult> removeTagsFromResourceAsync(RemoveTagsFromResourceRequest request,java.util.concurrent.Future<RemoveTagsFromResourceResult> removeTagsFromResourceAsync,RemoveTagsFromResourceRequest request,com.amazonaws.handlers.AsyncHandler<RemoveTagsFromResourceRequest, RemoveTagsFromResourceResult> asyncHandler,java.util.concurrent.Future<RemoveTagsFromResourceResult> removeTagsFromResourceAsync,java.util.concurrent.Future<RemoveTagsFromResourceResult> removeTagsFromResourceAsync,com.amazonaws.handlers.AsyncHandler<RemoveTagsFromResourceRequest, RemoveTagsFromResourceResult> asyncHandler){\r\n    return removeTagsFromResourceAsync(new RemoveTagsFromResourceRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.PutMailboxPermissionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOrganizationId() != null)\r\n        sb.append(\"OrganizationId: \").append(getOrganizationId()).append(\",\");\r\n    if (getEntityId() != null)\r\n        sb.append(\"EntityId: \").append(getEntityId()).append(\",\");\r\n    if (getGranteeId() != null)\r\n        sb.append(\"GranteeId: \").append(getGranteeId()).append(\",\");\r\n    if (getPermissionValues() != null)\r\n        sb.append(\"PermissionValues: \").append(getPermissionValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.auth.WebIdentityFederationSessionCredentialsProvider.getRefreshThreshold",
	"Comment": "get the refresh threshold for the session credentials created by this client inseconds. this value will be used internally to determine if newcredentials should be fetched from sts.",
	"Method": "int getRefreshThreshold(){\r\n    return this.refreshThreshold;\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.Disk.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDiskId() != null)\r\n        sb.append(\"DiskId: \").append(getDiskId()).append(\",\");\r\n    if (getDiskPath() != null)\r\n        sb.append(\"DiskPath: \").append(getDiskPath()).append(\",\");\r\n    if (getDiskNode() != null)\r\n        sb.append(\"DiskNode: \").append(getDiskNode()).append(\",\");\r\n    if (getDiskStatus() != null)\r\n        sb.append(\"DiskStatus: \").append(getDiskStatus()).append(\",\");\r\n    if (getDiskSizeInBytes() != null)\r\n        sb.append(\"DiskSizeInBytes: \").append(getDiskSizeInBytes()).append(\",\");\r\n    if (getDiskAllocationType() != null)\r\n        sb.append(\"DiskAllocationType: \").append(getDiskAllocationType()).append(\",\");\r\n    if (getDiskAllocationResource() != null)\r\n        sb.append(\"DiskAllocationResource: \").append(getDiskAllocationResource()).append(\",\");\r\n    if (getDiskAttributeList() != null)\r\n        sb.append(\"DiskAttributeList: \").append(getDiskAttributeList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "buildcraft.lib.script.SimpleScript.nextJson",
	"Comment": "attempts to parse the next stage as a json object, or returns null if the end of the line has been reached.",
	"Method": "JsonObject nextJson(){\r\n    String multiLine = nextQuotedArg();\r\n    try {\r\n        return GSON.fromJson(multiLine, JsonObject.class);\r\n    } catch (JsonSyntaxException jse) {\r\n        log(\"Invalid JSON: \" + jse.getMessage());\r\n        return null;\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.DocumentMetadata.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getCreatorId() != null)\r\n        sb.append(\"CreatorId: \").append(getCreatorId()).append(\",\");\r\n    if (getParentFolderId() != null)\r\n        sb.append(\"ParentFolderId: \").append(getParentFolderId()).append(\",\");\r\n    if (getCreatedTimestamp() != null)\r\n        sb.append(\"CreatedTimestamp: \").append(getCreatedTimestamp()).append(\",\");\r\n    if (getModifiedTimestamp() != null)\r\n        sb.append(\"ModifiedTimestamp: \").append(getModifiedTimestamp()).append(\",\");\r\n    if (getLatestVersionMetadata() != null)\r\n        sb.append(\"LatestVersionMetadata: \").append(getLatestVersionMetadata()).append(\",\");\r\n    if (getResourceState() != null)\r\n        sb.append(\"ResourceState: \").append(getResourceState()).append(\",\");\r\n    if (getLabels() != null)\r\n        sb.append(\"Labels: \").append(getLabels());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.DeleteRuleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.DescribeDocumentVersionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthenticationToken() != null)\r\n        sb.append(\"AuthenticationToken: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getDocumentId() != null)\r\n        sb.append(\"DocumentId: \").append(getDocumentId()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getInclude() != null)\r\n        sb.append(\"Include: \").append(getInclude()).append(\",\");\r\n    if (getFields() != null)\r\n        sb.append(\"Fields: \").append(getFields());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.smoketest.ReflectionUtils.findMethod",
	"Comment": "finds a method of the given name that will accept a parameter of thegiven type. if more than one method matches, returns the first suchmethod found.",
	"Method": "Method findMethod(Object target,String name,Class<?> parameterType){\r\n    for (Method method : target.getClass().getMethods()) {\r\n        if (!method.getName().equals(name)) {\r\n            continue;\r\n        }\r\n        Class<?>[] parameters = method.getParameterTypes();\r\n        if (parameters.length != 1) {\r\n            continue;\r\n        }\r\n        if (parameters[0].isAssignableFrom(parameterType)) {\r\n            return method;\r\n        }\r\n    }\r\n    throw new IllegalStateException(\"No method '\" + name + \"(\" + parameterType + \") on type \" + target.getClass());\r\n}"
}, {
	"Path": "buildcraft.lib.tile.item.StackInsertionFunction.getInsertionFunction",
	"Comment": "gets a stack insertion function that will insert items up to a given stack size. the stack size of the itemsthemselves is taken into account, so this has an effective upper limit of 64.",
	"Method": "StackInsertionFunction getInsertionFunction(int maxStackSize){\r\n    return (slot, addingTo, toInsert) -> {\r\n        if (toInsert.isEmpty()) {\r\n            return new InsertionResult(addingTo, StackUtil.EMPTY);\r\n        }\r\n        if (addingTo.isEmpty()) {\r\n            int maxSize = Math.min(maxStackSize, toInsert.getMaxStackSize());\r\n            if (toInsert.getCount() <= maxSize) {\r\n                return new InsertionResult(toInsert, StackUtil.EMPTY);\r\n            } else {\r\n                ItemStack inserted = toInsert.splitStack(maxSize);\r\n                return new InsertionResult(inserted, toInsert);\r\n            }\r\n        } else if (addingTo.getCount() == maxStackSize) {\r\n            return new InsertionResult(addingTo, toInsert);\r\n        } else if (StackUtil.canMerge(addingTo, toInsert)) {\r\n            ItemStack complete = addingTo.copy();\r\n            int count = addingTo.getCount() + toInsert.getCount();\r\n            int maxSize = Math.min(maxStackSize, complete.getMaxStackSize());\r\n            if (count <= maxSize) {\r\n                complete.setCount(count);\r\n                return new InsertionResult(complete, StackUtil.EMPTY);\r\n            } else {\r\n                complete.setCount(maxSize);\r\n                ItemStack leftOver = toInsert.copy();\r\n                leftOver.setCount(count - maxSize);\r\n                return new InsertionResult(complete, leftOver);\r\n            }\r\n        }\r\n        return new InsertionResult(addingTo, toInsert);\r\n    };\r\n}"
}, {
	"Path": "com.amazonaws.services.support.model.DescribeCommunicationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCommunications() != null)\r\n        sb.append(\"Communications: \").append(getCommunications()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.DeleteSizeConstraintSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.stepfunctions.model.SendTaskSuccessRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTaskToken() != null)\r\n        sb.append(\"TaskToken: \").append(getTaskToken()).append(\",\");\r\n    if (getOutput() != null)\r\n        sb.append(\"Output: \").append(\"***Sensitive Data Redacted***\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.DeleteTranscriptionJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.translate.model.TerminologyDataLocation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRepositoryType() != null)\r\n        sb.append(\"RepositoryType: \").append(getRepositoryType()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.StartTranscriptionJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTranscriptionJob() != null)\r\n        sb.append(\"TranscriptionJob: \").append(getTranscriptionJob());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.quickstart.A_CreateTableTest.howToCreateTable",
	"Comment": "sample request to create a dynamodb table with an lsi and gsi thatcan be accessed via a combination of hash keys and range keys.",
	"Method": "void howToCreateTable(){\r\n    String TABLE_NAME = \"myTableForMidLevelApi\";\r\n    Table table = dynamo.getTable(TABLE_NAME);\r\n    TableDescription desc = table.waitForActiveOrDelete();\r\n    if (desc != null) {\r\n        System.out.println(\"Skip creating table which already exists and ready for use: \" + desc);\r\n        return;\r\n    }\r\n    table = dynamo.createTable(newCreateTableRequest(TABLE_NAME));\r\n    desc = table.waitForActive();\r\n    System.out.println(\"Table is ready for use! \" + desc);\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.DescribeWorkspacesConnectionStatusRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWorkspaceIds() != null)\r\n        sb.append(\"WorkspaceIds: \").append(getWorkspaceIds()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.StartWorkspacesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFailedRequests() != null)\r\n        sb.append(\"FailedRequests: \").append(getFailedRequests());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.support.AWSSupportClient.describeTrustedAdvisorCheckRefreshStatuses",
	"Comment": "returns the refresh status of the trusted advisor checks that have the specified check ids. check ids can beobtained by calling describetrustedadvisorchecks.some checks are refreshed automatically, and their refresh statuses cannot be retrieved by using this operation.use of the describetrustedadvisorcheckrefreshstatuses operation for these checks causes aninvalidparametervalue error.",
	"Method": "DescribeTrustedAdvisorCheckRefreshStatusesResult describeTrustedAdvisorCheckRefreshStatuses(DescribeTrustedAdvisorCheckRefreshStatusesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeTrustedAdvisorCheckRefreshStatuses(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.DeleteRegexPatternSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegexPatternSetId() != null)\r\n        sb.append(\"RegexPatternSetId: \").append(getRegexPatternSetId()).append(\",\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.ListFileSharesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.ModifyAccountResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "io.bootique.resource.ResourceFactory.getResourceId",
	"Comment": "returns resource id string used to initialize this resourcefactory.",
	"Method": "String getResourceId(){\r\n    return resourceId;\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.DeleteByteMatchSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.support.AWSSupportClientBuilder.build",
	"Comment": "construct a synchronous implementation of awssupport using the current builder configuration.",
	"Method": "AWSSupport build(AwsSyncClientParams params){\r\n    return new AWSSupportClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.RemoveResourcePermissionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.GetSampledRequestsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWebAclId() != null)\r\n        sb.append(\"WebAclId: \").append(getWebAclId()).append(\",\");\r\n    if (getRuleId() != null)\r\n        sb.append(\"RuleId: \").append(getRuleId()).append(\",\");\r\n    if (getTimeWindow() != null)\r\n        sb.append(\"TimeWindow: \").append(getTimeWindow()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.PutTelemetryRecordsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.support.AWSSupportAsyncClient.describeServicesAsync",
	"Comment": "simplified method form for invoking the describeservices operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeServicesResult> describeServicesAsync(DescribeServicesRequest request,java.util.concurrent.Future<DescribeServicesResult> describeServicesAsync,DescribeServicesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeServicesRequest, DescribeServicesResult> asyncHandler,java.util.concurrent.Future<DescribeServicesResult> describeServicesAsync,java.util.concurrent.Future<DescribeServicesResult> describeServicesAsync,com.amazonaws.handlers.AsyncHandler<DescribeServicesRequest, DescribeServicesResult> asyncHandler){\r\n    return describeServicesAsync(new DescribeServicesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.CreateRuleGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRuleGroup() != null)\r\n        sb.append(\"RuleGroup: \").append(getRuleGroup()).append(\",\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.UpdateWebACLRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWebACLId() != null)\r\n        sb.append(\"WebACLId: \").append(getWebACLId()).append(\",\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken()).append(\",\");\r\n    if (getUpdates() != null)\r\n        sb.append(\"Updates: \").append(getUpdates()).append(\",\");\r\n    if (getDefaultAction() != null)\r\n        sb.append(\"DefaultAction: \").append(getDefaultAction());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.DeactivateUserResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.GetGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroup() != null)\r\n        sb.append(\"Group: \").append(getGroup());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.NFSFileShareInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNFSFileShareDefaults() != null)\r\n        sb.append(\"NFSFileShareDefaults: \").append(getNFSFileShareDefaults()).append(\",\");\r\n    if (getFileShareARN() != null)\r\n        sb.append(\"FileShareARN: \").append(getFileShareARN()).append(\",\");\r\n    if (getFileShareId() != null)\r\n        sb.append(\"FileShareId: \").append(getFileShareId()).append(\",\");\r\n    if (getFileShareStatus() != null)\r\n        sb.append(\"FileShareStatus: \").append(getFileShareStatus()).append(\",\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN()).append(\",\");\r\n    if (getKMSEncrypted() != null)\r\n        sb.append(\"KMSEncrypted: \").append(getKMSEncrypted()).append(\",\");\r\n    if (getKMSKey() != null)\r\n        sb.append(\"KMSKey: \").append(getKMSKey()).append(\",\");\r\n    if (getPath() != null)\r\n        sb.append(\"Path: \").append(getPath()).append(\",\");\r\n    if (getRole() != null)\r\n        sb.append(\"Role: \").append(getRole()).append(\",\");\r\n    if (getLocationARN() != null)\r\n        sb.append(\"LocationARN: \").append(getLocationARN()).append(\",\");\r\n    if (getDefaultStorageClass() != null)\r\n        sb.append(\"DefaultStorageClass: \").append(getDefaultStorageClass()).append(\",\");\r\n    if (getObjectACL() != null)\r\n        sb.append(\"ObjectACL: \").append(getObjectACL()).append(\",\");\r\n    if (getClientList() != null)\r\n        sb.append(\"ClientList: \").append(getClientList()).append(\",\");\r\n    if (getSquash() != null)\r\n        sb.append(\"Squash: \").append(getSquash()).append(\",\");\r\n    if (getReadOnly() != null)\r\n        sb.append(\"ReadOnly: \").append(getReadOnly()).append(\",\");\r\n    if (getGuessMIMETypeEnabled() != null)\r\n        sb.append(\"GuessMIMETypeEnabled: \").append(getGuessMIMETypeEnabled()).append(\",\");\r\n    if (getRequesterPays() != null)\r\n        sb.append(\"RequesterPays: \").append(getRequesterPays());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "io.bootique.meta.application.ApplicationMetadata.getVariables",
	"Comment": "returns a collection of metadata objects representing publicly exposed environment variables.",
	"Method": "Collection<ConfigValueMetadata> getVariables(){\r\n    return variables;\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.AWSWAFClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.AWSStorageGatewayClient.describeCache",
	"Comment": "returns information about the cache of a gateway. this operation is only supported in the cached volume, tape andfile gateway types.the response includes disk ids that are configured as cache, and it includes the amount of cache allocated andused.",
	"Method": "DescribeCacheResult describeCache(DescribeCacheRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeCache(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.DisassociateWebACLResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.StartRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWorkspaceId() != null)\r\n        sb.append(\"WorkspaceId: \").append(getWorkspaceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.AWSXRayAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awsxrayasync using the current builder configuration.",
	"Method": "AWSXRayAsync build(AwsAsyncClientParams params){\r\n    return new AWSXRayAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.transfer.model.ListedServer.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getIdentityProviderType() != null)\r\n        sb.append(\"IdentityProviderType: \").append(getIdentityProviderType()).append(\",\");\r\n    if (getLoggingRole() != null)\r\n        sb.append(\"LoggingRole: \").append(getLoggingRole()).append(\",\");\r\n    if (getServerId() != null)\r\n        sb.append(\"ServerId: \").append(getServerId()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getUserCount() != null)\r\n        sb.append(\"UserCount: \").append(getUserCount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.support.model.DescribeSeverityLevelsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLanguage() != null)\r\n        sb.append(\"Language: \").append(getLanguage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.CreateTapeWithBarcodeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTapeARN() != null)\r\n        sb.append(\"TapeARN: \").append(getTapeARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.SizeConstraintSetUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAction() != null)\r\n        sb.append(\"Action: \").append(getAction()).append(\",\");\r\n    if (getSizeConstraint() != null)\r\n        sb.append(\"SizeConstraint: \").append(getSizeConstraint());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.ListTapesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTapeARNs() != null)\r\n        sb.append(\"TapeARNs: \").append(getTapeARNs()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.AnnotationValue.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNumberValue() != null)\r\n        sb.append(\"NumberValue: \").append(getNumberValue()).append(\",\");\r\n    if (getBooleanValue() != null)\r\n        sb.append(\"BooleanValue: \").append(getBooleanValue()).append(\",\");\r\n    if (getStringValue() != null)\r\n        sb.append(\"StringValue: \").append(getStringValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.securitytoken.model.AssumeRoleWithSAMLRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getPrincipalArn() != null)\r\n        sb.append(\"PrincipalArn: \").append(getPrincipalArn()).append(\",\");\r\n    if (getSAMLAssertion() != null)\r\n        sb.append(\"SAMLAssertion: \").append(getSAMLAssertion()).append(\",\");\r\n    if (getPolicy() != null)\r\n        sb.append(\"Policy: \").append(getPolicy()).append(\",\");\r\n    if (getDurationSeconds() != null)\r\n        sb.append(\"DurationSeconds: \").append(getDurationSeconds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.UpdateRulesOfIpGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.GetIPSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIPSetId() != null)\r\n        sb.append(\"IPSetId: \").append(getIPSetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.ListRegexMatchSetsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.DeleteDocumentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthenticationToken() != null)\r\n        sb.append(\"AuthenticationToken: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getDocumentId() != null)\r\n        sb.append(\"DocumentId: \").append(getDocumentId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "cc.blynk.server.launcher.ArgumentsParser.parse",
	"Comment": "simply parsers command line arguments and sets it to server properties for future use.",
	"Method": "Map<String, String> parse(String[] args){\r\n    CommandLine cmd = new DefaultParser().parse(options, args);\r\n    String hardPort = cmd.getOptionValue(HARDWARE_PORT_OPTION);\r\n    String appPort = cmd.getOptionValue(APPLICATION_PORT_OPTION);\r\n    String workerThreadsString = cmd.getOptionValue(WORKER_THREADS_OPTION);\r\n    String dataFolder = cmd.getOptionValue(DATA_FOLDER_OPTION);\r\n    String serverConfigPath = cmd.getOptionValue(SERVER_CONFIG_PATH_OPTION);\r\n    String mailConfigPath = cmd.getOptionValue(MAIL_CONFIG_PATH_OPTION);\r\n    String smsConfigPath = cmd.getOptionValue(SMS_CONFIG_PATH_OPTION);\r\n    boolean restore = cmd.hasOption(RESTORE_OPTION);\r\n    Map<String, String> properties = new HashMap();\r\n    if (hardPort != null) {\r\n        Integer.parseInt(hardPort);\r\n        properties.put(\"http.port\", hardPort);\r\n    }\r\n    if (appPort != null) {\r\n        Integer.parseInt(appPort);\r\n        properties.put(\"https.port\", appPort);\r\n    }\r\n    if (workerThreadsString != null) {\r\n        Integer.parseInt(workerThreadsString);\r\n        properties.put(\"server.worker.threads\", workerThreadsString);\r\n    }\r\n    if (dataFolder != null) {\r\n        properties.put(\"data.folder\", dataFolder);\r\n    }\r\n    if (serverConfigPath != null) {\r\n        properties.put(SERVER_PROPERTIES_FILENAME, serverConfigPath);\r\n    }\r\n    if (mailConfigPath != null) {\r\n        properties.put(MAIL_PROPERTIES_FILENAME, mailConfigPath);\r\n    }\r\n    if (smsConfigPath != null) {\r\n        properties.put(SMS_PROPERTIES_FILENAME, smsConfigPath);\r\n    }\r\n    properties.put(RESTORE_OPTION, Boolean.toString(restore));\r\n    return properties;\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.DescribeTapesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN()).append(\",\");\r\n    if (getTapeARNs() != null)\r\n        sb.append(\"TapeARNs: \").append(getTapeARNs()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.DescribeSMBFileSharesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSMBFileShareInfoList() != null)\r\n        sb.append(\"SMBFileShareInfoList: \").append(getSMBFileShareInfoList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.AssociateMemberToGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.RateBasedRule.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRuleId() != null)\r\n        sb.append(\"RuleId: \").append(getRuleId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getMetricName() != null)\r\n        sb.append(\"MetricName: \").append(getMetricName()).append(\",\");\r\n    if (getMatchPredicates() != null)\r\n        sb.append(\"MatchPredicates: \").append(getMatchPredicates()).append(\",\");\r\n    if (getRateKey() != null)\r\n        sb.append(\"RateKey: \").append(getRateKey()).append(\",\");\r\n    if (getRateLimit() != null)\r\n        sb.append(\"RateLimit: \").append(getRateLimit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.GetFolderPathRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthenticationToken() != null)\r\n        sb.append(\"AuthenticationToken: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getFolderId() != null)\r\n        sb.append(\"FolderId: \").append(getFolderId()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getFields() != null)\r\n        sb.append(\"Fields: \").append(getFields()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.stepfunctions.builder.StatesAsserts.roundTripStateMachine",
	"Comment": "serializes statemachine into json and deserialize back into a statemachine from the json.",
	"Method": "StateMachine roundTripStateMachine(StateMachine stateMachine){\r\n    return StateMachine.fromJson(stateMachine.toJson()).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.DeleteLabelsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId()).append(\",\");\r\n    if (getAuthenticationToken() != null)\r\n        sb.append(\"AuthenticationToken: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getLabels() != null)\r\n        sb.append(\"Labels: \").append(getLabels()).append(\",\");\r\n    if (getDeleteAll() != null)\r\n        sb.append(\"DeleteAll: \").append(getDeleteAll());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.AbstractAWSStorageGatewayAsync.listTagsForResourceAsync",
	"Comment": "simplified method form for invoking the listtagsforresource operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListTagsForResourceResult> listTagsForResourceAsync(ListTagsForResourceRequest request,java.util.concurrent.Future<ListTagsForResourceResult> listTagsForResourceAsync,ListTagsForResourceRequest request,com.amazonaws.handlers.AsyncHandler<ListTagsForResourceRequest, ListTagsForResourceResult> asyncHandler,java.util.concurrent.Future<ListTagsForResourceResult> listTagsForResourceAsync,java.util.concurrent.Future<ListTagsForResourceResult> listTagsForResourceAsync,com.amazonaws.handlers.AsyncHandler<ListTagsForResourceRequest, ListTagsForResourceResult> asyncHandler){\r\n    return listTagsForResourceAsync(new ListTagsForResourceRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.NotifyWhenUploadedResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFileShareARN() != null)\r\n        sb.append(\"FileShareARN: \").append(getFileShareARN()).append(\",\");\r\n    if (getNotificationId() != null)\r\n        sb.append(\"NotificationId: \").append(getNotificationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.UpdateVTLDeviceTypeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVTLDeviceARN() != null)\r\n        sb.append(\"VTLDeviceARN: \").append(getVTLDeviceARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.translate.model.TerminologyProperties.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getSourceLanguageCode() != null)\r\n        sb.append(\"SourceLanguageCode: \").append(getSourceLanguageCode()).append(\",\");\r\n    if (getTargetLanguageCodes() != null)\r\n        sb.append(\"TargetLanguageCodes: \").append(getTargetLanguageCodes()).append(\",\");\r\n    if (getEncryptionKey() != null)\r\n        sb.append(\"EncryptionKey: \").append(getEncryptionKey()).append(\",\");\r\n    if (getSizeBytes() != null)\r\n        sb.append(\"SizeBytes: \").append(getSizeBytes()).append(\",\");\r\n    if (getTermCount() != null)\r\n        sb.append(\"TermCount: \").append(getTermCount()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getLastUpdatedAt() != null)\r\n        sb.append(\"LastUpdatedAt: \").append(getLastUpdatedAt());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.UserStorageMetadata.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStorageUtilizedInBytes() != null)\r\n        sb.append(\"StorageUtilizedInBytes: \").append(getStorageUtilizedInBytes()).append(\",\");\r\n    if (getStorageRule() != null)\r\n        sb.append(\"StorageRule: \").append(getStorageRule());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.UpdateVocabularyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVocabularyName() != null)\r\n        sb.append(\"VocabularyName: \").append(getVocabularyName()).append(\",\");\r\n    if (getLanguageCode() != null)\r\n        sb.append(\"LanguageCode: \").append(getLanguageCode()).append(\",\");\r\n    if (getLastModifiedTime() != null)\r\n        sb.append(\"LastModifiedTime: \").append(getLastModifiedTime()).append(\",\");\r\n    if (getVocabularyState() != null)\r\n        sb.append(\"VocabularyState: \").append(getVocabularyState());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.AmazonWorkMailClient.createResource",
	"Comment": "creates a new amazon workmail resource. the available types are equipment and room.",
	"Method": "CreateResourceResult createResource(CreateResourceRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateResource(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.DeleteUserRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthenticationToken() != null)\r\n        sb.append(\"AuthenticationToken: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getUserId() != null)\r\n        sb.append(\"UserId: \").append(getUserId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.UpdateSnapshotScheduleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVolumeARN() != null)\r\n        sb.append(\"VolumeARN: \").append(getVolumeARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.transfer.model.DeleteServerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.support.model.Attachment.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFileName() != null)\r\n        sb.append(\"FileName: \").append(getFileName()).append(\",\");\r\n    if (getData() != null)\r\n        sb.append(\"Data: \").append(getData());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.support.model.TrustedAdvisorResourceDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getRegion() != null)\r\n        sb.append(\"Region: \").append(getRegion()).append(\",\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId()).append(\",\");\r\n    if (getIsSuppressed() != null)\r\n        sb.append(\"IsSuppressed: \").append(getIsSuppressed()).append(\",\");\r\n    if (getMetadata() != null)\r\n        sb.append(\"Metadata: \").append(getMetadata());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.CommentMetadata.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCommentId() != null)\r\n        sb.append(\"CommentId: \").append(getCommentId()).append(\",\");\r\n    if (getContributor() != null)\r\n        sb.append(\"Contributor: \").append(getContributor()).append(\",\");\r\n    if (getCreatedTimestamp() != null)\r\n        sb.append(\"CreatedTimestamp: \").append(getCreatedTimestamp()).append(\",\");\r\n    if (getCommentStatus() != null)\r\n        sb.append(\"CommentStatus: \").append(getCommentStatus()).append(\",\");\r\n    if (getRecipientId() != null)\r\n        sb.append(\"RecipientId: \").append(getRecipientId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.DeletePermissionPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "cc.blynk.cli.Options.getMatchingOptions",
	"Comment": "returns the options with a long name starting with the name specified.",
	"Method": "List<String> getMatchingOptions(String opt){\r\n    opt = Util.stripLeadingHyphens(opt);\r\n    List<String> matchingOpts = new ArrayList();\r\n    if (longOpts.keySet().contains(opt)) {\r\n        return Collections.singletonList(opt);\r\n    }\r\n    for (String longOpt : longOpts.keySet()) {\r\n        if (longOpt.startsWith(opt)) {\r\n            matchingOpts.add(longOpt);\r\n        }\r\n    }\r\n    return matchingOpts;\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.TraceUser.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getServiceIds() != null)\r\n        sb.append(\"ServiceIds: \").append(getServiceIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "cc.blynk.cli.CommandLine.addOption",
	"Comment": "add an option to the command line.the values of the option are stored.",
	"Method": "void addOption(Option opt){\r\n    options.add(opt);\r\n}"
}, {
	"Path": "com.amazonaws.services.transfer.model.ListTagsForResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.DeleteRegexMatchSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.FieldToMatch.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getData() != null)\r\n        sb.append(\"Data: \").append(getData());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.CreateSizeConstraintSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSizeConstraintSet() != null)\r\n        sb.append(\"SizeConstraintSet: \").append(getSizeConstraintSet()).append(\",\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.AmazonWorkspacesAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.GetPermissionPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.transfer.model.StartServerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.AWSStorageGatewayClient.updateVTLDeviceType",
	"Comment": "updates the type of medium changer in a tape gateway. when you activate a tape gateway, you select a mediumchanger type for the tape gateway. this operation enables you to select a different type of medium changer aftera tape gateway is activated. this operation is only supported in the tape gateway type.",
	"Method": "UpdateVTLDeviceTypeResult updateVTLDeviceType(UpdateVTLDeviceTypeRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateVTLDeviceType(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.AmazonWorkMailClient.createGroup",
	"Comment": "creates a group that can be used in amazon workmail by calling the registertoworkmail operation.",
	"Method": "CreateGroupResult createGroup(CreateGroupRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateGroup(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.DeleteTagsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId()).append(\",\");\r\n    if (getTagKeys() != null)\r\n        sb.append(\"TagKeys: \").append(getTagKeys());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.AddCacheResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.CancelRetrievalResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTapeARN() != null)\r\n        sb.append(\"TapeARN: \").append(getTapeARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.stepfunctions.model.UpdateStateMachineResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUpdateDate() != null)\r\n        sb.append(\"UpdateDate: \").append(getUpdateDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.AmazonWorkspacesClient.updateRulesOfIpGroup",
	"Comment": "replaces the current rules of the specified ip access control group with the specified rules.",
	"Method": "UpdateRulesOfIpGroupResult updateRulesOfIpGroup(UpdateRulesOfIpGroupRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateRulesOfIpGroup(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.stepfunctions.model.StateMachineListItem.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStateMachineArn() != null)\r\n        sb.append(\"StateMachineArn: \").append(getStateMachineArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.ResponseTimeRootCause.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServices() != null)\r\n        sb.append(\"Services: \").append(getServices());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.DescribeGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getEmail() != null)\r\n        sb.append(\"Email: \").append(getEmail()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getEnabledDate() != null)\r\n        sb.append(\"EnabledDate: \").append(getEnabledDate()).append(\",\");\r\n    if (getDisabledDate() != null)\r\n        sb.append(\"DisabledDate: \").append(getDisabledDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.translate.model.TranslateTextResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTranslatedText() != null)\r\n        sb.append(\"TranslatedText: \").append(getTranslatedText()).append(\",\");\r\n    if (getSourceLanguageCode() != null)\r\n        sb.append(\"SourceLanguageCode: \").append(getSourceLanguageCode()).append(\",\");\r\n    if (getTargetLanguageCode() != null)\r\n        sb.append(\"TargetLanguageCode: \").append(getTargetLanguageCode()).append(\",\");\r\n    if (getAppliedTerminologies() != null)\r\n        sb.append(\"AppliedTerminologies: \").append(getAppliedTerminologies());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.GetVocabularyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVocabularyName() != null)\r\n        sb.append(\"VocabularyName: \").append(getVocabularyName()).append(\",\");\r\n    if (getLanguageCode() != null)\r\n        sb.append(\"LanguageCode: \").append(getLanguageCode()).append(\",\");\r\n    if (getVocabularyState() != null)\r\n        sb.append(\"VocabularyState: \").append(getVocabularyState()).append(\",\");\r\n    if (getLastModifiedTime() != null)\r\n        sb.append(\"LastModifiedTime: \").append(getLastModifiedTime()).append(\",\");\r\n    if (getFailureReason() != null)\r\n        sb.append(\"FailureReason: \").append(getFailureReason()).append(\",\");\r\n    if (getDownloadUri() != null)\r\n        sb.append(\"DownloadUri: \").append(getDownloadUri());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.DescribeWorkspacesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWorkspaces() != null)\r\n        sb.append(\"Workspaces: \").append(getWorkspaces()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.ActivateGatewayRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getActivationKey() != null)\r\n        sb.append(\"ActivationKey: \").append(getActivationKey()).append(\",\");\r\n    if (getGatewayName() != null)\r\n        sb.append(\"GatewayName: \").append(getGatewayName()).append(\",\");\r\n    if (getGatewayTimezone() != null)\r\n        sb.append(\"GatewayTimezone: \").append(getGatewayTimezone()).append(\",\");\r\n    if (getGatewayRegion() != null)\r\n        sb.append(\"GatewayRegion: \").append(getGatewayRegion()).append(\",\");\r\n    if (getGatewayType() != null)\r\n        sb.append(\"GatewayType: \").append(getGatewayType()).append(\",\");\r\n    if (getTapeDriveType() != null)\r\n        sb.append(\"TapeDriveType: \").append(getTapeDriveType()).append(\",\");\r\n    if (getMediumChangerType() != null)\r\n        sb.append(\"MediumChangerType: \").append(getMediumChangerType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "cc.blynk.server.core.model.device.Device.updateOTAInfo",
	"Comment": "for single device update device always updated when ota is initiated.",
	"Method": "void updateOTAInfo(String initiatedBy){\r\n    long now = System.currentTimeMillis();\r\n    this.deviceOtaInfo = new DeviceOtaInfo(initiatedBy, now, now);\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.CreateCustomMetadataRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthenticationToken() != null)\r\n        sb.append(\"AuthenticationToken: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId()).append(\",\");\r\n    if (getVersionId() != null)\r\n        sb.append(\"VersionId: \").append(getVersionId()).append(\",\");\r\n    if (getCustomMetadata() != null)\r\n        sb.append(\"CustomMetadata: \").append(getCustomMetadata());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.ListResourcesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResources() != null)\r\n        sb.append(\"Resources: \").append(getResources()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.CreateIPSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIPSet() != null)\r\n        sb.append(\"IPSet: \").append(getIPSet()).append(\",\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.ListVocabulariesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getStateEquals() != null)\r\n        sb.append(\"StateEquals: \").append(getStateEquals()).append(\",\");\r\n    if (getNameContains() != null)\r\n        sb.append(\"NameContains: \").append(getNameContains());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.CreateGeoMatchSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "cc.blynk.cli.AmbiguousOptionException.createMessage",
	"Comment": "build the exception message from the specified list of options.",
	"Method": "String createMessage(String option,Collection<String> matchingOptions){\r\n    StringBuilder buf = new StringBuilder(\"Ambiguous option: '\");\r\n    buf.append(option);\r\n    buf.append(\"'  (could be: \");\r\n    Iterator<String> it = matchingOptions.iterator();\r\n    while (it.hasNext()) {\r\n        buf.append(\"'\");\r\n        buf.append(it.next());\r\n        buf.append(\"'\");\r\n        if (it.hasNext()) {\r\n            buf.append(\", \");\r\n        }\r\n    }\r\n    buf.append(\")\");\r\n    return buf.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.DeleteXssMatchSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getXssMatchSetId() != null)\r\n        sb.append(\"XssMatchSetId: \").append(getXssMatchSetId()).append(\",\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.AWSStorageGatewayClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "cc.blynk.utils.JarUtil.unpackStaticFiles",
	"Comment": "unpacks all files from staticfolder of jar and puts them to current folder within staticfolder path.",
	"Method": "boolean unpackStaticFiles(String jarPath,String staticFolder){\r\n    try {\r\n        ArrayList<String> staticResources = find(staticFolder);\r\n        if (staticResources.size() == 0) {\r\n            return false;\r\n        }\r\n        for (String staticFile : staticResources) {\r\n            try (InputStream is = JarUtil.class.getResourceAsStream(\"/\" + staticFile)) {\r\n                Path newStaticFile = Paths.get(jarPath, staticFile);\r\n                Files.deleteIfExists(newStaticFile);\r\n                Files.createDirectories(newStaticFile);\r\n                Files.copy(is, newStaticFile, REPLACE_EXISTING);\r\n            }\r\n        }\r\n        File overrides = new File(\"static-override\");\r\n        if (overrides.exists()) {\r\n            File staticDir = new File(\"static\");\r\n            copyFolder(overrides.toPath(), staticDir.toPath());\r\n        }\r\n        return true;\r\n    } catch (Exception e) {\r\n        throw new RuntimeException(\"Error unpacking static files.\", e);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.Rule.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRuleId() != null)\r\n        sb.append(\"RuleId: \").append(getRuleId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getMetricName() != null)\r\n        sb.append(\"MetricName: \").append(getMetricName()).append(\",\");\r\n    if (getPredicates() != null)\r\n        sb.append(\"Predicates: \").append(getPredicates());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.smoketest.ReflectionUtils.getByPath",
	"Comment": "evaluates the given path expression on the given object and returns theobject found.",
	"Method": "Object getByPath(Object target,List<String> path){\r\n    Object obj = target;\r\n    for (String field : path) {\r\n        if (obj == null) {\r\n            return null;\r\n        }\r\n        obj = evaluate(obj, trimType(field));\r\n    }\r\n    return obj;\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.WorkspaceDirectory.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDirectoryId() != null)\r\n        sb.append(\"DirectoryId: \").append(getDirectoryId()).append(\",\");\r\n    if (getAlias() != null)\r\n        sb.append(\"Alias: \").append(getAlias()).append(\",\");\r\n    if (getDirectoryName() != null)\r\n        sb.append(\"DirectoryName: \").append(getDirectoryName()).append(\",\");\r\n    if (getRegistrationCode() != null)\r\n        sb.append(\"RegistrationCode: \").append(getRegistrationCode()).append(\",\");\r\n    if (getSubnetIds() != null)\r\n        sb.append(\"SubnetIds: \").append(getSubnetIds()).append(\",\");\r\n    if (getDnsIpAddresses() != null)\r\n        sb.append(\"DnsIpAddresses: \").append(getDnsIpAddresses()).append(\",\");\r\n    if (getCustomerUserName() != null)\r\n        sb.append(\"CustomerUserName: \").append(getCustomerUserName()).append(\",\");\r\n    if (getIamRoleId() != null)\r\n        sb.append(\"IamRoleId: \").append(getIamRoleId()).append(\",\");\r\n    if (getDirectoryType() != null)\r\n        sb.append(\"DirectoryType: \").append(getDirectoryType()).append(\",\");\r\n    if (getWorkspaceSecurityGroupId() != null)\r\n        sb.append(\"WorkspaceSecurityGroupId: \").append(getWorkspaceSecurityGroupId()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getWorkspaceCreationProperties() != null)\r\n        sb.append(\"WorkspaceCreationProperties: \").append(getWorkspaceCreationProperties()).append(\",\");\r\n    if (getIpGroupIds() != null)\r\n        sb.append(\"IpGroupIds: \").append(getIpGroupIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.AWSXRayClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.AmazonWorkspacesClient.describeWorkspaceDirectories",
	"Comment": "describes the available aws directory service directories that are registered with amazon workspaces.",
	"Method": "DescribeWorkspaceDirectoriesResult describeWorkspaceDirectories(DescribeWorkspaceDirectoriesRequest request,DescribeWorkspaceDirectoriesResult describeWorkspaceDirectories){\r\n    return describeWorkspaceDirectories(new DescribeWorkspaceDirectoriesRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.WorkspaceBundle.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBundleId() != null)\r\n        sb.append(\"BundleId: \").append(getBundleId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getOwner() != null)\r\n        sb.append(\"Owner: \").append(getOwner()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getRootStorage() != null)\r\n        sb.append(\"RootStorage: \").append(getRootStorage()).append(\",\");\r\n    if (getUserStorage() != null)\r\n        sb.append(\"UserStorage: \").append(getUserStorage()).append(\",\");\r\n    if (getComputeType() != null)\r\n        sb.append(\"ComputeType: \").append(getComputeType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.auth.RefreshableTask.asyncRefresh",
	"Comment": "used to asynchronously refresh the value. caller is never blocked.",
	"Method": "void asyncRefresh(){\r\n    if (asyncRefreshing.compareAndSet(false, true)) {\r\n        try {\r\n            executor.submit(new Runnable() {\r\n                @Override\r\n                public void run() {\r\n                    try {\r\n                        refreshValue();\r\n                    } finally {\r\n                        asyncRefreshing.set(false);\r\n                    }\r\n                }\r\n            });\r\n        } catch (RuntimeException ex) {\r\n            asyncRefreshing.set(false);\r\n            throw ex;\r\n        }\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.auth.RefreshableTask.asyncRefresh",
	"Comment": "used to asynchronously refresh the value. caller is never blocked.",
	"Method": "void asyncRefresh(){\r\n    try {\r\n        refreshValue();\r\n    } finally {\r\n        asyncRefreshing.set(false);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.XssMatchSet.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getXssMatchSetId() != null)\r\n        sb.append(\"XssMatchSetId: \").append(getXssMatchSetId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getXssMatchTuples() != null)\r\n        sb.append(\"XssMatchTuples: \").append(getXssMatchTuples());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.transfer.model.ListUsersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getServerId() != null)\r\n        sb.append(\"ServerId: \").append(getServerId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.transfer.model.ListedUser.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getHomeDirectory() != null)\r\n        sb.append(\"HomeDirectory: \").append(getHomeDirectory()).append(\",\");\r\n    if (getRole() != null)\r\n        sb.append(\"Role: \").append(getRole()).append(\",\");\r\n    if (getSshPublicKeyCount() != null)\r\n        sb.append(\"SshPublicKeyCount: \").append(getSshPublicKeyCount()).append(\",\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.UpdateRuleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRuleId() != null)\r\n        sb.append(\"RuleId: \").append(getRuleId()).append(\",\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken()).append(\",\");\r\n    if (getUpdates() != null)\r\n        sb.append(\"Updates: \").append(getUpdates());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.GroupMetadata.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.DescribeGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOrganizationId() != null)\r\n        sb.append(\"OrganizationId: \").append(getOrganizationId()).append(\",\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.AWSStorageGatewayClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.CreateAliasResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "buildcraft.lib.delta.DeltaInt.setValue",
	"Comment": "forgets all existing deltas and sets the values to the new value.",
	"Method": "void setValue(int value){\r\n    changingEntries.clear();\r\n    staticStartValue = value;\r\n    staticEndValue = value;\r\n    dynamicValueLast = value;\r\n    dynamicValueThis = value;\r\n    manager.sendDeltaMessage(EnumDeltaMessage.SET_VALUE, this, (buffer) -> buffer.writeInt(value));\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.DescribeSMBSettingsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.support.model.TrustedAdvisorResourcesSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourcesProcessed() != null)\r\n        sb.append(\"ResourcesProcessed: \").append(getResourcesProcessed()).append(\",\");\r\n    if (getResourcesFlagged() != null)\r\n        sb.append(\"ResourcesFlagged: \").append(getResourcesFlagged()).append(\",\");\r\n    if (getResourcesIgnored() != null)\r\n        sb.append(\"ResourcesIgnored: \").append(getResourcesIgnored()).append(\",\");\r\n    if (getResourcesSuppressed() != null)\r\n        sb.append(\"ResourcesSuppressed: \").append(getResourcesSuppressed());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.test.util.SdkAsserts.doesStreamEqualStream",
	"Comment": "returns true if, and only if, the contents read from the specified input streams are exactlyequal. both input streams will be closed at the end of this method.",
	"Method": "boolean doesStreamEqualStream(InputStream expected,InputStream actual){\r\n    try {\r\n        final byte[] expectedDigest = InputStreamUtils.calculateMD5Digest(expected);\r\n        final byte[] actualDigest = InputStreamUtils.calculateMD5Digest(actual);\r\n        return Arrays.equals(expectedDigest, actualDigest);\r\n    } catch (NoSuchAlgorithmException nse) {\r\n        throw new AmazonClientException(nse.getMessage(), nse);\r\n    } finally {\r\n        IOUtils.closeQuietly(expected, null);\r\n        IOUtils.closeQuietly(actual, null);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.DeleteCommentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthenticationToken() != null)\r\n        sb.append(\"AuthenticationToken: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getDocumentId() != null)\r\n        sb.append(\"DocumentId: \").append(getDocumentId()).append(\",\");\r\n    if (getVersionId() != null)\r\n        sb.append(\"VersionId: \").append(getVersionId()).append(\",\");\r\n    if (getCommentId() != null)\r\n        sb.append(\"CommentId: \").append(getCommentId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.DeleteWorkspaceImageRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getImageId() != null)\r\n        sb.append(\"ImageId: \").append(getImageId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "cc.blynk.cli.Options.getOptionGroups",
	"Comment": "lists the optiongroups that are members of this options instance.",
	"Method": "Collection<OptionGroup> getOptionGroups(){\r\n    return new HashSet(optionGroups.values());\r\n}"
}, {
	"Path": "com.amazonaws.jmespath.JmesPathContainsFunction.doesArrayContain",
	"Comment": "if subject is an array, this function returns true ifone of the elements in the array is equal to the provided searchvalue.",
	"Method": "BooleanNode doesArrayContain(JsonNode subject,JsonNode search){\r\n    Iterator<JsonNode> elements = subject.elements();\r\n    while (elements.hasNext()) {\r\n        if (elements.next().equals(search)) {\r\n            return BooleanNode.TRUE;\r\n        }\r\n    }\r\n    return BooleanNode.FALSE;\r\n}"
}, {
	"Path": "io.bootique.meta.application.OptionMetadata.getDefaultValue",
	"Comment": "returns the default value for this option. i.e. the value that will be used if the option is provided oncommand line without an explicit value.",
	"Method": "String getDefaultValue(){\r\n    return defaultValue;\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.SetLocalConsolePasswordResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.AmazonWorkspacesClient.rebootWorkspaces",
	"Comment": "reboots the specified workspaces.you cannot reboot a workspace unless its state is available or unhealthy.this operation is asynchronous and returns before the workspaces have rebooted.",
	"Method": "RebootWorkspacesResult rebootWorkspaces(RebootWorkspacesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeRebootWorkspaces(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.Subscription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubscriptionId() != null)\r\n        sb.append(\"SubscriptionId: \").append(getSubscriptionId()).append(\",\");\r\n    if (getEndPoint() != null)\r\n        sb.append(\"EndPoint: \").append(getEndPoint()).append(\",\");\r\n    if (getProtocol() != null)\r\n        sb.append(\"Protocol: \").append(getProtocol());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.DeleteNotificationSubscriptionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.transfer.AWSTransferClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.RegexPatternSetUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAction() != null)\r\n        sb.append(\"Action: \").append(getAction()).append(\",\");\r\n    if (getRegexPatternString() != null)\r\n        sb.append(\"RegexPatternString: \").append(getRegexPatternString());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.AmazonWorkDocsClient.addResourcePermissions",
	"Comment": "creates a set of permissions for the specified folder or document. the resource permissions are overwritten ifthe principals already have different permissions.",
	"Method": "AddResourcePermissionsResult addResourcePermissions(AddResourcePermissionsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeAddResourcePermissions(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.AWSXRayClientBuilder.build",
	"Comment": "construct a synchronous implementation of awsxray using the current builder configuration.",
	"Method": "AWSXRay build(AwsSyncClientParams params){\r\n    return new AWSXRayClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.AmazonTranscribeClient.listVocabularies",
	"Comment": "returns a list of vocabularies that match the specified criteria. if no criteria are specified, returns theentire list of vocabularies.",
	"Method": "ListVocabulariesResult listVocabularies(ListVocabulariesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListVocabularies(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.translate.model.GetTerminologyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTerminologyProperties() != null)\r\n        sb.append(\"TerminologyProperties: \").append(getTerminologyProperties()).append(\",\");\r\n    if (getTerminologyDataLocation() != null)\r\n        sb.append(\"TerminologyDataLocation: \").append(getTerminologyDataLocation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.UpdateGatewaySoftwareNowResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.GetDocumentVersionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMetadata() != null)\r\n        sb.append(\"Metadata: \").append(getMetadata()).append(\",\");\r\n    if (getCustomMetadata() != null)\r\n        sb.append(\"CustomMetadata: \").append(getCustomMetadata());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.DeleteWebACLResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.DescribeCacheRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.GetLoggingConfigurationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoggingConfiguration() != null)\r\n        sb.append(\"LoggingConfiguration: \").append(getLoggingConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.DescribeSnapshotScheduleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVolumeARN() != null)\r\n        sb.append(\"VolumeARN: \").append(getVolumeARN()).append(\",\");\r\n    if (getStartAt() != null)\r\n        sb.append(\"StartAt: \").append(getStartAt()).append(\",\");\r\n    if (getRecurrenceInHours() != null)\r\n        sb.append(\"RecurrenceInHours: \").append(getRecurrenceInHours()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getTimezone() != null)\r\n        sb.append(\"Timezone: \").append(getTimezone());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.ContentManagerBuilder.setWorkDocsClient",
	"Comment": "sets the low level client used to make the service calls to amazonworkdocs. if no client is specified, a default client will be created.",
	"Method": "void setWorkDocsClient(AmazonWorkDocs workDocsClient){\r\n    this.workDocsClient = workDocsClient;\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.UpdateNFSFileShareRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFileShareARN() != null)\r\n        sb.append(\"FileShareARN: \").append(getFileShareARN()).append(\",\");\r\n    if (getKMSEncrypted() != null)\r\n        sb.append(\"KMSEncrypted: \").append(getKMSEncrypted()).append(\",\");\r\n    if (getKMSKey() != null)\r\n        sb.append(\"KMSKey: \").append(getKMSKey()).append(\",\");\r\n    if (getNFSFileShareDefaults() != null)\r\n        sb.append(\"NFSFileShareDefaults: \").append(getNFSFileShareDefaults()).append(\",\");\r\n    if (getDefaultStorageClass() != null)\r\n        sb.append(\"DefaultStorageClass: \").append(getDefaultStorageClass()).append(\",\");\r\n    if (getObjectACL() != null)\r\n        sb.append(\"ObjectACL: \").append(getObjectACL()).append(\",\");\r\n    if (getClientList() != null)\r\n        sb.append(\"ClientList: \").append(getClientList()).append(\",\");\r\n    if (getSquash() != null)\r\n        sb.append(\"Squash: \").append(getSquash()).append(\",\");\r\n    if (getReadOnly() != null)\r\n        sb.append(\"ReadOnly: \").append(getReadOnly()).append(\",\");\r\n    if (getGuessMIMETypeEnabled() != null)\r\n        sb.append(\"GuessMIMETypeEnabled: \").append(getGuessMIMETypeEnabled()).append(\",\");\r\n    if (getRequesterPays() != null)\r\n        sb.append(\"RequesterPays: \").append(getRequesterPays());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.TerminateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWorkspaceId() != null)\r\n        sb.append(\"WorkspaceId: \").append(getWorkspaceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "io.bootique.BQCoreModuleExtender.declareVar",
	"Comment": "declares a configuration variable for the given config path and given name.",
	"Method": "BQCoreModuleExtender declareVar(String configPath,String name,BQCoreModuleExtender declareVar,String configPath,String name,String description){\r\n    DeclaredVariable var = new DeclaredVariable(configPath, name, description);\r\n    contributeVariableDeclarations().addBinding().toInstance(var);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.AWSWAFClient.listGeoMatchSets",
	"Comment": "returns an array of geomatchsetsummary objects in the response.",
	"Method": "ListGeoMatchSetsResult listGeoMatchSets(ListGeoMatchSetsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListGeoMatchSets(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.RuleGroup.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRuleGroupId() != null)\r\n        sb.append(\"RuleGroupId: \").append(getRuleGroupId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getMetricName() != null)\r\n        sb.append(\"MetricName: \").append(getMetricName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.HistogramEntry.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue()).append(\",\");\r\n    if (getCount() != null)\r\n        sb.append(\"Count: \").append(getCount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.DocumentVersionMetadata.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getContentType() != null)\r\n        sb.append(\"ContentType: \").append(getContentType()).append(\",\");\r\n    if (getSize() != null)\r\n        sb.append(\"Size: \").append(getSize()).append(\",\");\r\n    if (getSignature() != null)\r\n        sb.append(\"Signature: \").append(getSignature()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getCreatedTimestamp() != null)\r\n        sb.append(\"CreatedTimestamp: \").append(getCreatedTimestamp()).append(\",\");\r\n    if (getModifiedTimestamp() != null)\r\n        sb.append(\"ModifiedTimestamp: \").append(getModifiedTimestamp()).append(\",\");\r\n    if (getContentCreatedTimestamp() != null)\r\n        sb.append(\"ContentCreatedTimestamp: \").append(getContentCreatedTimestamp()).append(\",\");\r\n    if (getContentModifiedTimestamp() != null)\r\n        sb.append(\"ContentModifiedTimestamp: \").append(getContentModifiedTimestamp()).append(\",\");\r\n    if (getCreatorId() != null)\r\n        sb.append(\"CreatorId: \").append(getCreatorId()).append(\",\");\r\n    if (getThumbnail() != null)\r\n        sb.append(\"Thumbnail: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getSource() != null)\r\n        sb.append(\"Source: \").append(\"***Sensitive Data Redacted***\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "buildcraft.lib.client.model.MutableQuad.maxLighti",
	"Comment": "sets the current light value of every vertex to be the maximum of the given in value, and the current value",
	"Method": "MutableQuad maxLighti(int block,int sky){\r\n    vertex_0.maxLighti(block, sky);\r\n    vertex_1.maxLighti(block, sky);\r\n    vertex_2.maxLighti(block, sky);\r\n    vertex_3.maxLighti(block, sky);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.SamplingStatisticsDocument.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRuleName() != null)\r\n        sb.append(\"RuleName: \").append(getRuleName()).append(\",\");\r\n    if (getClientID() != null)\r\n        sb.append(\"ClientID: \").append(getClientID()).append(\",\");\r\n    if (getTimestamp() != null)\r\n        sb.append(\"Timestamp: \").append(getTimestamp()).append(\",\");\r\n    if (getRequestCount() != null)\r\n        sb.append(\"RequestCount: \").append(getRequestCount()).append(\",\");\r\n    if (getSampledCount() != null)\r\n        sb.append(\"SampledCount: \").append(getSampledCount()).append(\",\");\r\n    if (getBorrowCount() != null)\r\n        sb.append(\"BorrowCount: \").append(getBorrowCount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.RevokeIpRulesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId()).append(\",\");\r\n    if (getUserRules() != null)\r\n        sb.append(\"UserRules: \").append(getUserRules());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.RetrieveTapeRecoveryPointRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTapeARN() != null)\r\n        sb.append(\"TapeARN: \").append(getTapeARN()).append(\",\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.ContentManagerAsync.uploadDocumentStreamAsync",
	"Comment": "asynchronously uploads stream to given folder and document name.client must close the input stream once upload operation is complete.",
	"Method": "Future<UploadDocumentStreamResult> uploadDocumentStreamAsync(UploadDocumentStreamRequest uploadDocumentStreamRequest){\r\n    Callable<UploadDocumentStreamResult> task = new Callable<UploadDocumentStreamResult>() {\r\n        public UploadDocumentStreamResult call() {\r\n            return uploadDocumentStream(uploadDocumentStreamRequest);\r\n        }\r\n    };\r\n    return executorService.submit(task);\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.ContentManagerAsync.uploadDocumentStreamAsync",
	"Comment": "asynchronously uploads stream to given folder and document name.client must close the input stream once upload operation is complete.",
	"Method": "Future<UploadDocumentStreamResult> uploadDocumentStreamAsync(UploadDocumentStreamRequest uploadDocumentStreamRequest){\r\n    return uploadDocumentStream(uploadDocumentStreamRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.ListFileSharesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getFileShareInfoList() != null)\r\n        sb.append(\"FileShareInfoList: \").append(getFileShareInfoList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.transfer.model.DescribedServer.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getIdentityProviderDetails() != null)\r\n        sb.append(\"IdentityProviderDetails: \").append(getIdentityProviderDetails()).append(\",\");\r\n    if (getIdentityProviderType() != null)\r\n        sb.append(\"IdentityProviderType: \").append(getIdentityProviderType()).append(\",\");\r\n    if (getLoggingRole() != null)\r\n        sb.append(\"LoggingRole: \").append(getLoggingRole()).append(\",\");\r\n    if (getServerId() != null)\r\n        sb.append(\"ServerId: \").append(getServerId()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getUserCount() != null)\r\n        sb.append(\"UserCount: \").append(getUserCount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.CreateRateBasedRuleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRule() != null)\r\n        sb.append(\"Rule: \").append(getRule()).append(\",\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "buildcraft.lib.script.SimpleScript.nextSimpleArg",
	"Comment": "attempts to parse the next stage as a normal argument, or returns the empty string if the end of the line hasbeen reached.",
	"Method": "String nextSimpleArg(){\r\n    String ret;\r\n    LineToken next = lines.nextToken(false);\r\n    if (next == null || !next.isValid || next.type != TokenType.SEPARATE) {\r\n        ret = \"\";\r\n    } else {\r\n        ret = next.joinLines(false);\r\n    }\r\n    return ret;\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.ListGeoMatchSetsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getGeoMatchSets() != null)\r\n        sb.append(\"GeoMatchSets: \").append(getGeoMatchSets());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.CreateStorediSCSIVolumeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVolumeARN() != null)\r\n        sb.append(\"VolumeARN: \").append(getVolumeARN()).append(\",\");\r\n    if (getVolumeSizeInBytes() != null)\r\n        sb.append(\"VolumeSizeInBytes: \").append(getVolumeSizeInBytes()).append(\",\");\r\n    if (getTargetARN() != null)\r\n        sb.append(\"TargetARN: \").append(getTargetARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.transfer.AWSTransferClient.describeUser",
	"Comment": "describes the user assigned to a specific server, as identified by its serverid property.the response from this call returns the properties of the user associated with the serverid valuethat was specified.",
	"Method": "DescribeUserResult describeUser(DescribeUserRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeUser(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.ImportWorkspaceImageRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEc2ImageId() != null)\r\n        sb.append(\"Ec2ImageId: \").append(getEc2ImageId()).append(\",\");\r\n    if (getIngestionProcess() != null)\r\n        sb.append(\"IngestionProcess: \").append(getIngestionProcess()).append(\",\");\r\n    if (getImageName() != null)\r\n        sb.append(\"ImageName: \").append(getImageName()).append(\",\");\r\n    if (getImageDescription() != null)\r\n        sb.append(\"ImageDescription: \").append(getImageDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "io.bootique.meta.config.ConfigObjectMetadata.getAllSubConfigs",
	"Comment": "returns this config plus all subconfigs that directly or indirectly inherit from this config.",
	"Method": "Stream<ConfigMetadataNode> getAllSubConfigs(){\r\n    if (subConfigs.isEmpty()) {\r\n        return Stream.of(this);\r\n    }\r\n    Stream<ConfigMetadataNode> subconfigs = subConfigs.stream().flatMap(n -> n.accept(SUB_CONFIGS_EXTRACTOR));\r\n    return Stream.concat(Stream.of(this), subconfigs);\r\n}"
}, {
	"Path": "buildcraft.lib.misc.PositionUtil.isCorner",
	"Comment": "checks to see if the given position is a corner for the box given by min and max",
	"Method": "boolean isCorner(BlockPos min,BlockPos max,BlockPos pos){\r\n    return getBoxAxisCount(min, max, pos) == 3;\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.FaultRootCauseEntity.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getExceptions() != null)\r\n        sb.append(\"Exceptions: \").append(getExceptions()).append(\",\");\r\n    if (getRemote() != null)\r\n        sb.append(\"Remote: \").append(getRemote());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.DeleteSamplingRuleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSamplingRuleRecord() != null)\r\n        sb.append(\"SamplingRuleRecord: \").append(getSamplingRuleRecord());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.UpdateRuleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.translate.model.AppliedTerminology.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getTerms() != null)\r\n        sb.append(\"Terms: \").append(getTerms());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.ListGroupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOrganizationId() != null)\r\n        sb.append(\"OrganizationId: \").append(getOrganizationId()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.OperatingSystem.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.translate.model.TerminologyData.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFile() != null)\r\n        sb.append(\"File: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getFormat() != null)\r\n        sb.append(\"Format: \").append(getFormat());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.DeleteTapeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTapeARN() != null)\r\n        sb.append(\"TapeARN: \").append(getTapeARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.GetChangeTokenResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.ListRegexMatchSetsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getRegexMatchSets() != null)\r\n        sb.append(\"RegexMatchSets: \").append(getRegexMatchSets());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.WafOverrideAction.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "buildcraft.lib.gui.IGuiElement.getDebugInfo",
	"Comment": "add debugging information to the list. note that a lot of elements will be called for this, so keep the amountof information minimal.",
	"Method": "String getDebugInfo(List<String> info){\r\n    return toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.DeleteSnapshotScheduleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVolumeARN() != null)\r\n        sb.append(\"VolumeARN: \").append(getVolumeARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.AWSStorageGatewayClient.createTapeWithBarcode",
	"Comment": "creates a virtual tape by using your own barcode. you write data to the virtual tape and then archive the tape. abarcode is unique and can not be reused if it has already been used on a tape . this applies to barcodes used ondeleted tapes. this operation is only supported in the tape gateway type.cache storage must be allocated to the gateway before you can create a virtual tape. use the addcacheoperation to add cache storage to a gateway.",
	"Method": "CreateTapeWithBarcodeResult createTapeWithBarcode(CreateTapeWithBarcodeRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateTapeWithBarcode(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.AWSStorageGatewayClient.listVolumes",
	"Comment": "lists the iscsi stored volumes of a gateway. results are sorted by volume arn. the response includes only thevolume arns. if you want additional volume information, use the describestorediscsivolumes or thedescribecachediscsivolumes api.the operation supports pagination. by default, the operation returns a maximum of up to 100 volumes. you canoptionally specify the limit field in the body to limit the number of volumes in the response. ifthe number of volumes returned in the response is truncated, the response includes a marker field. you can usethis marker value in your subsequent request to retrieve the next set of volumes. this operation is onlysupported in the cached volume and stored volume gateway types.",
	"Method": "ListVolumesResult listVolumes(ListVolumesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListVolumes(request);\r\n}"
}, {
	"Path": "cc.blynk.utils.validators.DomainValidator.getInstance",
	"Comment": "returns the singleton instance of this validator, with local validation as required.",
	"Method": "DomainValidator getInstance(DomainValidator getInstance,boolean allowLocal){\r\n    inUse = true;\r\n    if (allowLocal) {\r\n        return DOMAIN_VALIDATOR_WITH_LOCAL;\r\n    }\r\n    return DOMAIN_VALIDATOR;\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.DeleteVocabularyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.GetServiceGraphRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getEndTime() != null)\r\n        sb.append(\"EndTime: \").append(getEndTime()).append(\",\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getGroupARN() != null)\r\n        sb.append(\"GroupARN: \").append(getGroupARN()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.Transcript.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTranscriptFileUri() != null)\r\n        sb.append(\"TranscriptFileUri: \").append(getTranscriptFileUri());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.DescribeAccountResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDedicatedTenancySupport() != null)\r\n        sb.append(\"DedicatedTenancySupport: \").append(getDedicatedTenancySupport()).append(\",\");\r\n    if (getDedicatedTenancyManagementCidrRange() != null)\r\n        sb.append(\"DedicatedTenancyManagementCidrRange: \").append(getDedicatedTenancyManagementCidrRange());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.GetCurrentUserResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUser() != null)\r\n        sb.append(\"User: \").append(getUser());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.AmazonWorkspacesClient.describeWorkspaceBundles",
	"Comment": "retrieves a list that describes the available workspace bundles.you can filter the results using either bundle id or owner, but not both.",
	"Method": "DescribeWorkspaceBundlesResult describeWorkspaceBundles(DescribeWorkspaceBundlesRequest request,DescribeWorkspaceBundlesResult describeWorkspaceBundles){\r\n    return describeWorkspaceBundles(new DescribeWorkspaceBundlesRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.AmazonWorkDocsClient.initiateDocumentVersionUpload",
	"Comment": "creates a new document object and version object.the client specifies the parent folder id and name of the document to upload. the id is optionally specified whencreating a new version of an existing document. this is the first step to upload a document. next, upload thedocument to the url returned from the call, and then call updatedocumentversion.to cancel the document upload, call abortdocumentversionupload.",
	"Method": "InitiateDocumentVersionUploadResult initiateDocumentVersionUpload(InitiateDocumentVersionUploadRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeInitiateDocumentVersionUpload(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.CreateFolderResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMetadata() != null)\r\n        sb.append(\"Metadata: \").append(getMetadata());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.auth.WebIdentityFederationSessionCredentialsProvider.setRefreshThreshold",
	"Comment": "set the refresh threshold for the session credentials created by this client inseconds. this value will be used internally to determine if newcredentials should be fetched from sts.",
	"Method": "void setRefreshThreshold(int refreshThreshold){\r\n    this.refreshThreshold = refreshThreshold;\r\n}"
}, {
	"Path": "com.amazonaws.smoketest.ReflectionUtils.digIn",
	"Comment": "uses reflection to dig into a chain of objects in preparation forsetting a value somewhere within the tree. gets the value of the givenproperty of the target object and, if it is null, creates a new instanceof the appropriate type and sets it on the target object. returns thegotten or created value.",
	"Method": "Object digIn(Object target,String field){\r\n    if (target instanceof List) {\r\n        @SuppressWarnings(\"unchecked\")\r\n        List<Object> list = (List<Object>) target;\r\n        return digInList(list, field);\r\n    } else if (target instanceof Map) {\r\n        @SuppressWarnings(\"unchecked\")\r\n        Map<String, Object> map = (Map<String, Object>) target;\r\n        return digInMap(map, field);\r\n    } else {\r\n        return digInObject(target, field);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.Predicate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNegated() != null)\r\n        sb.append(\"Negated: \").append(getNegated()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getDataId() != null)\r\n        sb.append(\"DataId: \").append(getDataId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.AccountModification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getModificationState() != null)\r\n        sb.append(\"ModificationState: \").append(getModificationState()).append(\",\");\r\n    if (getDedicatedTenancySupport() != null)\r\n        sb.append(\"DedicatedTenancySupport: \").append(getDedicatedTenancySupport()).append(\",\");\r\n    if (getDedicatedTenancyManagementCidrRange() != null)\r\n        sb.append(\"DedicatedTenancyManagementCidrRange: \").append(getDedicatedTenancyManagementCidrRange()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getErrorCode() != null)\r\n        sb.append(\"ErrorCode: \").append(getErrorCode()).append(\",\");\r\n    if (getErrorMessage() != null)\r\n        sb.append(\"ErrorMessage: \").append(getErrorMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.DeleteAliasRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOrganizationId() != null)\r\n        sb.append(\"OrganizationId: \").append(getOrganizationId()).append(\",\");\r\n    if (getEntityId() != null)\r\n        sb.append(\"EntityId: \").append(getEntityId()).append(\",\");\r\n    if (getAlias() != null)\r\n        sb.append(\"Alias: \").append(getAlias());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.ByteMatchSetUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAction() != null)\r\n        sb.append(\"Action: \").append(getAction()).append(\",\");\r\n    if (getByteMatchTuple() != null)\r\n        sb.append(\"ByteMatchTuple: \").append(getByteMatchTuple());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "buildcraft.lib.misc.StackUtil.contains",
	"Comment": "checks that passed stack definition acceptable for stack collection",
	"Method": "boolean contains(ItemStack required,ItemStack container,boolean contains,ItemStack required,Collection<ItemStack> containers,boolean contains,StackDefinition stackDefinition,ItemStack stack,boolean contains,StackDefinition stackDefinition,NonNullList<ItemStack> stacks,boolean contains,IngredientStack ingredientStack,ItemStack stack,boolean contains,IngredientStack ingredientStack,NonNullList<ItemStack> stacks){\r\n    return stacks.stream().anyMatch((stack) -> contains(ingredientStack, stack));\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.DescribeWorkingStorageResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN()).append(\",\");\r\n    if (getDiskIds() != null)\r\n        sb.append(\"DiskIds: \").append(getDiskIds()).append(\",\");\r\n    if (getWorkingStorageUsedInBytes() != null)\r\n        sb.append(\"WorkingStorageUsedInBytes: \").append(getWorkingStorageUsedInBytes()).append(\",\");\r\n    if (getWorkingStorageAllocatedInBytes() != null)\r\n        sb.append(\"WorkingStorageAllocatedInBytes: \").append(getWorkingStorageAllocatedInBytes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.securitytoken.model.GetFederationTokenResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCredentials() != null)\r\n        sb.append(\"Credentials: \").append(getCredentials()).append(\",\");\r\n    if (getFederatedUser() != null)\r\n        sb.append(\"FederatedUser: \").append(getFederatedUser()).append(\",\");\r\n    if (getPackedPolicySize() != null)\r\n        sb.append(\"PackedPolicySize: \").append(getPackedPolicySize());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.DescribeSMBSettingsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN()).append(\",\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getSMBGuestPasswordSet() != null)\r\n        sb.append(\"SMBGuestPasswordSet: \").append(getSMBGuestPasswordSet());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.DescribeNotificationSubscriptionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubscriptions() != null)\r\n        sb.append(\"Subscriptions: \").append(getSubscriptions()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.ListUsersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUsers() != null)\r\n        sb.append(\"Users: \").append(getUsers()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.VTLDevice.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVTLDeviceARN() != null)\r\n        sb.append(\"VTLDeviceARN: \").append(getVTLDeviceARN()).append(\",\");\r\n    if (getVTLDeviceType() != null)\r\n        sb.append(\"VTLDeviceType: \").append(getVTLDeviceType()).append(\",\");\r\n    if (getVTLDeviceVendor() != null)\r\n        sb.append(\"VTLDeviceVendor: \").append(getVTLDeviceVendor()).append(\",\");\r\n    if (getVTLDeviceProductIdentifier() != null)\r\n        sb.append(\"VTLDeviceProductIdentifier: \").append(getVTLDeviceProductIdentifier()).append(\",\");\r\n    if (getDeviceiSCSIAttributes() != null)\r\n        sb.append(\"DeviceiSCSIAttributes: \").append(getDeviceiSCSIAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.DescribeCommentsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthenticationToken() != null)\r\n        sb.append(\"AuthenticationToken: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getDocumentId() != null)\r\n        sb.append(\"DocumentId: \").append(getDocumentId()).append(\",\");\r\n    if (getVersionId() != null)\r\n        sb.append(\"VersionId: \").append(getVersionId()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.Service.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReferenceId() != null)\r\n        sb.append(\"ReferenceId: \").append(getReferenceId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getNames() != null)\r\n        sb.append(\"Names: \").append(getNames()).append(\",\");\r\n    if (getRoot() != null)\r\n        sb.append(\"Root: \").append(getRoot()).append(\",\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getEndTime() != null)\r\n        sb.append(\"EndTime: \").append(getEndTime()).append(\",\");\r\n    if (getEdges() != null)\r\n        sb.append(\"Edges: \").append(getEdges()).append(\",\");\r\n    if (getSummaryStatistics() != null)\r\n        sb.append(\"SummaryStatistics: \").append(getSummaryStatistics()).append(\",\");\r\n    if (getDurationHistogram() != null)\r\n        sb.append(\"DurationHistogram: \").append(getDurationHistogram()).append(\",\");\r\n    if (getResponseTimeHistogram() != null)\r\n        sb.append(\"ResponseTimeHistogram: \").append(getResponseTimeHistogram());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.ResourceMetadata.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getOriginalName() != null)\r\n        sb.append(\"OriginalName: \").append(getOriginalName()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getVersionId() != null)\r\n        sb.append(\"VersionId: \").append(getVersionId()).append(\",\");\r\n    if (getOwner() != null)\r\n        sb.append(\"Owner: \").append(getOwner()).append(\",\");\r\n    if (getParentId() != null)\r\n        sb.append(\"ParentId: \").append(getParentId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.RegexMatchSet.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegexMatchSetId() != null)\r\n        sb.append(\"RegexMatchSetId: \").append(getRegexMatchSetId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getRegexMatchTuples() != null)\r\n        sb.append(\"RegexMatchTuples: \").append(getRegexMatchTuples());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.CreateTapeWithBarcodeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN()).append(\",\");\r\n    if (getTapeSizeInBytes() != null)\r\n        sb.append(\"TapeSizeInBytes: \").append(getTapeSizeInBytes()).append(\",\");\r\n    if (getTapeBarcode() != null)\r\n        sb.append(\"TapeBarcode: \").append(getTapeBarcode()).append(\",\");\r\n    if (getKMSEncrypted() != null)\r\n        sb.append(\"KMSEncrypted: \").append(getKMSEncrypted()).append(\",\");\r\n    if (getKMSKey() != null)\r\n        sb.append(\"KMSKey: \").append(getKMSKey());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.FaultRootCause.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServices() != null)\r\n        sb.append(\"Services: \").append(getServices());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.Segment.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getDocument() != null)\r\n        sb.append(\"Document: \").append(getDocument());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.transfer.model.DeleteUserRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServerId() != null)\r\n        sb.append(\"ServerId: \").append(getServerId()).append(\",\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.UpdateDocumentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthenticationToken() != null)\r\n        sb.append(\"AuthenticationToken: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getDocumentId() != null)\r\n        sb.append(\"DocumentId: \").append(getDocumentId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getParentFolderId() != null)\r\n        sb.append(\"ParentFolderId: \").append(getParentFolderId()).append(\",\");\r\n    if (getResourceState() != null)\r\n        sb.append(\"ResourceState: \").append(getResourceState());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.DeleteTapeArchiveResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTapeARN() != null)\r\n        sb.append(\"TapeARN: \").append(getTapeARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.securitytoken.AWSSecurityTokenServiceAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.AddUploadBufferResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.AWSWAFClient.deletePermissionPolicy",
	"Comment": "permanently deletes an iam policy from the specified rulegroup.the user making the request must be the owner of the rulegroup.",
	"Method": "DeletePermissionPolicyResult deletePermissionPolicy(DeletePermissionPolicyRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeletePermissionPolicy(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.translate.AmazonTranslateClient.importTerminology",
	"Comment": "creates or updates a custom terminology, depending on whether or not one already exists for the given terminologyname. importing a terminology with the same name as an existing one will merge the terminologies based on thechosen merge strategy. currently, the only supported merge strategy is overwrite, and so the imported terminologywill overwrite an existing terminology of the same name.if you import a terminology that overwrites an existing one, the new terminology take up to 10 minutes to fullypropagate and be available for use in a translation due to cache policies with the dataplane service thatperforms the translations.",
	"Method": "ImportTerminologyResult importTerminology(ImportTerminologyRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeImportTerminology(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.DescribeWorkspaceDirectoriesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDirectories() != null)\r\n        sb.append(\"Directories: \").append(getDirectories()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.transfer.model.TestIdentityProviderResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage()).append(\",\");\r\n    if (getStatusCode() != null)\r\n        sb.append(\"StatusCode: \").append(getStatusCode()).append(\",\");\r\n    if (getUrl() != null)\r\n        sb.append(\"Url: \").append(getUrl());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.AWSXRayClient.getTraceGraph",
	"Comment": "retrieves a service graph for one or more specific trace ids.",
	"Method": "GetTraceGraphResult getTraceGraph(GetTraceGraphRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetTraceGraph(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.DeleteFileShareResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFileShareARN() != null)\r\n        sb.append(\"FileShareARN: \").append(getFileShareARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.DeleteFolderRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthenticationToken() != null)\r\n        sb.append(\"AuthenticationToken: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getFolderId() != null)\r\n        sb.append(\"FolderId: \").append(getFolderId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "io.bootique.meta.config.ConfigObjectMetadata.getSubConfigs",
	"Comment": "returns subconfigs that directly inherit from this config.",
	"Method": "Collection<ConfigMetadataNode> getSubConfigs(){\r\n    return subConfigs;\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.StorageRuleType.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStorageAllocatedInBytes() != null)\r\n        sb.append(\"StorageAllocatedInBytes: \").append(getStorageAllocatedInBytes()).append(\",\");\r\n    if (getStorageType() != null)\r\n        sb.append(\"StorageType: \").append(getStorageType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.RuleSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRuleId() != null)\r\n        sb.append(\"RuleId: \").append(getRuleId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.AWSStorageGatewayAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.AddUploadBufferRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN()).append(\",\");\r\n    if (getDiskIds() != null)\r\n        sb.append(\"DiskIds: \").append(getDiskIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.transfer.model.CreateUserRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHomeDirectory() != null)\r\n        sb.append(\"HomeDirectory: \").append(getHomeDirectory()).append(\",\");\r\n    if (getPolicy() != null)\r\n        sb.append(\"Policy: \").append(getPolicy()).append(\",\");\r\n    if (getRole() != null)\r\n        sb.append(\"Role: \").append(getRole()).append(\",\");\r\n    if (getServerId() != null)\r\n        sb.append(\"ServerId: \").append(getServerId()).append(\",\");\r\n    if (getSshPublicKeyBody() != null)\r\n        sb.append(\"SshPublicKeyBody: \").append(getSshPublicKeyBody()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.UpdateRegexPatternSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.DeleteChapCredentialsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTargetARN() != null)\r\n        sb.append(\"TargetARN: \").append(getTargetARN()).append(\",\");\r\n    if (getInitiatorName() != null)\r\n        sb.append(\"InitiatorName: \").append(getInitiatorName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.User.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getUsername() != null)\r\n        sb.append(\"Username: \").append(getUsername()).append(\",\");\r\n    if (getEmailAddress() != null)\r\n        sb.append(\"EmailAddress: \").append(getEmailAddress()).append(\",\");\r\n    if (getGivenName() != null)\r\n        sb.append(\"GivenName: \").append(getGivenName()).append(\",\");\r\n    if (getSurname() != null)\r\n        sb.append(\"Surname: \").append(getSurname()).append(\",\");\r\n    if (getOrganizationId() != null)\r\n        sb.append(\"OrganizationId: \").append(getOrganizationId()).append(\",\");\r\n    if (getRootFolderId() != null)\r\n        sb.append(\"RootFolderId: \").append(getRootFolderId()).append(\",\");\r\n    if (getRecycleBinFolderId() != null)\r\n        sb.append(\"RecycleBinFolderId: \").append(getRecycleBinFolderId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getCreatedTimestamp() != null)\r\n        sb.append(\"CreatedTimestamp: \").append(getCreatedTimestamp()).append(\",\");\r\n    if (getModifiedTimestamp() != null)\r\n        sb.append(\"ModifiedTimestamp: \").append(getModifiedTimestamp()).append(\",\");\r\n    if (getTimeZoneId() != null)\r\n        sb.append(\"TimeZoneId: \").append(getTimeZoneId()).append(\",\");\r\n    if (getLocale() != null)\r\n        sb.append(\"Locale: \").append(getLocale()).append(\",\");\r\n    if (getStorage() != null)\r\n        sb.append(\"Storage: \").append(getStorage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.support.AWSSupportAsyncClient.describeCasesAsync",
	"Comment": "simplified method form for invoking the describecases operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeCasesResult> describeCasesAsync(DescribeCasesRequest request,java.util.concurrent.Future<DescribeCasesResult> describeCasesAsync,DescribeCasesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeCasesRequest, DescribeCasesResult> asyncHandler,java.util.concurrent.Future<DescribeCasesResult> describeCasesAsync,java.util.concurrent.Future<DescribeCasesResult> describeCasesAsync,com.amazonaws.handlers.AsyncHandler<DescribeCasesRequest, DescribeCasesResult> asyncHandler){\r\n    return describeCasesAsync(new DescribeCasesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.transfer.model.DeleteSshPublicKeyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.CreateSamplingRuleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSamplingRule() != null)\r\n        sb.append(\"SamplingRule: \").append(getSamplingRule());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "io.bootique.Bootique_CliOptionsIT.testCommandWithOptionNameOverlap",
	"Comment": "this test is broken, it is here just to document current behaviour.",
	"Method": "void testCommandWithOptionNameOverlap(){\r\n    BQRuntime runtime = runtimeFactory.app(\"-x\").module(b -> BQCoreModule.extend(b).addCommand(Xd1Command.class).addOption(OptionMetadata.builder(\"xd\").build())).createRuntime();\r\n    runtime.run();\r\n    assertTrue(runtime.getInstance(Cli.class).hasOption(\"xd\"));\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.RegisterToWorkMailRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOrganizationId() != null)\r\n        sb.append(\"OrganizationId: \").append(getOrganizationId()).append(\",\");\r\n    if (getEntityId() != null)\r\n        sb.append(\"EntityId: \").append(getEntityId()).append(\",\");\r\n    if (getEmail() != null)\r\n        sb.append(\"Email: \").append(getEmail());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.AWSStorageGatewayAsyncClient.removeTagsFromResourceAsync",
	"Comment": "simplified method form for invoking the removetagsfromresource operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<RemoveTagsFromResourceResult> removeTagsFromResourceAsync(RemoveTagsFromResourceRequest request,java.util.concurrent.Future<RemoveTagsFromResourceResult> removeTagsFromResourceAsync,RemoveTagsFromResourceRequest request,com.amazonaws.handlers.AsyncHandler<RemoveTagsFromResourceRequest, RemoveTagsFromResourceResult> asyncHandler,java.util.concurrent.Future<RemoveTagsFromResourceResult> removeTagsFromResourceAsync,java.util.concurrent.Future<RemoveTagsFromResourceResult> removeTagsFromResourceAsync,com.amazonaws.handlers.AsyncHandler<RemoveTagsFromResourceRequest, RemoveTagsFromResourceResult> asyncHandler){\r\n    return removeTagsFromResourceAsync(new RemoveTagsFromResourceRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.AWSStorageGatewayClient.deleteFileShare",
	"Comment": "deletes a file share from a file gateway. this operation is only supported for file gateways.",
	"Method": "DeleteFileShareResult deleteFileShare(DeleteFileShareRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteFileShare(request);\r\n}"
}, {
	"Path": "buildcraft.lib.misc.MatrixUtil.rotateTowardsFace",
	"Comment": "rotates towards the given face, assuming what you want to rotate from is west.",
	"Method": "Matrix4f rotateTowardsFace(EnumFacing face,Matrix4f rotateTowardsFace,EnumFacing from,EnumFacing to){\r\n    Matrix4f fromMatrix = new Matrix4f(rotateTowardsFace(from));\r\n    fromMatrix.invert();\r\n    Matrix4f toMatrix = rotateTowardsFace(to);\r\n    Matrix4f result = new Matrix4f(toMatrix);\r\n    result.mul(fromMatrix);\r\n    return result;\r\n}"
}, {
	"Path": "buildcraft.lib.client.model.MutableVertex.normalf",
	"Comment": "sets the current normal given the x, y, and z coordinates. these are not normalised or checked.",
	"Method": "MutableVertex normalf(float x,float y,float z){\r\n    normal_x = x;\r\n    normal_y = y;\r\n    normal_z = z;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.UpdateRegexPatternSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegexPatternSetId() != null)\r\n        sb.append(\"RegexPatternSetId: \").append(getRegexPatternSetId()).append(\",\");\r\n    if (getUpdates() != null)\r\n        sb.append(\"Updates: \").append(getUpdates()).append(\",\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "io.bootique.test.junit.BQTestRuntimeBuilder.module",
	"Comment": "adds a module generated by the provider. provider may optionally specifythat the module overrides services in some other module.",
	"Method": "T module(Class<? extends Module> moduleType,T module,Module m,T module,BQModuleProvider moduleProvider){\r\n    bootique.module(moduleProvider);\r\n    return (T) this;\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.AmazonWorkDocsClient.describeFolderContents",
	"Comment": "describes the contents of the specified folder, including its documents and subfolders.by default, amazon workdocs returns the first 100 active document and folder metadata items. if there are moreresults, the response includes a marker that you can use to request the next set of results. you can also requestinitialized documents.",
	"Method": "DescribeFolderContentsResult describeFolderContents(DescribeFolderContentsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeFolderContents(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.DescribeGroupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthenticationToken() != null)\r\n        sb.append(\"AuthenticationToken: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getSearchQuery() != null)\r\n        sb.append(\"SearchQuery: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getOrganizationId() != null)\r\n        sb.append(\"OrganizationId: \").append(getOrganizationId()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.ListTranscriptionJobsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getJobNameContains() != null)\r\n        sb.append(\"JobNameContains: \").append(getJobNameContains()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.DeleteGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getGroupARN() != null)\r\n        sb.append(\"GroupARN: \").append(getGroupARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.RuleGroupUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAction() != null)\r\n        sb.append(\"Action: \").append(getAction()).append(\",\");\r\n    if (getActivatedRule() != null)\r\n        sb.append(\"ActivatedRule: \").append(getActivatedRule());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.GetFolderRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthenticationToken() != null)\r\n        sb.append(\"AuthenticationToken: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getFolderId() != null)\r\n        sb.append(\"FolderId: \").append(getFolderId()).append(\",\");\r\n    if (getIncludeCustomMetadata() != null)\r\n        sb.append(\"IncludeCustomMetadata: \").append(getIncludeCustomMetadata());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.stepfunctions.model.StartExecutionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getExecutionArn() != null)\r\n        sb.append(\"ExecutionArn: \").append(getExecutionArn()).append(\",\");\r\n    if (getStartDate() != null)\r\n        sb.append(\"StartDate: \").append(getStartDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.AWSWAFRegionalClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.AmazonWorkDocsClient.updateFolder",
	"Comment": "updates the specified attributes of the specified folder. the user must have access to both the folder and itsparent folder, if applicable.",
	"Method": "UpdateFolderResult updateFolder(UpdateFolderRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateFolder(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.PutEncryptionConfigRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyId() != null)\r\n        sb.append(\"KeyId: \").append(getKeyId()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.AWSStorageGatewayClient.createTapes",
	"Comment": "creates one or more virtual tapes. you write data to the virtual tapes and then archive the tapes. this operationis only supported in the tape gateway type.cache storage must be allocated to the gateway before you can create virtual tapes. use the addcacheoperation to add cache storage to a gateway.",
	"Method": "CreateTapesResult createTapes(CreateTapesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateTapes(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.Media.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMediaFileUri() != null)\r\n        sb.append(\"MediaFileUri: \").append(getMediaFileUri());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.CreateWorkspacesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWorkspaces() != null)\r\n        sb.append(\"Workspaces: \").append(getWorkspaces());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.User.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getEmail() != null)\r\n        sb.append(\"Email: \").append(getEmail()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDisplayName() != null)\r\n        sb.append(\"DisplayName: \").append(getDisplayName()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getUserRole() != null)\r\n        sb.append(\"UserRole: \").append(getUserRole()).append(\",\");\r\n    if (getEnabledDate() != null)\r\n        sb.append(\"EnabledDate: \").append(getEnabledDate()).append(\",\");\r\n    if (getDisabledDate() != null)\r\n        sb.append(\"DisabledDate: \").append(getDisabledDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "io.bootique.BQModuleProvider.overrides",
	"Comment": "returns a potentially empty collection with the types of the moduleoverridden by this module.",
	"Method": "Collection<Class<? extends Module>> overrides(){\r\n    return Collections.emptyList();\r\n}"
}, {
	"Path": "com.amazonaws.services.transfer.AWSTransferClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.PutPermissionPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn()).append(\",\");\r\n    if (getPolicy() != null)\r\n        sb.append(\"Policy: \").append(getPolicy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.transfer.model.UntagResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.CreateCommentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthenticationToken() != null)\r\n        sb.append(\"AuthenticationToken: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getDocumentId() != null)\r\n        sb.append(\"DocumentId: \").append(getDocumentId()).append(\",\");\r\n    if (getVersionId() != null)\r\n        sb.append(\"VersionId: \").append(getVersionId()).append(\",\");\r\n    if (getParentId() != null)\r\n        sb.append(\"ParentId: \").append(getParentId()).append(\",\");\r\n    if (getThreadId() != null)\r\n        sb.append(\"ThreadId: \").append(getThreadId()).append(\",\");\r\n    if (getText() != null)\r\n        sb.append(\"Text: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getVisibility() != null)\r\n        sb.append(\"Visibility: \").append(getVisibility()).append(\",\");\r\n    if (getNotifyCollaborators() != null)\r\n        sb.append(\"NotifyCollaborators: \").append(getNotifyCollaborators());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.transfer.model.DescribedUser.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getHomeDirectory() != null)\r\n        sb.append(\"HomeDirectory: \").append(getHomeDirectory()).append(\",\");\r\n    if (getPolicy() != null)\r\n        sb.append(\"Policy: \").append(getPolicy()).append(\",\");\r\n    if (getRole() != null)\r\n        sb.append(\"Role: \").append(getRole()).append(\",\");\r\n    if (getSshPublicKeys() != null)\r\n        sb.append(\"SshPublicKeys: \").append(getSshPublicKeys()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.ResetPasswordRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOrganizationId() != null)\r\n        sb.append(\"OrganizationId: \").append(getOrganizationId()).append(\",\");\r\n    if (getUserId() != null)\r\n        sb.append(\"UserId: \").append(getUserId()).append(\",\");\r\n    if (getPassword() != null)\r\n        sb.append(\"Password: \").append(\"***Sensitive Data Redacted***\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.UpdateByteMatchSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.ListTranscriptionJobsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getTranscriptionJobSummaries() != null)\r\n        sb.append(\"TranscriptionJobSummaries: \").append(getTranscriptionJobSummaries());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "buildcraft.lib.BCLibConfig.refreshConfigs",
	"Comment": "resets cached values across various bclib classes that rely on these config options.",
	"Method": "void refreshConfigs(){\r\n    for (Runnable r : configChangeListeners) {\r\n        r.run();\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.SampledHTTPRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRequest() != null)\r\n        sb.append(\"Request: \").append(getRequest()).append(\",\");\r\n    if (getWeight() != null)\r\n        sb.append(\"Weight: \").append(getWeight()).append(\",\");\r\n    if (getTimestamp() != null)\r\n        sb.append(\"Timestamp: \").append(getTimestamp()).append(\",\");\r\n    if (getAction() != null)\r\n        sb.append(\"Action: \").append(getAction()).append(\",\");\r\n    if (getRuleWithinRuleGroup() != null)\r\n        sb.append(\"RuleWithinRuleGroup: \").append(getRuleWithinRuleGroup());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.AmazonWorkspacesClient.createWorkspaces",
	"Comment": "creates one or more workspaces.this operation is asynchronous and returns before the workspaces are created.",
	"Method": "CreateWorkspacesResult createWorkspaces(CreateWorkspacesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateWorkspaces(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.support.AWSSupportClient.addCommunicationToCase",
	"Comment": "adds additional customer communication to an aws support case. you use the caseid value to identifythe case to add communication to. you can list a set of email addresses to copy on the communication using theccemailaddresses value. the communicationbody value contains the text of thecommunication.the response indicates the success or failure of the request.this operation implements a subset of the features of the aws support center.",
	"Method": "AddCommunicationToCaseResult addCommunicationToCase(AddCommunicationToCaseRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeAddCommunicationToCase(request);\r\n}"
}, {
	"Path": "buildcraft.lib.misc.CapUtil.getCapability",
	"Comment": "attempts to fetch the given capability from the given provider, or returns null if either of those two are",
	"Method": "T getCapability(ICapabilityProvider provider,Capability<T> capability,EnumFacing facing){\r\n    if (provider == null || capability == null) {\r\n        return null;\r\n    }\r\n    return provider.getCapability(capability, facing);\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.UpdateByteMatchSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getByteMatchSetId() != null)\r\n        sb.append(\"ByteMatchSetId: \").append(getByteMatchSetId()).append(\",\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken()).append(\",\");\r\n    if (getUpdates() != null)\r\n        sb.append(\"Updates: \").append(getUpdates());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.ListResourcesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOrganizationId() != null)\r\n        sb.append(\"OrganizationId: \").append(getOrganizationId()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.SizeConstraintSet.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSizeConstraintSetId() != null)\r\n        sb.append(\"SizeConstraintSetId: \").append(getSizeConstraintSetId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getSizeConstraints() != null)\r\n        sb.append(\"SizeConstraints: \").append(getSizeConstraints());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.DeleteUserRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOrganizationId() != null)\r\n        sb.append(\"OrganizationId: \").append(getOrganizationId()).append(\",\");\r\n    if (getUserId() != null)\r\n        sb.append(\"UserId: \").append(getUserId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.DescribeActivitiesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserActivities() != null)\r\n        sb.append(\"UserActivities: \").append(getUserActivities()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.ListRulesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.UpdateDocumentVersionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "buildcraft.lib.misc.MessageUtil.writeBlockState",
	"Comment": "writes a block state using the block id and its metadata. not suitable for full states.",
	"Method": "void writeBlockState(PacketBuffer buf,IBlockState state){\r\n    Block block = state.getBlock();\r\n    buf.writeVarInt(Block.REGISTRY.getIDForObject(block));\r\n    int meta = block.getMetaFromState(state);\r\n    buf.writeByte(meta);\r\n    IBlockState readState = block.getStateFromMeta(meta);\r\n    if (readState != state) {\r\n        buf.writeBoolean(true);\r\n        Map<IProperty, Comparable<?>> differingProperties = new HashMap();\r\n        for (IProperty<?> property : state.getPropertyKeys()) {\r\n            Comparable<?> inputValue = state.getValue(property);\r\n            Comparable<?> readValue = readState.getValue(property);\r\n            if (!inputValue.equals(readValue)) {\r\n                differingProperties.put(property, inputValue);\r\n            }\r\n        }\r\n        buf.writeByte(differingProperties.size());\r\n        for (Entry<IProperty, Comparable<?>> entry : differingProperties.entrySet()) {\r\n            buf.writeString(entry.getKey().getName());\r\n            buf.writeString(entry.getKey().getName(entry.getValue()));\r\n        }\r\n    } else {\r\n        buf.writeBoolean(false);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.ServiceId.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getNames() != null)\r\n        sb.append(\"Names: \").append(getNames()).append(\",\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.DescribeDocumentVersionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDocumentVersions() != null)\r\n        sb.append(\"DocumentVersions: \").append(getDocumentVersions()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "io.bootique.meta.module.ModulesMetadata.getModules",
	"Comment": "returns a collection of metadata objects, one for each di module.",
	"Method": "Collection<ModuleMetadata> getModules(){\r\n    return modules;\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.AWSStorageGatewayAsyncClient.listTagsForResourceAsync",
	"Comment": "simplified method form for invoking the listtagsforresource operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListTagsForResourceResult> listTagsForResourceAsync(ListTagsForResourceRequest request,java.util.concurrent.Future<ListTagsForResourceResult> listTagsForResourceAsync,ListTagsForResourceRequest request,com.amazonaws.handlers.AsyncHandler<ListTagsForResourceRequest, ListTagsForResourceResult> asyncHandler,java.util.concurrent.Future<ListTagsForResourceResult> listTagsForResourceAsync,java.util.concurrent.Future<ListTagsForResourceResult> listTagsForResourceAsync,com.amazonaws.handlers.AsyncHandler<ListTagsForResourceRequest, ListTagsForResourceResult> asyncHandler){\r\n    return listTagsForResourceAsync(new ListTagsForResourceRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.RebuildWorkspacesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFailedRequests() != null)\r\n        sb.append(\"FailedRequests: \").append(getFailedRequests());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.ActivatedRule.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPriority() != null)\r\n        sb.append(\"Priority: \").append(getPriority()).append(\",\");\r\n    if (getRuleId() != null)\r\n        sb.append(\"RuleId: \").append(getRuleId()).append(\",\");\r\n    if (getAction() != null)\r\n        sb.append(\"Action: \").append(getAction()).append(\",\");\r\n    if (getOverrideAction() != null)\r\n        sb.append(\"OverrideAction: \").append(getOverrideAction()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.auth.STSSessionCredentials.getImmutableCredentials",
	"Comment": "returns immutable session credentials for this session, beginning a new one if necessary.",
	"Method": "AWSSessionCredentials getImmutableCredentials(){\r\n    Credentials creds = getSessionCredentials();\r\n    return new BasicSessionCredentials(creds.getAccessKeyId(), creds.getSecretAccessKey(), creds.getSessionToken());\r\n}"
}, {
	"Path": "com.amazonaws.services.translate.AmazonTranslateAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazontranslateasync using the current builder configuration.",
	"Method": "AmazonTranslateAsync build(AwsAsyncClientParams params){\r\n    return new AmazonTranslateAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.GetRegexPatternSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegexPatternSet() != null)\r\n        sb.append(\"RegexPatternSet: \").append(getRegexPatternSet());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.support.AbstractAWSSupportAsync.describeCasesAsync",
	"Comment": "simplified method form for invoking the describecases operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeCasesResult> describeCasesAsync(DescribeCasesRequest request,java.util.concurrent.Future<DescribeCasesResult> describeCasesAsync,DescribeCasesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeCasesRequest, DescribeCasesResult> asyncHandler,java.util.concurrent.Future<DescribeCasesResult> describeCasesAsync,java.util.concurrent.Future<DescribeCasesResult> describeCasesAsync,com.amazonaws.handlers.AsyncHandler<DescribeCasesRequest, DescribeCasesResult> asyncHandler){\r\n    return describeCasesAsync(new DescribeCasesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.GetSampledRequestsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSampledRequests() != null)\r\n        sb.append(\"SampledRequests: \").append(getSampledRequests()).append(\",\");\r\n    if (getPopulationSize() != null)\r\n        sb.append(\"PopulationSize: \").append(getPopulationSize()).append(\",\");\r\n    if (getTimeWindow() != null)\r\n        sb.append(\"TimeWindow: \").append(getTimeWindow());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.Tag.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.securitytoken.AbstractAWSSecurityTokenServiceAsync.getSessionTokenAsync",
	"Comment": "simplified method form for invoking the getsessiontoken operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<GetSessionTokenResult> getSessionTokenAsync(GetSessionTokenRequest request,java.util.concurrent.Future<GetSessionTokenResult> getSessionTokenAsync,GetSessionTokenRequest request,com.amazonaws.handlers.AsyncHandler<GetSessionTokenRequest, GetSessionTokenResult> asyncHandler,java.util.concurrent.Future<GetSessionTokenResult> getSessionTokenAsync,java.util.concurrent.Future<GetSessionTokenResult> getSessionTokenAsync,com.amazonaws.handlers.AsyncHandler<GetSessionTokenRequest, GetSessionTokenResult> asyncHandler){\r\n    return getSessionTokenAsync(new GetSessionTokenRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.support.AWSSupportAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.transfer.model.SshPublicKey.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDateImported() != null)\r\n        sb.append(\"DateImported: \").append(getDateImported()).append(\",\");\r\n    if (getSshPublicKeyBody() != null)\r\n        sb.append(\"SshPublicKeyBody: \").append(getSshPublicKeyBody()).append(\",\");\r\n    if (getSshPublicKeyId() != null)\r\n        sb.append(\"SshPublicKeyId: \").append(getSshPublicKeyId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "io.bootique.command.CommandRefWithArgs.commandRef",
	"Comment": "starts building an invocation with a command of a known type.",
	"Method": "NoArgsBuilder commandRef(Command command){\r\n    return new NoArgsBuilder(command);\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.AWSWAFRegionalClient.getGeoMatchSet",
	"Comment": "returns the geomatchset that is specified by geomatchsetid.",
	"Method": "GetGeoMatchSetResult getGeoMatchSet(GetGeoMatchSetRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetGeoMatchSet(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.AmazonWorkspacesAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazonworkspacesasync using the current builder configuration.",
	"Method": "AmazonWorkspacesAsync build(AwsAsyncClientParams params){\r\n    return new AmazonWorkspacesAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.SamplingRuleUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRuleName() != null)\r\n        sb.append(\"RuleName: \").append(getRuleName()).append(\",\");\r\n    if (getRuleARN() != null)\r\n        sb.append(\"RuleARN: \").append(getRuleARN()).append(\",\");\r\n    if (getResourceARN() != null)\r\n        sb.append(\"ResourceARN: \").append(getResourceARN()).append(\",\");\r\n    if (getPriority() != null)\r\n        sb.append(\"Priority: \").append(getPriority()).append(\",\");\r\n    if (getFixedRate() != null)\r\n        sb.append(\"FixedRate: \").append(getFixedRate()).append(\",\");\r\n    if (getReservoirSize() != null)\r\n        sb.append(\"ReservoirSize: \").append(getReservoirSize()).append(\",\");\r\n    if (getHost() != null)\r\n        sb.append(\"Host: \").append(getHost()).append(\",\");\r\n    if (getServiceName() != null)\r\n        sb.append(\"ServiceName: \").append(getServiceName()).append(\",\");\r\n    if (getServiceType() != null)\r\n        sb.append(\"ServiceType: \").append(getServiceType()).append(\",\");\r\n    if (getHTTPMethod() != null)\r\n        sb.append(\"HTTPMethod: \").append(getHTTPMethod()).append(\",\");\r\n    if (getURLPath() != null)\r\n        sb.append(\"URLPath: \").append(getURLPath()).append(\",\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.UpdateUserResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUser() != null)\r\n        sb.append(\"User: \").append(getUser());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.CreateIpGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getGroupDesc() != null)\r\n        sb.append(\"GroupDesc: \").append(getGroupDesc()).append(\",\");\r\n    if (getUserRules() != null)\r\n        sb.append(\"UserRules: \").append(getUserRules());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.support.model.DescribeTrustedAdvisorCheckSummariesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSummaries() != null)\r\n        sb.append(\"Summaries: \").append(getSummaries());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.WebACLSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWebACLId() != null)\r\n        sb.append(\"WebACLId: \").append(getWebACLId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.ModifyWorkspacePropertiesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.UpdateSMBFileShareResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFileShareARN() != null)\r\n        sb.append(\"FileShareARN: \").append(getFileShareARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "buildcraft.lib.gui.elem.ScrollbarElement.onMouseDragged",
	"Comment": "this is called even if the mouse is not inside your width and height!",
	"Method": "void onMouseDragged(int button,long ticksSinceClick){\r\n    if (isClicking && button == 0) {\r\n        updatePositionFromMouse();\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.UploadMetadata.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUploadUrl() != null)\r\n        sb.append(\"UploadUrl: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getSignedHeaders() != null)\r\n        sb.append(\"SignedHeaders: \").append(getSignedHeaders());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.DeleteWorkspaceImageResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.DescribeGatewayInformationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN()).append(\",\");\r\n    if (getGatewayId() != null)\r\n        sb.append(\"GatewayId: \").append(getGatewayId()).append(\",\");\r\n    if (getGatewayName() != null)\r\n        sb.append(\"GatewayName: \").append(getGatewayName()).append(\",\");\r\n    if (getGatewayTimezone() != null)\r\n        sb.append(\"GatewayTimezone: \").append(getGatewayTimezone()).append(\",\");\r\n    if (getGatewayState() != null)\r\n        sb.append(\"GatewayState: \").append(getGatewayState()).append(\",\");\r\n    if (getGatewayNetworkInterfaces() != null)\r\n        sb.append(\"GatewayNetworkInterfaces: \").append(getGatewayNetworkInterfaces()).append(\",\");\r\n    if (getGatewayType() != null)\r\n        sb.append(\"GatewayType: \").append(getGatewayType()).append(\",\");\r\n    if (getNextUpdateAvailabilityDate() != null)\r\n        sb.append(\"NextUpdateAvailabilityDate: \").append(getNextUpdateAvailabilityDate()).append(\",\");\r\n    if (getLastSoftwareUpdate() != null)\r\n        sb.append(\"LastSoftwareUpdate: \").append(getLastSoftwareUpdate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "io.bootique.Bootique_CliOptionsIT.testOverlappingOptions_Short",
	"Comment": "jopt should detect conflicting options and throw an exception. instead jopts triggers second option.",
	"Method": "void testOverlappingOptions_Short(){\r\n    BQRuntime runtime = runtimeFactory.app(\"-o\").module(b -> BQCoreModule.extend(b).addOptions(OptionMetadata.builder(\"o1\").build(), OptionMetadata.builder(\"o2\").build())).createRuntime();\r\n    runtime.getInstance(Cli.class);\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.UpdateMaintenanceStartTimeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN()).append(\",\");\r\n    if (getHourOfDay() != null)\r\n        sb.append(\"HourOfDay: \").append(getHourOfDay()).append(\",\");\r\n    if (getMinuteOfHour() != null)\r\n        sb.append(\"MinuteOfHour: \").append(getMinuteOfHour()).append(\",\");\r\n    if (getDayOfWeek() != null)\r\n        sb.append(\"DayOfWeek: \").append(getDayOfWeek());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.TapeInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTapeARN() != null)\r\n        sb.append(\"TapeARN: \").append(getTapeARN()).append(\",\");\r\n    if (getTapeBarcode() != null)\r\n        sb.append(\"TapeBarcode: \").append(getTapeBarcode()).append(\",\");\r\n    if (getTapeSizeInBytes() != null)\r\n        sb.append(\"TapeSizeInBytes: \").append(getTapeSizeInBytes()).append(\",\");\r\n    if (getTapeStatus() != null)\r\n        sb.append(\"TapeStatus: \").append(getTapeStatus()).append(\",\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.transfer.model.DeleteUserResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.RemoveAllResourcePermissionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthenticationToken() != null)\r\n        sb.append(\"AuthenticationToken: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.securitytoken.model.GetSessionTokenRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDurationSeconds() != null)\r\n        sb.append(\"DurationSeconds: \").append(getDurationSeconds()).append(\",\");\r\n    if (getSerialNumber() != null)\r\n        sb.append(\"SerialNumber: \").append(getSerialNumber()).append(\",\");\r\n    if (getTokenCode() != null)\r\n        sb.append(\"TokenCode: \").append(getTokenCode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.xray.model.GetEncryptionConfigRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "buildcraft.lib.net.cache.BuildCraftObjectCaches.onClientJoinServer",
	"Comment": "called by buildcraftlib on the client side whenever it joins a server.",
	"Method": "void onClientJoinServer(){\r\n    for (NetworkedObjectCache<?> cache : CACHES) {\r\n        cache.onClientJoinServer();\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.stepfunctions.model.TaskStartFailedEventDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getResource() != null)\r\n        sb.append(\"Resource: \").append(getResource()).append(\",\");\r\n    if (getError() != null)\r\n        sb.append(\"Error: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getCause() != null)\r\n        sb.append(\"Cause: \").append(\"***Sensitive Data Redacted***\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "io.bootique.help.ConsoleAppender.withOffset",
	"Comment": "creates and returns a new appender with the specified base offset.",
	"Method": "ConsoleAppender withOffset(int offset,ConsoleAppender withOffset,String offset){\r\n    ConsoleAppender offsetAppender = new ConsoleAppender(this);\r\n    offsetAppender.offset = offsetAppender.offset + Objects.requireNonNull(offset);\r\n    return offsetAppender;\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.DeleteBandwidthRateLimitResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayARN() != null)\r\n        sb.append(\"GatewayARN: \").append(getGatewayARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.securitytoken.AWSSecurityTokenServiceClientBuilder.build",
	"Comment": "construct a synchronous implementation of awssecuritytokenservice using the current builder configuration.",
	"Method": "AWSSecurityTokenService build(AwsSyncClientParams params){\r\n    return new AWSSecurityTokenServiceClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.workmail.model.ListAliasesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOrganizationId() != null)\r\n        sb.append(\"OrganizationId: \").append(getOrganizationId()).append(\",\");\r\n    if (getEntityId() != null)\r\n        sb.append(\"EntityId: \").append(getEntityId()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.RebuildWorkspacesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRebuildWorkspaceRequests() != null)\r\n        sb.append(\"RebuildWorkspaceRequests: \").append(getRebuildWorkspaceRequests());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.stepfunctions.model.StateExitedEventDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getOutput() != null)\r\n        sb.append(\"Output: \").append(\"***Sensitive Data Redacted***\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.jmespath.JmesPathContainsFunction.doesStringContain",
	"Comment": "if the provided subject is a string, this function returnstrue if the string contains the provided search argument.",
	"Method": "BooleanNode doesStringContain(JsonNode subject,JsonNode search){\r\n    if (subject.asText().contains(search.asText())) {\r\n        return BooleanNode.TRUE;\r\n    }\r\n    return BooleanNode.FALSE;\r\n}"
}, {
	"Path": "com.amazonaws.services.workdocs.model.DeleteFolderContentsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.auth.WebIdentityFederationSessionCredentialsProvider.needsNewSession",
	"Comment": "returns true if a new sts session needs to be started. a new sts sessionis needed when no session has been started yet, or if the last session iswithin the configured refresh threshold.",
	"Method": "boolean needsNewSession(){\r\n    if (sessionCredentials == null)\r\n        return true;\r\n    long timeRemaining = sessionCredentialsExpiration.getTime() - System.currentTimeMillis();\r\n    return timeRemaining < (this.refreshThreshold * 1000);\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.RegexPatternSetSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegexPatternSetId() != null)\r\n        sb.append(\"RegexPatternSetId: \").append(getRegexPatternSetId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "cc.blynk.utils.validators.EmailValidator.isValidUser",
	"Comment": "returns true if the user component of an email address is valid.",
	"Method": "boolean isValidUser(String user){\r\n    return !(user == null || user.length() > MAX_USERNAME_LEN) && USER_PATTERN.matcher(user).matches();\r\n}"
}, {
	"Path": "com.amazonaws.services.support.model.DescribeServicesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServiceCodeList() != null)\r\n        sb.append(\"ServiceCodeList: \").append(getServiceCodeList()).append(\",\");\r\n    if (getLanguage() != null)\r\n        sb.append(\"Language: \").append(getLanguage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "cc.blynk.cli.MissingOptionException.createMessage",
	"Comment": "build the exception message from the specified list of options.",
	"Method": "String createMessage(List<?> missingOptions){\r\n    StringBuilder buf = new StringBuilder(\"Missing required option\");\r\n    buf.append(missingOptions.size() == 1 ? \"\" : \"s\");\r\n    buf.append(\": \");\r\n    Iterator<?> it = missingOptions.iterator();\r\n    while (it.hasNext()) {\r\n        buf.append(it.next());\r\n        if (it.hasNext()) {\r\n            buf.append(\", \");\r\n        }\r\n    }\r\n    return buf.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.transfer.model.ImportSshPublicKeyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServerId() != null)\r\n        sb.append(\"ServerId: \").append(getServerId()).append(\",\");\r\n    if (getSshPublicKeyId() != null)\r\n        sb.append(\"SshPublicKeyId: \").append(getSshPublicKeyId()).append(\",\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.workspaces.model.RebootWorkspacesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRebootWorkspaceRequests() != null)\r\n        sb.append(\"RebootWorkspaceRequests: \").append(getRebootWorkspaceRequests());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.VolumeRecoveryPointInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVolumeARN() != null)\r\n        sb.append(\"VolumeARN: \").append(getVolumeARN()).append(\",\");\r\n    if (getVolumeSizeInBytes() != null)\r\n        sb.append(\"VolumeSizeInBytes: \").append(getVolumeSizeInBytes()).append(\",\");\r\n    if (getVolumeUsageInBytes() != null)\r\n        sb.append(\"VolumeUsageInBytes: \").append(getVolumeUsageInBytes()).append(\",\");\r\n    if (getVolumeRecoveryPointTime() != null)\r\n        sb.append(\"VolumeRecoveryPointTime: \").append(getVolumeRecoveryPointTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.translate.AmazonTranslateClient.listTerminologies",
	"Comment": "provides a list of custom terminologies associated with your account.",
	"Method": "ListTerminologiesResult listTerminologies(ListTerminologiesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListTerminologies(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.support.AbstractAWSSupportAsync.describeSeverityLevelsAsync",
	"Comment": "simplified method form for invoking the describeseveritylevels operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeSeverityLevelsResult> describeSeverityLevelsAsync(DescribeSeverityLevelsRequest request,java.util.concurrent.Future<DescribeSeverityLevelsResult> describeSeverityLevelsAsync,DescribeSeverityLevelsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeSeverityLevelsRequest, DescribeSeverityLevelsResult> asyncHandler,java.util.concurrent.Future<DescribeSeverityLevelsResult> describeSeverityLevelsAsync,java.util.concurrent.Future<DescribeSeverityLevelsResult> describeSeverityLevelsAsync,com.amazonaws.handlers.AsyncHandler<DescribeSeverityLevelsRequest, DescribeSeverityLevelsResult> asyncHandler){\r\n    return describeSeverityLevelsAsync(new DescribeSeverityLevelsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.waf.model.CreateRateBasedRuleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getMetricName() != null)\r\n        sb.append(\"MetricName: \").append(getMetricName()).append(\",\");\r\n    if (getRateKey() != null)\r\n        sb.append(\"RateKey: \").append(getRateKey()).append(\",\");\r\n    if (getRateLimit() != null)\r\n        sb.append(\"RateLimit: \").append(getRateLimit()).append(\",\");\r\n    if (getChangeToken() != null)\r\n        sb.append(\"ChangeToken: \").append(getChangeToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.model.DescribeChapCredentialsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTargetARN() != null)\r\n        sb.append(\"TargetARN: \").append(getTargetARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "io.bootique.BQCoreModuleExtender.addOptions",
	"Comment": "adds zero or more new options to the list of bootique cli options.",
	"Method": "BQCoreModuleExtender addOptions(OptionMetadata options){\r\n    if (options != null) {\r\n        asList(options).forEach(this::addOption);\r\n    }\r\n    return this;\r\n}"
}, {
	"Path": "cc.blynk.cli.DefaultParser.updateRequiredOptions",
	"Comment": "removes the option or its group from the list of expected elements.",
	"Method": "void updateRequiredOptions(Option option){\r\n    if (option.isRequired()) {\r\n        expectedOpts.remove(option.getKey());\r\n    }\r\n    if (options.getOptionGroup(option) != null) {\r\n        OptionGroup group = options.getOptionGroup(option);\r\n        if (group.isRequired()) {\r\n            expectedOpts.remove(group);\r\n        }\r\n        group.setSelected(option);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.storagegateway.AWSStorageGatewayClient.listVolumeRecoveryPoints",
	"Comment": "lists the recovery points for a specified gateway. this operation is only supported in the cached volume gatewaytype.each cache volume has one recovery point. a volume recovery point is a point in time at which all data of thevolume is consistent and from which you can create a snapshot or clone a new cached volume from a source volume.to create a snapshot from a volume recovery point use the createsnapshotfromvolumerecoverypoint operation.",
	"Method": "ListVolumeRecoveryPointsResult listVolumeRecoveryPoints(ListVolumeRecoveryPointsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListVolumeRecoveryPoints(request);\r\n}"
}]