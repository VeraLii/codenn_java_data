[{
	"Path": "com.amazonaws.services.pinpoint.model.EndpointLocation.setLatitude",
	"Comment": "the latitude of the endpoint location, rounded to one decimal place.",
	"Method": "void setLatitude(Double latitude){\r\n    this.latitude = latitude;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketCrossOriginConfigurationRequest.getCrossOriginConfiguration",
	"Comment": "gets the new cross origin configuration for the specified bucket.",
	"Method": "BucketCrossOriginConfiguration getCrossOriginConfiguration(){\r\n    return crossOriginConfiguration;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.updateConfigurationSetTrackingOptionsAsync",
	"Comment": "modifies an association between a configuration set and a custom domainfor open and click event tracking.by default, images and links used for tracking open and click events arehosted on domains operated by amazon ses. you can configure a subdomainof your own to handle these events. for information about using customdomains, see the amazon ses developer guide.",
	"Method": "Future<UpdateConfigurationSetTrackingOptionsResult> updateConfigurationSetTrackingOptionsAsync(UpdateConfigurationSetTrackingOptionsRequest updateConfigurationSetTrackingOptionsRequest,Future<UpdateConfigurationSetTrackingOptionsResult> updateConfigurationSetTrackingOptionsAsync,UpdateConfigurationSetTrackingOptionsRequest updateConfigurationSetTrackingOptionsRequest,AsyncHandler<UpdateConfigurationSetTrackingOptionsRequest, UpdateConfigurationSetTrackingOptionsResult> asyncHandler){\r\n    return executorService.submit(new Callable<UpdateConfigurationSetTrackingOptionsResult>() {\r\n        public UpdateConfigurationSetTrackingOptionsResult call() throws Exception {\r\n            UpdateConfigurationSetTrackingOptionsResult result = null;\r\n            try {\r\n                result = updateConfigurationSetTrackingOptions(updateConfigurationSetTrackingOptionsRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(updateConfigurationSetTrackingOptionsRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.updateConfigurationSetTrackingOptionsAsync",
	"Comment": "modifies an association between a configuration set and a custom domainfor open and click event tracking.by default, images and links used for tracking open and click events arehosted on domains operated by amazon ses. you can configure a subdomainof your own to handle these events. for information about using customdomains, see the amazon ses developer guide.",
	"Method": "Future<UpdateConfigurationSetTrackingOptionsResult> updateConfigurationSetTrackingOptionsAsync(UpdateConfigurationSetTrackingOptionsRequest updateConfigurationSetTrackingOptionsRequest,Future<UpdateConfigurationSetTrackingOptionsResult> updateConfigurationSetTrackingOptionsAsync,UpdateConfigurationSetTrackingOptionsRequest updateConfigurationSetTrackingOptionsRequest,AsyncHandler<UpdateConfigurationSetTrackingOptionsRequest, UpdateConfigurationSetTrackingOptionsResult> asyncHandler){\r\n    UpdateConfigurationSetTrackingOptionsResult result = null;\r\n    try {\r\n        result = updateConfigurationSetTrackingOptions(updateConfigurationSetTrackingOptionsRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(updateConfigurationSetTrackingOptionsRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.UpdateConfigurationSetSendingEnabledRequest.setEnabled",
	"Comment": "describes whether email sending is enabled or disabled for theconfiguration set.",
	"Method": "void setEnabled(Boolean enabled){\r\n    this.enabled = enabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointBatchRequest.withItem",
	"Comment": "list of items to update. maximum 100 itemsreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointBatchRequest withItem(EndpointBatchItem item,EndpointBatchRequest withItem,java.util.Collection<EndpointBatchItem> item){\r\n    setItem(item);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideoarchivedmedia.model.Fragment.withProducerTimestamp",
	"Comment": "the time stamp from the producer corresponding to the fragment.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Fragment withProducerTimestamp(java.util.Date producerTimestamp){\r\n    this.producerTimestamp = producerTimestamp;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DefaultMessage.getBody",
	"Comment": "the message body of the notification, the email body or the text message.",
	"Method": "String getBody(){\r\n    return body;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.SearchFacesByImageResult.setSearchedFaceBoundingBox",
	"Comment": "the bounding box around the face in the input image that amazonrekognition used for the search.",
	"Method": "void setSearchedFaceBoundingBox(BoundingBox searchedFaceBoundingBox){\r\n    this.searchedFaceBoundingBox = searchedFaceBoundingBox;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.GetIdentityVerificationAttributesResult.clearVerificationAttributesEntries",
	"Comment": "removes all the entries added into verificationattributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetIdentityVerificationAttributesResult clearVerificationAttributesEntries(){\r\n    this.verificationAttributes = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSVoipChannelRequest.withBundleId",
	"Comment": "the bundle id used for apns tokens.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSVoipChannelRequest withBundleId(String bundleId){\r\n    this.bundleId = bundleId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ReceiptRule.setScanEnabled",
	"Comment": "if true, then messages that this receipt rule applies to arescanned for spam and viruses. the default value is false.",
	"Method": "void setScanEnabled(Boolean scanEnabled){\r\n    this.scanEnabled = scanEnabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EmailChannelResponse.setApplicationId",
	"Comment": "the unique id of the application to which the email channel belongs.",
	"Method": "void setApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.TranscriptionJob.withSettings",
	"Comment": "optional settings for the transcription job. use these settings to turnon speaker recognition, to set the maximum number of speakers that shouldbe identified and to specify a custom vocabulary to use when processingthe transcription job.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "TranscriptionJob withSettings(Settings settings){\r\n    this.settings = settings;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.GenerateDataKeyWithoutPlaintextRequest.withGrantTokens",
	"Comment": "a list of grant tokens.for more information, see grant tokens in the aws key management service developerguide.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GenerateDataKeyWithoutPlaintextRequest withGrantTokens(String grantTokens,GenerateDataKeyWithoutPlaintextRequest withGrantTokens,java.util.Collection<String> grantTokens){\r\n    setGrantTokens(grantTokens);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.lexrts.model.PostTextResult.clearslotsEntries",
	"Comment": "removes all the entries added into slots.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PostTextResult clearslotsEntries(){\r\n    this.slots = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ConfirmSubscriptionRequest.getAuthenticateOnUnsubscribe",
	"Comment": "disallows unauthenticated unsubscribes of the subscription. if the valueof this parameter is true and the request has an awssignature, then only the topic owner and the subscription owner canunsubscribe the endpoint. the unsubscribe action requires awsauthentication.",
	"Method": "String getAuthenticateOnUnsubscribe(){\r\n    return authenticateOnUnsubscribe;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ExportJobResponse.withCompletedPieces",
	"Comment": "the number of pieces that have successfully completed as of the time ofthe request.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ExportJobResponse withCompletedPieces(Integer completedPieces){\r\n    this.completedPieces = completedPieces;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetPersonTrackingResult.getStatusMessage",
	"Comment": "if the job fails, statusmessage provides a descriptive errormessage.",
	"Method": "String getStatusMessage(){\r\n    return statusMessage;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DefaultMessage.withSubstitutions",
	"Comment": "default message substitutions. can be overridden by individual addresssubstitutions.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DefaultMessage withSubstitutions(java.util.Map<String, java.util.List<String>> substitutions){\r\n    this.substitutions = substitutions;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.auth.policy.conditions.S3ConditionFactory.newCannedACLCondition",
	"Comment": "constructs a new access policy condition that compares an amazon s3canned acl with the canned acl specified by an incoming request.you can use this condition to ensure that any objects uploaded to anamazon s3 bucket have a specific canned acl set.",
	"Method": "Condition newCannedACLCondition(CannedAccessControlList cannedAcl){\r\n    return new StringCondition(StringComparisonType.StringEquals, CANNED_ACL_CONDITION_KEY, cannedAcl.toString());\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.StreamDescription.withEnhancedMonitoring",
	"Comment": "represents the current enhanced monitoring settings of the stream.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "StreamDescription withEnhancedMonitoring(EnhancedMetrics enhancedMonitoring,StreamDescription withEnhancedMonitoring,java.util.Collection<EnhancedMetrics> enhancedMonitoring){\r\n    setEnhancedMonitoring(enhancedMonitoring);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.model.GetDataEndpointResult.getDataEndpoint",
	"Comment": "the endpoint value. to read data from the stream or to write data to it,specify this endpoint in your application.",
	"Method": "String getDataEndpoint(){\r\n    return dataEndpoint;\r\n}"
}, {
	"Path": "com.amazonaws.services.lexrts.model.PostContentResult.setSlotToElicit",
	"Comment": "if the dialogstate value is elicitslot, returnsthe name of the slot for which amazon lex is eliciting a value.",
	"Method": "void setSlotToElicit(String slotToElicit){\r\n    this.slotToElicit = slotToElicit;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.CheckIfPhoneNumberIsOptedOutRequest.setPhoneNumber",
	"Comment": "the phone number for which you want to check the opt out status.",
	"Method": "void setPhoneNumber(String phoneNumber){\r\n    this.phoneNumber = phoneNumber;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMMessage.getSilentPush",
	"Comment": "indicates if the message should display on the users device. silentpushes can be used for remote configuration and phone home use cases.",
	"Method": "Boolean getSilentPush(){\r\n    return silentPush;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.BatchDeleteAttributesRequest.setDomainName",
	"Comment": "the name of the domain in which the attributes are being deleted.",
	"Method": "void setDomainName(String domainName){\r\n    this.domainName = domainName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsRequest.getBucketName",
	"Comment": "gets the name of the amazon s3 bucket whose objects are to be listed.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.IdentityNotificationAttributes.getHeadersInBounceNotificationsEnabled",
	"Comment": "describes whether amazon ses includes the original email headers inamazon sns notifications of type bounce. a value oftrue specifies that amazon ses will include headers inbounce notifications, and a value of false specifies thatamazon ses will not include headers in bounce notifications.",
	"Method": "Boolean getHeadersInBounceNotificationsEnabled(){\r\n    return headersInBounceNotificationsEnabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SetReceiptRulePositionRequest.getAfter",
	"Comment": "the name of the receipt rule after which to place the specified receiptrule.",
	"Method": "String getAfter(){\r\n    return after;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.DisableEnhancedMonitoringResult.withDesiredShardLevelMetrics",
	"Comment": "represents the list of all the metrics that would be in the enhancedstate after the operation.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DisableEnhancedMonitoringResult withDesiredShardLevelMetrics(String desiredShardLevelMetrics,DisableEnhancedMonitoringResult withDesiredShardLevelMetrics,java.util.Collection<String> desiredShardLevelMetrics){\r\n    setDesiredShardLevelMetrics(desiredShardLevelMetrics);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.withDestinationBucketName",
	"Comment": "sets the name of the destination bucket which will contain the new,copied object and returns this object, enabling additional method callsto be chained together.",
	"Method": "CopyObjectRequest withDestinationBucketName(String destinationBucketName){\r\n    setDestinationBucketName(destinationBucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetBucketAnalyticsConfigurationRequest.withBucketName",
	"Comment": "sets the name of the bucket from which an analytics configuration is to be retrievedand returns this object for method chaining.",
	"Method": "GetBucketAnalyticsConfigurationRequest withBucketName(String bucketName){\r\n    setBucketName(bucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClient.listCustomVerificationEmailTemplates",
	"Comment": "lists the existing custom verification email templates for your accountin the current aws region.for more information about custom verification email templates, see using custom verification email templates in the amazon sesdeveloper guide.you can execute this operation no more than once per second.",
	"Method": "ListCustomVerificationEmailTemplatesResult listCustomVerificationEmailTemplates(ListCustomVerificationEmailTemplatesRequest listCustomVerificationEmailTemplatesRequest){\r\n    ExecutionContext executionContext = createExecutionContext(listCustomVerificationEmailTemplatesRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<ListCustomVerificationEmailTemplatesRequest> request = null;\r\n    Response<ListCustomVerificationEmailTemplatesResult> response = null;\r\n    try {\r\n        request = new ListCustomVerificationEmailTemplatesRequestMarshaller().marshall(listCustomVerificationEmailTemplatesRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        response = invoke(request, new ListCustomVerificationEmailTemplatesResultStaxUnmarshaller(), executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetFaceSearchResult.withStatusMessage",
	"Comment": "if the job fails, statusmessage provides a descriptive errormessage.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetFaceSearchResult withStatusMessage(String statusMessage){\r\n    this.statusMessage = statusMessage;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.ChangeMessageVisibilityRequest.getReceiptHandle",
	"Comment": "the receipt handle associated with the message whose visibility timeoutshould be changed. this parameter is returned by thereceivemessage action.",
	"Method": "String getReceiptHandle(){\r\n    return receiptHandle;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.pinpoint.internal.core.util.Preconditions.checkNotNull",
	"Comment": "ensures that an object reference passed as a parameter to the callingmethod is not null.",
	"Method": "T checkNotNull(T reference,T checkNotNull,T reference,Object errorMessage,T checkNotNull,T reference,String errorMessageTemplate,Object errorMessageArgs){\r\n    if (reference == null) {\r\n        throw new NullPointerException(format(errorMessageTemplate, errorMessageArgs));\r\n    }\r\n    return reference;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GCMChannelResponse.withLastModifiedDate",
	"Comment": "last date this was updatedreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GCMChannelResponse withLastModifiedDate(String lastModifiedDate){\r\n    this.lastModifiedDate = lastModifiedDate;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.serverless.proxy.RequestReader.stripBasePath",
	"Comment": "strips the base path from the request path if the container configuration object requires it",
	"Method": "String stripBasePath(String requestPath,ContainerConfig config){\r\n    if (!config.isStripBasePath()) {\r\n        return requestPath;\r\n    }\r\n    if (requestPath.startsWith(config.getServiceBasePath())) {\r\n        String newRequestPath = requestPath.replaceFirst(config.getServiceBasePath(), \"\");\r\n        if (!newRequestPath.startsWith(\"/\")) {\r\n            newRequestPath = \"/\" + newRequestPath;\r\n        }\r\n        return newRequestPath;\r\n    }\r\n    return requestPath;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSVoipSandboxChannelRequest.withPrivateKey",
	"Comment": "the certificate private key.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSVoipSandboxChannelRequest withPrivateKey(String privateKey){\r\n    this.privateKey = privateKey;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.WriteCampaignRequest.getAdditionalTreatments",
	"Comment": "treatments that are defined in addition to the default treatment.",
	"Method": "java.util.List<WriteTreatmentResource> getAdditionalTreatments(){\r\n    return additionalTreatments;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CreateReceiptFilterRequest.setFilter",
	"Comment": "a data structure that describes the ip address filter to create, whichconsists of a name, an ip address range, and whether to allow or blockmail from it.",
	"Method": "void setFilter(ReceiptFilter filter){\r\n    this.filter = filter;\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.StartTranscriptionJobRequest.getMedia",
	"Comment": "an object that describes the input media for a transcription job.",
	"Method": "Media getMedia(){\r\n    return media;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ListKeyPoliciesResult.setTruncated",
	"Comment": "a flag that indicates whether there are more items in the list. when thisvalue is true, the list in this response is truncated. to get more items,pass the value of the nextmarker element in this response tothe marker parameter in a subsequent request.",
	"Method": "void setTruncated(Boolean truncated){\r\n    this.truncated = truncated;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.Message.withJsonBody",
	"Comment": "the json payload used for a silent push.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Message withJsonBody(String jsonBody){\r\n    this.jsonBody = jsonBody;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Result.setStartAfter",
	"Comment": "sets the optional parameter indicating where you want amazon s3 to startthe object listing from. this can be any key in the bucket.",
	"Method": "void setStartAfter(String startAfter){\r\n    this.startAfter = startAfter;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetSegmentImportJobsResult.withImportJobsResponse",
	"Comment": "import job list.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetSegmentImportJobsResult withImportJobsResponse(ImportJobsResponse importJobsResponse){\r\n    this.importJobsResponse = importJobsResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.PersonMatch.setFaceMatches",
	"Comment": "information about the faces in the input collection that match the faceof a person in the video.",
	"Method": "void setFaceMatches(java.util.Collection<FaceMatch> faceMatches){\r\n    if (faceMatches == null) {\r\n        this.faceMatches = null;\r\n        return;\r\n    }\r\n    this.faceMatches = new java.util.ArrayList<FaceMatch>(faceMatches);\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Beard.getValue",
	"Comment": "boolean value that indicates whether the face has beard or not.",
	"Method": "Boolean getValue(){\r\n    return value;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.Message.getRawContent",
	"Comment": "the raw json formatted string to be used as the payload. this valueoverrides the message.",
	"Method": "String getRawContent(){\r\n    return rawContent;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobResource.isRegisterEndpoints",
	"Comment": "sets whether the endpoints are registered with amazon pinpoint when theyare imported.",
	"Method": "Boolean isRegisterEndpoints(){\r\n    return registerEndpoints;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EventStream.getRoleArn",
	"Comment": "the iam role that authorizes amazon pinpoint to publish events to thestream in your account.",
	"Method": "String getRoleArn(){\r\n    return roleArn;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.AmazonS3Client.fireProgressEvent",
	"Comment": "fires a progress event with the specified event type to the specifiedlistener.",
	"Method": "void fireProgressEvent(ProgressListenerCallbackExecutor progressListenerCallbackExecutor,int eventType){\r\n    if (progressListenerCallbackExecutor == null) {\r\n        return;\r\n    }\r\n    final ProgressEvent event = new ProgressEvent(0);\r\n    event.setEventCode(eventType);\r\n    progressListenerCallbackExecutor.progressChanged(event);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.Message.withRawContent",
	"Comment": "the raw json formatted string to be used as the payload. this valueoverrides the message.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Message withRawContent(String rawContent){\r\n    this.rawContent = rawContent;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.PersonMatch.withTimestamp",
	"Comment": "the time, in milliseconds from the beginning of the video, that theperson was matched in the video.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PersonMatch withTimestamp(Long timestamp){\r\n    this.timestamp = timestamp;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.LabelDetection.setTimestamp",
	"Comment": "time, in milliseconds from the start of the video, that the label wasdetected.",
	"Method": "void setTimestamp(Long timestamp){\r\n    this.timestamp = timestamp;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.Grant.getPermission",
	"Comment": "gets the permission being granted to the grantee by this grant.",
	"Method": "Permission getPermission(){\r\n    return permission;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.BatchDeleteAttributesRequest.getDomainName",
	"Comment": "the name of the domain in which the attributes are being deleted.",
	"Method": "String getDomainName(){\r\n    return domainName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsRequest.setBucketName",
	"Comment": "sets the name of the amazon s3 bucket whose objects are to be listed.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClient.deleteConfigurationSet",
	"Comment": "deletes a configuration set. configuration sets enable you to publishemail sending events. for information about using configuration sets, seethe amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "DeleteConfigurationSetResult deleteConfigurationSet(DeleteConfigurationSetRequest deleteConfigurationSetRequest){\r\n    ExecutionContext executionContext = createExecutionContext(deleteConfigurationSetRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<DeleteConfigurationSetRequest> request = null;\r\n    Response<DeleteConfigurationSetResult> response = null;\r\n    try {\r\n        request = new DeleteConfigurationSetRequestMarshaller().marshall(deleteConfigurationSetRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        response = invoke(request, new DeleteConfigurationSetResultStaxUnmarshaller(), executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketAclRequest.getCannedAcl",
	"Comment": "returns the canned acl to be applied to the specified bucket when thisrequest is executed. a request can use either a custom acl or a cannedacl, but not both.",
	"Method": "CannedAccessControlList getCannedAcl(){\r\n    return cannedAcl;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.internal.AbstractTransfer.addStateChangeListener",
	"Comment": "adds the given state change listener to the collection of listeners.",
	"Method": "void addStateChangeListener(TransferStateChangeListener listener){\r\n    if (listener != null)\r\n        stateChangeListeners.add(listener);\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.BatchDeleteAttributesRequest.withDomainName",
	"Comment": "the name of the domain in which the attributes are being deleted.returns a reference to this object so that method calls can be chained together.",
	"Method": "BatchDeleteAttributesRequest withDomainName(String domainName){\r\n    this.domainName = domainName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMMessage.setSilentPush",
	"Comment": "indicates if the message should display on the users device. silentpushes can be used for remote configuration and phone home use cases.",
	"Method": "void setSilentPush(Boolean silentPush){\r\n    this.silentPush = silentPush;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.Event.getTimestamp",
	"Comment": "the date and time when the event occurred, in iso 8601 format.",
	"Method": "String getTimestamp(){\r\n    return timestamp;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.OptInPhoneNumberRequest.withPhoneNumber",
	"Comment": "the phone number to opt in.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "OptInPhoneNumberRequest withPhoneNumber(String phoneNumber){\r\n    this.phoneNumber = phoneNumber;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketReplicationConfiguration.getRules",
	"Comment": "returns the replication rules associated with this amazon s3 bucket.",
	"Method": "Map<String, ReplicationRule> getRules(){\r\n    return rules;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetBucketWebsiteConfigurationRequest.withBucketName",
	"Comment": "sets the name of the bucket whose website configuration is beingretrieved, and returns this updated request object so that additionalmethod calls can be chained together.",
	"Method": "GetBucketWebsiteConfigurationRequest withBucketName(String bucketName){\r\n    setBucketName(bucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListSubscriptionsResult.getNextToken",
	"Comment": "token to pass along to the next listsubscriptions request.this element is returned if there are more subscriptions to retrieve.",
	"Method": "String getNextToken(){\r\n    return nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.buffered.QueueBuffer.deleteMessageSync",
	"Comment": "deletes a message from sqs. does not return until a confirmation from sqshas been received",
	"Method": "void deleteMessageSync(DeleteMessageRequest request){\r\n    Future<Void> future = deleteMessage(request, null);\r\n    waitForFuture(future);\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.ListLexiconsRequest.withNextToken",
	"Comment": "an opaque pagination token returned from previouslistlexicons operation. if present, indicates where tocontinue the list of lexicons.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListLexiconsRequest withNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.Template.withHtmlPart",
	"Comment": "the html body of the email.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Template withHtmlPart(String htmlPart){\r\n    this.htmlPart = htmlPart;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.TreatmentResource.withSizePercent",
	"Comment": "the allocated percentage of users for this treatment.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "TreatmentResource withSizePercent(Integer sizePercent){\r\n    this.sizePercent = sizePercent;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CreateCampaignRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreateCampaignRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.GetParametersForImportResult.getParametersValidTo",
	"Comment": "the time at which the import token and public key are no longer valid.after this time, you cannot use them to make an importkeymaterialrequest and you must send another getparametersforimportrequest to get new ones.",
	"Method": "java.util.Date getParametersValidTo(){\r\n    return parametersValidTo;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.SynthesisTask.getTaskStatusReason",
	"Comment": "reason for the current status of a specific speech synthesis task,including errors if the task has failed.",
	"Method": "String getTaskStatusReason(){\r\n    return taskStatusReason;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointResponse.withAddress",
	"Comment": "the address of the endpoint as provided by your push provider. forexample, the devicetoken or registrationid.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointResponse withAddress(String address){\r\n    this.address = address;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSAsyncClient.getSMSAttributesAsync",
	"Comment": "returns the settings for sending sms messages from your account.these settings are set with the setsmsattributes action.",
	"Method": "Future<GetSMSAttributesResult> getSMSAttributesAsync(GetSMSAttributesRequest getSMSAttributesRequest,Future<GetSMSAttributesResult> getSMSAttributesAsync,GetSMSAttributesRequest getSMSAttributesRequest,AsyncHandler<GetSMSAttributesRequest, GetSMSAttributesResult> asyncHandler){\r\n    return executorService.submit(new Callable<GetSMSAttributesResult>() {\r\n        public GetSMSAttributesResult call() throws Exception {\r\n            GetSMSAttributesResult result = null;\r\n            try {\r\n                result = getSMSAttributes(getSMSAttributesRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(getSMSAttributesRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSAsyncClient.getSMSAttributesAsync",
	"Comment": "returns the settings for sending sms messages from your account.these settings are set with the setsmsattributes action.",
	"Method": "Future<GetSMSAttributesResult> getSMSAttributesAsync(GetSMSAttributesRequest getSMSAttributesRequest,Future<GetSMSAttributesResult> getSMSAttributesAsync,GetSMSAttributesRequest getSMSAttributesRequest,AsyncHandler<GetSMSAttributesRequest, GetSMSAttributesResult> asyncHandler){\r\n    GetSMSAttributesResult result = null;\r\n    try {\r\n        result = getSMSAttributes(getSMSAttributesRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(getSMSAttributesRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.DecryptRequest.getGrantTokens",
	"Comment": "a list of grant tokens.for more information, see grant tokens in the aws key management service developerguide.",
	"Method": "java.util.List<String> getGrantTokens(){\r\n    return grantTokens;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSSandboxChannelRequest.withTokenKeyId",
	"Comment": "the token key used for apns tokens.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSSandboxChannelRequest withTokenKeyId(String tokenKeyId){\r\n    this.tokenKeyId = tokenKeyId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.GetLexiconResult.setLexiconAttributes",
	"Comment": "metadata of the lexicon, including phonetic alphabetic used, languagecode, lexicon arn, number of lexemes defined in the lexicon, and size oflexicon in bytes.",
	"Method": "void setLexiconAttributes(LexiconAttributes lexiconAttributes){\r\n    this.lexiconAttributes = lexiconAttributes;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.createConfigurationSetTrackingOptionsAsync",
	"Comment": "creates an association between a configuration set and a custom domainfor open and click event tracking.by default, images and links used for tracking open and click events arehosted on domains operated by amazon ses. you can configure a subdomainof your own to handle these events. for information about using customdomains, see the amazon ses developer guide.",
	"Method": "Future<CreateConfigurationSetTrackingOptionsResult> createConfigurationSetTrackingOptionsAsync(CreateConfigurationSetTrackingOptionsRequest createConfigurationSetTrackingOptionsRequest,Future<CreateConfigurationSetTrackingOptionsResult> createConfigurationSetTrackingOptionsAsync,CreateConfigurationSetTrackingOptionsRequest createConfigurationSetTrackingOptionsRequest,AsyncHandler<CreateConfigurationSetTrackingOptionsRequest, CreateConfigurationSetTrackingOptionsResult> asyncHandler){\r\n    return executorService.submit(new Callable<CreateConfigurationSetTrackingOptionsResult>() {\r\n        public CreateConfigurationSetTrackingOptionsResult call() throws Exception {\r\n            CreateConfigurationSetTrackingOptionsResult result = null;\r\n            try {\r\n                result = createConfigurationSetTrackingOptions(createConfigurationSetTrackingOptionsRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(createConfigurationSetTrackingOptionsRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.createConfigurationSetTrackingOptionsAsync",
	"Comment": "creates an association between a configuration set and a custom domainfor open and click event tracking.by default, images and links used for tracking open and click events arehosted on domains operated by amazon ses. you can configure a subdomainof your own to handle these events. for information about using customdomains, see the amazon ses developer guide.",
	"Method": "Future<CreateConfigurationSetTrackingOptionsResult> createConfigurationSetTrackingOptionsAsync(CreateConfigurationSetTrackingOptionsRequest createConfigurationSetTrackingOptionsRequest,Future<CreateConfigurationSetTrackingOptionsResult> createConfigurationSetTrackingOptionsAsync,CreateConfigurationSetTrackingOptionsRequest createConfigurationSetTrackingOptionsRequest,AsyncHandler<CreateConfigurationSetTrackingOptionsRequest, CreateConfigurationSetTrackingOptionsResult> asyncHandler){\r\n    CreateConfigurationSetTrackingOptionsResult result = null;\r\n    try {\r\n        result = createConfigurationSetTrackingOptions(createConfigurationSetTrackingOptionsRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(createConfigurationSetTrackingOptionsRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobResponse.withType",
	"Comment": "the job type. will be import.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ImportJobResponse withType(String type){\r\n    this.type = type;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetObjectAclRequest.getCannedAcl",
	"Comment": "returns the canned acl to be applied to the specified object when thisrequest is executed. a request can use either a custom acl or a cannedacl, but not both.",
	"Method": "CannedAccessControlList getCannedAcl(){\r\n    return cannedAcl;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DeleteConfigurationSetEventDestinationRequest.withEventDestinationName",
	"Comment": "the name of the event destination to delete.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteConfigurationSetEventDestinationRequest withEventDestinationName(String eventDestinationName){\r\n    this.eventDestinationName = eventDestinationName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.AmazonSimpleDBAsyncClient.selectAsync",
	"Comment": "the select operation returns a set of attributes foritemnames that match the select expression.select is similar to the standard sql select statement.the total size of the response cannot exceed 1 mb in total size.amazon simpledb automatically adjusts the number of items returned perpage to enforce this limit. for example, if the client asks toretrieve 2500 items, but each individual item is 10 kb in size, thesystem returns 100 items and an appropriate nexttoken sothe client can access the next page of results.for information on how to construct select expressions, see usingselect to create amazon simpledb queries in the developer guide.",
	"Method": "Future<SelectResult> selectAsync(SelectRequest selectRequest,Future<SelectResult> selectAsync,SelectRequest selectRequest,AsyncHandler<SelectRequest, SelectResult> asyncHandler){\r\n    return executorService.submit(new Callable<SelectResult>() {\r\n        public SelectResult call() throws Exception {\r\n            SelectResult result;\r\n            try {\r\n                result = select(selectRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(selectRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.AmazonSimpleDBAsyncClient.selectAsync",
	"Comment": "the select operation returns a set of attributes foritemnames that match the select expression.select is similar to the standard sql select statement.the total size of the response cannot exceed 1 mb in total size.amazon simpledb automatically adjusts the number of items returned perpage to enforce this limit. for example, if the client asks toretrieve 2500 items, but each individual item is 10 kb in size, thesystem returns 100 items and an appropriate nexttoken sothe client can access the next page of results.for information on how to construct select expressions, see usingselect to create amazon simpledb queries in the developer guide.",
	"Method": "Future<SelectResult> selectAsync(SelectRequest selectRequest,Future<SelectResult> selectAsync,SelectRequest selectRequest,AsyncHandler<SelectRequest, SelectResult> asyncHandler){\r\n    SelectResult result;\r\n    try {\r\n        result = select(selectRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(selectRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transferutility.TransferDBUtil.generateContentValuesForObjectMetadata",
	"Comment": "adds mappings to a contentvalues object for the data in the passed inobjectmetadata",
	"Method": "ContentValues generateContentValuesForObjectMetadata(ObjectMetadata metadata){\r\n    final ContentValues values = new ContentValues();\r\n    values.put(TransferTable.COLUMN_USER_METADATA, JsonUtils.mapToString(metadata.getUserMetadata()));\r\n    values.put(TransferTable.COLUMN_HEADER_CONTENT_TYPE, metadata.getContentType());\r\n    values.put(TransferTable.COLUMN_HEADER_CONTENT_ENCODING, metadata.getContentEncoding());\r\n    values.put(TransferTable.COLUMN_HEADER_CACHE_CONTROL, metadata.getCacheControl());\r\n    values.put(TransferTable.COLUMN_CONTENT_MD5, metadata.getContentMD5());\r\n    values.put(TransferTable.COLUMN_HEADER_CONTENT_DISPOSITION, metadata.getContentDisposition());\r\n    values.put(TransferTable.COLUMN_SSE_ALGORITHM, metadata.getSSEAlgorithm());\r\n    values.put(TransferTable.COLUMN_SSE_KMS_KEY, metadata.getSSEAwsKmsKeyId());\r\n    values.put(TransferTable.COLUMN_EXPIRATION_TIME_RULE_ID, metadata.getExpirationTimeRuleId());\r\n    if (metadata.getHttpExpiresDate() != null) {\r\n        values.put(TransferTable.COLUMN_HTTP_EXPIRES_DATE, String.valueOf(metadata.getHttpExpiresDate().getTime()));\r\n    }\r\n    if (metadata.getStorageClass() != null) {\r\n        values.put(TransferTable.COLUMN_HEADER_STORAGE_CLASS, metadata.getStorageClass());\r\n    }\r\n    return values;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.DomainMetadataResult.getAttributeValuesSizeBytes",
	"Comment": "the total size of all attribute values in the domain, in bytes.",
	"Method": "Long getAttributeValuesSizeBytes(){\r\n    return attributeValuesSizeBytes;\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.TranscriptionJobSummary.withFailureReason",
	"Comment": "if the transcriptionjobstatus field is failed,a description of the error.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "TranscriptionJobSummary withFailureReason(String failureReason){\r\n    this.failureReason = failureReason;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ReputationOptions.withSendingEnabled",
	"Comment": "describes whether email sending is enabled or disabled for theconfiguration set. if the value is true, then amazon seswill send emails that use the configuration set. if the value isfalse, amazon ses will not send emails that use theconfiguration set. the default value is true. you can changethis setting using updateconfigurationsetsendingenabled.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ReputationOptions withSendingEnabled(Boolean sendingEnabled){\r\n    this.sendingEnabled = sendingEnabled;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SetIdentityMailFromDomainRequest.getIdentity",
	"Comment": "the verified identity for which you want to enable or disable thespecified custom mail from domain.",
	"Method": "String getIdentity(){\r\n    return identity;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentResponse.withName",
	"Comment": "the name of the segment.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SegmentResponse withName(String name){\r\n    this.name = name;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Request.isFetchOwner",
	"Comment": "returns if fetch owner is set. the owner field is not present inlistobjectsv2 results by default. if this flag is set to true the ownerfield will be included.",
	"Method": "boolean isFetchOwner(){\r\n    return fetchOwner;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.CreateStreamProcessorRequest.setSettings",
	"Comment": "face recognition input parameters to be used by the stream processor.includes the collection to use for face recognition and the faceattributes to detect.",
	"Method": "void setSettings(StreamProcessorSettings settings){\r\n    this.settings = settings;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.AmazonS3Client.addPartNumberIfNotNull",
	"Comment": "adds the part number to the specified request, if partnumber is not null.",
	"Method": "void addPartNumberIfNotNull(Request<?> request,Integer partNumber){\r\n    if (partNumber != null) {\r\n        request.addParameter(\"partNumber\", partNumber.toString());\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentDemographics.withMake",
	"Comment": "the device make criteria for the segment.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SegmentDemographics withMake(SetDimension make){\r\n    this.make = make;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Result.getStartAfter",
	"Comment": "returns optional parameter indicating where you want amazon s3 to startthe object listing from. this can be any key in the bucket.",
	"Method": "String getStartAfter(){\r\n    return startAfter;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DirectMessageConfiguration.withAPNSMessage",
	"Comment": "the message to apns channels. overrides the default push notificationmessage.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DirectMessageConfiguration withAPNSMessage(APNSMessage aPNSMessage){\r\n    this.aPNSMessage = aPNSMessage;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SendUsersMessageRequest.clearUsersEntries",
	"Comment": "removes all the entries added into users.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendUsersMessageRequest clearUsersEntries(){\r\n    this.users = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.PutAttributesRequest.withItemName",
	"Comment": "the name of the item.returns a reference to this object so that method calls can be chained together.",
	"Method": "PutAttributesRequest withItemName(String itemName){\r\n    this.itemName = itemName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SendRawEmailRequest.getConfigurationSetName",
	"Comment": "the name of the configuration set to use when you send an email usingsendrawemail.",
	"Method": "String getConfigurationSetName(){\r\n    return configurationSetName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignResponse.withDescription",
	"Comment": "a description of the campaign.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CampaignResponse withDescription(String description){\r\n    this.description = description;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClient.deleteVerifiedEmailAddress",
	"Comment": "deprecated. use the deleteidentity operation to delete emailaddresses and domains.",
	"Method": "void deleteVerifiedEmailAddress(DeleteVerifiedEmailAddressRequest deleteVerifiedEmailAddressRequest){\r\n    ExecutionContext executionContext = createExecutionContext(deleteVerifiedEmailAddressRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<DeleteVerifiedEmailAddressRequest> request = null;\r\n    Response<Void> response = null;\r\n    try {\r\n        request = new DeleteVerifiedEmailAddressRequestMarshaller().marshall(deleteVerifiedEmailAddressRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        invoke(request, null, executionContext);\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.DescribeStreamProcessorResult.getSettings",
	"Comment": "face recognition input parameters that are being used by the streamprocessor. includes the collection to use for face recognition and theface attributes to detect.",
	"Method": "StreamProcessorSettings getSettings(){\r\n    return settings;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ListReceiptRuleSetsResult.getRuleSets",
	"Comment": "the metadata for the currently active receipt rule set. the metadataconsists of the rule set name and the timestamp of when the rule set wascreated.",
	"Method": "java.util.List<ReceiptRuleSetMetadata> getRuleSets(){\r\n    return ruleSets;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.Message.setRawContent",
	"Comment": "the raw json formatted string to be used as the payload. this valueoverrides the message.",
	"Method": "void setRawContent(String rawContent){\r\n    this.rawContent = rawContent;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.MessageResponse.withApplicationId",
	"Comment": "application id of the message.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "MessageResponse withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.GetAccountSendingEnabledResult.isEnabled",
	"Comment": "describes whether email sending is enabled or disabled for your amazonses account in the current aws region.",
	"Method": "Boolean isEnabled(){\r\n    return enabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.VideoMetadata.withFormat",
	"Comment": "format of the analyzed video. possible values are mp4, mov and avi.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "VideoMetadata withFormat(String format){\r\n    this.format = format;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClient.createConfigurationSetTrackingOptions",
	"Comment": "creates an association between a configuration set and a custom domainfor open and click event tracking.by default, images and links used for tracking open and click events arehosted on domains operated by amazon ses. you can configure a subdomainof your own to handle these events. for information about using customdomains, see the amazon ses developer guide.",
	"Method": "CreateConfigurationSetTrackingOptionsResult createConfigurationSetTrackingOptions(CreateConfigurationSetTrackingOptionsRequest createConfigurationSetTrackingOptionsRequest){\r\n    ExecutionContext executionContext = createExecutionContext(createConfigurationSetTrackingOptionsRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<CreateConfigurationSetTrackingOptionsRequest> request = null;\r\n    Response<CreateConfigurationSetTrackingOptionsResult> response = null;\r\n    try {\r\n        request = new CreateConfigurationSetTrackingOptionsRequestMarshaller().marshall(createConfigurationSetTrackingOptionsRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        response = invoke(request, new CreateConfigurationSetTrackingOptionsResultStaxUnmarshaller(), executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketMetricsConfigurationsRequest.setContinuationToken",
	"Comment": "sets the optional continuation token.continuation token allows a list to becontinued from a specific point. continuationtoken is provided in truncated list results.",
	"Method": "void setContinuationToken(String continuationToken){\r\n    this.continuationToken = continuationToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GCMChannelResponse.withPlatform",
	"Comment": "the platform type. will be gcmreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GCMChannelResponse withPlatform(String platform){\r\n    this.platform = platform;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.BoundingBox.withWidth",
	"Comment": "width of the bounding box as a ratio of the overall image width.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "BoundingBox withWidth(Float width){\r\n    this.width = width;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GeneratePresignedUrlRequest.withKey",
	"Comment": "sets the key of the object involved in this request, and returns thisrequest object to enable additional method calls to be chained together.",
	"Method": "GeneratePresignedUrlRequest withKey(String key){\r\n    setKey(key);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transferutility.TransferUtility.deleteTransferRecord",
	"Comment": "deletes a transfer record with the given id. it just deletes the recordbut does not stop the running thread, so you must cancel the task beforedeleting the record.",
	"Method": "boolean deleteTransferRecord(int id){\r\n    cancel(id);\r\n    return dbUtil.deleteTransferRecords(id) > 0;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.GenerateDataKeyWithoutPlaintextRequest.getGrantTokens",
	"Comment": "a list of grant tokens.for more information, see grant tokens in the aws key management service developerguide.",
	"Method": "java.util.List<String> getGrantTokens(){\r\n    return grantTokens;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSSandboxChannelResponse.withEnabled",
	"Comment": "if the channel is enabled for sending messages.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSSandboxChannelResponse withEnabled(Boolean enabled){\r\n    this.enabled = enabled;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.SetSMSAttributesRequest.clearattributesEntries",
	"Comment": "removes all the entries added into attributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SetSMSAttributesRequest clearattributesEntries(){\r\n    this.attributes = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.buffered.QueueBufferConfig.withMaxBatchSize",
	"Comment": "specifies the maximum number of entries the bufferinc client will put ina single batch request.",
	"Method": "QueueBufferConfig withMaxBatchSize(int maxBatchSize){\r\n    this.maxBatchSize = maxBatchSize;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.SendMessageResult.withMessageId",
	"Comment": "an element containing the message id of the message sent to the queue.for more information, see queue and message identifiers in the amazon sqs developerguide.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendMessageResult withMessageId(String messageId){\r\n    this.messageId = messageId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateAccountAuditConfigurationRequest.setAuditNotificationTargetConfigurations",
	"Comment": "information about the targets to which audit notifications are sent.",
	"Method": "void setAuditNotificationTargetConfigurations(java.util.Map<String, AuditNotificationTarget> auditNotificationTargetConfigurations){\r\n    this.auditNotificationTargetConfigurations = auditNotificationTargetConfigurations;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.pinpoint.targeting.TargetingClient.currentEndpoint",
	"Comment": "returns the device endpoint profile.targetingclient attributes and metrics are added to the endpoint profile.",
	"Method": "EndpointProfile currentEndpoint(){\r\n    if (!this.globalAttributes.isEmpty()) {\r\n        for (final Map.Entry<String, java.util.List<String>> pair : globalAttributes.entrySet()) {\r\n            this.endpointProfile.addAttribute(pair.getKey(), pair.getValue());\r\n        }\r\n    }\r\n    if (!this.globalMetrics.isEmpty()) {\r\n        for (final Map.Entry<String, Double> pair : globalMetrics.entrySet()) {\r\n            this.endpointProfile.addMetric(pair.getKey(), pair.getValue());\r\n        }\r\n    }\r\n    return this.endpointProfile;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.pinpoint.analytics.monetization.VirtualMonetizationEventBuilder.withProductId",
	"Comment": "sets the product identifier field of the item being purchased.",
	"Method": "VirtualMonetizationEventBuilder withProductId(String productId){\r\n    setProductId(productId);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SMSChannelResponse.withSenderId",
	"Comment": "sender identifier of your messages.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SMSChannelResponse withSenderId(String senderId){\r\n    this.senderId = senderId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClient.deleteReceiptFilter",
	"Comment": "deletes the specified ip address filter.for information about managing ip address filters, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "DeleteReceiptFilterResult deleteReceiptFilter(DeleteReceiptFilterRequest deleteReceiptFilterRequest){\r\n    ExecutionContext executionContext = createExecutionContext(deleteReceiptFilterRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<DeleteReceiptFilterRequest> request = null;\r\n    Response<DeleteReceiptFilterResult> response = null;\r\n    try {\r\n        request = new DeleteReceiptFilterRequestMarshaller().marshall(deleteReceiptFilterRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        response = invoke(request, new DeleteReceiptFilterResultStaxUnmarshaller(), executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.lexrts.model.ResponseCard.withGenericAttachments",
	"Comment": "an array of attachment objects representing options.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ResponseCard withGenericAttachments(GenericAttachment genericAttachments,ResponseCard withGenericAttachments,java.util.Collection<GenericAttachment> genericAttachments){\r\n    setGenericAttachments(genericAttachments);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.buffered.QueueBuffer.shutdown",
	"Comment": "shuts down the queue buffer. once this method has been called, the queuebuffer is not operational and all subsequent calls to it may fail",
	"Method": "void shutdown(){\r\n    receiveBuffer.shutdown();\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SendEmailRequest.withMessage",
	"Comment": "the message to be sent.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendEmailRequest withMessage(Message message){\r\n    this.message = message;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.serverless.proxy.spring.SpringLambdaContainerHandler.setRefreshContext",
	"Comment": "asks the custom web application initializer to refresh the spring context.",
	"Method": "void setRefreshContext(boolean refreshContext){\r\n    this.initializer.setRefreshContext(refreshContext);\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DescribeConfigurationSetResult.setEventDestinations",
	"Comment": "a list of event destinations associated with the configuration set.",
	"Method": "void setEventDestinations(java.util.Collection<EventDestination> eventDestinations){\r\n    if (eventDestinations == null) {\r\n        this.eventDestinations = null;\r\n        return;\r\n    }\r\n    this.eventDestinations = new java.util.ArrayList<EventDestination>(eventDestinations);\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CustomVerificationEmailTemplate.withSuccessRedirectionURL",
	"Comment": "the url that the recipient of the verification email is sent to if his orher address is successfully verified.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CustomVerificationEmailTemplate withSuccessRedirectionURL(String successRedirectionURL){\r\n    this.successRedirectionURL = successRedirectionURL;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.AmazonKinesisClient.addTagsToStream",
	"Comment": "adds or updates tags for the specified kinesis data stream. each streamcan have up to 10 tags.if tags have already been assigned to the stream,addtagstostream overwrites any existing tags that correspondto the specified tag keys.addtagstostream has a limit of five transactions per second peraccount.",
	"Method": "void addTagsToStream(AddTagsToStreamRequest addTagsToStreamRequest){\r\n    ExecutionContext executionContext = createExecutionContext(addTagsToStreamRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<AddTagsToStreamRequest> request = null;\r\n    Response<Void> response = null;\r\n    try {\r\n        awsRequestMetrics.startEvent(Field.RequestMarshallTime);\r\n        try {\r\n            request = new AddTagsToStreamRequestMarshaller().marshall(addTagsToStreamRequest);\r\n            request.setAWSRequestMetrics(awsRequestMetrics);\r\n        } finally {\r\n            awsRequestMetrics.endEvent(Field.RequestMarshallTime);\r\n        }\r\n        JsonResponseHandler<Void> responseHandler = new JsonResponseHandler<Void>(null);\r\n        invoke(request, responseHandler, executionContext);\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DirectMessageConfiguration.withGCMMessage",
	"Comment": "the message to gcm channels. overrides the default push notificationmessage.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DirectMessageConfiguration withGCMMessage(GCMMessage gCMMessage){\r\n    this.gCMMessage = gCMMessage;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ReceiptAction.setLambdaAction",
	"Comment": "calls an aws lambda function, and optionally, publishes a notification toamazon sns.",
	"Method": "void setLambdaAction(LambdaAction lambdaAction){\r\n    this.lambdaAction = lambdaAction;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.MessageRequest.setTraceId",
	"Comment": "a unique id that you can use to trace a message. this id is visible torecipients.",
	"Method": "void setTraceId(String traceId){\r\n    this.traceId = traceId;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.internal.UploadCallable.isMultipartUpload",
	"Comment": "returns true if this uploadcallable is processing a multipart upload.",
	"Method": "boolean isMultipartUpload(){\r\n    return TransferManagerUtils.shouldUseMultipartUpload(putObjectRequest, configuration);\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.Endpoint.withEndpointArn",
	"Comment": "endpointarn for mobile app and device.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Endpoint withEndpointArn(String endpointArn){\r\n    this.endpointArn = endpointArn;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.GenerateDataKeyWithoutPlaintextRequest.clearEncryptionContextEntries",
	"Comment": "removes all the entries added into encryptioncontext.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GenerateDataKeyWithoutPlaintextRequest clearEncryptionContextEntries(){\r\n    this.encryptionContext = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.lex.interactionkit.InteractionClient.setInteractionListener",
	"Comment": "set an interaction listener for this client. if no internaction listner was provided, thedefault implementation is used.",
	"Method": "void setInteractionListener(InteractionListener interactionListener){\r\n    if (interactionListener == null) {\r\n        interactionListener = new DefaultInteractionListener();\r\n    }\r\n    this.interactionListener = interactionListener;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.PersonDetail.withIndex",
	"Comment": "identifier for the person detected person within a video. use to keeptrack of the person throughout the video. the identifier is not stored byamazon rekognition.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PersonDetail withIndex(Long index){\r\n    this.index = index;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CORSRule.withId",
	"Comment": "sets the id of this rule and returns a reference to this object formethod chaining.",
	"Method": "CORSRule withId(String id){\r\n    this.id = id;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.kinesisvideo.internal.producer.jni.NativeKinesisVideoProducerJni.getStreamingEndpoint",
	"Comment": "callback from the native code to schedule a call to get streaming endpoint",
	"Method": "int getStreamingEndpoint(String streamName,String apiName,long callAfter,long timeout,byte[] authData,int authType,long customData){\r\n    synchronized (mCallbackSyncObject) {\r\n        try {\r\n            mServiceCallbacks.getStreamingEndpoint(streamName, apiName, callAfter, timeout, authData, authType, customData);\r\n            return STATUS_SUCCESS;\r\n        } catch (final ProducerException e) {\r\n            return e.getStatusCode();\r\n        }\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.CreatePlatformApplicationRequest.getName",
	"Comment": "application names must be made up of only uppercase and lowercase asciiletters, numbers, underscores, hyphens, and periods, and must be between1 and 256 characters long.",
	"Method": "String getName(){\r\n    return name;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DirectMessageConfiguration.setGCMMessage",
	"Comment": "the message to gcm channels. overrides the default push notificationmessage.",
	"Method": "void setGCMMessage(GCMMessage gCMMessage){\r\n    this.gCMMessage = gCMMessage;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.Constants.getStreamBufferSize",
	"Comment": "returns the buffer size override if it is specified in the systemproperty, otherwise returns the default value.",
	"Method": "int getStreamBufferSize(){\r\n    int streamBufferSize = DEFAULT_STREAM_BUFFER_SIZE;\r\n    final String bufferSizeOverride = System.getProperty(SDKGlobalConfiguration.DEFAULT_S3_STREAM_BUFFER_SIZE);\r\n    if (bufferSizeOverride != null) {\r\n        try {\r\n            streamBufferSize = Integer.parseInt(bufferSizeOverride);\r\n        } catch (final Exception e) {\r\n            log.warn(\"Unable to parse buffer size override from value: \" + bufferSizeOverride);\r\n        }\r\n    }\r\n    return streamBufferSize;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.getFileOffset",
	"Comment": "returns the optional offset in the specified file, at which to beginuploading data for this part. if not specified, data will be read fromthe beginning of the file.",
	"Method": "long getFileOffset(){\r\n    return fileOffset;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.internal.DownloadImpl.abortWithoutNotifyingStateChangeListener",
	"Comment": "cancels this download, but skip notifying the state change listeners.",
	"Method": "void abortWithoutNotifyingStateChangeListener(){\r\n    this.monitor.getFuture().cancel(true);\r\n    synchronized (this) {\r\n        this.state = TransferState.Canceled;\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMChannelResponse.withCreationDate",
	"Comment": "the date and time when this channel was created.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ADMChannelResponse withCreationDate(String creationDate){\r\n    this.creationDate = creationDate;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobsResponse.withNextToken",
	"Comment": "the string that you use in a subsequent request to get the next page ofresults in a paginated response.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ImportJobsResponse withNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.UpdateCustomVerificationEmailTemplateRequest.setTemplateContent",
	"Comment": "the content of the custom verification email. the total size of the emailmust be less than 10 mb. the message body may contain html, with somelimitations. for more information, see custom verification email frequently asked questions in theamazon ses developer guide.",
	"Method": "void setTemplateContent(String templateContent){\r\n    this.templateContent = templateContent;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.AddTagsToStreamRequest.clearTagsEntries",
	"Comment": "removes all the entries added into tags.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "AddTagsToStreamRequest clearTagsEntries(){\r\n    this.tags = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DescribeConfigurationSetResult.withEventDestinations",
	"Comment": "a list of event destinations associated with the configuration set.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DescribeConfigurationSetResult withEventDestinations(EventDestination eventDestinations,DescribeConfigurationSetResult withEventDestinations,java.util.Collection<EventDestination> eventDestinations){\r\n    setEventDestinations(eventDestinations);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobResponse.setApplicationId",
	"Comment": "the unique id of the application to which the import job applies.",
	"Method": "void setApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.deleteVerifiedEmailAddressAsync",
	"Comment": "deprecated. use the deleteidentity operation to delete emailaddresses and domains.",
	"Method": "Future<Void> deleteVerifiedEmailAddressAsync(DeleteVerifiedEmailAddressRequest deleteVerifiedEmailAddressRequest,Future<Void> deleteVerifiedEmailAddressAsync,DeleteVerifiedEmailAddressRequest deleteVerifiedEmailAddressRequest,AsyncHandler<DeleteVerifiedEmailAddressRequest, Void> asyncHandler){\r\n    return executorService.submit(new Callable<Void>() {\r\n        public Void call() throws Exception {\r\n            Void result = null;\r\n            try {\r\n                deleteVerifiedEmailAddress(deleteVerifiedEmailAddressRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(deleteVerifiedEmailAddressRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.deleteVerifiedEmailAddressAsync",
	"Comment": "deprecated. use the deleteidentity operation to delete emailaddresses and domains.",
	"Method": "Future<Void> deleteVerifiedEmailAddressAsync(DeleteVerifiedEmailAddressRequest deleteVerifiedEmailAddressRequest,Future<Void> deleteVerifiedEmailAddressAsync,DeleteVerifiedEmailAddressRequest deleteVerifiedEmailAddressRequest,AsyncHandler<DeleteVerifiedEmailAddressRequest, Void> asyncHandler){\r\n    Void result = null;\r\n    try {\r\n        deleteVerifiedEmailAddress(deleteVerifiedEmailAddressRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(deleteVerifiedEmailAddressRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ReceiptAction.getSNSAction",
	"Comment": "publishes the email content within a notification to amazon sns.",
	"Method": "SNSAction getSNSAction(){\r\n    return sNSAction;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketMetricsConfigurationsResult.setTruncated",
	"Comment": "for internal use only. sets the truncated property forthis metrics configuration listing, indicating if this is a complete listing or not andwhether the caller needs to make additional calls to s3 to get more results.",
	"Method": "void setTruncated(boolean isTruncated){\r\n    this.isTruncated = isTruncated;\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.AmazonTranscribeAsyncClient.getTranscriptionJobAsync",
	"Comment": "returns information about a transcription job. to see the status of thejob, check the transcriptionjobstatus field. if the statusis completed, the job is finished and you can find theresults at the location specified in thetranscriptionfileuri field.",
	"Method": "Future<GetTranscriptionJobResult> getTranscriptionJobAsync(GetTranscriptionJobRequest getTranscriptionJobRequest,Future<GetTranscriptionJobResult> getTranscriptionJobAsync,GetTranscriptionJobRequest getTranscriptionJobRequest,AsyncHandler<GetTranscriptionJobRequest, GetTranscriptionJobResult> asyncHandler){\r\n    return executorService.submit(new Callable<GetTranscriptionJobResult>() {\r\n        public GetTranscriptionJobResult call() throws Exception {\r\n            GetTranscriptionJobResult result = null;\r\n            try {\r\n                result = getTranscriptionJob(getTranscriptionJobRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(getTranscriptionJobRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.AmazonTranscribeAsyncClient.getTranscriptionJobAsync",
	"Comment": "returns information about a transcription job. to see the status of thejob, check the transcriptionjobstatus field. if the statusis completed, the job is finished and you can find theresults at the location specified in thetranscriptionfileuri field.",
	"Method": "Future<GetTranscriptionJobResult> getTranscriptionJobAsync(GetTranscriptionJobRequest getTranscriptionJobRequest,Future<GetTranscriptionJobResult> getTranscriptionJobAsync,GetTranscriptionJobRequest getTranscriptionJobRequest,AsyncHandler<GetTranscriptionJobRequest, GetTranscriptionJobResult> asyncHandler){\r\n    GetTranscriptionJobResult result = null;\r\n    try {\r\n        result = getTranscriptionJob(getTranscriptionJobRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(getTranscriptionJobRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteApnsVoipSandboxChannelResult.getAPNSVoipSandboxChannelResponse",
	"Comment": "apple voip developer push notification service channel definition.",
	"Method": "APNSVoipSandboxChannelResponse getAPNSVoipSandboxChannelResponse(){\r\n    return aPNSVoipSandboxChannelResponse;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.setFileOffset",
	"Comment": "sets the optional offset in the specified file, at which to beginuploading data for this part. if not specified, data will be read fromthe beginning of the file.",
	"Method": "void setFileOffset(long fileOffset){\r\n    this.fileOffset = fileOffset;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.util.MimetypesTest.testExtensionsWithCaps",
	"Comment": "tests that file names with mixed case are detected correctly.",
	"Method": "void testExtensionsWithCaps(){\r\n    Mimetypes mt = Mimetypes.getInstance();\r\n    assertEquals(mt.getMimetype(\"image.JPeG\"), \"image/jpeg\");\r\n}"
}, {
	"Path": "com.amazonaws.demo.numberguess.manager.CognitoSyncClientManager.init",
	"Comment": "initializes the cognitosyncclient. this must be called before calling anymethods in this class.",
	"Method": "void init(Context context){\r\n    if (client == null) {\r\n        client = new CognitoSyncManager(context.getApplicationContext(), Regions.US_EAST_1, CognitoClientManager.getCredentials());\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.Body.setHtml",
	"Comment": "the content of the message, in html format. use this for email clientsthat can process html. you can include clickable links, formatted text,and much more in an html message.",
	"Method": "void setHtml(Content html){\r\n    this.html = html;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DeleteVerifiedEmailAddressRequest.withEmailAddress",
	"Comment": "an email address to be removed from the list of verified addresses.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteVerifiedEmailAddressRequest withEmailAddress(String emailAddress){\r\n    this.emailAddress = emailAddress;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.IdentityVerificationAttributes.getVerificationToken",
	"Comment": "the verification token for a domain identity. null for email addressidentities.",
	"Method": "String getVerificationToken(){\r\n    return verificationToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.DecryptRequest.setEncryptionContext",
	"Comment": "the encryption context. if this was specified in the encryptfunction, it must be specified here or the decryption operation willfail. for more information, see encryption context.",
	"Method": "void setEncryptionContext(java.util.Map<String, String> encryptionContext){\r\n    this.encryptionContext = encryptionContext;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointLocation.withLatitude",
	"Comment": "the latitude of the endpoint location, rounded to one decimal place.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointLocation withLatitude(Double latitude){\r\n    this.latitude = latitude;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ExportJobResponse.withCreationDate",
	"Comment": "the date the job was created in iso 8601 format.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ExportJobResponse withCreationDate(String creationDate){\r\n    this.creationDate = creationDate;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSSandboxChannelResponse.setHasTokenKey",
	"Comment": "indicates whether the channel is configured with a key for apns tokenauthentication. provide a token key by setting the tokenkey attribute.",
	"Method": "void setHasTokenKey(Boolean hasTokenKey){\r\n    this.hasTokenKey = hasTokenKey;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignHook.setWebUrl",
	"Comment": "web url to call for hook. if the url has authentication specified it willbe added as authentication to the request",
	"Method": "void setWebUrl(String webUrl){\r\n    this.webUrl = webUrl;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointBatchItem.withEffectiveDate",
	"Comment": "the last time the endpoint was updated. provided in iso 8601 format.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointBatchItem withEffectiveDate(String effectiveDate){\r\n    this.effectiveDate = effectiveDate;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.Record.withApproximateArrivalTimestamp",
	"Comment": "the approximate time that the record was inserted into the stream.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Record withApproximateArrivalTimestamp(java.util.Date approximateArrivalTimestamp){\r\n    this.approximateArrivalTimestamp = approximateArrivalTimestamp;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateEndpointRequest.withEndpointRequest",
	"Comment": "endpoint update requestreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateEndpointRequest withEndpointRequest(EndpointRequest endpointRequest){\r\n    this.endpointRequest = endpointRequest;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointResponse.withDemographic",
	"Comment": "the endpoint demographic attributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointResponse withDemographic(EndpointDemographic demographic){\r\n    this.demographic = demographic;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListVersionsRequest.getPrefix",
	"Comment": "gets the optional prefix parameter restricting the response to keys thatbegin with the specified prefix. use prefixes to separate a bucket intodifferent sets of keys, similar to how a file system organizes files intodirectories.",
	"Method": "String getPrefix(){\r\n    return prefix;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ListGrantsResult.isTruncated",
	"Comment": "a flag that indicates whether there are more items in the list. when thisvalue is true, the list in this response is truncated. to get more items,pass the value of the nextmarker element in this response tothe marker parameter in a subsequent request.",
	"Method": "Boolean isTruncated(){\r\n    return truncated;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.util.SimpleDBUtils.quoteName",
	"Comment": "quotes and escapes an attribute name or domain name by wrapping it withbackticks and escaping any backticks inside the name.",
	"Method": "String quoteName(String name){\r\n    return \"`\" + replaceChar(name, \"`\", \"``\") + \"`\";\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.FilterLogEventsResult.getSearchedLogStreams",
	"Comment": "indicates which log streams have been searched and whether each has beensearched completely.",
	"Method": "java.util.List<SearchedLogStream> getSearchedLogStreams(){\r\n    return searchedLogStreams;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SendUsersMessageResponse.withApplicationId",
	"Comment": "the unique id of the amazon pinpoint project used to send the message.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendUsersMessageResponse withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.PutKeyPolicyRequest.getBypassPolicyLockoutSafetyCheck",
	"Comment": "a flag to indicate whether to bypass the key policy lockout safety check.setting this value to true increases the risk that the cmk becomesunmanageable. do not set this value to true indiscriminately.for more information, refer to the scenario in the default key policy section in the aws key management servicedeveloper guide.use this parameter only when you intend to prevent the principal that ismaking the request from making a subsequent putkeypolicyrequest on the cmk.the default value is false.",
	"Method": "Boolean getBypassPolicyLockoutSafetyCheck(){\r\n    return bypassPolicyLockoutSafetyCheck;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateApnsChannelResult.withAPNSChannelResponse",
	"Comment": "apple distribution push notification service channel definition.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateApnsChannelResult withAPNSChannelResponse(APNSChannelResponse aPNSChannelResponse){\r\n    this.aPNSChannelResponse = aPNSChannelResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateThingRequest.setRemoveThingType",
	"Comment": "remove a thing type association. if true, the association isremoved.",
	"Method": "void setRemoveThingType(Boolean removeThingType){\r\n    this.removeThingType = removeThingType;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyPartRequest.getSourceBucketName",
	"Comment": "gets the name of the bucket containing the source object to be copied.",
	"Method": "String getSourceBucketName(){\r\n    return sourceBucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ListIdentitiesResult.withNextToken",
	"Comment": "the token used for pagination.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListIdentitiesResult withNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointanalytics.model.Event.clearmetricsEntries",
	"Comment": "removes all the entries added into metrics.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Event clearmetricsEntries(){\r\n    this.metrics = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.withPartSize",
	"Comment": "sets the size of this part, in bytes, and returns this updateduploadpartrequest object so that additional method calls can be chainedtogether.",
	"Method": "UploadPartRequest withPartSize(long partSize){\r\n    this.partSize = partSize;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.TrackingOptions.setCustomRedirectDomain",
	"Comment": "the custom subdomain that will be used to redirect email recipients tothe amazon ses event tracking domain.",
	"Method": "void setCustomRedirectDomain(String customRedirectDomain){\r\n    this.customRedirectDomain = customRedirectDomain;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ActivityResponse.setEnd",
	"Comment": "the actual time the activity was marked cancelled or completed. providedin iso 8601 format.",
	"Method": "void setEnd(String end){\r\n    this.end = end;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.getProgressListener",
	"Comment": "returns the optional progress listener for receiving updates about objectupload status.",
	"Method": "com.amazonaws.services.s3.model.ProgressListener getProgressListener(){\r\n    final ProgressListener generalProgressListener = getGeneralProgressListener();\r\n    if (generalProgressListener instanceof LegacyS3ProgressListener) {\r\n        return ((LegacyS3ProgressListener) generalProgressListener).unwrap();\r\n    } else {\r\n        return null;\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.DescribeStreamProcessorResult.setLastUpdateTimestamp",
	"Comment": "the time, in unix format, the stream processor was last updated. forexample, when the stream processor moves from a running state to a failedstate, or when the user starts or stops the stream processor.",
	"Method": "void setLastUpdateTimestamp(java.util.Date lastUpdateTimestamp){\r\n    this.lastUpdateTimestamp = lastUpdateTimestamp;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DirectMessageConfiguration.getGCMMessage",
	"Comment": "the message to gcm channels. overrides the default push notificationmessage.",
	"Method": "GCMMessage getGCMMessage(){\r\n    return gCMMessage;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CreateReceiptFilterRequest.getFilter",
	"Comment": "a data structure that describes the ip address filter to create, whichconsists of a name, an ip address range, and whether to allow or blockmail from it.",
	"Method": "ReceiptFilter getFilter(){\r\n    return filter;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.model.UploadResult.getVersionId",
	"Comment": "returns the version id of the new object. the version id is only set ifversioning has been enabled for the bucket.",
	"Method": "String getVersionId(){\r\n    return versionId;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.model.TagStreamRequest.clearTagsEntries",
	"Comment": "removes all the entries added into tags.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "TagStreamRequest clearTagsEntries(){\r\n    this.tags = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.BatchDeleteAttributesRequest.withItems",
	"Comment": "a list of items on which to perform the operation.returns a reference to this object so that method calls can be chained together.",
	"Method": "BatchDeleteAttributesRequest withItems(DeletableItem items,BatchDeleteAttributesRequest withItems,java.util.Collection<DeletableItem> items){\r\n    if (items == null) {\r\n        this.items = null;\r\n    } else {\r\n        com.amazonaws.internal.ListWithAutoConstructFlag<DeletableItem> itemsCopy = new com.amazonaws.internal.ListWithAutoConstructFlag<DeletableItem>(items.size());\r\n        itemsCopy.addAll(items);\r\n        this.items = itemsCopy;\r\n    }\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.CreateVocabularyResult.getFailureReason",
	"Comment": "if the vocabularystate field is failed, thisfield contains information about why the job failed.",
	"Method": "String getFailureReason(){\r\n    return failureReason;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ExportJobResponse.withFailures",
	"Comment": "provides up to 100 of the first failed entries for the job, if any exist.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ExportJobResponse withFailures(String failures,ExportJobResponse withFailures,java.util.Collection<String> failures){\r\n    setFailures(failures);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GCMMessage.withRawContent",
	"Comment": "the raw json formatted string to be used as the payload. this valueoverrides the message.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GCMMessage withRawContent(String rawContent){\r\n    this.rawContent = rawContent;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.PersonDetection.withPerson",
	"Comment": "details about a person tracked in a video.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PersonDetection withPerson(PersonDetail person){\r\n    this.person = person;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceRecord.getFaceDetail",
	"Comment": "structure containing attributes of the face that the algorithm detected.",
	"Method": "FaceDetail getFaceDetail(){\r\n    return faceDetail;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSVoipSandboxChannelRequest.withTeamId",
	"Comment": "the team id used for apns tokens.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSVoipSandboxChannelRequest withTeamId(String teamId){\r\n    this.teamId = teamId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SMSMessage.setOriginationNumber",
	"Comment": "the phone number that the sms message originates from. specify one of thededicated long codes or short codes that you requested from aws supportand that is assigned to your account. if this attribute is not specified,amazon pinpoint randomly assigns a long code.",
	"Method": "void setOriginationNumber(String originationNumber){\r\n    this.originationNumber = originationNumber;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.LexiconDescription.withAttributes",
	"Comment": "provides lexicon metadata.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "LexiconDescription withAttributes(LexiconAttributes attributes){\r\n    this.attributes = attributes;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.Event.withMetrics",
	"Comment": "event metricsreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Event withMetrics(java.util.Map<String, Double> metrics){\r\n    this.metrics = metrics;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListVersionsRequest.setPrefix",
	"Comment": "sets the optional prefix parameter restricting the response to keys thatbegin with the specified prefix.",
	"Method": "void setPrefix(String prefix){\r\n    this.prefix = prefix;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignHook.getWebUrl",
	"Comment": "web url to call for hook. if the url has authentication specified it willbe added as authentication to the request",
	"Method": "String getWebUrl(){\r\n    return webUrl;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetFaceSearchResult.setVideoMetadata",
	"Comment": "information about a video that amazon rekognition analyzed.videometadata is returned in every page of paginatedresponses from a amazon rekognition video operation.",
	"Method": "void setVideoMetadata(VideoMetadata videoMetadata){\r\n    this.videoMetadata = videoMetadata;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetBucketPolicyRequest.getBucketName",
	"Comment": "returns the name of the amazon s3 bucket whose policy is being retrieved.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.MultipartUploadListing.getBucketName",
	"Comment": "returns the name of the bucket containing the listed multipart uploads,as specified in the original request.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListPlatformApplicationsResult.setPlatformApplications",
	"Comment": "platform applications returned when calling listplatformapplicationsaction.",
	"Method": "void setPlatformApplications(java.util.Collection<PlatformApplication> platformApplications){\r\n    if (platformApplications == null) {\r\n        this.platformApplications = null;\r\n        return;\r\n    }\r\n    this.platformApplications = new java.util.ArrayList<PlatformApplication>(platformApplications);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.AmazonS3URI.parseVersionId",
	"Comment": "attempts to parse a versionid parameter from the querystring.",
	"Method": "String parseVersionId(String query){\r\n    if (query != null) {\r\n        String[] params = VERSION_ID_PATTERN.split(query);\r\n        for (String param : params) {\r\n            if (param.startsWith(\"versionId=\")) {\r\n                return decode(param.substring(10));\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.AmazonTranscribeAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this async client to executerequests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.getObjectMetadata",
	"Comment": "returns the additional information about the part being uploaded.",
	"Method": "ObjectMetadata getObjectMetadata(){\r\n    return objectMetadata;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignEmailMessage.withFromAddress",
	"Comment": "the email address used to send the email from. defaults to usefromaddress specified in the email channel.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CampaignEmailMessage withFromAddress(String fromAddress){\r\n    this.fromAddress = fromAddress;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartETag.withETag",
	"Comment": "sets the entity tag generated from the content of the associated part,and returns this updated partetag object so that additional method callscan be chained together.",
	"Method": "PartETag withETag(String eTag){\r\n    this.eTag = eTag;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.DetectModerationLabelsResult.getModerationLabels",
	"Comment": "array of detected moderation labels and the time, in millseconds from thestart of the video, they were detected.",
	"Method": "java.util.List<ModerationLabel> getModerationLabels(){\r\n    return moderationLabels;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.pinpoint.targeting.notification.NotificationClientBase.handleCampaignPush",
	"Comment": "handles pinpoint push messages by posting a local notification whenthe app is in the background, or sending a local broadcast if the app isin the foreground. also on api level 19 devices and above, if localnotifications have been disabled and the app is in the background, alocal broadcast is sent.",
	"Method": "NotificationClient.CampaignPushResult handleCampaignPush(NotificationDetails notificationDetails){\r\n    final String from = notificationDetails.getFrom();\r\n    final Bundle data = notificationDetails.getBundle();\r\n    final Class<?> targetClass = notificationDetails.getTargetClass();\r\n    String intentAction = notificationDetails.getIntentAction();\r\n    notificationChannelId = notificationDetails.getNotificationChannelId();\r\n    if (data == null || !data.containsKey(CAMPAIGN_ID_PUSH_KEY)) {\r\n        return NotificationClient.CampaignPushResult.NOT_HANDLED;\r\n    }\r\n    final boolean isAppInForeground = appUtil.isAppInForeground();\r\n    final String imageUrl = data.getString(CAMPAIGN_IMAGE_PUSH_KEY);\r\n    final String imageIconUrl = data.getString(CAMPAIGN_IMAGE_ICON_PUSH_KEY);\r\n    final String imageSmallIconUrl = data.getString(CAMPAIGN_IMAGE_SMALL_ICON_PUSH_KEY);\r\n    final Map<String, String> campaignAttributes = new HashMap<String, String>();\r\n    campaignAttributes.put(CAMPAIGN_ID_ATTRIBUTE_KEY, data.getString(CAMPAIGN_ID_PUSH_KEY));\r\n    campaignAttributes.put(CAMPAIGN_TREATMENT_ID_ATTRIBUTE_KEY, data.getString(CAMPAIGN_TREATMENT_ID_PUSH_KEY));\r\n    campaignAttributes.put(CAMPAIGN_ACTIVITY_ID_ATTRIBUTE_KEY, data.getString(CAMPAIGN_ACTIVITY_ID_PUSH_KEY));\r\n    this.pinpointContext.getAnalyticsClient().setCampaignAttributes(campaignAttributes);\r\n    log.info(\"Campaign Attributes are:\" + campaignAttributes);\r\n    if (AWS_EVENT_TYPE_OPENED.equals(from)) {\r\n        return this.handleNotificationOpen(campaignAttributes, data);\r\n    }\r\n    String eventType = null;\r\n    if (isAppInForeground) {\r\n        eventType = AWS_EVENT_TYPE_RECEIVED_FOREGROUND;\r\n    } else {\r\n        eventType = AWS_EVENT_TYPE_RECEIVED_BACKGROUND;\r\n    }\r\n    final AnalyticsEvent pushEvent = this.pinpointContext.getAnalyticsClient().createEvent(eventType);\r\n    addCampaignAttributesToEvent(pushEvent, campaignAttributes);\r\n    pushEvent.addAttribute(\"isAppInForeground\", Boolean.toString(isAppInForeground));\r\n    try {\r\n        if (!pinpointContext.getPinpointConfiguration().getShouldPostNotificationsInForeground() && isAppInForeground) {\r\n            return NotificationClient.CampaignPushResult.APP_IN_FOREGROUND;\r\n        } else {\r\n            if (\"1\".equalsIgnoreCase(data.getString(NOTIFICATION_SILENT_PUSH_KEY))) {\r\n                return NotificationClient.CampaignPushResult.SILENT;\r\n            }\r\n            if (!areAppNotificationsEnabled() || !displayNotification(data, targetClass, imageUrl, imageIconUrl, imageSmallIconUrl, campaignAttributes, intentAction)) {\r\n                pushEvent.addAttribute(\"isOptedOut\", \"true\");\r\n                return NotificationClient.CampaignPushResult.OPTED_OUT;\r\n            }\r\n        }\r\n    } finally {\r\n        this.pinpointContext.getAnalyticsClient().recordEvent(pushEvent);\r\n        this.pinpointContext.getAnalyticsClient().submitEvents();\r\n    }\r\n    return NotificationClient.CampaignPushResult.POSTED_NOTIFICATION;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClient.deleteTemplate",
	"Comment": "deletes an email template.you can execute this operation no more than once per second.",
	"Method": "DeleteTemplateResult deleteTemplate(DeleteTemplateRequest deleteTemplateRequest){\r\n    ExecutionContext executionContext = createExecutionContext(deleteTemplateRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<DeleteTemplateRequest> request = null;\r\n    Response<DeleteTemplateResult> response = null;\r\n    try {\r\n        request = new DeleteTemplateRequestMarshaller().marshall(deleteTemplateRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        response = invoke(request, new DeleteTemplateResultStaxUnmarshaller(), executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.AmazonSimpleDBAsyncClient.listDomainsAsync",
	"Comment": "the listdomains operation lists all domains associatedwith the access key id. it returns domain names up to the limit set bymaxnumberofdomains. a nexttoken is returned if there are more thanmaxnumberofdomains domains. callinglistdomains successive times with thenexttoken provided by the operation returns up tomaxnumberofdomains more domain names with each successiveoperation call.",
	"Method": "Future<ListDomainsResult> listDomainsAsync(ListDomainsRequest listDomainsRequest,Future<ListDomainsResult> listDomainsAsync,ListDomainsRequest listDomainsRequest,AsyncHandler<ListDomainsRequest, ListDomainsResult> asyncHandler){\r\n    return executorService.submit(new Callable<ListDomainsResult>() {\r\n        public ListDomainsResult call() throws Exception {\r\n            ListDomainsResult result;\r\n            try {\r\n                result = listDomains(listDomainsRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(listDomainsRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.AmazonSimpleDBAsyncClient.listDomainsAsync",
	"Comment": "the listdomains operation lists all domains associatedwith the access key id. it returns domain names up to the limit set bymaxnumberofdomains. a nexttoken is returned if there are more thanmaxnumberofdomains domains. callinglistdomains successive times with thenexttoken provided by the operation returns up tomaxnumberofdomains more domain names with each successiveoperation call.",
	"Method": "Future<ListDomainsResult> listDomainsAsync(ListDomainsRequest listDomainsRequest,Future<ListDomainsResult> listDomainsAsync,ListDomainsRequest listDomainsRequest,AsyncHandler<ListDomainsRequest, ListDomainsResult> asyncHandler){\r\n    ListDomainsResult result;\r\n    try {\r\n        result = listDomains(listDomainsRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(listDomainsRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StreamProcessorOutput.getKinesisDataStream",
	"Comment": "the amazon kinesis data streams stream to which the amazon rekognitionstream processor streams the analysis results.",
	"Method": "KinesisDataStream getKinesisDataStream(){\r\n    return kinesisDataStream;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartContentModerationRequest.getVideo",
	"Comment": "the video in which you want to moderate content. the video must be storedin an amazon s3 bucket.",
	"Method": "Video getVideo(){\r\n    return video;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.TextDetection.setGeometry",
	"Comment": "the location of the detected text on the image. includes an axis alignedcoarse bounding box surrounding the text and a finer grain polygon formore accurate spatial information.",
	"Method": "void setGeometry(Geometry geometry){\r\n    this.geometry = geometry;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartListing.isTruncated",
	"Comment": "returns whether or not this listing is truncated, and additional requestsneed to be made to get more results.",
	"Method": "boolean isTruncated(){\r\n    return isTruncated;\r\n}"
}, {
	"Path": "org.bouncycastle.asn1.ASN1InputStream.buildObject",
	"Comment": "build an object given its tag and the number of bytes to construct it from.",
	"Method": "ASN1Primitive buildObject(int tag,int tagNo,int length){\r\n    boolean isConstructed = (tag & CONSTRUCTED) != 0;\r\n    DefiniteLengthInputStream defIn = new DefiniteLengthInputStream(this, length);\r\n    if ((tag & APPLICATION) != 0) {\r\n        return new DLApplicationSpecific(isConstructed, tagNo, defIn.toByteArray());\r\n    }\r\n    if ((tag & TAGGED) != 0) {\r\n        return new ASN1StreamParser(defIn).readTaggedObject(isConstructed, tagNo);\r\n    }\r\n    if (isConstructed) {\r\n        switch(tagNo) {\r\n            case OCTET_STRING:\r\n                ASN1EncodableVector v = buildDEREncodableVector(defIn);\r\n                ASN1OctetString[] strings = new ASN1OctetString[v.size()];\r\n                for (int i = 0; i != strings.length; i++) {\r\n                    strings[i] = (ASN1OctetString) v.get(i);\r\n                }\r\n                return new BEROctetString(strings);\r\n            case SEQUENCE:\r\n                if (lazyEvaluate) {\r\n                    return new LazyEncodedSequence(defIn.toByteArray());\r\n                } else {\r\n                    return DERFactory.createSequence(buildDEREncodableVector(defIn));\r\n                }\r\n            case SET:\r\n                return DERFactory.createSet(buildDEREncodableVector(defIn));\r\n            case EXTERNAL:\r\n                return new DLExternal(buildDEREncodableVector(defIn));\r\n            default:\r\n                throw new IOException(\"unknown tag \" + tagNo + \" encountered\");\r\n        }\r\n    }\r\n    return createPrimitiveDERObject(tagNo, defIn, tmpBuffers);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateThingRequest.setExpectedVersion",
	"Comment": "the expected version of the thing record in the registry. if the versionof the record in the registry does not match the expected versionspecified in the request, the updatething request isrejected with a versionconflictexception.",
	"Method": "void setExpectedVersion(Long expectedVersion){\r\n    this.expectedVersion = expectedVersion;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.DecryptRequest.withEncryptionContext",
	"Comment": "the encryption context. if this was specified in the encryptfunction, it must be specified here or the decryption operation willfail. for more information, see encryption context.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DecryptRequest withEncryptionContext(java.util.Map<String, String> encryptionContext){\r\n    this.encryptionContext = encryptionContext;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.kinesisvideo.internal.producer.jni.NativeKinesisVideoProducerJni.stopStream",
	"Comment": "stops an kinesis video stream. this is an async operation and the buffers will continue draining until streamstoppedevent is received.",
	"Method": "void stopStream(long streamHandle){\r\n    if (!isInitialized()) {\r\n        return;\r\n    }\r\n    synchronized (mSyncObject) {\r\n        stopKinesisVideoStream(mClientHandle, streamHandle);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.setObjectMetadata",
	"Comment": "sets the additional information about the part being uploaded.",
	"Method": "void setObjectMetadata(ObjectMetadata objectMetadata){\r\n    this.objectMetadata = objectMetadata;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketInventoryConfigurationsResult.isTruncated",
	"Comment": "gets whether or not this inventory configuration listing is complete.",
	"Method": "boolean isTruncated(){\r\n    return isTruncated;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceDetail.setEyesOpen",
	"Comment": "indicates whether or not the eyes on the face are open, and theconfidence level in the determination.",
	"Method": "void setEyesOpen(EyeOpen eyesOpen){\r\n    this.eyesOpen = eyesOpen;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetContentModerationResult.setVideoMetadata",
	"Comment": "information about a video that amazon rekognition analyzed.videometadata is returned in every page of paginatedresponses from getcontentmoderation.",
	"Method": "void setVideoMetadata(VideoMetadata videoMetadata){\r\n    this.videoMetadata = videoMetadata;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetUserEndpointsResult.withEndpointsResponse",
	"Comment": "list of endpointsreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetUserEndpointsResult withEndpointsResponse(EndpointsResponse endpointsResponse){\r\n    this.endpointsResponse = endpointsResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectRequest.getModifiedSinceConstraint",
	"Comment": "gets the optional modified constraint that restricts thisrequest to executing only if the object has beenmodified after the specified date.",
	"Method": "Date getModifiedSinceConstraint(){\r\n    return modifiedSinceConstraint;\r\n}"
}, {
	"Path": "com.amazonaws.serverless.sample.spring.PetStoreSpringAppConfig.handlerAdapter",
	"Comment": "create required handleradapter, to avoid several default handleradapter instances being created",
	"Method": "HandlerAdapter handlerAdapter(){\r\n    return new RequestMappingHandlerAdapter();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DefaultPushNotificationMessage.withBody",
	"Comment": "the message body of the notification.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DefaultPushNotificationMessage withBody(String body){\r\n    this.body = body;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.pinpoint.targeting.TargetingClient.removeAttribute",
	"Comment": "removes the specified attribute. all subsequently created events will nolonger have this global attribute. from the current endpoint profile generated by this client.",
	"Method": "void removeAttribute(String attributeName){\r\n    if (attributeName == null) {\r\n        log.warn(\"Null attribute name provided to removeGlobalAttribute.\");\r\n        return;\r\n    }\r\n    this.endpointProfile.addAttribute(attributeName, null);\r\n    globalAttributes.remove(attributeName);\r\n    saveAttributes();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketAnalyticsConfigurationsResult.withNextContinuationToken",
	"Comment": "sets the optional nextcontinuationtoken.nextcontinuationtoken is sent when istruncated is true meaning there aremore keys in the bucket that can be listed. the next list requests to amazons3 can be continued by providing this nextcontinuationtoken.",
	"Method": "ListBucketAnalyticsConfigurationsResult withNextContinuationToken(String nextContinuationToken){\r\n    setNextContinuationToken(nextContinuationToken);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.serverless.sample.spring.PetStoreSpringAppConfig.handlerMapping",
	"Comment": "create required handlermapping, to avoid several default handlermapping instances being created",
	"Method": "HandlerMapping handlerMapping(){\r\n    return new RequestMappingHandlerMapping();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ListGrantsResult.getTruncated",
	"Comment": "a flag that indicates whether there are more items in the list. when thisvalue is true, the list in this response is truncated. to get more items,pass the value of the nextmarker element in this response tothe marker parameter in a subsequent request.",
	"Method": "Boolean getTruncated(){\r\n    return truncated;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.FilterLogEventsRequest.withInterleaved",
	"Comment": "if the value is true, the operation makes a best effort to provideresponses that contain events from multiple log streams within the loggroup, interleaved in a single response. if the value is false, all thematched log events in the first log stream are searched first, then thosein the next log stream, and so on. the default is false.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "FilterLogEventsRequest withInterleaved(Boolean interleaved){\r\n    this.interleaved = interleaved;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.analytics.AnalyticsS3BucketDestination.setPrefix",
	"Comment": "sets the prefix to use when exporting data. the exported data begins with this prefix.",
	"Method": "void setPrefix(String prefix){\r\n    this.prefix = prefix;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.UnsubscribeRequest.withSubscriptionArn",
	"Comment": "the arn of the subscription to be deleted.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UnsubscribeRequest withSubscriptionArn(String subscriptionArn){\r\n    this.subscriptionArn = subscriptionArn;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetImportJobsRequest.withToken",
	"Comment": "the nexttoken string returned on a previous page that you use to get thenext page of results in a paginated response.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetImportJobsRequest withToken(String token){\r\n    this.token = token;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMChannelRequest.getClientSecret",
	"Comment": "the client secret that you obtained from the amazon app distributionportal.",
	"Method": "String getClientSecret(){\r\n    return clientSecret;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SetDimension.withValues",
	"Comment": "the criteria values for the segment dimension. endpoints with matchingattribute values are included or excluded from the segment, depending onthe setting for type.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SetDimension withValues(String values,SetDimension withValues,java.util.Collection<String> values){\r\n    setValues(values);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.withInputStream",
	"Comment": "sets the stream containing the data to upload for the new part, andreturns this updated object so that additional method calls can bechained together.",
	"Method": "UploadPartRequest withInputStream(InputStream inputStream){\r\n    setInputStream(inputStream);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListPhoneNumbersOptedOutResult.withNextToken",
	"Comment": "a nexttoken string is returned when you call thelistphonenumbersoptedout action if additional records areavailable after the first page of results.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListPhoneNumbersOptedOutResult withNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetCampaignVersionsRequest.getToken",
	"Comment": "the nexttoken string returned on a previous page that you use to get thenext page of results in a paginated response.",
	"Method": "String getToken(){\r\n    return token;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.DescribeVoicesResult.withVoices",
	"Comment": "a list of voices with their properties.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DescribeVoicesResult withVoices(Voice voices,DescribeVoicesResult withVoices,java.util.Collection<Voice> voices){\r\n    setVoices(voices);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyPartRequest.withUploadId",
	"Comment": "sets the id of the existing, initiated multipart upload with which thisnew part will be associated.",
	"Method": "CopyPartRequest withUploadId(String uploadId){\r\n    this.uploadId = uploadId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.testRenderTemplateAsync",
	"Comment": "creates a preview of the mime content of an email when provided with atemplate and a set of replacement data.you can execute this operation no more than once per second.",
	"Method": "Future<TestRenderTemplateResult> testRenderTemplateAsync(TestRenderTemplateRequest testRenderTemplateRequest,Future<TestRenderTemplateResult> testRenderTemplateAsync,TestRenderTemplateRequest testRenderTemplateRequest,AsyncHandler<TestRenderTemplateRequest, TestRenderTemplateResult> asyncHandler){\r\n    return executorService.submit(new Callable<TestRenderTemplateResult>() {\r\n        public TestRenderTemplateResult call() throws Exception {\r\n            TestRenderTemplateResult result = null;\r\n            try {\r\n                result = testRenderTemplate(testRenderTemplateRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(testRenderTemplateRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.testRenderTemplateAsync",
	"Comment": "creates a preview of the mime content of an email when provided with atemplate and a set of replacement data.you can execute this operation no more than once per second.",
	"Method": "Future<TestRenderTemplateResult> testRenderTemplateAsync(TestRenderTemplateRequest testRenderTemplateRequest,Future<TestRenderTemplateResult> testRenderTemplateAsync,TestRenderTemplateRequest testRenderTemplateRequest,AsyncHandler<TestRenderTemplateRequest, TestRenderTemplateResult> asyncHandler){\r\n    TestRenderTemplateResult result = null;\r\n    try {\r\n        result = testRenderTemplate(testRenderTemplateRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(testRenderTemplateRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectRequest.withProgressListener",
	"Comment": "sets the optional progress listener for receiving updates about objectdownload status, and returns this updated object so that additional methodcalls can be chained together.",
	"Method": "GetObjectRequest withProgressListener(com.amazonaws.services.s3.model.ProgressListener progressListener){\r\n    setProgressListener(progressListener);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.getSSEAwsKeyManagementParams",
	"Comment": "returns the aws key management system parameters used to encrypt theobject on server side.",
	"Method": "SSEAwsKeyManagementParams getSSEAwsKeyManagementParams(){\r\n    return sseAwsKeyManagementParams;\r\n}"
}, {
	"Path": "com.amazonaws.services.mobileanalytics.model.PutEventsRequest.getClientContext",
	"Comment": "the client context including the client id, app title, app version andpackage name.",
	"Method": "String getClientContext(){\r\n    return clientContext;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobResponse.getTotalPieces",
	"Comment": "the total number of pieces that must be imported to finish the job. eachpiece is an approximately equal portion of the endpoints to import.",
	"Method": "Integer getTotalPieces(){\r\n    return totalPieces;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectMetadataRequest.getKey",
	"Comment": "gets the key of the object whose metadata is being retrieved.",
	"Method": "String getKey(){\r\n    return key;\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.ListVocabulariesResult.withVocabularies",
	"Comment": "a list of objects that describe the vocabularies that match the searchcriteria in the request.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListVocabulariesResult withVocabularies(VocabularyInfo vocabularies,ListVocabulariesResult withVocabularies,java.util.Collection<VocabularyInfo> vocabularies){\r\n    setVocabularies(vocabularies);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SendBulkTemplatedEmailRequest.withConfigurationSetName",
	"Comment": "the name of the configuration set to use when you send an email usingsendbulktemplatedemail.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendBulkTemplatedEmailRequest withConfigurationSetName(String configurationSetName){\r\n    this.configurationSetName = configurationSetName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ListCustomVerificationEmailTemplatesResult.setNextToken",
	"Comment": "a token indicating that there are additional custom verification emailtemplates available to be listed. pass this token to a subsequent call tolisttemplates to retrieve the next 50 custom verificationemail templates.",
	"Method": "void setNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GCMMessage.setSilentPush",
	"Comment": "indicates if the message should display on the users device. silentpushes can be used for remote configuration and phone home use cases.",
	"Method": "void setSilentPush(Boolean silentPush){\r\n    this.silentPush = silentPush;\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.StartTranscriptionJobRequest.withMedia",
	"Comment": "an object that describes the input media for a transcription job.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "StartTranscriptionJobRequest withMedia(Media media){\r\n    this.media = media;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ReceiptFilter.getIpFilter",
	"Comment": "a structure that provides the ip addresses to block or allow, and whetherto block or allow incoming mail from them.",
	"Method": "ReceiptIpFilter getIpFilter(){\r\n    return ipFilter;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMMessage.getExpiresAfter",
	"Comment": "optional. number of seconds adm should retain the message if the deviceis offline",
	"Method": "String getExpiresAfter(){\r\n    return expiresAfter;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.LexiconAttributes.withLexemesCount",
	"Comment": "number of lexemes in the lexicon.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "LexiconAttributes withLexemesCount(Integer lexemesCount){\r\n    this.lexemesCount = lexemesCount;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.ExportTask.setDestinationPrefix",
	"Comment": "the prefix that was used as the start of amazon s3 key for every objectexported.",
	"Method": "void setDestinationPrefix(String destinationPrefix){\r\n    this.destinationPrefix = destinationPrefix;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EventItemResponse.withMessage",
	"Comment": "a custom message that is associated with the processing of an event.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EventItemResponse withMessage(String message){\r\n    this.message = message;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.GetMLModelRequest.isVerbose",
	"Comment": "specifies whether the getmlmodel operation should returnrecipe.if true, recipe is returned.if false, recipe is not returned.",
	"Method": "Boolean isVerbose(){\r\n    return verbose;\r\n}"
}, {
	"Path": "com.amazonaws.demo.s3transferutility.DownloadActivity.beginDownloadInBackground",
	"Comment": "begins to download the file specified by the key in the bucket.",
	"Method": "void beginDownloadInBackground(String key){\r\n    File file = new File(Environment.getExternalStorageDirectory().toString() + \"/\" + key);\r\n    Context context = getApplicationContext();\r\n    Intent intent = new Intent(context, MyService.class);\r\n    intent.putExtra(MyService.INTENT_KEY_NAME, key);\r\n    intent.putExtra(MyService.INTENT_TRANSFER_OPERATION, MyService.TRANSFER_OPERATION_DOWNLOAD);\r\n    intent.putExtra(MyService.INTENT_FILE, file);\r\n    context.startService(intent);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.EnableEnhancedMonitoringResult.withCurrentShardLevelMetrics",
	"Comment": "represents the current state of the metrics that are in the enhancedstate before the operation.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EnableEnhancedMonitoringResult withCurrentShardLevelMetrics(String currentShardLevelMetrics,EnableEnhancedMonitoringResult withCurrentShardLevelMetrics,java.util.Collection<String> currentShardLevelMetrics){\r\n    setCurrentShardLevelMetrics(currentShardLevelMetrics);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.UpdateCustomVerificationEmailTemplateRequest.withTemplateSubject",
	"Comment": "the subject line of the custom verification email.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateCustomVerificationEmailTemplateRequest withTemplateSubject(String templateSubject){\r\n    this.templateSubject = templateSubject;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.lex.interactionkit.internal.audio.LexAudioRecorderBuilder.recorderPositionNotificationPeriod",
	"Comment": "set the recorder position notification period in milliseconds. therecommended value is 100ms and is the default if this is not set. thiscan slow down the app if the period is too small. this will send an eventto the ui thread at the rate given.",
	"Method": "LexAudioRecorderBuilder recorderPositionNotificationPeriod(int recorderPositionNotificationPeriod){\r\n    Preconditions.checkArgument(recorderPositionNotificationPeriod > 0, \"recorderPositionNotificationPeriod must be greater than 0.\");\r\n    mRecorderPositionNotificationPeriod = recorderPositionNotificationPeriod;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartListing.setEncodingType",
	"Comment": "for internal use only. sets the encoding type used by amazon s3 to encodeobject key names in the xml response.",
	"Method": "void setEncodingType(String encodingType){\r\n    this.encodingType = encodingType;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.DomainMetadataResult.setAttributeNamesSizeBytes",
	"Comment": "the total size of all unique attribute names in the domain, in bytes.",
	"Method": "void setAttributeNamesSizeBytes(Long attributeNamesSizeBytes){\r\n    this.attributeNamesSizeBytes = attributeNamesSizeBytes;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.kinesis.kinesisrecorder.KinesisRecorder.upgrade",
	"Comment": "ports kinesis records in old records file into the new place and in newformat.",
	"Method": "void upgrade(File directory){\r\n    synchronized (KinesisRecorder.this) {\r\n        final File recordsDir = new File(directory, Constants.RECORDS_DIRECTORY);\r\n        final File oldRecordsFile = new File(recordsDir, Constants.RECORDS_FILE_NAME);\r\n        if (!oldRecordsFile.isFile()) {\r\n            return;\r\n        }\r\n        final FileRecordStore frs = new FileRecordStore(directory, Constants.RECORDS_FILE_NAME, Long.MAX_VALUE);\r\n        final RecordIterator iterator = frs.iterator();\r\n        while (iterator.hasNext()) {\r\n            try {\r\n                final JSONObject json = new JSONObject(iterator.next());\r\n                saveRecord(JSONRecordAdapter.getData(json).array(), JSONRecordAdapter.getStreamName(json));\r\n            } catch (final JSONException e) {\r\n                LOGGER.debug(\"caught exception\", e);\r\n                continue;\r\n            }\r\n        }\r\n        try {\r\n            iterator.close();\r\n        } catch (final IOException e) {\r\n            LOGGER.debug(\"caught exception\", e);\r\n        }\r\n        oldRecordsFile.delete();\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.S3CryptoModuleBase.contentCryptoMaterialOf",
	"Comment": "returns the content crypto material of an existing s3 object.",
	"Method": "ContentCryptoMaterial contentCryptoMaterialOf(S3ObjectWrapper s3w){\r\n    if (s3w.hasEncryptionInfo()) {\r\n        return // existing CEK not necessarily key-wrapped\r\n        ContentCryptoMaterial.fromObjectMetadata(// existing CEK not necessarily key-wrapped\r\n        s3w.getObjectMetadata(), // existing CEK not necessarily key-wrapped\r\n        kekMaterialsProvider, cryptoConfig.getCryptoProvider(), false, kms);\r\n    }\r\n    final S3ObjectWrapper origIfile = fetchInstructionFile(s3w.getS3ObjectId(), null);\r\n    if (origIfile == null) {\r\n        throw new IllegalArgumentException(\"S3 object is not encrypted: \" + s3w);\r\n    }\r\n    if (!origIfile.isInstructionFile()) {\r\n        throw new AmazonClientException(\"Invalid instruction file for S3 object: \" + s3w);\r\n    }\r\n    final String json = origIfile.toJsonString();\r\n    return ccmFromJson(json);\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SendCustomVerificationEmailRequest.getConfigurationSetName",
	"Comment": "name of a configuration set to use when sending the verification email.",
	"Method": "String getConfigurationSetName(){\r\n    return configurationSetName;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideoarchivedmedia.model.ListFragmentsRequest.setFragmentSelector",
	"Comment": "describes the time stamp range and time stamp origin for the range offragments to return.",
	"Method": "void setFragmentSelector(FragmentSelector fragmentSelector){\r\n    this.fragmentSelector = fragmentSelector;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.KeyMetadata.withCreationDate",
	"Comment": "the date and time when the cmk was created.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "KeyMetadata withCreationDate(java.util.Date creationDate){\r\n    this.creationDate = creationDate;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteApnsSandboxChannelResult.setAPNSSandboxChannelResponse",
	"Comment": "apple development push notification service channel definition.",
	"Method": "void setAPNSSandboxChannelResponse(APNSSandboxChannelResponse aPNSSandboxChannelResponse){\r\n    this.aPNSSandboxChannelResponse = aPNSSandboxChannelResponse;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.InitiateMultipartUploadResult.getKey",
	"Comment": "returns the object key for which the multipart upload was initiated.",
	"Method": "String getKey(){\r\n    return key;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ListConfigurationSetsRequest.withNextToken",
	"Comment": "a token returned from a previous call tolistconfigurationsets to indicate the position of theconfiguration set in the configuration set list.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListConfigurationSetsRequest withNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.PutRecordBatchResult.setRequestResponses",
	"Comment": "the results array. for each record, the index of the response element isthe same as the index used in the request array.",
	"Method": "void setRequestResponses(java.util.Collection<PutRecordBatchResponseEntry> requestResponses){\r\n    if (requestResponses == null) {\r\n        this.requestResponses = null;\r\n        return;\r\n    }\r\n    this.requestResponses = new java.util.ArrayList<PutRecordBatchResponseEntry>(requestResponses);\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.GetMLModelRequest.setVerbose",
	"Comment": "specifies whether the getmlmodel operation should returnrecipe.if true, recipe is returned.if false, recipe is not returned.",
	"Method": "void setVerbose(Boolean verbose){\r\n    this.verbose = verbose;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.DeletePlatformApplicationRequest.getPlatformApplicationArn",
	"Comment": "platformapplicationarn of platform application object to delete.",
	"Method": "String getPlatformApplicationArn(){\r\n    return platformApplicationArn;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SendUsersMessageRequest.getMessageConfiguration",
	"Comment": "message definitions for the default message and any messages that aretailored for specific channels.",
	"Method": "DirectMessageConfiguration getMessageConfiguration(){\r\n    return messageConfiguration;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.RestoreObjectRequest.setKey",
	"Comment": "sets the key, the name of the reference to the object to restore, whichis now stored in amazon glacier.",
	"Method": "void setKey(String key){\r\n    this.key = key;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSMessage.getSubstitutions",
	"Comment": "default message substitutions. can be overridden by individual addresssubstitutions.",
	"Method": "java.util.Map<String, java.util.List<String>> getSubstitutions(){\r\n    return substitutions;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetCampaignActivitiesRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetCampaignActivitiesRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.AbstractPutObjectRequest.setSSEAwsKeyManagementParams",
	"Comment": "sets the aws key management system parameters used to encrypt the objecton server side.",
	"Method": "void setSSEAwsKeyManagementParams(SSEAwsKeyManagementParams params){\r\n    if (params != null && this.sseCustomerKey != null) {\r\n        throw new IllegalArgumentException(\"Either SSECustomerKey or SSEAwsKeyManagementParams must not be set at the same time.\");\r\n    }\r\n    this.sseAwsKeyManagementParams = params;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DirectMessageConfiguration.getSMSMessage",
	"Comment": "the message to sms channels. overrides the default message.",
	"Method": "SMSMessage getSMSMessage(){\r\n    return sMSMessage;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceDetail.withMouthOpen",
	"Comment": "indicates whether or not the mouth on the face is open, and theconfidence level in the determination.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "FaceDetail withMouthOpen(MouthOpen mouthOpen){\r\n    this.mouthOpen = mouthOpen;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetCelebrityInfoResult.withUrls",
	"Comment": "an array of urls pointing to additional celebrity information.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetCelebrityInfoResult withUrls(String urls,GetCelebrityInfoResult withUrls,java.util.Collection<String> urls){\r\n    setUrls(urls);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CompleteMultipartUploadRequest.getKey",
	"Comment": "returns the key under which the multipart upload to complete is stored.",
	"Method": "String getKey(){\r\n    return key;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.KinesisFirehoseDestination.withIAMRoleARN",
	"Comment": "the arn of the iam role under which amazon ses publishes email sendingevents to the amazon kinesis firehose stream.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "KinesisFirehoseDestination withIAMRoleARN(String iAMRoleARN){\r\n    this.iAMRoleARN = iAMRoleARN;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.UpdateCustomVerificationEmailTemplateRequest.withSuccessRedirectionURL",
	"Comment": "the url that the recipient of the verification email is sent to if his orher address is successfully verified.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateCustomVerificationEmailTemplateRequest withSuccessRedirectionURL(String successRedirectionURL){\r\n    this.successRedirectionURL = successRedirectionURL;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListPhoneNumbersOptedOutResult.getNextToken",
	"Comment": "a nexttoken string is returned when you call thelistphonenumbersoptedout action if additional records areavailable after the first page of results.",
	"Method": "String getNextToken(){\r\n    return nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CreateApplicationRequest.withName",
	"Comment": "the display name of the application. used in the amazon pinpoint console.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreateApplicationRequest withName(String name){\r\n    this.name = name;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointBatchItem.setRequestId",
	"Comment": "the unique id for the most recent request to update the endpoint.",
	"Method": "void setRequestId(String requestId){\r\n    this.requestId = requestId;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.UpdateAccountSendingEnabledRequest.withEnabled",
	"Comment": "describes whether email sending is enabled or disabled for your amazonses account in the current aws region.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateAccountSendingEnabledRequest withEnabled(Boolean enabled){\r\n    this.enabled = enabled;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.lexrts.model.LimitExceededException.getRetryAfterSeconds",
	"Comment": "returns the value of the retryafterseconds property for this object.",
	"Method": "String getRetryAfterSeconds(){\r\n    return retryAfterSeconds;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.lex.interactionkit.internal.audio.LexAudioRecorder.startRecording",
	"Comment": "method to setup, start the recorder, and read data. when silence isdetected or the recorder is stopped by the user, clean up resources.",
	"Method": "void startRecording(){\r\n    state = VADState.NOT_STARTPOINTED;\r\n    noSpeechTimeoutFired = false;\r\n    maxSpeechTimeoutFired = false;\r\n    mRecordStartTime = SystemClock.elapsedRealtime();\r\n    lastEventTime = mRecordStartTime;\r\n    super.startRecording();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSVoipChannelResponse.getHasTokenKey",
	"Comment": "if the channel is registered with a token key for authentication.",
	"Method": "Boolean getHasTokenKey(){\r\n    return hasTokenKey;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.UpdateAccountSendingEnabledRequest.getEnabled",
	"Comment": "describes whether email sending is enabled or disabled for your amazonses account in the current aws region.",
	"Method": "Boolean getEnabled(){\r\n    return enabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketAnalyticsConfigurationsRequest.getContinuationToken",
	"Comment": "gets the optional continuation token.continuation token allows a list to becontinued from a specific point. continuationtoken is provided in truncated list results.",
	"Method": "String getContinuationToken(){\r\n    return continuationToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.ListTagsForStreamResult.getHasMoreTags",
	"Comment": "if set to true, more tags are available. to requestadditional tags, set exclusivestarttagkey to the key of thelast tag returned.",
	"Method": "Boolean getHasMoreTags(){\r\n    return hasMoreTags;\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateIndexingConfigurationRequest.withThingGroupIndexingConfiguration",
	"Comment": "thing group indexing configuration.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateIndexingConfigurationRequest withThingGroupIndexingConfiguration(ThingGroupIndexingConfiguration thingGroupIndexingConfiguration){\r\n    this.thingGroupIndexingConfiguration = thingGroupIndexingConfiguration;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.ContentModerationDetection.setTimestamp",
	"Comment": "time, in milliseconds from the beginning of the video, that themoderation label was detected.",
	"Method": "void setTimestamp(Long timestamp){\r\n    this.timestamp = timestamp;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.KeyMetadata.getEnabled",
	"Comment": "specifies whether the cmk is enabled. when keystate isenabled this value is true, otherwise it is false.",
	"Method": "Boolean getEnabled(){\r\n    return enabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListSubscriptionsByTopicResult.withNextToken",
	"Comment": "token to pass along to the next listsubscriptionsbytopicrequest. this element is returned if there are more subscriptions toretrieve.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListSubscriptionsByTopicResult withNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartFaceSearchRequest.getEnablePersonTracking",
	"Comment": "returns the value of the enablepersontracking property for this object.",
	"Method": "Boolean getEnablePersonTracking(){\r\n    return enablePersonTracking;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ListConfigurationSetsResult.setNextToken",
	"Comment": "a token indicating that there are additional configuration sets availableto be listed. pass this token to successive calls oflistconfigurationsets.",
	"Method": "void setNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListTopicsResult.withTopics",
	"Comment": "a list of topic arns.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListTopicsResult withTopics(Topic topics,ListTopicsResult withTopics,java.util.Collection<Topic> topics){\r\n    setTopics(topics);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Eyeglasses.isValue",
	"Comment": "boolean value that indicates whether the face is wearing eye glasses ornot.",
	"Method": "Boolean isValue(){\r\n    return value;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartFaceDetectionRequest.setNotificationChannel",
	"Comment": "the arn of the amazon sns topic to which you want amazon rekognitionvideo to publish the completion status of the face detection operation.",
	"Method": "void setNotificationChannel(NotificationChannel notificationChannel){\r\n    this.notificationChannel = notificationChannel;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetBucketPolicyRequest.setBucketName",
	"Comment": "sets the name of the amazon s3 bucket whose policy is being retrieved.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.MultipartUploadListing.setBucketName",
	"Comment": "sets the name of the bucket containing the listed multipart uploads, asspecified in the original request.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SMSChannelResponse.withApplicationId",
	"Comment": "the unique id of the application to which the sms channel belongs.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SMSChannelResponse withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.PersonDetection.setTimestamp",
	"Comment": "the time, in milliseconds from the start of the video, that the personwas tracked.",
	"Method": "void setTimestamp(Long timestamp){\r\n    this.timestamp = timestamp;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DescribeConfigurationSetResult.getConfigurationSet",
	"Comment": "the configuration set object associated with the specified configurationset.",
	"Method": "ConfigurationSet getConfigurationSet(){\r\n    return configurationSet;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ListReceiptFiltersResult.setFilters",
	"Comment": "a list of ip address filter data structures, which each consist of aname, an ip address range, and whether to allow or block mail from it.",
	"Method": "void setFilters(java.util.Collection<ReceiptFilter> filters){\r\n    if (filters == null) {\r\n        this.filters = null;\r\n        return;\r\n    }\r\n    this.filters = new java.util.ArrayList<ReceiptFilter>(filters);\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.LabelDetection.withTimestamp",
	"Comment": "time, in milliseconds from the start of the video, that the label wasdetected.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "LabelDetection withTimestamp(Long timestamp){\r\n    this.timestamp = timestamp;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GCMChannelResponse.withIsArchived",
	"Comment": "is this channel archivedreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GCMChannelResponse withIsArchived(Boolean isArchived){\r\n    this.isArchived = isArchived;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.SynthesizeSpeechRequest.setText",
	"Comment": "input text to synthesize. if you specify ssml as thetexttype, follow the ssml format for the input text.",
	"Method": "void setText(String text){\r\n    this.text = text;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartPersonTrackingRequest.setVideo",
	"Comment": "the video in which you want to detect people. the video must be stored inan amazon s3 bucket.",
	"Method": "void setVideo(Video video){\r\n    this.video = video;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.NumberValidateResponse.setZipCode",
	"Comment": "the postal code for the location where the phone number was originallyregistered.",
	"Method": "void setZipCode(String zipCode){\r\n    this.zipCode = zipCode;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.DescribeStreamProcessorResult.getOutput",
	"Comment": "kinesis data stream to which amazon rekognition video puts the analysisresults.",
	"Method": "StreamProcessorOutput getOutput(){\r\n    return output;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobRequest.getSegmentName",
	"Comment": "a custom name for the segment created by the import job. use ifdefinesegment is true.",
	"Method": "String getSegmentName(){\r\n    return segmentName;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.buffered.QueueBufferConfig.getMaxBatchSizeBytes",
	"Comment": "maximum permitted size of a sendmessage or sendmessagebatch message, inbytes. this setting is also enforced on the server, and if this clientsubmits a request of a size larger than the server can support, theserver will reject the request.",
	"Method": "long getMaxBatchSizeBytes(){\r\n    return maxBatchSizeBytes;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointRequest.getEffectiveDate",
	"Comment": "the date and time when the endpoint was updated, shown in iso 8601format.",
	"Method": "String getEffectiveDate(){\r\n    return effectiveDate;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.Schedule.withEndTime",
	"Comment": "the scheduled time that the campaign ends in iso 8601 format.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Schedule withEndTime(String endTime){\r\n    this.endTime = endTime;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSVoipSandboxChannelRequest.withEnabled",
	"Comment": "if the channel is enabled for sending messages.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSVoipSandboxChannelRequest withEnabled(Boolean enabled){\r\n    this.enabled = enabled;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.MessageRequest.withMessageConfiguration",
	"Comment": "message configuration.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "MessageRequest withMessageConfiguration(DirectMessageConfiguration messageConfiguration){\r\n    this.messageConfiguration = messageConfiguration;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.S3ObjectSummary.setLastModified",
	"Comment": "sets the date, according to amazon s3, this object was last modified.",
	"Method": "void setLastModified(Date lastModified){\r\n    this.lastModified = lastModified;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteObjectsRequest.withQuiet",
	"Comment": "sets the quiet element for this request. when true, only errors will bereturned in the service response.",
	"Method": "DeleteObjectsRequest withQuiet(boolean quiet){\r\n    this.setQuiet(quiet);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetCampaignVersionsRequest.withToken",
	"Comment": "the nexttoken string returned on a previous page that you use to get thenext page of results in a paginated response.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetCampaignVersionsRequest withToken(String token){\r\n    this.token = token;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.MultipartUploadListing.getMaxUploads",
	"Comment": "returns the optional maximum number of uploads to be listed, as specifiedin the original request.",
	"Method": "int getMaxUploads(){\r\n    return maxUploads;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListEndpointsByPlatformApplicationResult.withEndpoints",
	"Comment": "endpoints returned for listendpointsbyplatformapplication action.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListEndpointsByPlatformApplicationResult withEndpoints(Endpoint endpoints,ListEndpointsByPlatformApplicationResult withEndpoints,java.util.Collection<Endpoint> endpoints){\r\n    setEndpoints(endpoints);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ListCustomVerificationEmailTemplatesResult.withNextToken",
	"Comment": "a token indicating that there are additional custom verification emailtemplates available to be listed. pass this token to a subsequent call tolisttemplates to retrieve the next 50 custom verificationemail templates.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListCustomVerificationEmailTemplatesResult withNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DirectMessageConfiguration.withDefaultMessage",
	"Comment": "the default message for all channels.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DirectMessageConfiguration withDefaultMessage(DefaultMessage defaultMessage){\r\n    this.defaultMessage = defaultMessage;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GPSCoordinates.withLongitude",
	"Comment": "longitudereturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GPSCoordinates withLongitude(Double longitude){\r\n    this.longitude = longitude;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobile.client.AWSMobileClient.getConfiguration",
	"Comment": "retrieve the awsconfiguration object that representsthe awsconfiguration.json file.",
	"Method": "AWSConfiguration getConfiguration(){\r\n    return this.awsConfiguration;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointItemResponse.setMessage",
	"Comment": "a custom message associated with the registration of an endpoint whenissuing a response.",
	"Method": "void setMessage(String message){\r\n    this.message = message;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClient.listVerifiedEmailAddresses",
	"Comment": "deprecated. use the listidentities operation to list theemail addresses and domains associated with your account.",
	"Method": "ListVerifiedEmailAddressesResult listVerifiedEmailAddresses(ListVerifiedEmailAddressesRequest listVerifiedEmailAddressesRequest,ListVerifiedEmailAddressesResult listVerifiedEmailAddresses){\r\n    ListVerifiedEmailAddressesRequest listVerifiedEmailAddressesRequest = new ListVerifiedEmailAddressesRequest();\r\n    return listVerifiedEmailAddresses(listVerifiedEmailAddressesRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetExportJobRequest.withJobId",
	"Comment": "the unique id of the job.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetExportJobRequest withJobId(String jobId){\r\n    this.jobId = jobId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.SelectResult.withNextToken",
	"Comment": "an opaque token indicating that more items thanmaxnumberofitems were matched, the response size exceeded1 megabyte, or the execution time exceeded 5 seconds.returns a reference to this object so that method calls can be chained together.",
	"Method": "SelectResult withNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GCMMessage.withImageUrl",
	"Comment": "the url that points to an image used in the push notification.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GCMMessage withImageUrl(String imageUrl){\r\n    this.imageUrl = imageUrl;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetExportJobResult.withExportJobResponse",
	"Comment": "export job response.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetExportJobResult withExportJobResponse(ExportJobResponse exportJobResponse){\r\n    this.exportJobResponse = exportJobResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.withKey",
	"Comment": "sets the key of the initiated multipart upload, and returns this updatedobject so that additional method calls can be chained together.",
	"Method": "UploadPartRequest withKey(String key){\r\n    this.key = key;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ListTemplatesResult.withTemplatesMetadata",
	"Comment": "an array the contains the name and creation time stamp for each templatein your amazon ses account.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListTemplatesResult withTemplatesMetadata(TemplateMetadata templatesMetadata,ListTemplatesResult withTemplatesMetadata,java.util.Collection<TemplateMetadata> templatesMetadata){\r\n    setTemplatesMetadata(templatesMetadata);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSVoipSandboxChannelResponse.withId",
	"Comment": "channel id. not used, only for backwards compatibility.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSVoipSandboxChannelResponse withId(String id){\r\n    this.id = id;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GCMChannelResponse.withCredential",
	"Comment": "the gcm api key from google.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GCMChannelResponse withCredential(String credential){\r\n    this.credential = credential;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetCelebrityRecognitionResult.getVideoMetadata",
	"Comment": "information about a video that amazon rekognition video analyzed.videometadata is returned in every page of paginatedresponses from a amazon rekognition video operation.",
	"Method": "VideoMetadata getVideoMetadata(){\r\n    return videoMetadata;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.KinesisFirehoseDestination.setDeliveryStreamARN",
	"Comment": "the arn of the amazon kinesis firehose stream that email sending eventsshould be published to.",
	"Method": "void setDeliveryStreamARN(String deliveryStreamARN){\r\n    this.deliveryStreamARN = deliveryStreamARN;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClient.describeReceiptRule",
	"Comment": "returns the details of the specified receipt rule.for information about setting up receipt rules, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "DescribeReceiptRuleResult describeReceiptRule(DescribeReceiptRuleRequest describeReceiptRuleRequest){\r\n    ExecutionContext executionContext = createExecutionContext(describeReceiptRuleRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<DescribeReceiptRuleRequest> request = null;\r\n    Response<DescribeReceiptRuleResult> response = null;\r\n    try {\r\n        request = new DescribeReceiptRuleRequestMarshaller().marshall(describeReceiptRuleRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        response = invoke(request, new DescribeReceiptRuleResultStaxUnmarshaller(), executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.UpdateCustomVerificationEmailTemplateRequest.withTemplateName",
	"Comment": "the name of the custom verification email template that you want toupdate.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateCustomVerificationEmailTemplateRequest withTemplateName(String templateName){\r\n    this.templateName = templateName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CloudFunctionConfiguration.getInvocationRoleARN",
	"Comment": "returns the invocation role associated with this configuration.",
	"Method": "String getInvocationRoleARN(){\r\n    return invocationRoleARN;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.MessageConfiguration.setBaiduMessage",
	"Comment": "the message that the campaign delivers to baidu channels. overrides thedefault message.",
	"Method": "void setBaiduMessage(Message baiduMessage){\r\n    this.baiduMessage = baiduMessage;\r\n}"
}, {
	"Path": "com.amazonaws.serverless.proxy.model.ContainerConfig.setUseStageAsServletContext",
	"Comment": "sets whether the api gateway stage name should be included in the servlet context path.",
	"Method": "void setUseStageAsServletContext(boolean useStageAsServletContext){\r\n    this.useStageAsServletContext = useStageAsServletContext;\r\n}"
}, {
	"Path": "com.amazonaws.serverless.proxy.spring.LambdaSpringApplicationInitializer.dispatch",
	"Comment": "given a request and response objects, triggers the filters set in the servlet context and",
	"Method": "void dispatch(HttpServletRequest request,HttpServletResponse response){\r\n    currentResponse = response;\r\n    dispatcherServlet.service(request, response);\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.GetSubscriptionAttributesRequest.withSubscriptionArn",
	"Comment": "the arn of the subscription whose properties you want to get.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetSubscriptionAttributesRequest withSubscriptionArn(String subscriptionArn){\r\n    this.subscriptionArn = subscriptionArn;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSVoipSandboxChannelResponse.withLastModifiedBy",
	"Comment": "who made the last changereturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSVoipSandboxChannelResponse withLastModifiedBy(String lastModifiedBy){\r\n    this.lastModifiedBy = lastModifiedBy;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.setSourceBucketName",
	"Comment": "sets the name of the bucket containing the source object to be copied.",
	"Method": "void setSourceBucketName(String sourceBucketName){\r\n    this.sourceBucketName = sourceBucketName;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transferutility.UploadPartTask.call",
	"Comment": "runs part upload task and returns whether successfully uploaded.",
	"Method": "Boolean call(){\r\n    try {\r\n        final UploadPartResult putPartResult = s3.uploadPart(request);\r\n        dbUtil.updateState(request.getId(), TransferState.PART_COMPLETED);\r\n        dbUtil.updateETag(request.getId(), putPartResult.getETag());\r\n        return true;\r\n    } catch (final Exception e) {\r\n        if (RetryUtils.isInterrupted(e)) {\r\n            LOGGER.error(\"Upload part interrupted: \" + e.getMessage());\r\n            return false;\r\n        }\r\n        if (TransferService.networkInfoReceiver != null && !TransferService.networkInfoReceiver.isNetworkConnected()) {\r\n            dbUtil.updateState(request.getId(), TransferState.WAITING_FOR_NETWORK);\r\n            LOGGER.debug(\"Network Connection Interrupted: \" + \"Moving the TransferState to WAITING_FOR_NETWORK\");\r\n        } else {\r\n            dbUtil.updateState(request.getId(), TransferState.FAILED);\r\n            LOGGER.error(\"Encountered error uploading part \", e);\r\n        }\r\n        throw e;\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CryptoConfiguration.getStorageMode",
	"Comment": "returns the current storage mode of a cryptoconfiguration object.",
	"Method": "CryptoStorageMode getStorageMode(){\r\n    return this.storageMode;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentsResponse.getNextToken",
	"Comment": "an identifier used to retrieve the next page of results. the token isnull if no additional pages exist.",
	"Method": "String getNextToken(){\r\n    return nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.EncryptionInstruction.getSymmetricCipher",
	"Comment": "returns the symmetric cipher created with the envelope symmetric key.",
	"Method": "Cipher getSymmetricCipher(){\r\n    return this.symmetricCipher;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketNotificationConfigurationRequest.getNotificationConfiguration",
	"Comment": "gets the new notification configuration for the specified bucket.",
	"Method": "BucketNotificationConfiguration getNotificationConfiguration(){\r\n    return notificationConfiguration;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideoarchivedmedia.model.GetMediaForFragmentListRequest.setFragments",
	"Comment": "a list of the numbers of fragments for which to retrieve media. youretrieve these values with listfragments.",
	"Method": "void setFragments(java.util.Collection<String> fragments){\r\n    if (fragments == null) {\r\n        this.fragments = null;\r\n        return;\r\n    }\r\n    this.fragments = new java.util.ArrayList<String>(fragments);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketReplicationConfiguration.removeRule",
	"Comment": "removes the replication rule with the given id from the replicationconfiguration associated with amazon s3 bucket. returns the updatedobject.",
	"Method": "BucketReplicationConfiguration removeRule(String id){\r\n    rules.remove(id);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.ComparedFace.withPose",
	"Comment": "indicates the pose of the face as determined by its pitch, roll, and yaw.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ComparedFace withPose(Pose pose){\r\n    this.pose = pose;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.PutLogEventsRequest.withLogEvents",
	"Comment": "the log events.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PutLogEventsRequest withLogEvents(InputLogEvent logEvents,PutLogEventsRequest withLogEvents,java.util.Collection<InputLogEvent> logEvents){\r\n    setLogEvents(logEvents);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetApnsVoipSandboxChannelResult.setAPNSVoipSandboxChannelResponse",
	"Comment": "apple voip developer push notification service channel definition.",
	"Method": "void setAPNSVoipSandboxChannelResponse(APNSVoipSandboxChannelResponse aPNSVoipSandboxChannelResponse){\r\n    this.aPNSVoipSandboxChannelResponse = aPNSVoipSandboxChannelResponse;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.internal.UploadMonitor.poll",
	"Comment": "polls for a result from a multipart upload and either returns it ifcomplete, or reschedules to poll again later if not.",
	"Method": "UploadResult poll(){\r\n    for (Future<PartETag> f : futures) {\r\n        if (!f.isDone()) {\r\n            reschedule();\r\n            return null;\r\n        }\r\n    }\r\n    for (Future<PartETag> f : futures) {\r\n        if (f.isCancelled()) {\r\n            throw new CancellationException();\r\n        }\r\n    }\r\n    return completeMultipartUpload();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.AmazonMachineLearningClient.getMLModel",
	"Comment": "returns an mlmodel that includes detailed metadata, datasource information, and the current status of the mlmodel.getmlmodel provides results in normal or verbose format.",
	"Method": "GetMLModelResult getMLModel(GetMLModelRequest getMLModelRequest){\r\n    ExecutionContext executionContext = createExecutionContext(getMLModelRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<GetMLModelRequest> request = null;\r\n    Response<GetMLModelResult> response = null;\r\n    try {\r\n        awsRequestMetrics.startEvent(Field.RequestMarshallTime);\r\n        try {\r\n            request = new GetMLModelRequestMarshaller().marshall(getMLModelRequest);\r\n            request.setAWSRequestMetrics(awsRequestMetrics);\r\n        } finally {\r\n            awsRequestMetrics.endEvent(Field.RequestMarshallTime);\r\n        }\r\n        Unmarshaller<GetMLModelResult, JsonUnmarshallerContext> unmarshaller = new GetMLModelResultJsonUnmarshaller();\r\n        JsonResponseHandler<GetMLModelResult> responseHandler = new JsonResponseHandler<GetMLModelResult>(unmarshaller);\r\n        response = invoke(request, responseHandler, executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.EyeOpen.getValue",
	"Comment": "boolean value that indicates whether the eyes on the face are open.",
	"Method": "Boolean getValue(){\r\n    return value;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetObjectAclRequest.getVersionId",
	"Comment": "returns the version id of the object version whose acl is being set.",
	"Method": "String getVersionId(){\r\n    return versionId;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.EyeOpen.setValue",
	"Comment": "boolean value that indicates whether the eyes on the face are open.",
	"Method": "void setValue(Boolean value){\r\n    this.value = value;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSVoipSandboxChannelResponse.withPlatform",
	"Comment": "the platform type. will be apns.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSVoipSandboxChannelResponse withPlatform(String platform){\r\n    this.platform = platform;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.PutEventStreamRequest.withWriteEventStream",
	"Comment": "request to save an eventstream.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PutEventStreamRequest withWriteEventStream(WriteEventStream writeEventStream){\r\n    this.writeEventStream = writeEventStream;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.RecipientDsnFields.withStatus",
	"Comment": "the status code that indicates what went wrong. this is required by rfc 3464.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "RecipientDsnFields withStatus(String status){\r\n    this.status = status;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartContentModerationRequest.getNotificationChannel",
	"Comment": "the amazon sns topic arn that you want amazon rekognition video topublish the completion status of the content moderation analysis to.",
	"Method": "NotificationChannel getNotificationChannel(){\r\n    return notificationChannel;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.BaiduChannelRequest.withEnabled",
	"Comment": "if the channel is enabled for sending messages.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "BaiduChannelRequest withEnabled(Boolean enabled){\r\n    this.enabled = enabled;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobResponse.withId",
	"Comment": "the unique id of the import job.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ImportJobResponse withId(String id){\r\n    this.id = id;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.CreateVocabularyResult.withFailureReason",
	"Comment": "if the vocabularystate field is failed, thisfield contains information about why the job failed.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreateVocabularyResult withFailureReason(String failureReason){\r\n    this.failureReason = failureReason;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSVoipSandboxChannelResponse.withHasTokenKey",
	"Comment": "if the channel is registered with a token key for authentication.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSVoipSandboxChannelResponse withHasTokenKey(Boolean hasTokenKey){\r\n    this.hasTokenKey = hasTokenKey;\r\n    return this;\r\n}"
}, {
	"Path": "org.bouncycastle.asn1.anssi.ANSSINamedCurves.getName",
	"Comment": "return the named curve name represented by the given object identifier.",
	"Method": "String getName(ASN1ObjectIdentifier oid){\r\n    return (String) names.get(oid);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetExportJobsRequest.withToken",
	"Comment": "the nexttoken string returned on a previous page that you use to get thenext page of results in a paginated response.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetExportJobsRequest withToken(String token){\r\n    this.token = token;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.RemovePermissionRequest.setTopicArn",
	"Comment": "the arn of the topic whose access control policy you wish to modify.",
	"Method": "void setTopicArn(String topicArn){\r\n    this.topicArn = topicArn;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSAsyncClient.deletePlatformApplicationAsync",
	"Comment": "deletes a platform application object for one of the supported pushnotification services, such as apns and gcm. for more information, see usingamazon sns mobile push notifications.",
	"Method": "Future<Void> deletePlatformApplicationAsync(DeletePlatformApplicationRequest deletePlatformApplicationRequest,Future<Void> deletePlatformApplicationAsync,DeletePlatformApplicationRequest deletePlatformApplicationRequest,AsyncHandler<DeletePlatformApplicationRequest, Void> asyncHandler){\r\n    return executorService.submit(new Callable<Void>() {\r\n        public Void call() throws Exception {\r\n            Void result = null;\r\n            try {\r\n                deletePlatformApplication(deletePlatformApplicationRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(deletePlatformApplicationRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSAsyncClient.deletePlatformApplicationAsync",
	"Comment": "deletes a platform application object for one of the supported pushnotification services, such as apns and gcm. for more information, see usingamazon sns mobile push notifications.",
	"Method": "Future<Void> deletePlatformApplicationAsync(DeletePlatformApplicationRequest deletePlatformApplicationRequest,Future<Void> deletePlatformApplicationAsync,DeletePlatformApplicationRequest deletePlatformApplicationRequest,AsyncHandler<DeletePlatformApplicationRequest, Void> asyncHandler){\r\n    Void result = null;\r\n    try {\r\n        deletePlatformApplication(deletePlatformApplicationRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(deletePlatformApplicationRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.UpdateCustomVerificationEmailTemplateRequest.withFromEmailAddress",
	"Comment": "the email address that the custom verification email is sent from.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateCustomVerificationEmailTemplateRequest withFromEmailAddress(String fromEmailAddress){\r\n    this.fromEmailAddress = fromEmailAddress;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignResponse.withLimits",
	"Comment": "the campaign limits settings.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CampaignResponse withLimits(CampaignLimits limits){\r\n    this.limits = limits;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.CreateKeyRequest.withBypassPolicyLockoutSafetyCheck",
	"Comment": "a flag to indicate whether to bypass the key policy lockout safety check.setting this value to true increases the risk that the cmk becomesunmanageable. do not set this value to true indiscriminately.for more information, refer to the scenario in the default key policy section in the aws key management servicedeveloper guide.use this parameter only when you include a policy in the request and youintend to prevent the principal that is making the request from making asubsequent putkeypolicy request on the cmk.the default value is false.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreateKeyRequest withBypassPolicyLockoutSafetyCheck(Boolean bypassPolicyLockoutSafetyCheck){\r\n    this.bypassPolicyLockoutSafetyCheck = bypassPolicyLockoutSafetyCheck;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.Prediction.setDetails",
	"Comment": "provides any additional details regarding the prediction.",
	"Method": "void setDetails(java.util.Map<String, String> details){\r\n    this.details = details;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.PutLogEventsResult.withRejectedLogEventsInfo",
	"Comment": "the rejected events.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PutLogEventsResult withRejectedLogEventsInfo(RejectedLogEventsInfo rejectedLogEventsInfo){\r\n    this.rejectedLogEventsInfo = rejectedLogEventsInfo;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSChannelRequest.withTokenKey",
	"Comment": "the token key used for apns tokens.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSChannelRequest withTokenKey(String tokenKey){\r\n    this.tokenKey = tokenKey;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ChannelsResponse.withChannels",
	"Comment": "a map of channels, with the channeltype as the key and the channel as thevalue.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ChannelsResponse withChannels(java.util.Map<String, ChannelResponse> channels){\r\n    this.channels = channels;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.S3XmlResponseHandler.getResponseHeaders",
	"Comment": "returns the headers from the processed response. will return null until aresponse has been handled.",
	"Method": "Map<String, String> getResponseHeaders(){\r\n    return responseHeaders;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateApplicationSettingsRequest.withWriteApplicationSettingsRequest",
	"Comment": "creating application setting requestreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateApplicationSettingsRequest withWriteApplicationSettingsRequest(WriteApplicationSettingsRequest writeApplicationSettingsRequest){\r\n    this.writeApplicationSettingsRequest = writeApplicationSettingsRequest;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.AbstractPutObjectRequest.getAccessControlList",
	"Comment": "returns the optional access control list for the new object. ifspecified, cannedacl will be ignored.",
	"Method": "AccessControlList getAccessControlList(){\r\n    return accessControlList;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartResult.getETag",
	"Comment": "returns the entity tag of the newly uploaded part. the entity tag isneeded later when the multipart upload is completed.",
	"Method": "String getETag(){\r\n    return eTag;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobResponse.withFailures",
	"Comment": "provides up to 100 of the first failed entries for the job, if any exist.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ImportJobResponse withFailures(String failures,ImportJobResponse withFailures,java.util.Collection<String> failures){\r\n    setFailures(failures);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.GetIdentityMailFromDomainAttributesRequest.withIdentities",
	"Comment": "a list of one or more identities.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetIdentityMailFromDomainAttributesRequest withIdentities(String identities,GetIdentityMailFromDomainAttributesRequest withIdentities,java.util.Collection<String> identities){\r\n    setIdentities(identities);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.demo.s3transferutility.Util.getCredProvider",
	"Comment": "gets an instance of awsmobileclient which isconstructed using the given context.",
	"Method": "AWSCredentialsProvider getCredProvider(Context context){\r\n    if (sMobileClient == null) {\r\n        final CountDownLatch latch = new CountDownLatch(1);\r\n        AWSMobileClient.getInstance().initialize(context, new Callback<UserStateDetails>() {\r\n            @Override\r\n            public void onResult(UserStateDetails result) {\r\n                latch.countDown();\r\n            }\r\n            @Override\r\n            public void onError(Exception e) {\r\n                Log.e(TAG, \"onError: \", e);\r\n                latch.countDown();\r\n            }\r\n        });\r\n        try {\r\n            latch.await();\r\n            sMobileClient = AWSMobileClient.getInstance();\r\n        } catch (InterruptedException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n    return sMobileClient;\r\n}"
}, {
	"Path": "com.amazonaws.demo.s3transferutility.Util.getCredProvider",
	"Comment": "gets an instance of awsmobileclient which isconstructed using the given context.",
	"Method": "AWSCredentialsProvider getCredProvider(Context context){\r\n    latch.countDown();\r\n}"
}, {
	"Path": "com.amazonaws.demo.s3transferutility.Util.getCredProvider",
	"Comment": "gets an instance of awsmobileclient which isconstructed using the given context.",
	"Method": "AWSCredentialsProvider getCredProvider(Context context){\r\n    Log.e(TAG, \"onError: \", e);\r\n    latch.countDown();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListPartsRequest.getUploadId",
	"Comment": "returns the id of the multipart upload whose parts are being listed.",
	"Method": "String getUploadId(){\r\n    return uploadId;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.ExportTask.withDestinationPrefix",
	"Comment": "the prefix that was used as the start of amazon s3 key for every objectexported.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ExportTask withDestinationPrefix(String destinationPrefix){\r\n    this.destinationPrefix = destinationPrefix;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Request.getStartAfter",
	"Comment": "returns optional parameter indicating where you want amazon s3 to startthe object listing from. this can be any key in the bucket.",
	"Method": "String getStartAfter(){\r\n    return startAfter;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.CelebrityRecognition.getTimestamp",
	"Comment": "the time, in milliseconds from the start of the video, that the celebritywas recognized.",
	"Method": "Long getTimestamp(){\r\n    return timestamp;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClient.getSendQuota",
	"Comment": "provides the sending limits for the amazon ses account.you can execute this operation no more than once per second.",
	"Method": "GetSendQuotaResult getSendQuota(GetSendQuotaRequest getSendQuotaRequest,GetSendQuotaResult getSendQuota){\r\n    GetSendQuotaRequest getSendQuotaRequest = new GetSendQuotaRequest();\r\n    return getSendQuota(getSendQuotaRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.Lexicon.getContent",
	"Comment": "lexicon content in string format. the content of a lexicon must be in plsformat.",
	"Method": "String getContent(){\r\n    return content;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CreateReceiptRuleRequest.withAfter",
	"Comment": "the name of an existing rule after which the new rule will be placed. ifthis parameter is null, the new rule will be inserted at the beginning ofthe rule list.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreateReceiptRuleRequest withAfter(String after){\r\n    this.after = after;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SMSMessage.withOriginationNumber",
	"Comment": "the phone number that the sms message originates from. specify one of thededicated long codes or short codes that you requested from aws supportand that is assigned to your account. if this attribute is not specified,amazon pinpoint randomly assigns a long code.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SMSMessage withOriginationNumber(String originationNumber){\r\n    this.originationNumber = originationNumber;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointDemographic.withMake",
	"Comment": "the manufacturer of the endpoint device, such as apple or samsung.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointDemographic withMake(String make){\r\n    this.make = make;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.StreamDescription.setEnhancedMonitoring",
	"Comment": "represents the current enhanced monitoring settings of the stream.",
	"Method": "void setEnhancedMonitoring(java.util.Collection<EnhancedMetrics> enhancedMonitoring){\r\n    if (enhancedMonitoring == null) {\r\n        this.enhancedMonitoring = null;\r\n        return;\r\n    }\r\n    this.enhancedMonitoring = new java.util.ArrayList<EnhancedMetrics>(enhancedMonitoring);\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.EncryptRequest.setGrantTokens",
	"Comment": "a list of grant tokens.for more information, see grant tokens in the aws key management service developerguide.",
	"Method": "void setGrantTokens(java.util.Collection<String> grantTokens){\r\n    if (grantTokens == null) {\r\n        this.grantTokens = null;\r\n        return;\r\n    }\r\n    this.grantTokens = new java.util.ArrayList<String>(grantTokens);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.PutRecordsResult.withRecords",
	"Comment": "an array of successfully and unsuccessfully processed record results,correlated with the request by natural ordering. a record that issuccessfully added to a stream includes sequencenumber andshardid in the result. a record that fails to be added to astream includes errorcode and errormessage inthe result.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PutRecordsResult withRecords(PutRecordsResultEntry records,PutRecordsResult withRecords,java.util.Collection<PutRecordsResultEntry> records){\r\n    setRecords(records);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.BaiduMessage.withSmallImageIconUrl",
	"Comment": "the url that points to an image used as the small icon for thenotification which will be used to represent the notification in thestatus bar and content viewreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "BaiduMessage withSmallImageIconUrl(String smallImageIconUrl){\r\n    this.smallImageIconUrl = smallImageIconUrl;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.MessageConfiguration.withEmailMessage",
	"Comment": "the email message configuration.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "MessageConfiguration withEmailMessage(CampaignEmailMessage emailMessage){\r\n    this.emailMessage = emailMessage;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketWebsiteConfiguration.getRedirectAllRequestsTo",
	"Comment": "return the redirect information where all requests will be redirect to.",
	"Method": "RedirectRule getRedirectAllRequestsTo(){\r\n    return redirectAllRequestsTo;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.FilterLogEventsRequest.getLogStreamNames",
	"Comment": "filters the results to only logs from the log streams in this list.if you specify a value for both logstreamnameprefix andlogstreamnames, but the value forlogstreamnameprefix does not match any log stream namesspecified in logstreamnames, the action returns aninvalidparameterexception error.",
	"Method": "java.util.List<String> getLogStreamNames(){\r\n    return logStreamNames;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.FilterLogEventsRequest.setLogStreamNames",
	"Comment": "filters the results to only logs from the log streams in this list.if you specify a value for both logstreamnameprefix andlogstreamnames, but the value forlogstreamnameprefix does not match any log stream namesspecified in logstreamnames, the action returns aninvalidparameterexception error.",
	"Method": "void setLogStreamNames(java.util.Collection<String> logStreamNames){\r\n    if (logStreamNames == null) {\r\n        this.logStreamNames = null;\r\n        return;\r\n    }\r\n    this.logStreamNames = new java.util.ArrayList<String>(logStreamNames);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideoarchivedmedia.model.ListFragmentsResult.getFragments",
	"Comment": "a list of fragment numbers that correspond to the time stamp rangeprovided.",
	"Method": "java.util.List<Fragment> getFragments(){\r\n    return fragments;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.TrackingOptions.withCustomRedirectDomain",
	"Comment": "the custom subdomain that will be used to redirect email recipients tothe amazon ses event tracking domain.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "TrackingOptions withCustomRedirectDomain(String customRedirectDomain){\r\n    this.customRedirectDomain = customRedirectDomain;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.MultipartUploadListing.getKeyMarker",
	"Comment": "returns the optional key marker specified in the original request tospecify where in the results to begin listing multipart uploads.",
	"Method": "String getKeyMarker(){\r\n    return keyMarker;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.lex.interactionkit.internal.audio.AudioRecorder.cleanUpAfterRecording",
	"Comment": "free resources after recording audio. only stop and release recorder if theaudiorecord object was not passed in.",
	"Method": "void cleanUpAfterRecording(){\r\n    Log.v(TAG, \"Cleaning up AudioRecorder\");\r\n    if (mRecord != null) {\r\n        if (!mAudioRecordIsPassedIn) {\r\n            Log.v(TAG, \"Releasing AudioRecord\");\r\n            mRecord.stop();\r\n            mRecord.release();\r\n            final AudioManager am = (AudioManager) mContext.getSystemService(Context.AUDIO_SERVICE);\r\n            am.abandonAudioFocus(null);\r\n        }\r\n    } else {\r\n        Log.w(TAG, \"AudioRecord is null.\");\r\n    }\r\n    cleanUpUtilityComponents();\r\n    Log.v(TAG, \"Cleaned up AudioRecorder\");\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.Template.setTextPart",
	"Comment": "the email body that will be visible to recipients whose email clients donot display html.",
	"Method": "void setTextPart(String textPart){\r\n    this.textPart = textPart;\r\n}"
}, {
	"Path": "com.amazonaws.demo.numberguess.manager.DynamoDBManager.init",
	"Comment": "initializes the amazondynamodbclient. this must be called before callingany methods in this class.",
	"Method": "void init(){\r\n    if (ddb == null) {\r\n        ddb = new AmazonDynamoDBClient(CognitoClientManager.getCredentials());\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.KeyMetadata.setEnabled",
	"Comment": "specifies whether the cmk is enabled. when keystate isenabled this value is true, otherwise it is false.",
	"Method": "void setEnabled(Boolean enabled){\r\n    this.enabled = enabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetFaceDetectionResult.setVideoMetadata",
	"Comment": "information about a video that amazon rekognition video analyzed.videometadata is returned in every page of paginatedresponses from a amazon rekognition video operation.",
	"Method": "void setVideoMetadata(VideoMetadata videoMetadata){\r\n    this.videoMetadata = videoMetadata;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteBaiduChannelResult.withBaiduChannelResponse",
	"Comment": "baidu cloud messaging channel definitionreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteBaiduChannelResult withBaiduChannelResponse(BaiduChannelResponse baiduChannelResponse){\r\n    this.baiduChannelResponse = baiduChannelResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.GetCustomVerificationEmailTemplateResult.getFailureRedirectionURL",
	"Comment": "the url that the recipient of the verification email is sent to if his orher address is not successfully verified.",
	"Method": "String getFailureRedirectionURL(){\r\n    return failureRedirectionURL;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.SynthesizeSpeechPresignRequest.getRequestCredentials",
	"Comment": "returns the optional credentials to use to sign this request, overridingthe default credentials set at the client level.",
	"Method": "AWSCredentials getRequestCredentials(){\r\n    return credentials;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.pinpoint.analytics.monetization.CustomMonetizationEventBuilder.withFormattedItemPrice",
	"Comment": "sets the formatted localized price of the item being purchased",
	"Method": "CustomMonetizationEventBuilder withFormattedItemPrice(String formattedItemPrice){\r\n    setFormattedItemPrice(formattedItemPrice);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EmailChannelResponse.withHasCredential",
	"Comment": "not used. retained for backwards compatibility.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EmailChannelResponse withHasCredential(Boolean hasCredential){\r\n    this.hasCredential = hasCredential;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateStreamResult.withStreamArn",
	"Comment": "the stream arn.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateStreamResult withStreamArn(String streamArn){\r\n    this.streamArn = streamArn;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMChannelRequest.isEnabled",
	"Comment": "indicates whether or not the channel is enabled for sending messages.",
	"Method": "Boolean isEnabled(){\r\n    return enabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartLabelDetectionRequest.withNotificationChannel",
	"Comment": "the amazon sns topic arn you want amazon rekognition video to publish thecompletion status of the label detection operation to.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "StartLabelDetectionRequest withNotificationChannel(NotificationChannel notificationChannel){\r\n    this.notificationChannel = notificationChannel;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClient.deleteCustomVerificationEmailTemplate",
	"Comment": "deletes an existing custom verification email template.for more information about custom verification email templates, see using custom verification email templates in the amazon sesdeveloper guide.you can execute this operation no more than once per second.",
	"Method": "void deleteCustomVerificationEmailTemplate(DeleteCustomVerificationEmailTemplateRequest deleteCustomVerificationEmailTemplateRequest){\r\n    ExecutionContext executionContext = createExecutionContext(deleteCustomVerificationEmailTemplateRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<DeleteCustomVerificationEmailTemplateRequest> request = null;\r\n    Response<Void> response = null;\r\n    try {\r\n        request = new DeleteCustomVerificationEmailTemplateRequestMarshaller().marshall(deleteCustomVerificationEmailTemplateRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        invoke(request, null, executionContext);\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.lexrts.model.PostTextRequest.withBotName",
	"Comment": "the name of the amazon lex bot.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PostTextRequest withBotName(String botName){\r\n    this.botName = botName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMMessage.getImageUrl",
	"Comment": "the url that points to an image used in the push notification.",
	"Method": "String getImageUrl(){\r\n    return imageUrl;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.NumberValidateResponse.withCountryCodeNumeric",
	"Comment": "the numeric code for the country or region where the phone number wasoriginally registered.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "NumberValidateResponse withCountryCodeNumeric(String countryCodeNumeric){\r\n    this.countryCodeNumeric = countryCodeNumeric;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.amazonmobileanalytics.AnalyticsConfig.withClientConfiguration",
	"Comment": "sets the client configuration this client will use when making request",
	"Method": "AnalyticsConfig withClientConfiguration(ClientConfiguration clientConfig){\r\n    this.clientConfiguration = new ClientConfiguration(clientConfig);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateAccountAuditConfigurationRequest.clearauditCheckConfigurationsEntries",
	"Comment": "removes all the entries added into auditcheckconfigurations.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateAccountAuditConfigurationRequest clearauditCheckConfigurationsEntries(){\r\n    this.auditCheckConfigurations = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.UpdateConfigurationSetEventDestinationRequest.withEventDestination",
	"Comment": "the event destination object that you want to apply to the specifiedconfiguration set.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateConfigurationSetEventDestinationRequest withEventDestination(EventDestination eventDestination){\r\n    this.eventDestination = eventDestination;\r\n    return this;\r\n}"
}, {
	"Path": "org.bouncycastle.asn1.anssi.ANSSINamedCurves.getNames",
	"Comment": "returns an enumeration containing the name strings for curvescontained in this structure.",
	"Method": "Enumeration getNames(){\r\n    return names.elements();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ActivitiesResponse.withNextToken",
	"Comment": "the string that you use in a subsequent request to get the next page ofresults in a paginated response.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ActivitiesResponse withNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.GetMLModelRequest.getVerbose",
	"Comment": "specifies whether the getmlmodel operation should returnrecipe.if true, recipe is returned.if false, recipe is not returned.",
	"Method": "Boolean getVerbose(){\r\n    return verbose;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointRequest.clearMetricsEntries",
	"Comment": "removes all the entries added into metrics.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointRequest clearMetricsEntries(){\r\n    this.metrics = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.SelectRequest.withConsistentRead",
	"Comment": "determines whether or not strong consistency should be enforced whendata is read from simpledb. if true, any data previouslywritten to simpledb will be returned. otherwise, results will beconsistent eventually, and the client may not see data that waswritten immediately before your read.returns a reference to this object so that method calls can be chained together.",
	"Method": "SelectRequest withConsistentRead(Boolean consistentRead){\r\n    this.consistentRead = consistentRead;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.AmazonSQSAsyncClient.listDeadLetterSourceQueuesAsync",
	"Comment": "returns a list of your queues that have the redrivepolicy queue attributeconfigured with a dead letter queue.for more information about using dead letter queues, see using amazon sqs dead letter queues in the amazon sqs developerguide.",
	"Method": "Future<ListDeadLetterSourceQueuesResult> listDeadLetterSourceQueuesAsync(ListDeadLetterSourceQueuesRequest listDeadLetterSourceQueuesRequest,Future<ListDeadLetterSourceQueuesResult> listDeadLetterSourceQueuesAsync,ListDeadLetterSourceQueuesRequest listDeadLetterSourceQueuesRequest,AsyncHandler<ListDeadLetterSourceQueuesRequest, ListDeadLetterSourceQueuesResult> asyncHandler){\r\n    return executorService.submit(new Callable<ListDeadLetterSourceQueuesResult>() {\r\n        public ListDeadLetterSourceQueuesResult call() throws Exception {\r\n            ListDeadLetterSourceQueuesResult result = null;\r\n            try {\r\n                result = listDeadLetterSourceQueues(listDeadLetterSourceQueuesRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(listDeadLetterSourceQueuesRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.AmazonSQSAsyncClient.listDeadLetterSourceQueuesAsync",
	"Comment": "returns a list of your queues that have the redrivepolicy queue attributeconfigured with a dead letter queue.for more information about using dead letter queues, see using amazon sqs dead letter queues in the amazon sqs developerguide.",
	"Method": "Future<ListDeadLetterSourceQueuesResult> listDeadLetterSourceQueuesAsync(ListDeadLetterSourceQueuesRequest listDeadLetterSourceQueuesRequest,Future<ListDeadLetterSourceQueuesResult> listDeadLetterSourceQueuesAsync,ListDeadLetterSourceQueuesRequest listDeadLetterSourceQueuesRequest,AsyncHandler<ListDeadLetterSourceQueuesRequest, ListDeadLetterSourceQueuesResult> asyncHandler){\r\n    ListDeadLetterSourceQueuesResult result = null;\r\n    try {\r\n        result = listDeadLetterSourceQueues(listDeadLetterSourceQueuesRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(listDeadLetterSourceQueuesRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.WriteCampaignRequest.withDescription",
	"Comment": "a description of the campaign.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "WriteCampaignRequest withDescription(String description){\r\n    this.description = description;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.demo.numberguess.manager.DynamoDBManager.getGameRecords",
	"Comment": "queries an amazon dynamodb table and returns the matching results, usingthe default configuration.",
	"Method": "ArrayList<GameRecord> getGameRecords(){\r\n    Log.d(TAG, \"Get record rank called\");\r\n    checkDynamoDBClientAvailability();\r\n    DynamoDBMapper mapper = new DynamoDBMapper(ddb);\r\n    GameRecord r = new GameRecord();\r\n    r.setGameId(Constants.GAME_ID);\r\n    Condition rangeKeyCondition = new Condition();\r\n    rangeKeyCondition.withComparisonOperator(ComparisonOperator.GT).withAttributeValueList(new AttributeValue().withN(\"0\"));\r\n    DynamoDBQueryExpression<GameRecord> queryExpression = new DynamoDBQueryExpression<GameRecord>().withHashKeyValues(r).withRangeKeyCondition(\"score\", rangeKeyCondition).withConsistentRead(false).withScanIndexForward(false);\r\n    try {\r\n        Log.d(TAG, \"Querying game records\");\r\n        PaginatedQueryList<GameRecord> result = mapper.query(GameRecord.class, queryExpression);\r\n        Log.d(TAG, \"Query result successfully received\");\r\n        ArrayList<GameRecord> resultList = new ArrayList<GameRecord>();\r\n        if (result == null) {\r\n            return resultList;\r\n        }\r\n        for (GameRecord up : result) {\r\n            resultList.add(up);\r\n        }\r\n        return resultList;\r\n    } catch (AmazonServiceException ex) {\r\n        throw new IllegalStateException(\"Error querying\", ex);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobResponse.withApplicationId",
	"Comment": "the unique id of the application to which the import job applies.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ImportJobResponse withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.S3ObjectInputStream.getHttpRequest",
	"Comment": "returns the http request from which this input stream is derived.",
	"Method": "HttpRequestBase getHttpRequest(){\r\n    return httpRequest;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.UpdateConfigurationSetTrackingOptionsRequest.setConfigurationSetName",
	"Comment": "the name of the configuration set for which you want to update the customtracking domain.",
	"Method": "void setConfigurationSetName(String configurationSetName){\r\n    this.configurationSetName = configurationSetName;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DeleteIdentityRequest.withIdentity",
	"Comment": "the identity to be removed from the list of identities for the awsaccount.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteIdentityRequest withIdentity(String identity){\r\n    this.identity = identity;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.VerifyEmailAddressRequest.withEmailAddress",
	"Comment": "the email address to be verified.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "VerifyEmailAddressRequest withEmailAddress(String emailAddress){\r\n    this.emailAddress = emailAddress;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.TrackingOptionsAlreadyExistsException.setConfigurationSetName",
	"Comment": "indicates that a trackingoptions object already exists in the specifiedconfiguration set.",
	"Method": "void setConfigurationSetName(String configurationSetName){\r\n    this.configurationSetName = configurationSetName;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.ListFacesResult.getNextToken",
	"Comment": "if the response is truncated, amazon rekognition returns this token thatyou can use in the subsequent request to retrieve the next set of faces.",
	"Method": "String getNextToken(){\r\n    return nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.PutRecordsResultEntry.setErrorCode",
	"Comment": "the error code for an individual record result. errorcodescan be either provisionedthroughputexceededexception orinternalfailure.",
	"Method": "void setErrorCode(String errorCode){\r\n    this.errorCode = errorCode;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointResponse.setApplicationId",
	"Comment": "the id of the application that is associated with the endpoint.",
	"Method": "void setApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.WriteCampaignRequest.withAdditionalTreatments",
	"Comment": "treatments that are defined in addition to the default treatment.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "WriteCampaignRequest withAdditionalTreatments(WriteTreatmentResource additionalTreatments,WriteCampaignRequest withAdditionalTreatments,java.util.Collection<WriteTreatmentResource> additionalTreatments){\r\n    setAdditionalTreatments(additionalTreatments);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.DescribeStreamProcessorResult.setOutput",
	"Comment": "kinesis data stream to which amazon rekognition video puts the analysisresults.",
	"Method": "void setOutput(StreamProcessorOutput output){\r\n    this.output = output;\r\n}"
}, {
	"Path": "org.bouncycastle.asn1.anssi.ANSSINamedCurves.getOID",
	"Comment": "return the object identifier signified by the passed in name. nullif there is no object identifier associated with name.",
	"Method": "ASN1ObjectIdentifier getOID(String name){\r\n    return (ASN1ObjectIdentifier) objIds.get(Strings.toLowerCase(name));\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.ChangeMessageVisibilityRequest.withReceiptHandle",
	"Comment": "the receipt handle associated with the message whose visibility timeoutshould be changed. this parameter is returned by thereceivemessage action.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ChangeMessageVisibilityRequest withReceiptHandle(String receiptHandle){\r\n    this.receiptHandle = receiptHandle;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketAnalyticsConfigurationsResult.setNextContinuationToken",
	"Comment": "sets the optional nextcontinuationtoken.nextcontinuationtoken is sent when istruncated is true meaning there aremore keys in the bucket that can be listed. the next list requests to amazons3 can be continued by providing this nextcontinuationtoken.",
	"Method": "void setNextContinuationToken(String nextContinuationToken){\r\n    this.nextContinuationToken = nextContinuationToken;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.pinpoint.analytics.monetization.GooglePlayMonetizationEventBuilder.isValid",
	"Comment": "returns true only if the productid, quantity, currency, item price, andtransaction id are set",
	"Method": "boolean isValid(){\r\n    if (getProductId() == null) {\r\n        log.warn(\"Cannot build Google Monetization event: it is missing the product id\");\r\n        return false;\r\n    }\r\n    if (getQuantity() == null) {\r\n        log.warn(\"Google Monetization event is not valid: it is missing the quantity\");\r\n        return false;\r\n    }\r\n    if (getFormattedItemPrice() == null) {\r\n        if (getCurrency() == null) {\r\n            log.warn(\"Google Monetization event is not valid: it is missing the localized currency\");\r\n            return false;\r\n        } else if (getItemPrice() == null) {\r\n            log.warn(\"Google Monetization event is not valid: it is missing the localized item price\");\r\n            return false;\r\n        }\r\n    }\r\n    if (getTransactionId() == null) {\r\n        log.warn(\"Google Monetization event is not valid: it is missing the transaction id\");\r\n        return false;\r\n    }\r\n    return true;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetCampaignsRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetCampaignsRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceDetail.withSmile",
	"Comment": "indicates whether or not the face is smiling, and the confidence level inthe determination.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "FaceDetail withSmile(Smile smile){\r\n    this.smile = smile;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.AlreadyExistsException.setName",
	"Comment": "indicates that a resource could not be created because the resource namealready exists.",
	"Method": "void setName(String name){\r\n    this.name = name;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetExportJobsRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetExportJobsRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DeleteConfigurationSetTrackingOptionsRequest.getConfigurationSetName",
	"Comment": "the name of the configuration set from which you want to delete thetracking options.",
	"Method": "String getConfigurationSetName(){\r\n    return configurationSetName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetImportJobRequest.withJobId",
	"Comment": "the unique id of the job.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetImportJobRequest withJobId(String jobId){\r\n    this.jobId = jobId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.MetricFilterMatchRecord.clearextractedValuesEntries",
	"Comment": "removes all the entries added into extractedvalues.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "MetricFilterMatchRecord clearextractedValuesEntries(){\r\n    this.extractedValues = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectRequest.setRequesterPays",
	"Comment": "used for downloading an amazon s3 object from a requester pays bucket. ifset the requester is charged for downloading the data from the bucket.if a bucket is enabled for requester pays, then any attempt to read anobject from it without requester pays enabled will result in a 403 errorand the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket",
	"Method": "void setRequesterPays(boolean isRequesterPays){\r\n    this.isRequesterPays = isRequesterPays;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartFaceDetectionRequest.getVideo",
	"Comment": "the video in which you want to detect faces. the video must be stored inan amazon s3 bucket.",
	"Method": "Video getVideo(){\r\n    return video;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClient.describeActiveReceiptRuleSet",
	"Comment": "returns the metadata and receipt rules for the receipt rule set that iscurrently active.for information about setting up receipt rule sets, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "DescribeActiveReceiptRuleSetResult describeActiveReceiptRuleSet(DescribeActiveReceiptRuleSetRequest describeActiveReceiptRuleSetRequest){\r\n    ExecutionContext executionContext = createExecutionContext(describeActiveReceiptRuleSetRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<DescribeActiveReceiptRuleSetRequest> request = null;\r\n    Response<DescribeActiveReceiptRuleSetResult> response = null;\r\n    try {\r\n        request = new DescribeActiveReceiptRuleSetRequestMarshaller().marshall(describeActiveReceiptRuleSetRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        response = invoke(request, new DescribeActiveReceiptRuleSetResultStaxUnmarshaller(), executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.TranscriptionJob.setFailureReason",
	"Comment": "if the transcriptionjobstatus field is failed,this field contains information about why the job failed.",
	"Method": "void setFailureReason(String failureReason){\r\n    this.failureReason = failureReason;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ChannelResponse.withApplicationId",
	"Comment": "application idreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ChannelResponse withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectRequest.getUnmodifiedSinceConstraint",
	"Comment": "gets the optional unmodified constraint that restricts thisrequest to executing only if the object has not beenmodified after the specified date.",
	"Method": "Date getUnmodifiedSinceConstraint(){\r\n    return unmodifiedSinceConstraint;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignLimits.getDaily",
	"Comment": "the maximum number of messages that the campaign can send daily.",
	"Method": "Integer getDaily(){\r\n    return daily;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.MessageRequest.clearEndpointsEntries",
	"Comment": "removes all the entries added into endpoints.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "MessageRequest clearEndpointsEntries(){\r\n    this.endpoints = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.Message.getReceiptHandle",
	"Comment": "an identifier associated with the act of receiving the message. a newreceipt handle is returned every time you receive a message. whendeleting a message, you provide the last received receipt handle todelete the message.",
	"Method": "String getReceiptHandle(){\r\n    return receiptHandle;\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.TranscriptionJob.getTranscript",
	"Comment": "an object that describes the output of the transcription job.",
	"Method": "Transcript getTranscript(){\r\n    return transcript;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartFaceSearchRequest.getNotificationChannel",
	"Comment": "the arn of the amazon sns topic to which you want amazon rekognitionvideo to publish the completion status of the search.",
	"Method": "NotificationChannel getNotificationChannel(){\r\n    return notificationChannel;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.MessageResponse.clearEndpointResultEntries",
	"Comment": "removes all the entries added into endpointresult.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "MessageResponse clearEndpointResultEntries(){\r\n    this.endpointResult = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentDemographics.withDeviceType",
	"Comment": "the device type criteria for the segment.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SegmentDemographics withDeviceType(SetDimension deviceType){\r\n    this.deviceType = deviceType;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateApplicationSettingsResult.withApplicationSettingsResource",
	"Comment": "application settings.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateApplicationSettingsResult withApplicationSettingsResource(ApplicationSettingsResource applicationSettingsResource){\r\n    this.applicationSettingsResource = applicationSettingsResource;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CreateCustomVerificationEmailTemplateRequest.withFromEmailAddress",
	"Comment": "the email address that the custom verification email is sent from.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreateCustomVerificationEmailTemplateRequest withFromEmailAddress(String fromEmailAddress){\r\n    this.fromEmailAddress = fromEmailAddress;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.WriteTreatmentResource.withTreatmentDescription",
	"Comment": "a custom description for the treatment.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "WriteTreatmentResource withTreatmentDescription(String treatmentDescription){\r\n    this.treatmentDescription = treatmentDescription;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSSandboxChannelRequest.withCertificate",
	"Comment": "the distribution certificate from apple.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSSandboxChannelRequest withCertificate(String certificate){\r\n    this.certificate = certificate;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.AmazonSimpleDBClient.select",
	"Comment": "the select operation returns a set of attributes foritemnames that match the select expression.select is similar to the standard sql select statement.the total size of the response cannot exceed 1 mb in total size.amazon simpledb automatically adjusts the number of items returned perpage to enforce this limit. for example, if the client asks toretrieve 2500 items, but each individual item is 10 kb in size, thesystem returns 100 items and an appropriate nexttoken sothe client can access the next page of results.for information on how to construct select expressions, see usingselect to create amazon simpledb queries in the developer guide.",
	"Method": "SelectResult select(SelectRequest selectRequest){\r\n    ExecutionContext executionContext = createExecutionContext(selectRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    Request<SelectRequest> request = null;\r\n    Response<SelectResult> response = null;\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    try {\r\n        request = new SelectRequestMarshaller().marshall(selectRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        response = invoke(request, new SelectResultStaxUnmarshaller(), executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.AddressConfiguration.setTitleOverride",
	"Comment": "title override. if specified will override default title if applicable.",
	"Method": "void setTitleOverride(String titleOverride){\r\n    this.titleOverride = titleOverride;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateSegmentResult.withSegmentResponse",
	"Comment": "segment definition.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateSegmentResult withSegmentResponse(SegmentResponse segmentResponse){\r\n    this.segmentResponse = segmentResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ReceiptFilter.withIpFilter",
	"Comment": "a structure that provides the ip addresses to block or allow, and whetherto block or allow incoming mail from them.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ReceiptFilter withIpFilter(ReceiptIpFilter ipFilter){\r\n    this.ipFilter = ipFilter;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ObjectMetadata.getOngoingRestore",
	"Comment": "returns the boolean value which indicates whether there is ongoingrestore request.",
	"Method": "Boolean getOngoingRestore(){\r\n    return this.ongoingRestore;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.DescribeStreamProcessorResult.withLastUpdateTimestamp",
	"Comment": "the time, in unix format, the stream processor was last updated. forexample, when the stream processor moves from a running state to a failedstate, or when the user starts or stops the stream processor.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DescribeStreamProcessorResult withLastUpdateTimestamp(java.util.Date lastUpdateTimestamp){\r\n    this.lastUpdateTimestamp = lastUpdateTimestamp;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.pinpoint.targeting.notification.NotificationClient.createClient",
	"Comment": "creates a new notificationclient based on the supplied context and channel type. this methodreturns an instance based on notificationclient interface.",
	"Method": "NotificationClient createClient(PinpointContext pinpointContext,ChannelType channelType){\r\n    return new NotificationClient(NotificationClientBase.createClient(pinpointContext, channelType));\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.analytics.AnalyticsConfiguration.setId",
	"Comment": "sets the identifier used to represent an analytics configuration.",
	"Method": "void setId(String id){\r\n    this.id = id;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.PlatformApplication.withAttributes",
	"Comment": "attributes for platform application object.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PlatformApplication withAttributes(java.util.Map<String, String> attributes){\r\n    this.attributes = attributes;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSChannelResponse.withCreationDate",
	"Comment": "the date and time when this channel was created.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSChannelResponse withCreationDate(String creationDate){\r\n    this.creationDate = creationDate;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ChannelResponse.withLastModifiedDate",
	"Comment": "last date this was updatedreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ChannelResponse withLastModifiedDate(String lastModifiedDate){\r\n    this.lastModifiedDate = lastModifiedDate;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.DefaultSigningMethodTest.testOtherRegionDefaultSigning",
	"Comment": "tests that other endpoints always defaults to sigv2, and can be changedby system property.",
	"Method": "void testOtherRegionDefaultSigning(){\r\n    testSigV4WithRegionDefaultSigning(\"s3-external-1.amazonaws.com\", \"us-east-1\");\r\n    testSigV4WithRegionDefaultSigning(\"s3-us-west-2.amazonaws.com\", \"us-west-2\");\r\n    testSigV4WithRegionDefaultSigning(\"s3-us-west-1.amazonaws.com\", \"us-west-1\");\r\n    testSigV4WithRegionDefaultSigning(\"s3-eu-west-1.amazonaws.com\", \"eu-west-1\");\r\n    testSigV4WithRegionDefaultSigning(\"s3-ap-southeast-1.amazonaws.com\", \"ap-southeast-1\");\r\n    testSigV4WithRegionDefaultSigning(\"s3-ap-southeast-2.amazonaws.com\", \"ap-southeast-2\");\r\n    testSigV4WithRegionDefaultSigning(\"s3-ap-northeast-1.amazonaws.com\", \"ap-northeast-1\");\r\n    testSigV4WithRegionDefaultSigning(\"s3-sa-east-1.amazonaws.com\", \"sa-east-1\");\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.EventDestination.withKinesisFirehoseDestination",
	"Comment": "an object that contains the delivery stream arn and the iam role arnassociated with an amazon kinesis firehose event destination.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EventDestination withKinesisFirehoseDestination(KinesisFirehoseDestination kinesisFirehoseDestination){\r\n    this.kinesisFirehoseDestination = kinesisFirehoseDestination;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SetReceiptRulePositionRequest.setAfter",
	"Comment": "the name of the receipt rule after which to place the specified receiptrule.",
	"Method": "void setAfter(String after){\r\n    this.after = after;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentImportResource.withSize",
	"Comment": "the number of endpoints that were successfully imported to create thissegment.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SegmentImportResource withSize(Integer size){\r\n    this.size = size;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.CipherLite.markSupported",
	"Comment": "tests if this cipher lite supports the mark andreset methods. returns false by default, but subclass mayoverride.",
	"Method": "boolean markSupported(){\r\n    return false;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetCelebrityRecognitionResult.withCelebrities",
	"Comment": "array of celebrities recognized in the video.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetCelebrityRecognitionResult withCelebrities(CelebrityRecognition celebrities,GetCelebrityRecognitionResult withCelebrities,java.util.Collection<CelebrityRecognition> celebrities){\r\n    setCelebrities(celebrities);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetFaceDetectionResult.setStatusMessage",
	"Comment": "if the job fails, statusmessage provides a descriptive errormessage.",
	"Method": "void setStatusMessage(String statusMessage){\r\n    this.statusMessage = statusMessage;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.pinpoint.targeting.endpointProfile.EndpointProfile.getChannelType",
	"Comment": "returns the channel type of this endpoint, currently defaults to gcm",
	"Method": "String getChannelType(){\r\n    return this.pinpointContext.getNotificationClient().getChannelType();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartCelebrityRecognitionRequest.isEnablePersonTracking",
	"Comment": "returns the value of the enablepersontracking property for this object.",
	"Method": "Boolean isEnablePersonTracking(){\r\n    return enablePersonTracking;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ChannelResponse.withIsArchived",
	"Comment": "is this channel archivedreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ChannelResponse withIsArchived(Boolean isArchived){\r\n    this.isArchived = isArchived;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.RemoveTagsFromStreamRequest.getTagKeys",
	"Comment": "a list of tag keys. each corresponding tag is removed from the stream.",
	"Method": "java.util.List<String> getTagKeys(){\r\n    return tagKeys;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetBaiduChannelRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetBaiduChannelRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.MessageResult.withMessageId",
	"Comment": "unique message identifier associated with the message that was sent.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "MessageResult withMessageId(String messageId){\r\n    this.messageId = messageId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Face.withBoundingBox",
	"Comment": "bounding box of the face.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Face withBoundingBox(BoundingBox boundingBox){\r\n    this.boundingBox = boundingBox;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.StartTranscriptionJobRequest.withSettings",
	"Comment": "a settings object that provides optional settings for atranscription job.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "StartTranscriptionJobRequest withSettings(Settings settings){\r\n    this.settings = settings;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.VersionListing.setDelimiter",
	"Comment": "for internal use only. sets the delimiter parameter originally used torequest this version listing.",
	"Method": "void setDelimiter(String delimiter){\r\n    this.delimiter = delimiter;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetLabelDetectionResult.getErrorCode",
	"Comment": "returns the value of the errorcode property for this object.",
	"Method": "String getErrorCode(){\r\n    return errorCode;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetCampaignActivitiesRequest.withCampaignId",
	"Comment": "the unique id of the campaign.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetCampaignActivitiesRequest withCampaignId(String campaignId){\r\n    this.campaignId = campaignId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.UpdateAccountSendingEnabledRequest.setEnabled",
	"Comment": "describes whether email sending is enabled or disabled for your amazonses account in the current aws region.",
	"Method": "void setEnabled(Boolean enabled){\r\n    this.enabled = enabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSChannelRequest.withDefaultAuthenticationMethod",
	"Comment": "the default authentication method used for apns.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSChannelRequest withDefaultAuthenticationMethod(String defaultAuthenticationMethod){\r\n    this.defaultAuthenticationMethod = defaultAuthenticationMethod;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetFaceSearchResult.withErrorCode",
	"Comment": "sets the value of the errorcode property for this object.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetFaceSearchResult withErrorCode(String errorCode){\r\n    this.errorCode = errorCode;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.GrantListEntry.withOperations",
	"Comment": "the list of operations permitted by the grant.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GrantListEntry withOperations(String operations,GrantListEntry withOperations,java.util.Collection<String> operations){\r\n    setOperations(operations);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.AdjustedRangeInputStream.initializeForRead",
	"Comment": "skip to the start location of the range of bytes desired by the user.",
	"Method": "void initializeForRead(long rangeBeginning,long rangeEnd){\r\n    int numBytesToSkip;\r\n    if (rangeBeginning < JceEncryptionConstants.SYMMETRIC_CIPHER_BLOCK_SIZE) {\r\n        numBytesToSkip = (int) rangeBeginning;\r\n    } else {\r\n        int offsetIntoBlock = (int) (rangeBeginning % JceEncryptionConstants.SYMMETRIC_CIPHER_BLOCK_SIZE);\r\n        numBytesToSkip = JceEncryptionConstants.SYMMETRIC_CIPHER_BLOCK_SIZE + offsetIntoBlock;\r\n    }\r\n    if (numBytesToSkip != 0) {\r\n        while (numBytesToSkip > 0) {\r\n            this.decryptedContents.read();\r\n            numBytesToSkip--;\r\n        }\r\n    }\r\n    this.virtualAvailable = (rangeEnd - rangeBeginning) + 1;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteAppResult.withApplicationResponse",
	"Comment": "application response.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteAppResult withApplicationResponse(ApplicationResponse applicationResponse){\r\n    this.applicationResponse = applicationResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ReceiptFilter.setIpFilter",
	"Comment": "a structure that provides the ip addresses to block or allow, and whetherto block or allow incoming mail from them.",
	"Method": "void setIpFilter(ReceiptIpFilter ipFilter){\r\n    this.ipFilter = ipFilter;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetCelebrityRecognitionResult.getStatusMessage",
	"Comment": "if the job fails, statusmessage provides a descriptive errormessage.",
	"Method": "String getStatusMessage(){\r\n    return statusMessage;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Beard.setValue",
	"Comment": "boolean value that indicates whether the face has beard or not.",
	"Method": "void setValue(Boolean value){\r\n    this.value = value;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListPartsRequest.setUploadId",
	"Comment": "sets the id of the multipart upload whose parts are being listed.",
	"Method": "void setUploadId(String uploadId){\r\n    this.uploadId = uploadId;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateApnsVoipSandboxChannelRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateApnsVoipSandboxChannelRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.DescribeCollectionResult.getCreationTimestamp",
	"Comment": "returns the value of the creationtimestamp property for this object.",
	"Method": "java.util.Date getCreationTimestamp(){\r\n    return creationTimestamp;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser.parseAccessControlListResponse",
	"Comment": "parses an accesscontrollisthandler response xml document from an inputstream.",
	"Method": "AccessControlListHandler parseAccessControlListResponse(InputStream inputStream){\r\n    final AccessControlListHandler handler = new AccessControlListHandler();\r\n    parseXmlInputStream(handler, inputStream);\r\n    return handler;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ExportJobResource.withSegmentId",
	"Comment": "the id of the segment to export endpoints from. if not present, amazonpinpoint exports all of the endpoints that belong to the application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ExportJobResource withSegmentId(String segmentId){\r\n    this.segmentId = segmentId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.SearchFacesByImageResult.withFaceMatches",
	"Comment": "an array of faces that match the input face, along with the confidence inthe match.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SearchFacesByImageResult withFaceMatches(FaceMatch faceMatches,SearchFacesByImageResult withFaceMatches,java.util.Collection<FaceMatch> faceMatches){\r\n    setFaceMatches(faceMatches);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateThingRequest.getExpectedVersion",
	"Comment": "the expected version of the thing record in the registry. if the versionof the record in the registry does not match the expected versionspecified in the request, the updatething request isrejected with a versionconflictexception.",
	"Method": "Long getExpectedVersion(){\r\n    return expectedVersion;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GeneratePresignedUrlRequest.withResponseHeaders",
	"Comment": "sets the headers to be overridden in the service response and returnsthis object, for method chaining.",
	"Method": "GeneratePresignedUrlRequest withResponseHeaders(ResponseHeaderOverrides responseHeaders){\r\n    setResponseHeaders(responseHeaders);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.BulkEmailDestinationStatus.withMessageId",
	"Comment": "the unique message identifier returned from thesendbulktemplatedemail operation.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "BulkEmailDestinationStatus withMessageId(String messageId){\r\n    this.messageId = messageId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ListKeyPoliciesResult.getTruncated",
	"Comment": "a flag that indicates whether there are more items in the list. when thisvalue is true, the list in this response is truncated. to get more items,pass the value of the nextmarker element in this response tothe marker parameter in a subsequent request.",
	"Method": "Boolean getTruncated(){\r\n    return truncated;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteApnsSandboxChannelResult.getAPNSSandboxChannelResponse",
	"Comment": "apple development push notification service channel definition.",
	"Method": "APNSSandboxChannelResponse getAPNSSandboxChannelResponse(){\r\n    return aPNSSandboxChannelResponse;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketTaggingConfigurationRequest.getBucketName",
	"Comment": "gets the name of the bucket whose tagging configuration is being set.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ObjectMetadata.setOngoingRestore",
	"Comment": "for internal use only. sets the boolean value which indicates whetherthere is ongoing restore request. not intended to be called by externalcode.",
	"Method": "void setOngoingRestore(boolean ongoingRestore){\r\n    this.ongoingRestore = Boolean.valueOf(ongoingRestore);\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.DomainMetadataResult.withItemNamesSizeBytes",
	"Comment": "the total size of all item names in the domain, in bytes.returns a reference to this object so that method calls can be chained together.",
	"Method": "DomainMetadataResult withItemNamesSizeBytes(Long itemNamesSizeBytes){\r\n    this.itemNamesSizeBytes = itemNamesSizeBytes;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.AmazonKinesisClient.removeTagsFromStream",
	"Comment": "removes tags from the specified kinesis data stream. removed tags aredeleted and cannot be recovered after this operation successfullycompletes.if you specify a tag that does not exist, it is ignored.removetagsfromstream has a limit of five transactions per secondper account.",
	"Method": "void removeTagsFromStream(RemoveTagsFromStreamRequest removeTagsFromStreamRequest){\r\n    ExecutionContext executionContext = createExecutionContext(removeTagsFromStreamRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<RemoveTagsFromStreamRequest> request = null;\r\n    Response<Void> response = null;\r\n    try {\r\n        awsRequestMetrics.startEvent(Field.RequestMarshallTime);\r\n        try {\r\n            request = new RemoveTagsFromStreamRequestMarshaller().marshall(removeTagsFromStreamRequest);\r\n            request.setAWSRequestMetrics(awsRequestMetrics);\r\n        } finally {\r\n            awsRequestMetrics.endEvent(Field.RequestMarshallTime);\r\n        }\r\n        JsonResponseHandler<Void> responseHandler = new JsonResponseHandler<Void>(null);\r\n        invoke(request, responseHandler, executionContext);\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CORSRule.withExposedHeaders",
	"Comment": "sets the exposeheaders of this rule and returns a reference to thisobject for method chaining.",
	"Method": "CORSRule withExposedHeaders(List<String> exposedHeaders){\r\n    this.exposedHeaders = exposedHeaders;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.GetAttributesRequest.isConsistentRead",
	"Comment": "determines whether or not strong consistency should be enforced whendata is read from simpledb. if true, any data previouslywritten to simpledb will be returned. otherwise, results will beconsistent eventually, and the client may not see data that waswritten immediately before your read.",
	"Method": "Boolean isConsistentRead(){\r\n    return consistentRead;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsRequest.getMaxKeys",
	"Comment": "gets the optional maxkeys parameter indicating the maximumnumber of keys to include in the response. amazon s3 might return fewerkeys than specified, but will never return more. even if the optionalparameter is not specified, amazon s3 will limit the number of results inthe response.",
	"Method": "Integer getMaxKeys(){\r\n    return maxKeys;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.MessageConfiguration.withAPNSMessage",
	"Comment": "the message that the campaign delivers to apns channels. overrides thedefault message.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "MessageConfiguration withAPNSMessage(Message aPNSMessage){\r\n    this.aPNSMessage = aPNSMessage;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.EncryptionUtils.convertInstructionToJSONObject",
	"Comment": "returns a jsonobject representation of the instruction object.",
	"Method": "Map<String, String> convertInstructionToJSONObject(EncryptionInstruction instruction){\r\n    Map<String, String> instructionJSON = new HashMap<String, String>();\r\n    String materialsDescription = JsonUtils.mapToString(instruction.getMaterialsDescription());\r\n    instructionJSON.put(Headers.MATERIALS_DESCRIPTION, materialsDescription);\r\n    instructionJSON.put(Headers.CRYPTO_KEY, Base64.encodeAsString(instruction.getEncryptedSymmetricKey()));\r\n    byte[] iv = instruction.getSymmetricCipher().getIV();\r\n    instructionJSON.put(Headers.CRYPTO_IV, Base64.encodeAsString(iv));\r\n    return instructionJSON;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSAsyncClient.subscribeAsync",
	"Comment": "prepares to subscribe an endpoint by sending the endpoint a confirmationmessage. to actually create a subscription, the endpoint owner must callthe confirmsubscription action with the token from theconfirmation message. confirmation tokens are valid for three days.",
	"Method": "Future<SubscribeResult> subscribeAsync(SubscribeRequest subscribeRequest,Future<SubscribeResult> subscribeAsync,SubscribeRequest subscribeRequest,AsyncHandler<SubscribeRequest, SubscribeResult> asyncHandler){\r\n    return executorService.submit(new Callable<SubscribeResult>() {\r\n        public SubscribeResult call() throws Exception {\r\n            SubscribeResult result = null;\r\n            try {\r\n                result = subscribe(subscribeRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(subscribeRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSAsyncClient.subscribeAsync",
	"Comment": "prepares to subscribe an endpoint by sending the endpoint a confirmationmessage. to actually create a subscription, the endpoint owner must callthe confirmsubscription action with the token from theconfirmation message. confirmation tokens are valid for three days.",
	"Method": "Future<SubscribeResult> subscribeAsync(SubscribeRequest subscribeRequest,Future<SubscribeResult> subscribeAsync,SubscribeRequest subscribeRequest,AsyncHandler<SubscribeRequest, SubscribeResult> asyncHandler){\r\n    SubscribeResult result = null;\r\n    try {\r\n        result = subscribe(subscribeRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(subscribeRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.UpdateCondition.setExists",
	"Comment": "a value specifying whether or not the specified attribute must existwith the specified value in order for the update condition to besatisfied. specify true if the attribute must exist forthe update condition to be satisfied. specify false ifthe attribute should not exist in order for the update condition to besatisfied.",
	"Method": "void setExists(Boolean exists){\r\n    this.exists = exists;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.CreateKeyRequest.isBypassPolicyLockoutSafetyCheck",
	"Comment": "a flag to indicate whether to bypass the key policy lockout safety check.setting this value to true increases the risk that the cmk becomesunmanageable. do not set this value to true indiscriminately.for more information, refer to the scenario in the default key policy section in the aws key management servicedeveloper guide.use this parameter only when you include a policy in the request and youintend to prevent the principal that is making the request from making asubsequent putkeypolicy request on the cmk.the default value is false.",
	"Method": "Boolean isBypassPolicyLockoutSafetyCheck(){\r\n    return bypassPolicyLockoutSafetyCheck;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.internal.UploadCallable.uploadPartsInSeries",
	"Comment": "uploads all parts in the request in serial in this thread, then completesthe upload and returns the result.",
	"Method": "UploadResult uploadPartsInSeries(UploadPartRequestFactory requestFactory){\r\n    final List<PartETag> partETags = new ArrayList<PartETag>();\r\n    while (requestFactory.hasMoreRequests()) {\r\n        if (threadPool.isShutdown())\r\n            throw new CancellationException(\"TransferManager has been shutdown\");\r\n        UploadPartRequest uploadPartRequest = requestFactory.getNextUploadPartRequest();\r\n        InputStream inputStream = uploadPartRequest.getInputStream();\r\n        if (inputStream != null && inputStream.markSupported()) {\r\n            if (uploadPartRequest.getPartSize() >= Integer.MAX_VALUE) {\r\n                inputStream.mark(Integer.MAX_VALUE);\r\n            } else {\r\n                inputStream.mark((int) uploadPartRequest.getPartSize());\r\n            }\r\n        }\r\n        partETags.add(s3.uploadPart(uploadPartRequest).getPartETag());\r\n    }\r\n    CompleteMultipartUploadResult completeMultipartUploadResult = s3.completeMultipartUpload(new CompleteMultipartUploadRequest(putObjectRequest.getBucketName(), putObjectRequest.getKey(), multipartUploadId, partETags));\r\n    UploadResult uploadResult = new UploadResult();\r\n    uploadResult.setBucketName(completeMultipartUploadResult.getBucketName());\r\n    uploadResult.setKey(completeMultipartUploadResult.getKey());\r\n    uploadResult.setETag(completeMultipartUploadResult.getETag());\r\n    uploadResult.setVersionId(completeMultipartUploadResult.getVersionId());\r\n    return uploadResult;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.setBucketName",
	"Comment": "sets the name of the bucket containing the existing, initiated multipartupload, with which this new part will be associated.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.SearchedLogStream.withSearchedCompletely",
	"Comment": "indicates whether all the events in this log stream were searched.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SearchedLogStream withSearchedCompletely(Boolean searchedCompletely){\r\n    this.searchedCompletely = searchedCompletely;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ObjectMetadata.getSSEAwsKmsKeyId",
	"Comment": "returns the aws key management system key id used for server sideencryption of the amazon s3 object.",
	"Method": "String getSSEAwsKmsKeyId(){\r\n    return (String) metadata.get(Headers.SERVER_SIDE_ENCRYPTION_KMS_KEY_ID);\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Celebrity.withName",
	"Comment": "the name of the celebrity.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Celebrity withName(String name){\r\n    this.name = name;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.InvalidTemplateException.getTemplateName",
	"Comment": "returns the value of the templatename property for this object.",
	"Method": "String getTemplateName(){\r\n    return templateName;\r\n}"
}, {
	"Path": "com.amazonaws.services.iotdata.AWSIotDataClient.publish",
	"Comment": "publishes state information.for more information, see http protocol in the aws iot developer guide.",
	"Method": "void publish(PublishRequest publishRequest){\r\n    ExecutionContext executionContext = createExecutionContext(publishRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<PublishRequest> request = null;\r\n    Response<Void> response = null;\r\n    try {\r\n        awsRequestMetrics.startEvent(Field.RequestMarshallTime);\r\n        try {\r\n            request = new PublishRequestMarshaller().marshall(publishRequest);\r\n            request.setAWSRequestMetrics(awsRequestMetrics);\r\n        } finally {\r\n            awsRequestMetrics.endEvent(Field.RequestMarshallTime);\r\n        }\r\n        JsonResponseHandler<Void> responseHandler = new JsonResponseHandler<Void>(null);\r\n        invoke(request, responseHandler, executionContext);\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.CheckIfPhoneNumberIsOptedOutRequest.withPhoneNumber",
	"Comment": "the phone number for which you want to check the opt out status.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CheckIfPhoneNumberIsOptedOutRequest withPhoneNumber(String phoneNumber){\r\n    this.phoneNumber = phoneNumber;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.mobileanalytics.AmazonMobileAnalyticsClient.putEvents",
	"Comment": "the putevents operation records one or more events. you can have up to1,500 unique custom events per app, any combination of up to 40attributes and metrics per custom event, and any number of attribute ormetric values.",
	"Method": "void putEvents(PutEventsRequest putEventsRequest){\r\n    ExecutionContext executionContext = createExecutionContext(putEventsRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<PutEventsRequest> request = null;\r\n    Response<Void> response = null;\r\n    try {\r\n        awsRequestMetrics.startEvent(Field.RequestMarshallTime);\r\n        try {\r\n            request = new PutEventsRequestMarshaller().marshall(putEventsRequest);\r\n            request.setAWSRequestMetrics(awsRequestMetrics);\r\n        } finally {\r\n            awsRequestMetrics.endEvent(Field.RequestMarshallTime);\r\n        }\r\n        JsonResponseHandler<Void> responseHandler = new JsonResponseHandler<Void>(null);\r\n        invoke(request, responseHandler, executionContext);\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetBucketMetricsConfigurationRequest.getBucketName",
	"Comment": "returns the name of the bucket containing the metrics configuration to retrieve.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EventStream.withRoleArn",
	"Comment": "the iam role that authorizes amazon pinpoint to publish events to thestream in your account.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EventStream withRoleArn(String roleArn){\r\n    this.roleArn = roleArn;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketTaggingConfigurationRequest.setBucketName",
	"Comment": "sets the name of the bucket whose tagging configuration is being set.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketVersioningConfigurationRequest.getVersioningConfiguration",
	"Comment": "gets the new versioning configuration for the specified bucket.",
	"Method": "BucketVersioningConfiguration getVersioningConfiguration(){\r\n    return versioningConfiguration;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.UntagLogGroupRequest.setTags",
	"Comment": "the tag keys. the corresponding tags are removed from the log group.",
	"Method": "void setTags(java.util.Collection<String> tags){\r\n    if (tags == null) {\r\n        this.tags = null;\r\n        return;\r\n    }\r\n    this.tags = new java.util.ArrayList<String>(tags);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.setRedirectLocation",
	"Comment": "sets the optional redirect location for the newly copied object.",
	"Method": "void setRedirectLocation(String redirectLocation){\r\n    this.redirectLocation = redirectLocation;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.kinesis.kinesisrecorder.KinesisRecorderConfig.getClientConfiguration",
	"Comment": "returns the client configuration the kinesis recorder will use whenmaking requests to amazon kinesis.",
	"Method": "ClientConfiguration getClientConfiguration(){\r\n    return clientConfiguration;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobRequest.withSegmentId",
	"Comment": "the id of the segment to update if the import job is meant to update anexisting segment.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ImportJobRequest withSegmentId(String segmentId){\r\n    this.segmentId = segmentId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.GetTemplateRequest.withTemplateName",
	"Comment": "the name of the template you want to retrieve.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetTemplateRequest withTemplateName(String templateName){\r\n    this.templateName = templateName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.SetEndpointAttributesRequest.clearAttributesEntries",
	"Comment": "removes all the entries added into attributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SetEndpointAttributesRequest clearAttributesEntries(){\r\n    this.attributes = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListPartsRequest.withPartNumberMarker",
	"Comment": "sets the optional part number marker indicating where in the results tobeing listing parts, and returns this updated listpartsrequest object sothat additional method calls can be chained together.",
	"Method": "ListPartsRequest withPartNumberMarker(Integer partNumberMarker){\r\n    this.partNumberMarker = partNumberMarker;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyPartResult.getVersionId",
	"Comment": "gets the version id of the source object. this field is only present ifobject versioning has been enabled for the bucket the object was copiedfrom.",
	"Method": "String getVersionId(){\r\n    return versionId;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteApnsChannelRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteApnsChannelRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SetIdentityHeadersInNotificationsEnabledRequest.getEnabled",
	"Comment": "sets whether amazon ses includes the original email headers in amazon snsnotifications of the specified notification type. a value oftrue specifies that amazon ses will include headers innotifications, and a value of false specifies that amazonses will not include headers in notifications.this value can only be set when notificationtype is alreadyset to use a particular amazon sns topic.",
	"Method": "Boolean getEnabled(){\r\n    return enabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetExportJobRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetExportJobRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetSegmentsRequest.withPageSize",
	"Comment": "the number of entries you want on each page in the response.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetSegmentsRequest withPageSize(String pageSize){\r\n    this.pageSize = pageSize;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListEndpointsByPlatformApplicationResult.setNextToken",
	"Comment": "nexttoken string is returned when callinglistendpointsbyplatformapplication action if additional records areavailable after the first page results.",
	"Method": "void setNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ActivityResponse.getSuccessfulEndpointCount",
	"Comment": "the total number of endpoints to which the campaign successfullydelivered messages.",
	"Method": "Integer getSuccessfulEndpointCount(){\r\n    return successfulEndpointCount;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.model.GetDataEndpointResult.withDataEndpoint",
	"Comment": "the endpoint value. to read data from the stream or to write data to it,specify this endpoint in your application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetDataEndpointResult withDataEndpoint(String dataEndpoint){\r\n    this.dataEndpoint = dataEndpoint;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.ExportTaskStatus.withMessage",
	"Comment": "the status message related to the status code.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ExportTaskStatus withMessage(String message){\r\n    this.message = message;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.withUploadId",
	"Comment": "sets the id of the existing, initiated multipart upload with which thisnew part will be associated, and returns this updated uploadpartrequestobject so that additional method calls can be chained together.",
	"Method": "UploadPartRequest withUploadId(String uploadId){\r\n    this.uploadId = uploadId;\r\n    return this;\r\n}"
}, {
	"Path": "org.bouncycastle.asn1.ASN1Primitive.toDLObject",
	"Comment": "return the current object as one which encodes using definite length encoding.",
	"Method": "ASN1Primitive toDLObject(){\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SMSChannelResponse.withLastModifiedBy",
	"Comment": "who last updated this entryreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SMSChannelResponse withLastModifiedBy(String lastModifiedBy){\r\n    this.lastModifiedBy = lastModifiedBy;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.AbstractPutObjectRequest.getProgressListener",
	"Comment": "returns the optional progress listener for receiving updates about objectupload status.",
	"Method": "com.amazonaws.services.s3.model.ProgressListener getProgressListener(){\r\n    final ProgressListener generalProgressListener = getGeneralProgressListener();\r\n    if (generalProgressListener instanceof LegacyS3ProgressListener) {\r\n        return ((LegacyS3ProgressListener) generalProgressListener).unwrap();\r\n    } else {\r\n        return null;\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.Prediction.withPredictedValue",
	"Comment": "the prediction value for regression mlmodel.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Prediction withPredictedValue(Float predictedValue){\r\n    this.predictedValue = predictedValue;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateSmsChannelResult.withSMSChannelResponse",
	"Comment": "sms channel response.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateSmsChannelResult withSMSChannelResponse(SMSChannelResponse sMSChannelResponse){\r\n    this.sMSChannelResponse = sMSChannelResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketNotificationConfiguration.getConfigurations",
	"Comment": "returns all the notification configurations associated with the amazon s3bucket.",
	"Method": "Map<String, NotificationConfiguration> getConfigurations(){\r\n    return configurations;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.InitiateMultipartUploadRequest.getSSEAwsKeyManagementParams",
	"Comment": "returns the aws key management system parameters used to encrypt theobject on server side.",
	"Method": "SSEAwsKeyManagementParams getSSEAwsKeyManagementParams(){\r\n    return sseAwsKeyManagementParams;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this async client to executerequests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideoarchivedmedia.model.ListFragmentsResult.setFragments",
	"Comment": "a list of fragment numbers that correspond to the time stamp rangeprovided.",
	"Method": "void setFragments(java.util.Collection<Fragment> fragments){\r\n    if (fragments == null) {\r\n        this.fragments = null;\r\n        return;\r\n    }\r\n    this.fragments = new java.util.ArrayList<Fragment>(fragments);\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.GetVocabularyResult.withLastModifiedTime",
	"Comment": "the date and time that the vocabulary was last modified.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetVocabularyResult withLastModifiedTime(java.util.Date lastModifiedTime){\r\n    this.lastModifiedTime = lastModifiedTime;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.RemovePermissionRequest.withTopicArn",
	"Comment": "the arn of the topic whose access control policy you wish to modify.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "RemovePermissionRequest withTopicArn(String topicArn){\r\n    this.topicArn = topicArn;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.BoundingBox.setTop",
	"Comment": "top coordinate of the bounding box as a ratio of overall image height.",
	"Method": "void setTop(Float top){\r\n    this.top = top;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.ListFacesResult.withFaces",
	"Comment": "an array of face objects.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListFacesResult withFaces(Face faces,ListFacesResult withFaces,java.util.Collection<Face> faces){\r\n    setFaces(faces);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ExportJobResponse.getApplicationId",
	"Comment": "the unique id of the application associated with the export job.",
	"Method": "String getApplicationId(){\r\n    return applicationId;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteObjectRequest.setBucketName",
	"Comment": "sets the name of the amazon s3 bucket containing the object to delete.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SendEmailResult.withMessageId",
	"Comment": "the unique message identifier returned from the sendemailaction.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendEmailResult withMessageId(String messageId){\r\n    this.messageId = messageId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SetActiveReceiptRuleSetRequest.withRuleSetName",
	"Comment": "the name of the receipt rule set to make active. setting this value tonull disables all email receiving.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SetActiveReceiptRuleSetRequest withRuleSetName(String ruleSetName){\r\n    this.ruleSetName = ruleSetName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateThingRequest.getRemoveThingType",
	"Comment": "remove a thing type association. if true, the association isremoved.",
	"Method": "Boolean getRemoveThingType(){\r\n    return removeThingType;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSSandboxChannelRequest.withEnabled",
	"Comment": "if the channel is enabled for sending messages.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSSandboxChannelRequest withEnabled(Boolean enabled){\r\n    this.enabled = enabled;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Result.setDelimiter",
	"Comment": "for internal use only. sets the delimiter parameter originally used torequest this object listing.",
	"Method": "void setDelimiter(String delimiter){\r\n    this.delimiter = delimiter;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketReplicationConfiguration.withRules",
	"Comment": "sets the replication rules for the amazon s3 bucket. returns the updatedobject.",
	"Method": "BucketReplicationConfiguration withRules(Map<String, ReplicationRule> rules){\r\n    setRules(rules);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClient.deleteReceiptRuleSet",
	"Comment": "deletes the specified receipt rule set and all of the receipt rules itcontains.the currently active rule set cannot be deleted.for information about managing receipt rule sets, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "DeleteReceiptRuleSetResult deleteReceiptRuleSet(DeleteReceiptRuleSetRequest deleteReceiptRuleSetRequest){\r\n    ExecutionContext executionContext = createExecutionContext(deleteReceiptRuleSetRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<DeleteReceiptRuleSetRequest> request = null;\r\n    Response<DeleteReceiptRuleSetResult> response = null;\r\n    try {\r\n        request = new DeleteReceiptRuleSetRequestMarshaller().marshall(deleteReceiptRuleSetRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        response = invoke(request, new DeleteReceiptRuleSetResultStaxUnmarshaller(), executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ReceiptAction.getStopAction",
	"Comment": "terminates the evaluation of the receipt rule set and optionallypublishes a notification to amazon sns.",
	"Method": "StopAction getStopAction(){\r\n    return stopAction;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.DescribeDestinationsResult.withDestinations",
	"Comment": "the destinations.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DescribeDestinationsResult withDestinations(Destination destinations,DescribeDestinationsResult withDestinations,java.util.Collection<Destination> destinations){\r\n    setDestinations(destinations);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateApnsVoipChannelRequest.withAPNSVoipChannelRequest",
	"Comment": "apple voip push notification service channel definition.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateApnsVoipChannelRequest withAPNSVoipChannelRequest(APNSVoipChannelRequest aPNSVoipChannelRequest){\r\n    this.aPNSVoipChannelRequest = aPNSVoipChannelRequest;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Mustache.isValue",
	"Comment": "boolean value that indicates whether the face has mustache or not.",
	"Method": "Boolean isValue(){\r\n    return value;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSClient.setSMSAttributes",
	"Comment": "use this request to set the default settings for sending sms messages andreceiving daily sms usage reports.you can override some of these settings for a single message when you usethe publish action with themessageattributes.entry.n parameter. for more information,see sending an sms message in the amazon sns developer guide.",
	"Method": "SetSMSAttributesResult setSMSAttributes(SetSMSAttributesRequest setSMSAttributesRequest){\r\n    ExecutionContext executionContext = createExecutionContext(setSMSAttributesRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<SetSMSAttributesRequest> request = null;\r\n    Response<SetSMSAttributesResult> response = null;\r\n    try {\r\n        request = new SetSMSAttributesRequestMarshaller().marshall(setSMSAttributesRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        response = invoke(request, new SetSMSAttributesResultStaxUnmarshaller(), executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.lexrts.model.PostTextRequest.clearsessionAttributesEntries",
	"Comment": "removes all the entries added into sessionattributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PostTextRequest clearsessionAttributesEntries(){\r\n    this.sessionAttributes = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.FilterLogEventsResult.withSearchedLogStreams",
	"Comment": "indicates which log streams have been searched and whether each has beensearched completely.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "FilterLogEventsResult withSearchedLogStreams(SearchedLogStream searchedLogStreams,FilterLogEventsResult withSearchedLogStreams,java.util.Collection<SearchedLogStream> searchedLogStreams){\r\n    setSearchedLogStreams(searchedLogStreams);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketLifecycleConfigurationRequest.setLifecycleConfiguration",
	"Comment": "sets the new lifecycle configuration for the specified bucket.",
	"Method": "void setLifecycleConfiguration(BucketLifecycleConfiguration lifecycleConfiguration){\r\n    this.lifecycleConfiguration = lifecycleConfiguration;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Request.setContinuationToken",
	"Comment": "sets the optional continuation token. continuation token allows a list tobe continued from a specific point. continuationtoken is provided intruncated list results.",
	"Method": "void setContinuationToken(String continuationToken){\r\n    this.continuationToken = continuationToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentDimensions.withLocation",
	"Comment": "the segment location attributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SegmentDimensions withLocation(SegmentLocation location){\r\n    this.location = location;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListEndpointsByPlatformApplicationRequest.setPlatformApplicationArn",
	"Comment": "platformapplicationarn for listendpointsbyplatformapplicationinputaction.",
	"Method": "void setPlatformApplicationArn(String platformApplicationArn){\r\n    this.platformApplicationArn = platformApplicationArn;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.PersistableUpload.getFile",
	"Comment": "returns the file name along with path which needs to be uploaded toamazon s3.",
	"Method": "String getFile(){\r\n    return file;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointResponse.withEffectiveDate",
	"Comment": "the date and time when the endpoint was last updated, shown in iso 8601format.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointResponse withEffectiveDate(String effectiveDate){\r\n    this.effectiveDate = effectiveDate;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.Lexicon.withContent",
	"Comment": "lexicon content in string format. the content of a lexicon must be in plsformat.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Lexicon withContent(String content){\r\n    this.content = content;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobRequest.setSegmentName",
	"Comment": "a custom name for the segment created by the import job. use ifdefinesegment is true.",
	"Method": "void setSegmentName(String segmentName){\r\n    this.segmentName = segmentName;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.UpdateReceiptRuleRequest.setRuleSetName",
	"Comment": "the name of the receipt rule set that the receipt rule belongs to.",
	"Method": "void setRuleSetName(String ruleSetName){\r\n    this.ruleSetName = ruleSetName;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DeleteCustomVerificationEmailTemplateRequest.setTemplateName",
	"Comment": "the name of the custom verification email template that you want todelete.",
	"Method": "void setTemplateName(String templateName){\r\n    this.templateName = templateName;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Video.withS3Object",
	"Comment": "the amazon s3 bucket name and file name for the video.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Video withS3Object(S3Object s3Object){\r\n    this.s3Object = s3Object;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetBucketMetricsConfigurationRequest.setBucketName",
	"Comment": "sets the name of the bucket containing the metrics configuration to retrieve.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.sample.lex.TextActivity.startNewConversation",
	"Comment": "clears the current conversation history and closes the current request.",
	"Method": "void startNewConversation(){\r\n    Log.d(TAG, \"Starting new conversation\");\r\n    Conversation.clear();\r\n    inConversation = false;\r\n    clearTextInput();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketAnalyticsConfigurationsRequest.withContinuationToken",
	"Comment": "sets the optional continuation token.continuation token allows a list to becontinued from a specific point. continuationtoken is provided in truncated list results.",
	"Method": "ListBucketAnalyticsConfigurationsRequest withContinuationToken(String continuationToken){\r\n    setContinuationToken(continuationToken);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.ListTagsLogGroupResult.withTags",
	"Comment": "the tags for the log group.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListTagsLogGroupResult withTags(java.util.Map<String, String> tags){\r\n    this.tags = tags;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.TransferManager.getConfiguration",
	"Comment": "returns the configuration which specifies how thistransfermanager processes requests.",
	"Method": "TransferManagerConfiguration getConfiguration(){\r\n    return configuration;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.InitiateMultipartUploadRequest.withSSEAwsKeyManagementParams",
	"Comment": "sets the aws key management system parameters used to encrypt the objecton server side.",
	"Method": "InitiateMultipartUploadRequest withSSEAwsKeyManagementParams(SSEAwsKeyManagementParams sseAwsKeyManagementParams){\r\n    setSSEAwsKeyManagementParams(sseAwsKeyManagementParams);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyPartRequest.getFirstByte",
	"Comment": "returns the optional start range to copy from the source object.",
	"Method": "Long getFirstByte(){\r\n    return firstByte;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ObjectListing.setDelimiter",
	"Comment": "for internal use only. sets the delimiter parameter originally used torequest this object listing.",
	"Method": "void setDelimiter(String delimiter){\r\n    this.delimiter = delimiter;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EmailChannelRequest.withEnabled",
	"Comment": "if the channel is enabled for sending messages.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EmailChannelRequest withEnabled(Boolean enabled){\r\n    this.enabled = enabled;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSVoipChannelResponse.withLastModifiedBy",
	"Comment": "who made the last changereturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSVoipChannelResponse withLastModifiedBy(String lastModifiedBy){\r\n    this.lastModifiedBy = lastModifiedBy;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteAppRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteAppRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.lex.interactionkit.ui.InteractiveVoiceViewAdapter.startListening",
	"Comment": "invoke amazon lex client to start a new audio in audio request.",
	"Method": "void startListening(Map<String, String> sessionParameters){\r\n    state = STATE_LISTENING;\r\n    lexInteractionClient.audioInForAudioOut(sessionParameters);\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DescribeActiveReceiptRuleSetResult.withRules",
	"Comment": "the receipt rules that belong to the active rule set.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DescribeActiveReceiptRuleSetResult withRules(ReceiptRule rules,DescribeActiveReceiptRuleSetResult withRules,java.util.Collection<ReceiptRule> rules){\r\n    setRules(rules);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.internal.AbstractTransfer.unwrapExecutionException",
	"Comment": "unwraps the root exception that caused the specified executionexceptionand returns it. if it was not an instance of amazonclientexception, it iswrapped as an amazonclientexception.",
	"Method": "AmazonClientException unwrapExecutionException(ExecutionException e){\r\n    Throwable t = e.getCause();\r\n    if (t instanceof AmazonClientException)\r\n        return (AmazonClientException) t;\r\n    return new AmazonClientException(\"Unable to complete transfer: \" + t.getMessage(), t);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartListing.getPartNumberMarker",
	"Comment": "returns the optional part number marker specified in the original requestto specify where in the results to begin listing parts.",
	"Method": "Integer getPartNumberMarker(){\r\n    return partNumberMarker;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.internal.DownloadImpl.setState",
	"Comment": "this method is also responsible for firing completed signal to thelisteners.",
	"Method": "void setState(TransferState state){\r\n    super.setState(state);\r\n    if (state == TransferState.Completed) {\r\n        fireProgressEvent(ProgressEvent.COMPLETED_EVENT_CODE);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.AddressConfiguration.clearContextEntries",
	"Comment": "removes all the entries added into context.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "AddressConfiguration clearContextEntries(){\r\n    this.context = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CreateSegmentRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreateSegmentRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketWebsiteConfigurationRequest.withBucketName",
	"Comment": "sets the name of the bucket whose website configuration is being set andreturns this updated request object so that additional method calls canbe chained together.",
	"Method": "SetBucketWebsiteConfigurationRequest withBucketName(String bucketName){\r\n    setBucketName(bucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.GetIdentityVerificationAttributesRequest.withIdentities",
	"Comment": "a list of identities.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetIdentityVerificationAttributesRequest withIdentities(String identities,GetIdentityVerificationAttributesRequest withIdentities,java.util.Collection<String> identities){\r\n    setIdentities(identities);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketWebsiteConfigurationRequest.getBucketName",
	"Comment": "returns the name of the bucket whose website configuration is being set.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.SetTopicAttributesRequest.withTopicArn",
	"Comment": "the arn of the topic to modify.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SetTopicAttributesRequest withTopicArn(String topicArn){\r\n    this.topicArn = topicArn;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.AmazonSQSAsyncClient.removePermissionAsync",
	"Comment": "revokes any permissions in the queue policy that matches the specifiedlabel parameter. only the owner of the queue can removepermissions.",
	"Method": "Future<Void> removePermissionAsync(RemovePermissionRequest removePermissionRequest,Future<Void> removePermissionAsync,RemovePermissionRequest removePermissionRequest,AsyncHandler<RemovePermissionRequest, Void> asyncHandler){\r\n    return executorService.submit(new Callable<Void>() {\r\n        public Void call() throws Exception {\r\n            Void result = null;\r\n            try {\r\n                removePermission(removePermissionRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(removePermissionRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.AmazonSQSAsyncClient.removePermissionAsync",
	"Comment": "revokes any permissions in the queue policy that matches the specifiedlabel parameter. only the owner of the queue can removepermissions.",
	"Method": "Future<Void> removePermissionAsync(RemovePermissionRequest removePermissionRequest,Future<Void> removePermissionAsync,RemovePermissionRequest removePermissionRequest,AsyncHandler<RemovePermissionRequest, Void> asyncHandler){\r\n    Void result = null;\r\n    try {\r\n        removePermission(removePermissionRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(removePermissionRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ExportJobResponse.withDefinition",
	"Comment": "the export job settings.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ExportJobResponse withDefinition(ExportJobResource definition){\r\n    this.definition = definition;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.demo.s3transferutility.Util.getTransferUtility",
	"Comment": "gets an instance of the transferutility which is constructed using thegiven context",
	"Method": "TransferUtility getTransferUtility(Context context){\r\n    if (sTransferUtility == null) {\r\n        sTransferUtility = TransferUtility.builder().context(context).s3Client(getS3Client(context)).awsConfiguration(new AWSConfiguration(context)).build();\r\n    }\r\n    return sTransferUtility;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClient.listReceiptFilters",
	"Comment": "lists the ip address filters associated with your aws account in thecurrent aws region.for information about managing ip address filters, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "ListReceiptFiltersResult listReceiptFilters(ListReceiptFiltersRequest listReceiptFiltersRequest){\r\n    ExecutionContext executionContext = createExecutionContext(listReceiptFiltersRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<ListReceiptFiltersRequest> request = null;\r\n    Response<ListReceiptFiltersResult> response = null;\r\n    try {\r\n        request = new ListReceiptFiltersRequestMarshaller().marshall(listReceiptFiltersRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        response = invoke(request, new ListReceiptFiltersResultStaxUnmarshaller(), executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.MessageRequest.getTraceId",
	"Comment": "a unique id that you can use to trace a message. this id is visible torecipients.",
	"Method": "String getTraceId(){\r\n    return traceId;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ApplicationsResponse.setNextToken",
	"Comment": "the string that you use in a subsequent request to get the next page ofresults in a paginated response.",
	"Method": "void setNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.S3CryptoModuleAE.assertParameterNotNull",
	"Comment": "asserts that the specified parameter value is not null and if it is,throws an illegalargumentexception with the specified error message.",
	"Method": "void assertParameterNotNull(Object parameterValue,String errorMessage){\r\n    if (parameterValue == null) {\r\n        throw new IllegalArgumentException(errorMessage);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ListCustomVerificationEmailTemplatesRequest.setNextToken",
	"Comment": "an array the contains the name and creation time stamp for each templatein your amazon ses account.",
	"Method": "void setNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.mobile.client.AWSMobileClient.updateUserAttributes",
	"Comment": "sends a map of user attributes to update. if an attribute needs tobe verified, then the verification delivery information is returned.",
	"Method": "void updateUserAttributes(Map<String, String> userAttributes,Callback<List<UserCodeDeliveryDetails>> callback,List<UserCodeDeliveryDetails> updateUserAttributes,Map<String, String> userAttributes){\r\n    InternalCallback<List<UserCodeDeliveryDetails>> internalCallback = new InternalCallback<List<UserCodeDeliveryDetails>>();\r\n    return internalCallback.await(_updateUserAttributes(userAttributes, internalCallback));\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.BaiduMessage.clearDataEntries",
	"Comment": "removes all the entries added into data.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "BaiduMessage clearDataEntries(){\r\n    this.data = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketWebsiteConfigurationRequest.getConfiguration",
	"Comment": "returns the website configuration to send as part of this request.",
	"Method": "BucketWebsiteConfiguration getConfiguration(){\r\n    return configuration;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.CelebrityRecognition.withCelebrity",
	"Comment": "information about a recognized celebrity.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CelebrityRecognition withCelebrity(CelebrityDetail celebrity){\r\n    this.celebrity = celebrity;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.analytics.StorageClassAnalysis.withDataExport",
	"Comment": "sets the container used to describe how data related to thestorage class analysis should be exported.",
	"Method": "StorageClassAnalysis withDataExport(StorageClassAnalysisDataExport dataExport){\r\n    setDataExport(dataExport);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.S3VersionSummary.setLastModified",
	"Comment": "sets the date according to amazon s3 at which this version was lastmodified.",
	"Method": "void setLastModified(Date lastModified){\r\n    this.lastModified = lastModified;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetImportJobsRequest.getToken",
	"Comment": "the nexttoken string returned on a previous page that you use to get thenext page of results in a paginated response.",
	"Method": "String getToken(){\r\n    return token;\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateAccountAuditConfigurationRequest.setAuditCheckConfigurations",
	"Comment": "specifies which audit checks are enabled and disabled for this account.use describeaccountauditconfiguration to see the list of allchecks including those that are currently enabled.note that some data collection may begin immediately when certain checksare enabled. when a check is disabled, any data collected so far inrelation to the check is deleted.you cannot disable a check if it is used by any scheduled audit. you mustfirst delete the check from the scheduled audit or delete the scheduledaudit itself.on the first call to updateaccountauditconfiguration thisparameter is required and must specify at least one enabled check.",
	"Method": "void setAuditCheckConfigurations(java.util.Map<String, AuditCheckConfiguration> auditCheckConfigurations){\r\n    this.auditCheckConfigurations = auditCheckConfigurations;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectRequest.getBucketName",
	"Comment": "gets the name of the bucket containing the object to be downloaded.",
	"Method": "String getBucketName(){\r\n    return s3ObjectIdBuilder.getBucket();\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.TranscriptionJob.withFailureReason",
	"Comment": "if the transcriptionjobstatus field is failed,this field contains information about why the job failed.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "TranscriptionJob withFailureReason(String failureReason){\r\n    this.failureReason = failureReason;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobResponse.withDefinition",
	"Comment": "the import job settings.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ImportJobResponse withDefinition(ImportJobResource definition){\r\n    this.definition = definition;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ApplicationSettingsResource.setLastModifiedDate",
	"Comment": "the date that the settings were last updated in iso 8601 format.",
	"Method": "void setLastModifiedDate(String lastModifiedDate){\r\n    this.lastModifiedDate = lastModifiedDate;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClient.deleteReceiptRule",
	"Comment": "deletes the specified receipt rule.for information about managing receipt rules, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "DeleteReceiptRuleResult deleteReceiptRule(DeleteReceiptRuleRequest deleteReceiptRuleRequest){\r\n    ExecutionContext executionContext = createExecutionContext(deleteReceiptRuleRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<DeleteReceiptRuleRequest> request = null;\r\n    Response<DeleteReceiptRuleResult> response = null;\r\n    try {\r\n        request = new DeleteReceiptRuleRequestMarshaller().marshall(deleteReceiptRuleRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        response = invoke(request, new DeleteReceiptRuleResultStaxUnmarshaller(), executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.RestoreObjectRequest.setBucketName",
	"Comment": "sets the name of the bucket containing the reference to the object torestore which is now stored in amazon glacier.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketReplicationConfiguration.withRoleARN",
	"Comment": "sets the iam role that will be used by amazon s3 while replication.returns the updated object.",
	"Method": "BucketReplicationConfiguration withRoleARN(String roleARN){\r\n    setRoleARN(roleARN);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CreateCustomVerificationEmailTemplateRequest.setFromEmailAddress",
	"Comment": "the email address that the custom verification email is sent from.",
	"Method": "void setFromEmailAddress(String fromEmailAddress){\r\n    this.fromEmailAddress = fromEmailAddress;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.TagSet.setTag",
	"Comment": "sets the value of the tag for a given key. will overwrite existing value.",
	"Method": "void setTag(String key,String value){\r\n    tags.put(key, value);\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.StartTranscriptionJobResult.setTranscriptionJob",
	"Comment": "an object containing details of the asynchronous transcription job.",
	"Method": "void setTranscriptionJob(TranscriptionJob transcriptionJob){\r\n    this.transcriptionJob = transcriptionJob;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.GetIdentityDkimAttributesResult.clearDkimAttributesEntries",
	"Comment": "removes all the entries added into dkimattributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetIdentityDkimAttributesResult clearDkimAttributesEntries(){\r\n    this.dkimAttributes = null;\r\n    return this;\r\n}"
}, {
	"Path": "org.bouncycastle.asn1.ASN1Sequence.getObjectAt",
	"Comment": "return the object at the sequence position indicated by index.",
	"Method": "ASN1Encodable getObjectAt(int index){\r\n    return (ASN1Encodable) seq.elementAt(index);\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DeleteConfigurationSetEventDestinationRequest.setConfigurationSetName",
	"Comment": "the name of the configuration set from which to delete the eventdestination.",
	"Method": "void setConfigurationSetName(String configurationSetName){\r\n    this.configurationSetName = configurationSetName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.S3CryptoModuleBase.createInstructionGetRequest",
	"Comment": "creates and return a get object request for an instruction file.",
	"Method": "GetObjectRequest createInstructionGetRequest(S3ObjectId id,GetObjectRequest createInstructionGetRequest,S3ObjectId s3objectId,String instFileSuffix){\r\n    return new GetObjectRequest(s3objectId.instructionFileId(instFileSuffix));\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.GetPlatformApplicationAttributesRequest.withPlatformApplicationArn",
	"Comment": "platformapplicationarn for getplatformapplicationattributesinput.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetPlatformApplicationAttributesRequest withPlatformApplicationArn(String platformApplicationArn){\r\n    this.platformApplicationArn = platformApplicationArn;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSClient.listPlatformApplications",
	"Comment": "lists the platform application objects for the supported pushnotification services, such as apns and gcm. the results forlistplatformapplications are paginated and return a limitedlist of applications, up to 100. if additional records are availableafter the first page results, then a nexttoken string will be returned.to receive the next page, you call listplatformapplicationsusing the nexttoken string received from the previous call. when thereare no more records to return, nexttoken will be null. for moreinformation, see usingamazon sns mobile push notifications.",
	"Method": "ListPlatformApplicationsResult listPlatformApplications(ListPlatformApplicationsRequest listPlatformApplicationsRequest,ListPlatformApplicationsResult listPlatformApplications){\r\n    ListPlatformApplicationsRequest listPlatformApplicationsRequest = new ListPlatformApplicationsRequest();\r\n    return listPlatformApplications(listPlatformApplicationsRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.PlatformApplication.clearAttributesEntries",
	"Comment": "removes all the entries added into attributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PlatformApplication clearAttributesEntries(){\r\n    this.attributes = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.createConfigurationSetAsync",
	"Comment": "creates a configuration set.configuration sets enable you to publish email sending events. forinformation about using configuration sets, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "Future<CreateConfigurationSetResult> createConfigurationSetAsync(CreateConfigurationSetRequest createConfigurationSetRequest,Future<CreateConfigurationSetResult> createConfigurationSetAsync,CreateConfigurationSetRequest createConfigurationSetRequest,AsyncHandler<CreateConfigurationSetRequest, CreateConfigurationSetResult> asyncHandler){\r\n    return executorService.submit(new Callable<CreateConfigurationSetResult>() {\r\n        public CreateConfigurationSetResult call() throws Exception {\r\n            CreateConfigurationSetResult result = null;\r\n            try {\r\n                result = createConfigurationSet(createConfigurationSetRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(createConfigurationSetRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.createConfigurationSetAsync",
	"Comment": "creates a configuration set.configuration sets enable you to publish email sending events. forinformation about using configuration sets, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "Future<CreateConfigurationSetResult> createConfigurationSetAsync(CreateConfigurationSetRequest createConfigurationSetRequest,Future<CreateConfigurationSetResult> createConfigurationSetAsync,CreateConfigurationSetRequest createConfigurationSetRequest,AsyncHandler<CreateConfigurationSetRequest, CreateConfigurationSetResult> asyncHandler){\r\n    CreateConfigurationSetResult result = null;\r\n    try {\r\n        result = createConfigurationSet(createConfigurationSetRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(createConfigurationSetRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.kinesisvideo.internal.producer.KinesisVideoStreamMetrics.getCurrentViewSize",
	"Comment": "returns the byte size of all allocations from current to head",
	"Method": "long getCurrentViewSize(){\r\n    return currentViewSize;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DirectMessageConfiguration.withBaiduMessage",
	"Comment": "the message to baidu gcm channels. overrides the default pushnotification message.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DirectMessageConfiguration withBaiduMessage(BaiduMessage baiduMessage){\r\n    this.baiduMessage = baiduMessage;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.ListDomainsResult.withDomainNames",
	"Comment": "a list of domain names that match the expression.returns a reference to this object so that method calls can be chained together.",
	"Method": "ListDomainsResult withDomainNames(String domainNames,ListDomainsResult withDomainNames,java.util.Collection<String> domainNames){\r\n    if (domainNames == null) {\r\n        this.domainNames = null;\r\n    } else {\r\n        com.amazonaws.internal.ListWithAutoConstructFlag<String> domainNamesCopy = new com.amazonaws.internal.ListWithAutoConstructFlag<String>(domainNames.size());\r\n        domainNamesCopy.addAll(domainNames);\r\n        this.domainNames = domainNamesCopy;\r\n    }\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.createReceiptFilterAsync",
	"Comment": "creates a new ip address filter.for information about setting up ip address filters, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "Future<CreateReceiptFilterResult> createReceiptFilterAsync(CreateReceiptFilterRequest createReceiptFilterRequest,Future<CreateReceiptFilterResult> createReceiptFilterAsync,CreateReceiptFilterRequest createReceiptFilterRequest,AsyncHandler<CreateReceiptFilterRequest, CreateReceiptFilterResult> asyncHandler){\r\n    return executorService.submit(new Callable<CreateReceiptFilterResult>() {\r\n        public CreateReceiptFilterResult call() throws Exception {\r\n            CreateReceiptFilterResult result = null;\r\n            try {\r\n                result = createReceiptFilter(createReceiptFilterRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(createReceiptFilterRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.createReceiptFilterAsync",
	"Comment": "creates a new ip address filter.for information about setting up ip address filters, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "Future<CreateReceiptFilterResult> createReceiptFilterAsync(CreateReceiptFilterRequest createReceiptFilterRequest,Future<CreateReceiptFilterResult> createReceiptFilterAsync,CreateReceiptFilterRequest createReceiptFilterRequest,AsyncHandler<CreateReceiptFilterRequest, CreateReceiptFilterResult> asyncHandler){\r\n    CreateReceiptFilterResult result = null;\r\n    try {\r\n        result = createReceiptFilter(createReceiptFilterRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(createReceiptFilterRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.RestoreObjectRequest.getBucketName",
	"Comment": "returns the name of the bucket containing the reference to the object torestore which is now stored in amazon glacier.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.DescribeVoicesResult.setNextToken",
	"Comment": "the pagination token to use in the next request to continue the listingof voices. nexttoken is returned only if the response istruncated.",
	"Method": "void setNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.PersonMatch.getFaceMatches",
	"Comment": "information about the faces in the input collection that match the faceof a person in the video.",
	"Method": "java.util.List<FaceMatch> getFaceMatches(){\r\n    return faceMatches;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetFaceSearchResult.setStatusMessage",
	"Comment": "if the job fails, statusmessage provides a descriptive errormessage.",
	"Method": "void setStatusMessage(String statusMessage){\r\n    this.statusMessage = statusMessage;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsRequest.getMarker",
	"Comment": "gets the optional marker parameter indicating where in the bucket tobegin listing. the list will only include keys that occurlexicographically after the marker.",
	"Method": "String getMarker(){\r\n    return marker;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartLabelDetectionRequest.setNotificationChannel",
	"Comment": "the amazon sns topic arn you want amazon rekognition video to publish thecompletion status of the label detection operation to.",
	"Method": "void setNotificationChannel(NotificationChannel notificationChannel){\r\n    this.notificationChannel = notificationChannel;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentDimensions.withUserAttributes",
	"Comment": "custom segment user attributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SegmentDimensions withUserAttributes(java.util.Map<String, AttributeDimension> userAttributes){\r\n    this.userAttributes = userAttributes;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.TextDetection.getGeometry",
	"Comment": "the location of the detected text on the image. includes an axis alignedcoarse bounding box surrounding the text and a finer grain polygon formore accurate spatial information.",
	"Method": "Geometry getGeometry(){\r\n    return geometry;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ListAliasesResult.withAliases",
	"Comment": "a list of aliases.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListAliasesResult withAliases(AliasListEntry aliases,ListAliasesResult withAliases,java.util.Collection<AliasListEntry> aliases){\r\n    setAliases(aliases);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SMSMessage.withSubstitutions",
	"Comment": "default message substitutions. can be overridden by individual addresssubstitutions.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SMSMessage withSubstitutions(java.util.Map<String, java.util.List<String>> substitutions){\r\n    this.substitutions = substitutions;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.SynthesizeSpeechPresignRequest.getSpeechMarkTypes",
	"Comment": "returns the value of the speechmarktypes property for this object.",
	"Method": "java.util.List<String> getSpeechMarkTypes(){\r\n    return speechMarkTypes;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketAnalyticsConfigurationsResult.setTruncated",
	"Comment": "for internal use only. sets the truncated property forthis analytics configuration listing, indicating if this is a complete listing or not andwhether the caller needs to make additional calls to s3 to get more results.",
	"Method": "void setTruncated(boolean isTruncated){\r\n    this.isTruncated = isTruncated;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.TransferProgress.getBytesTransferred",
	"Comment": "returns the number of bytes completed in the associated transfer.",
	"Method": "long getBytesTransferred(){\r\n    return bytesTransferred;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectRequest.setBucketName",
	"Comment": "sets the name of the bucket containing the object to be downloaded.",
	"Method": "void setBucketName(String bucketName){\r\n    s3ObjectIdBuilder.setBucket(bucketName);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListPartsRequest.getEncodingType",
	"Comment": "gets the optional encodingtype parameter indicating theencoding method to be applied on the response.",
	"Method": "String getEncodingType(){\r\n    return encodingType;\r\n}"
}, {
	"Path": "org.bouncycastle.asn1.ASN1ApplicationSpecific.getInstance",
	"Comment": "return an asn1applicationspecific from the passed in object, which may be a byte array, or null.",
	"Method": "ASN1ApplicationSpecific getInstance(Object obj){\r\n    if (obj == null || obj instanceof ASN1ApplicationSpecific) {\r\n        return (ASN1ApplicationSpecific) obj;\r\n    } else if (obj instanceof byte[]) {\r\n        try {\r\n            return ASN1ApplicationSpecific.getInstance(ASN1Primitive.fromByteArray((byte[]) obj));\r\n        } catch (IOException e) {\r\n            throw new IllegalArgumentException(\"Failed to construct object from byte[]: \" + e.getMessage());\r\n        }\r\n    }\r\n    throw new IllegalArgumentException(\"unknown object in getInstance: \" + obj.getClass().getName());\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CreateBucketRequest.setAccessControlList",
	"Comment": "sets the optional access control list for the new bucket. if specified,cannedacl will be ignored.",
	"Method": "void setAccessControlList(AccessControlList accessControlList){\r\n    this.accessControlList = accessControlList;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.AmazonPinpointClient.getCampaignActivities",
	"Comment": "returns information about the activity performed by a campaign.",
	"Method": "GetCampaignActivitiesResult getCampaignActivities(GetCampaignActivitiesRequest getCampaignActivitiesRequest){\r\n    ExecutionContext executionContext = createExecutionContext(getCampaignActivitiesRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<GetCampaignActivitiesRequest> request = null;\r\n    Response<GetCampaignActivitiesResult> response = null;\r\n    try {\r\n        awsRequestMetrics.startEvent(Field.RequestMarshallTime);\r\n        try {\r\n            request = new GetCampaignActivitiesRequestMarshaller().marshall(getCampaignActivitiesRequest);\r\n            request.setAWSRequestMetrics(awsRequestMetrics);\r\n        } finally {\r\n            awsRequestMetrics.endEvent(Field.RequestMarshallTime);\r\n        }\r\n        Unmarshaller<GetCampaignActivitiesResult, JsonUnmarshallerContext> unmarshaller = new GetCampaignActivitiesResultJsonUnmarshaller();\r\n        JsonResponseHandler<GetCampaignActivitiesResult> responseHandler = new JsonResponseHandler<GetCampaignActivitiesResult>(unmarshaller);\r\n        response = invoke(request, responseHandler, executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.withCannedAccessControlList",
	"Comment": "sets the canned acl to use for the newly copied object, and returns thiscopyobjectrequest, enabling additional method calls to bechained together.",
	"Method": "CopyObjectRequest withCannedAccessControlList(CannedAccessControlList cannedACL){\r\n    setCannedAccessControlList(cannedACL);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.UpdateCondition.isExists",
	"Comment": "a value specifying whether or not the specified attribute must existwith the specified value in order for the update condition to besatisfied. specify true if the attribute must exist forthe update condition to be satisfied. specify false ifthe attribute should not exist in order for the update condition to besatisfied.",
	"Method": "Boolean isExists(){\r\n    return exists;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.IndexFacesResult.getFaceRecords",
	"Comment": "an array of faces detected and added to the collection. for moreinformation, see searching faces in a collection in the amazonrekognition developer guide.",
	"Method": "java.util.List<FaceRecord> getFaceRecords(){\r\n    return faceRecords;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ChannelsResponse.getChannels",
	"Comment": "a map of channels, with the channeltype as the key and the channel as thevalue.",
	"Method": "java.util.Map<String, ChannelResponse> getChannels(){\r\n    return channels;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetFaceDetectionResult.withWarnings",
	"Comment": "sets the value of the warnings property for this object.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetFaceDetectionResult withWarnings(Warning warnings,GetFaceDetectionResult withWarnings,java.util.Collection<Warning> warnings){\r\n    setWarnings(warnings);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSAsyncClient.optInPhoneNumberAsync",
	"Comment": "use this request to opt in a phone number that is opted out, whichenables you to resume sending sms messages to the number.you can opt in a phone number only once every 30 days.",
	"Method": "Future<OptInPhoneNumberResult> optInPhoneNumberAsync(OptInPhoneNumberRequest optInPhoneNumberRequest,Future<OptInPhoneNumberResult> optInPhoneNumberAsync,OptInPhoneNumberRequest optInPhoneNumberRequest,AsyncHandler<OptInPhoneNumberRequest, OptInPhoneNumberResult> asyncHandler){\r\n    return executorService.submit(new Callable<OptInPhoneNumberResult>() {\r\n        public OptInPhoneNumberResult call() throws Exception {\r\n            OptInPhoneNumberResult result = null;\r\n            try {\r\n                result = optInPhoneNumber(optInPhoneNumberRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(optInPhoneNumberRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSAsyncClient.optInPhoneNumberAsync",
	"Comment": "use this request to opt in a phone number that is opted out, whichenables you to resume sending sms messages to the number.you can opt in a phone number only once every 30 days.",
	"Method": "Future<OptInPhoneNumberResult> optInPhoneNumberAsync(OptInPhoneNumberRequest optInPhoneNumberRequest,Future<OptInPhoneNumberResult> optInPhoneNumberAsync,OptInPhoneNumberRequest optInPhoneNumberRequest,AsyncHandler<OptInPhoneNumberRequest, OptInPhoneNumberResult> asyncHandler){\r\n    OptInPhoneNumberResult result = null;\r\n    try {\r\n        result = optInPhoneNumber(optInPhoneNumberRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(optInPhoneNumberRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SMSChannelResponse.withTransactionalMessagesPerSecond",
	"Comment": "transactional messages per second that can be sentreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SMSChannelResponse withTransactionalMessagesPerSecond(Integer transactionalMessagesPerSecond){\r\n    this.transactionalMessagesPerSecond = transactionalMessagesPerSecond;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceRecord.withFaceDetail",
	"Comment": "structure containing attributes of the face that the algorithm detected.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "FaceRecord withFaceDetail(FaceDetail faceDetail){\r\n    this.faceDetail = faceDetail;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClient.cloneReceiptRuleSet",
	"Comment": "creates a receipt rule set by cloning an existing one. all receipt rulesand configurations are copied to the new receipt rule set and arecompletely independent of the source rule set.for information about setting up rule sets, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "CloneReceiptRuleSetResult cloneReceiptRuleSet(CloneReceiptRuleSetRequest cloneReceiptRuleSetRequest){\r\n    ExecutionContext executionContext = createExecutionContext(cloneReceiptRuleSetRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<CloneReceiptRuleSetRequest> request = null;\r\n    Response<CloneReceiptRuleSetResult> response = null;\r\n    try {\r\n        request = new CloneReceiptRuleSetRequestMarshaller().marshall(cloneReceiptRuleSetRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        response = invoke(request, new CloneReceiptRuleSetResultStaxUnmarshaller(), executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadObjectRequest.setUploadPartMetadata",
	"Comment": "sets the optional metadata to be included in each uploadpart request.",
	"Method": "void setUploadPartMetadata(ObjectMetadata partUploadMetadata){\r\n    this.uploadPartMetadata = partUploadMetadata;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SMSChannelResponse.setCreationDate",
	"Comment": "the date that the settings were last updated in iso 8601 format.",
	"Method": "void setCreationDate(String creationDate){\r\n    this.creationDate = creationDate;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.withLastPart",
	"Comment": "marks this part as the last part being uploaded in a multipart upload,and returns this updated request object so that additional method callscan be chained together.",
	"Method": "UploadPartRequest withLastPart(boolean isLastPart){\r\n    setLastPart(isLastPart);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.pinpoint.targeting.notification.NotificationClient.handleCampaignPush",
	"Comment": "handles pinpoint push messages by posting a local notification whenthe app is in the background, or sending a local broadcast if the app isin the foreground. also on api level 19 devices and above, if localnotifications have been disabled and the app is in the background, alocal broadcast is sent.",
	"Method": "CampaignPushResult handleCampaignPush(NotificationDetails notificationDetails){\r\n    return notificationClientBase.handleCampaignPush(notificationDetails);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ChannelResponse.withCreationDate",
	"Comment": "when was this segment createdreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ChannelResponse withCreationDate(String creationDate){\r\n    this.creationDate = creationDate;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.StartSpeechSynthesisTaskRequest.withSpeechMarkTypes",
	"Comment": "the type of speech marks returned for the input text.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "StartSpeechSynthesisTaskRequest withSpeechMarkTypes(String speechMarkTypes,StartSpeechSynthesisTaskRequest withSpeechMarkTypes,java.util.Collection<String> speechMarkTypes){\r\n    setSpeechMarkTypes(speechMarkTypes);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.CreatePlatformApplicationRequest.withAttributes",
	"Comment": "for a list of attributes, see setplatformapplicationattributesreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreatePlatformApplicationRequest withAttributes(java.util.Map<String, String> attributes){\r\n    this.attributes = attributes;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobRequest.setRegisterEndpoints",
	"Comment": "sets whether the endpoints are registered with amazon pinpoint when theyare imported.",
	"Method": "void setRegisterEndpoints(Boolean registerEndpoints){\r\n    this.registerEndpoints = registerEndpoints;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.MessageResponse.withEndpointResult",
	"Comment": "a map containing a multi part response for each address, with theendpointid as the key and the result as the value.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "MessageResponse withEndpointResult(java.util.Map<String, EndpointMessageResult> endpointResult){\r\n    this.endpointResult = endpointResult;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EmailChannelResponse.withLastModifiedBy",
	"Comment": "who last updated this entryreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EmailChannelResponse withLastModifiedBy(String lastModifiedBy){\r\n    this.lastModifiedBy = lastModifiedBy;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointDemographic.withPlatform",
	"Comment": "the platform of the endpoint device, such as ios or android.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointDemographic withPlatform(String platform){\r\n    this.platform = platform;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.RemovePermissionRequest.getLabel",
	"Comment": "the identification of the permission to remove. this is the label addedwith the addpermission action.",
	"Method": "String getLabel(){\r\n    return label;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.MultipartUploadListing.setNextKeyMarker",
	"Comment": "sets the next key marker that should be used in the next request to getthe next page of results.",
	"Method": "void setNextKeyMarker(String nextKeyMarker){\r\n    this.nextKeyMarker = nextKeyMarker;\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.TranscriptionJobSummary.getFailureReason",
	"Comment": "if the transcriptionjobstatus field is failed,a description of the error.",
	"Method": "String getFailureReason(){\r\n    return failureReason;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.ListTagsForStreamResult.setHasMoreTags",
	"Comment": "if set to true, more tags are available. to requestadditional tags, set exclusivestarttagkey to the key of thelast tag returned.",
	"Method": "void setHasMoreTags(Boolean hasMoreTags){\r\n    this.hasMoreTags = hasMoreTags;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.Event.setTimestamp",
	"Comment": "the date and time when the event occurred, in iso 8601 format.",
	"Method": "void setTimestamp(String timestamp){\r\n    this.timestamp = timestamp;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.TrackingOptionsDoesNotExistException.getConfigurationSetName",
	"Comment": "indicates that a trackingoptions object does not exist in the specifiedconfiguration set.",
	"Method": "String getConfigurationSetName(){\r\n    return configurationSetName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobResource.getRegisterEndpoints",
	"Comment": "sets whether the endpoints are registered with amazon pinpoint when theyare imported.",
	"Method": "Boolean getRegisterEndpoints(){\r\n    return registerEndpoints;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GCMMessage.setSmallImageIconUrl",
	"Comment": "the url that points to an image used as the small icon for thenotification which will be used to represent the notification in thestatus bar and content view",
	"Method": "void setSmallImageIconUrl(String smallImageIconUrl){\r\n    this.smallImageIconUrl = smallImageIconUrl;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectMetadataRequest.setRequesterPays",
	"Comment": "used for downloading an amazon s3 object metadata from a requester pays bucket. ifset the requester is charged for downloading the data from the bucket.if a bucket is enabled for requester pays, then any attempt to read anobject metadata from it without requester pays enabled will result in a 403 errorand the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket",
	"Method": "void setRequesterPays(boolean isRequesterPays){\r\n    this.isRequesterPays = isRequesterPays;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobRequest.withSegmentName",
	"Comment": "a custom name for the segment created by the import job. use ifdefinesegment is true.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ImportJobRequest withSegmentName(String segmentName){\r\n    this.segmentName = segmentName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClient.describeConfigurationSet",
	"Comment": "returns the details of the specified configuration set. for informationabout using configuration sets, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "DescribeConfigurationSetResult describeConfigurationSet(DescribeConfigurationSetRequest describeConfigurationSetRequest){\r\n    ExecutionContext executionContext = createExecutionContext(describeConfigurationSetRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<DescribeConfigurationSetRequest> request = null;\r\n    Response<DescribeConfigurationSetResult> response = null;\r\n    try {\r\n        request = new DescribeConfigurationSetRequestMarshaller().marshall(describeConfigurationSetRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        response = invoke(request, new DescribeConfigurationSetResultStaxUnmarshaller(), executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketCrossOriginConfigurationRequest.getBucketName",
	"Comment": "gets the name of the bucket whose cross origin configuration is beingset.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.ReceiveMessageRequest.withMaxNumberOfMessages",
	"Comment": "the maximum number of messages to return. amazon sqs never returns moremessages than this value but might return fewer. values can be from 1 to10. default is 1.all of the messages are not necessarily returned.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ReceiveMessageRequest withMaxNumberOfMessages(Integer maxNumberOfMessages){\r\n    this.maxNumberOfMessages = maxNumberOfMessages;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartFaceSearchRequest.withNotificationChannel",
	"Comment": "the arn of the amazon sns topic to which you want amazon rekognitionvideo to publish the completion status of the search.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "StartFaceSearchRequest withNotificationChannel(NotificationChannel notificationChannel){\r\n    this.notificationChannel = notificationChannel;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ListReceiptRuleSetsResult.withNextToken",
	"Comment": "a token indicating that there are additional receipt rule sets availableto be listed. pass this token to successive calls oflistreceiptrulesets to retrieve up to 100 receipt rule setsat a time.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListReceiptRuleSetsResult withNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SetIdentityHeadersInNotificationsEnabledRequest.setEnabled",
	"Comment": "sets whether amazon ses includes the original email headers in amazon snsnotifications of the specified notification type. a value oftrue specifies that amazon ses will include headers innotifications, and a value of false specifies that amazonses will not include headers in notifications.this value can only be set when notificationtype is alreadyset to use a particular amazon sns topic.",
	"Method": "void setEnabled(Boolean enabled){\r\n    this.enabled = enabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsRequest.getPrefix",
	"Comment": "gets the optional prefix parameter and restricts the response to keysthat begin with the specified prefix. use prefixes to separate a bucketinto different sets of keys, similar to how a file system organizes filesinto directories.",
	"Method": "String getPrefix(){\r\n    return prefix;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.DescribeCollectionResult.withCollectionARN",
	"Comment": "sets the value of the collectionarn property for this object.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DescribeCollectionResult withCollectionARN(String collectionARN){\r\n    this.collectionARN = collectionARN;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SMSMessage.clearSubstitutionsEntries",
	"Comment": "removes all the entries added into substitutions.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SMSMessage clearSubstitutionsEntries(){\r\n    this.substitutions = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMMessage.withRawContent",
	"Comment": "the raw json formatted string to be used as the payload. this valueoverrides the message.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ADMMessage withRawContent(String rawContent){\r\n    this.rawContent = rawContent;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketNotificationConfiguration.getConfigurationByName",
	"Comment": "returns the notification configuration for the given name.",
	"Method": "NotificationConfiguration getConfigurationByName(String name){\r\n    return configurations.get(name);\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetFaceDetectionResult.withStatusMessage",
	"Comment": "if the job fails, statusmessage provides a descriptive errormessage.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetFaceDetectionResult withStatusMessage(String statusMessage){\r\n    this.statusMessage = statusMessage;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteSegmentRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteSegmentRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GCMMessage.withSubstitutions",
	"Comment": "default message substitutions. can be overridden by individual addresssubstitutions.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GCMMessage withSubstitutions(java.util.Map<String, java.util.List<String>> substitutions){\r\n    this.substitutions = substitutions;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketCrossOriginConfiguration.getRules",
	"Comment": "returns the list of rules that comprise this configuration.",
	"Method": "List<CORSRule> getRules(){\r\n    return rules;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartETag.getETag",
	"Comment": "returns the entity tag generated from the content of the associated part.",
	"Method": "String getETag(){\r\n    return eTag;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SetIdentityFeedbackForwardingEnabledRequest.withForwardingEnabled",
	"Comment": "sets whether amazon ses will forward bounce and complaint notificationsas email. true specifies that amazon ses will forward bounceand complaint notifications as email, in addition to any amazon sns topicpublishing otherwise specified. false specifies that amazonses will publish bounce and complaint notifications only through amazonsns. this value can only be set to false when amazon snstopics are set for both bounce and complaintnotification types.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SetIdentityFeedbackForwardingEnabledRequest withForwardingEnabled(Boolean forwardingEnabled){\r\n    this.forwardingEnabled = forwardingEnabled;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.lexrts.model.PostTextResult.getSlotToElicit",
	"Comment": "if the dialogstate value is elicitslot, returnsthe name of the slot for which amazon lex is eliciting a value.",
	"Method": "String getSlotToElicit(){\r\n    return slotToElicit;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Smile.getValue",
	"Comment": "boolean value that indicates whether the face is smiling or not.",
	"Method": "Boolean getValue(){\r\n    return value;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.DomainMetadataResult.withItemCount",
	"Comment": "the number of all items in the domain.returns a reference to this object so that method calls can be chained together.",
	"Method": "DomainMetadataResult withItemCount(Integer itemCount){\r\n    this.itemCount = itemCount;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.internal.TransferManagerUtils.createDefaultExecutorService",
	"Comment": "returns a new thread pool configured with the default settings.",
	"Method": "ThreadPoolExecutor createDefaultExecutorService(){\r\n    ThreadFactory threadFactory = new ThreadFactory() {\r\n        private int threadCount = 1;\r\n        @Override\r\n        public Thread newThread(Runnable r) {\r\n            Thread thread = new Thread(r);\r\n            thread.setName(\"s3-transfer-manager-worker-\" + threadCount++);\r\n            return thread;\r\n        }\r\n    };\r\n    return (ThreadPoolExecutor) Executors.newFixedThreadPool(10, threadFactory);\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.internal.TransferManagerUtils.createDefaultExecutorService",
	"Comment": "returns a new thread pool configured with the default settings.",
	"Method": "ThreadPoolExecutor createDefaultExecutorService(){\r\n    Thread thread = new Thread(r);\r\n    thread.setName(\"s3-transfer-manager-worker-\" + threadCount++);\r\n    return thread;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.RemovePermissionRequest.withLabel",
	"Comment": "the unique label of the statement you want to remove.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "RemovePermissionRequest withLabel(String label){\r\n    this.label = label;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.AmazonS3Client.noExplicitRegionProvided",
	"Comment": "returns true if the region required for signing could not be computedfrom the client or the request.this is the case when the standard endpoint is in use and neither anexplicit region nor a signer override have been provided by the user.",
	"Method": "boolean noExplicitRegionProvided(Request<?> request){\r\n    return isStandardEndpoint(request.getEndpoint()) && getSignerRegion() == null;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CannotDeleteException.getName",
	"Comment": "indicates that a resource could not be deleted because no resource withthe specified name exists.",
	"Method": "String getName(){\r\n    return name;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.PlatformApplication.withPlatformApplicationArn",
	"Comment": "platformapplicationarn for platform application object.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PlatformApplication withPlatformApplicationArn(String platformApplicationArn){\r\n    this.platformApplicationArn = platformApplicationArn;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ReEncryptRequest.setGrantTokens",
	"Comment": "a list of grant tokens.for more information, see grant tokens in the aws key management service developerguide.",
	"Method": "void setGrantTokens(java.util.Collection<String> grantTokens){\r\n    if (grantTokens == null) {\r\n        this.grantTokens = null;\r\n        return;\r\n    }\r\n    this.grantTokens = new java.util.ArrayList<String>(grantTokens);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ActivityResponse.setTotalEndpointCount",
	"Comment": "the total number of endpoints to which the campaign attempts to delivermessages.",
	"Method": "void setTotalEndpointCount(Integer totalEndpointCount){\r\n    this.totalEndpointCount = totalEndpointCount;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.model.GetDataEndpointResult.setDataEndpoint",
	"Comment": "the endpoint value. to read data from the stream or to write data to it,specify this endpoint in your application.",
	"Method": "void setDataEndpoint(String dataEndpoint){\r\n    this.dataEndpoint = dataEndpoint;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ListConfigurationSetsRequest.getNextToken",
	"Comment": "a token returned from a previous call tolistconfigurationsets to indicate the position of theconfiguration set in the configuration set list.",
	"Method": "String getNextToken(){\r\n    return nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.SetQueueAttributesRequest.clearAttributesEntries",
	"Comment": "removes all the entries added into attributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SetQueueAttributesRequest clearAttributesEntries(){\r\n    this.attributes = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ReplicationDestinationConfig.withStorageClass",
	"Comment": "sets the storage class for the replication destination. if not specified,amazon s3 uses the storage class of the source object to create objectreplica. returns the updated object.",
	"Method": "ReplicationDestinationConfig withStorageClass(String storageClass,ReplicationDestinationConfig withStorageClass,StorageClass storageClass){\r\n    setStorageClass(storageClass == null ? (String) null : storageClass.toString());\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.deleteCustomVerificationEmailTemplateAsync",
	"Comment": "deletes an existing custom verification email template.for more information about custom verification email templates, see using custom verification email templates in the amazon sesdeveloper guide.you can execute this operation no more than once per second.",
	"Method": "Future<Void> deleteCustomVerificationEmailTemplateAsync(DeleteCustomVerificationEmailTemplateRequest deleteCustomVerificationEmailTemplateRequest,Future<Void> deleteCustomVerificationEmailTemplateAsync,DeleteCustomVerificationEmailTemplateRequest deleteCustomVerificationEmailTemplateRequest,AsyncHandler<DeleteCustomVerificationEmailTemplateRequest, Void> asyncHandler){\r\n    return executorService.submit(new Callable<Void>() {\r\n        public Void call() throws Exception {\r\n            Void result = null;\r\n            try {\r\n                deleteCustomVerificationEmailTemplate(deleteCustomVerificationEmailTemplateRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(deleteCustomVerificationEmailTemplateRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.deleteCustomVerificationEmailTemplateAsync",
	"Comment": "deletes an existing custom verification email template.for more information about custom verification email templates, see using custom verification email templates in the amazon sesdeveloper guide.you can execute this operation no more than once per second.",
	"Method": "Future<Void> deleteCustomVerificationEmailTemplateAsync(DeleteCustomVerificationEmailTemplateRequest deleteCustomVerificationEmailTemplateRequest,Future<Void> deleteCustomVerificationEmailTemplateAsync,DeleteCustomVerificationEmailTemplateRequest deleteCustomVerificationEmailTemplateRequest,AsyncHandler<DeleteCustomVerificationEmailTemplateRequest, Void> asyncHandler){\r\n    Void result = null;\r\n    try {\r\n        deleteCustomVerificationEmailTemplate(deleteCustomVerificationEmailTemplateRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(deleteCustomVerificationEmailTemplateRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentLocation.withGPSPoint",
	"Comment": "the gps point dimension.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SegmentLocation withGPSPoint(GPSPointDimension gPSPoint){\r\n    this.gPSPoint = gPSPoint;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetBucketAnalyticsConfigurationRequest.setId",
	"Comment": "sets the identifier used to represent an analytics configuration.",
	"Method": "void setId(String id){\r\n    this.id = id;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.SelectRequest.setNextToken",
	"Comment": "a string informing amazon simpledb where to start the next list ofitemnames.",
	"Method": "void setNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.WriteEventStream.withRoleArn",
	"Comment": "the iam role that authorizes amazon pinpoint to publish events to thestream in your account.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "WriteEventStream withRoleArn(String roleArn){\r\n    this.roleArn = roleArn;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSVoipChannelResponse.withIsArchived",
	"Comment": "is this channel archivedreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSVoipChannelResponse withIsArchived(Boolean isArchived){\r\n    this.isArchived = isArchived;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.MultipartUpload.getStorageClass",
	"Comment": "returns the storage class indicating how the data in this multipartupload will be stored.",
	"Method": "String getStorageClass(){\r\n    return storageClass;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignResponse.setAdditionalTreatments",
	"Comment": "treatments that are defined in addition to the default treatment.",
	"Method": "void setAdditionalTreatments(java.util.Collection<TreatmentResource> additionalTreatments){\r\n    if (additionalTreatments == null) {\r\n        this.additionalTreatments = null;\r\n        return;\r\n    }\r\n    this.additionalTreatments = new java.util.ArrayList<TreatmentResource>(additionalTreatments);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.EncryptedInitiateMultipartUploadRequest.setMaterialsDescription",
	"Comment": "sets the materials description for the encryption materials to be usedwith the current multi part upload request.",
	"Method": "void setMaterialsDescription(Map<String, String> materialsDescription){\r\n    this.materialsDescription = materialsDescription == null ? null : Collections.unmodifiableMap(new HashMap<String, String>(materialsDescription));\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.AbstractPutObjectRequest.withProgressListener",
	"Comment": "sets the optional progress listener for receiving updates about objectupload status, and returns this updated object so that additional methodcalls can be chained together.",
	"Method": "T withProgressListener(com.amazonaws.services.s3.model.ProgressListener progressListener){\r\n    setProgressListener(progressListener);\r\n    @SuppressWarnings(\"unchecked\")\r\n    final T t = (T) this;\r\n    return t;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListEndpointsByPlatformApplicationResult.getEndpoints",
	"Comment": "endpoints returned for listendpointsbyplatformapplication action.",
	"Method": "java.util.List<Endpoint> getEndpoints(){\r\n    return endpoints;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.UpdateConfigurationSetReputationMetricsEnabledRequest.setEnabled",
	"Comment": "describes whether or not amazon ses will publish reputation metrics forthe configuration set, such as bounce and complaint rates, to amazoncloudwatch.",
	"Method": "void setEnabled(Boolean enabled){\r\n    this.enabled = enabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CreateExportJobResult.withExportJobResponse",
	"Comment": "export job response.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreateExportJobResult withExportJobResponse(ExportJobResponse exportJobResponse){\r\n    this.exportJobResponse = exportJobResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.GetIdentityVerificationAttributesResult.setVerificationAttributes",
	"Comment": "a map of identities to identityverificationattributes objects.",
	"Method": "void setVerificationAttributes(java.util.Map<String, IdentityVerificationAttributes> verificationAttributes){\r\n    this.verificationAttributes = verificationAttributes;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignResponse.withIsPaused",
	"Comment": "indicates whether the campaign is paused. a paused campaign does not sendmessages unless you resume it by setting ispaused to false.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CampaignResponse withIsPaused(Boolean isPaused){\r\n    this.isPaused = isPaused;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.ListTagsForStreamResult.isHasMoreTags",
	"Comment": "if set to true, more tags are available. to requestadditional tags, set exclusivestarttagkey to the key of thelast tag returned.",
	"Method": "Boolean isHasMoreTags(){\r\n    return hasMoreTags;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.GenerateDataKeyRequest.setGrantTokens",
	"Comment": "a list of grant tokens.for more information, see grant tokens in the aws key management service developerguide.",
	"Method": "void setGrantTokens(java.util.Collection<String> grantTokens){\r\n    if (grantTokens == null) {\r\n        this.grantTokens = null;\r\n        return;\r\n    }\r\n    this.grantTokens = new java.util.ArrayList<String>(grantTokens);\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.SendMessageResult.setMessageId",
	"Comment": "an element containing the message id of the message sent to the queue.for more information, see queue and message identifiers in the amazon sqs developerguide.",
	"Method": "void setMessageId(String messageId){\r\n    this.messageId = messageId;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointResponse.withRequestId",
	"Comment": "the unique id for the most recent request to update the endpoint.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointResponse withRequestId(String requestId){\r\n    this.requestId = requestId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsRequest.setMaxKeys",
	"Comment": "sets the optional maxkeys parameter indicating the maximumnumber of keys to include in the response.",
	"Method": "void setMaxKeys(Integer maxKeys){\r\n    this.maxKeys = maxKeys;\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.InvokeRequest.getPayload",
	"Comment": "json that you want to provide to your lambda function as input.",
	"Method": "java.nio.ByteBuffer getPayload(){\r\n    return payload;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMMessage.setImageUrl",
	"Comment": "the url that points to an image used in the push notification.",
	"Method": "void setImageUrl(String imageUrl){\r\n    this.imageUrl = imageUrl;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentImportResource.setSize",
	"Comment": "the number of endpoints that were successfully imported to create thissegment.",
	"Method": "void setSize(Integer size){\r\n    this.size = size;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CreateConfigurationSetRequest.setConfigurationSet",
	"Comment": "a data structure that contains the name of the configuration set.",
	"Method": "void setConfigurationSet(ConfigurationSet configurationSet){\r\n    this.configurationSet = configurationSet;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobResponse.withTotalPieces",
	"Comment": "the total number of pieces that must be imported to finish the job. eachpiece is an approximately equal portion of the endpoints to import.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ImportJobResponse withTotalPieces(Integer totalPieces){\r\n    this.totalPieces = totalPieces;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.ListSpeechSynthesisTasksRequest.setNextToken",
	"Comment": "the pagination token to use in the next request to continue the listingof speech synthesis tasks.",
	"Method": "void setNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.AmazonTranscribeClient.listVocabularies",
	"Comment": "returns a list of vocabularies that match the specified criteria. if nocriteria are specified, returns the entire list of vocabularies.",
	"Method": "ListVocabulariesResult listVocabularies(ListVocabulariesRequest listVocabulariesRequest){\r\n    ExecutionContext executionContext = createExecutionContext(listVocabulariesRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<ListVocabulariesRequest> request = null;\r\n    Response<ListVocabulariesResult> response = null;\r\n    try {\r\n        awsRequestMetrics.startEvent(Field.RequestMarshallTime);\r\n        try {\r\n            request = new ListVocabulariesRequestMarshaller().marshall(listVocabulariesRequest);\r\n            request.setAWSRequestMetrics(awsRequestMetrics);\r\n        } finally {\r\n            awsRequestMetrics.endEvent(Field.RequestMarshallTime);\r\n        }\r\n        Unmarshaller<ListVocabulariesResult, JsonUnmarshallerContext> unmarshaller = new ListVocabulariesResultJsonUnmarshaller();\r\n        JsonResponseHandler<ListVocabulariesResult> responseHandler = new JsonResponseHandler<ListVocabulariesResult>(unmarshaller);\r\n        response = invoke(request, responseHandler, executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketWebsiteConfiguration.setRoutingRules",
	"Comment": "set the list of routing rules that can be used for configuring redirectsif certain conditions are meet.",
	"Method": "void setRoutingRules(List<RoutingRule> routingRules){\r\n    this.routingRules = routingRules;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.BaiduMessage.getSmallImageIconUrl",
	"Comment": "the url that points to an image used as the small icon for thenotification which will be used to represent the notification in thestatus bar and content view",
	"Method": "String getSmallImageIconUrl(){\r\n    return smallImageIconUrl;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.AmazonPollyClient.getSpeechSynthesisTask",
	"Comment": "retrieves a specific speechsynthesistask object based on its taskid. thisobject contains information about the given speech synthesis task,including the status of the task, and a link to the s3 bucket containingthe output of the task.",
	"Method": "GetSpeechSynthesisTaskResult getSpeechSynthesisTask(GetSpeechSynthesisTaskRequest getSpeechSynthesisTaskRequest){\r\n    ExecutionContext executionContext = createExecutionContext(getSpeechSynthesisTaskRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<GetSpeechSynthesisTaskRequest> request = null;\r\n    Response<GetSpeechSynthesisTaskResult> response = null;\r\n    try {\r\n        awsRequestMetrics.startEvent(Field.RequestMarshallTime);\r\n        try {\r\n            request = new GetSpeechSynthesisTaskRequestMarshaller().marshall(getSpeechSynthesisTaskRequest);\r\n            request.setAWSRequestMetrics(awsRequestMetrics);\r\n        } finally {\r\n            awsRequestMetrics.endEvent(Field.RequestMarshallTime);\r\n        }\r\n        Unmarshaller<GetSpeechSynthesisTaskResult, JsonUnmarshallerContext> unmarshaller = new GetSpeechSynthesisTaskResultJsonUnmarshaller();\r\n        JsonResponseHandler<GetSpeechSynthesisTaskResult> responseHandler = new JsonResponseHandler<GetSpeechSynthesisTaskResult>(unmarshaller);\r\n        response = invoke(request, responseHandler, executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.TreatmentResource.withSchedule",
	"Comment": "the campaign schedule.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "TreatmentResource withSchedule(Schedule schedule){\r\n    this.schedule = schedule;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ExportJobResponse.withApplicationId",
	"Comment": "the unique id of the application associated with the export job.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ExportJobResponse withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.serverless.proxy.internal.LambdaContainerHandler.proxy",
	"Comment": "proxies requests to the underlying container given the incoming lambda request. this method returns a populatedreturn object for the lambda function.",
	"Method": "ResponseType proxy(RequestType request,Context context){\r\n    lambdaContext = context;\r\n    try {\r\n        SecurityContext securityContext = securityContextWriter.writeSecurityContext(request, context);\r\n        CountDownLatch latch = new CountDownLatch(1);\r\n        ContainerRequestType containerRequest = requestReader.readRequest(request, securityContext, context, config);\r\n        ContainerResponseType containerResponse = getContainerResponse(containerRequest, latch);\r\n        handleRequest(containerRequest, containerResponse, context);\r\n        latch.await();\r\n        if (logFormatter != null) {\r\n            log.info(SecurityUtils.crlf(logFormatter.format(containerRequest, containerResponse, securityContext)));\r\n        }\r\n        return responseWriter.writeResponse(containerResponse, context);\r\n    } catch (Exception e) {\r\n        log.error(\"Error while handling request\", e);\r\n        return exceptionHandler.handle(e);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CustomVerificationEmailTemplate.withTemplateName",
	"Comment": "the name of the custom verification email template.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CustomVerificationEmailTemplate withTemplateName(String templateName){\r\n    this.templateName = templateName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSVoipChannelRequest.withTeamId",
	"Comment": "the team id used for apns tokens.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSVoipChannelRequest withTeamId(String teamId){\r\n    this.teamId = teamId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.lex.interactionkit.config.InteractionConfig.setEnableAudioPlayback",
	"Comment": "set this to true if the audio response from amazon lex service should beplayed back by the sdk.",
	"Method": "void setEnableAudioPlayback(boolean enableAudioPlayback){\r\n    this.enableAudioPlayback = enableAudioPlayback;\r\n}"
}, {
	"Path": "com.amazonaws.mobile.client.AWSMobileClient.registerConfigSignInProviders",
	"Comment": "register the signinprovider and permissions based on theawsconfiguration.",
	"Method": "void registerConfigSignInProviders(){\r\n    Log.d(TAG, \"Using the SignInProviderConfig from `awsconfiguration.json`.\");\r\n    final IdentityManager identityManager = IdentityManager.getDefaultIdentityManager();\r\n    if (isConfigurationKeyPresent(USER_POOLS)) {\r\n        identityManager.addSignInProvider(CognitoUserPoolsSignInProvider.class);\r\n    }\r\n    if (isConfigurationKeyPresent(FACEBOOK)) {\r\n        identityManager.addSignInProvider(FacebookSignInProvider.class);\r\n    }\r\n    if (isConfigurationKeyPresent(GOOGLE)) {\r\n        identityManager.addSignInProvider(GoogleSignInProvider.class);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.BoundingBox.setLeft",
	"Comment": "left coordinate of the bounding box as a ratio of overall image width.",
	"Method": "void setLeft(Float left){\r\n    this.left = left;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.UpdateConfigurationSetEventDestinationRequest.setEventDestination",
	"Comment": "the event destination object that you want to apply to the specifiedconfiguration set.",
	"Method": "void setEventDestination(EventDestination eventDestination){\r\n    this.eventDestination = eventDestination;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.Voice.withLanguageName",
	"Comment": "human readable name of the language in english.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Voice withLanguageName(String languageName){\r\n    this.languageName = languageName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClient.deleteConfigurationSetEventDestination",
	"Comment": "deletes a configuration set event destination. configuration set eventdestinations are associated with configuration sets, which enable you topublish email sending events. for information about using configurationsets, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "DeleteConfigurationSetEventDestinationResult deleteConfigurationSetEventDestination(DeleteConfigurationSetEventDestinationRequest deleteConfigurationSetEventDestinationRequest){\r\n    ExecutionContext executionContext = createExecutionContext(deleteConfigurationSetEventDestinationRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<DeleteConfigurationSetEventDestinationRequest> request = null;\r\n    Response<DeleteConfigurationSetEventDestinationResult> response = null;\r\n    try {\r\n        request = new DeleteConfigurationSetEventDestinationRequestMarshaller().marshall(deleteConfigurationSetEventDestinationRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        response = invoke(request, new DeleteConfigurationSetEventDestinationResultStaxUnmarshaller(), executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.BulkEmailDestinationStatus.withError",
	"Comment": "a description of an error that prevented a message being sent using thesendbulktemplatedemail operation.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "BulkEmailDestinationStatus withError(String error){\r\n    this.error = error;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.TransferManagerConfiguration.setMultipartUploadThreshold",
	"Comment": "sets the size threshold in bytes for when to use multipart uploads.uploads over this size will automatically use a multipart uploadstrategy, while uploads smaller than this threshold will use a singleconnection to upload the whole object.multipart uploads are easier to recover from and potentially faster thansingle part uploads, especially when the upload parts can be uploaded inparallel as with files. due to additional network communication, smalluploads should use a single connection for the upload.",
	"Method": "void setMultipartUploadThreshold(long multipartUploadThreshold){\r\n    this.multipartUploadThreshold = multipartUploadThreshold;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointLocation.withCity",
	"Comment": "the city where the endpoint is located.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointLocation withCity(String city){\r\n    this.city = city;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointLocation.getRegion",
	"Comment": "the region of the endpoint location. for example, in the united states,this corresponds to a state.",
	"Method": "String getRegion(){\r\n    return region;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointLocation.getLatitude",
	"Comment": "the latitude of the endpoint location, rounded to one decimal place.",
	"Method": "Double getLatitude(){\r\n    return latitude;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketAnalyticsConfigurationsResult.getNextContinuationToken",
	"Comment": "gets the optional nextcontinuationtoken.nextcontinuationtoken is sent when istruncated is true meaning there aremore keys in the bucket that can be listed. the next list requests to amazons3 can be continued by providing this nextcontinuationtoken.",
	"Method": "String getNextContinuationToken(){\r\n    return nextContinuationToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.AmazonCloudWatchLogsClient.deleteLogStream",
	"Comment": "deletes the specified log stream and permanently deletes all the archivedlog events associated with the log stream.",
	"Method": "void deleteLogStream(DeleteLogStreamRequest deleteLogStreamRequest){\r\n    ExecutionContext executionContext = createExecutionContext(deleteLogStreamRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<DeleteLogStreamRequest> request = null;\r\n    Response<Void> response = null;\r\n    try {\r\n        awsRequestMetrics.startEvent(Field.RequestMarshallTime);\r\n        try {\r\n            request = new DeleteLogStreamRequestMarshaller().marshall(deleteLogStreamRequest);\r\n            request.setAWSRequestMetrics(awsRequestMetrics);\r\n        } finally {\r\n            awsRequestMetrics.endEvent(Field.RequestMarshallTime);\r\n        }\r\n        JsonResponseHandler<Void> responseHandler = new JsonResponseHandler<Void>(null);\r\n        invoke(request, responseHandler, executionContext);\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListTopicsResult.withNextToken",
	"Comment": "token to pass along to the next listtopics request. thiselement is returned if there are additional topics to retrieve.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListTopicsResult withNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.RestoreObjectRequest.setRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "void setRequesterPays(boolean isRequesterPays){\r\n    this.isRequesterPays = isRequesterPays;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.DescribeKeyRequest.getGrantTokens",
	"Comment": "a list of grant tokens.for more information, see grant tokens in the aws key management service developerguide.",
	"Method": "java.util.List<String> getGrantTokens(){\r\n    return grantTokens;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.pinpoint.internal.core.util.StringUtil.trimOrPadString",
	"Comment": "trims string to its last x characters. if string is too short, is paddedat the front with given char",
	"Method": "String trimOrPadString(String str,int len,char pad){\r\n    if (len < 0) {\r\n        len = 0;\r\n    }\r\n    if (str == null) {\r\n        str = \"\";\r\n    }\r\n    StringBuffer s = new StringBuffer();\r\n    if (str.length() > len - 1) {\r\n        s.append(str.substring(str.length() - len));\r\n    } else {\r\n        for (int i = 0; i < len - str.length(); i++) {\r\n            s.append(pad);\r\n        }\r\n        s.append(str);\r\n    }\r\n    return s.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointSendConfiguration.setTitleOverride",
	"Comment": "title override. if specified will override default title if applicable.",
	"Method": "void setTitleOverride(String titleOverride){\r\n    this.titleOverride = titleOverride;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClient.getAccountSendingEnabled",
	"Comment": "returns the email sending status of the amazon ses account for thecurrent region.you can execute this operation no more than once per second.",
	"Method": "GetAccountSendingEnabledResult getAccountSendingEnabled(GetAccountSendingEnabledRequest getAccountSendingEnabledRequest){\r\n    ExecutionContext executionContext = createExecutionContext(getAccountSendingEnabledRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<GetAccountSendingEnabledRequest> request = null;\r\n    Response<GetAccountSendingEnabledResult> response = null;\r\n    try {\r\n        request = new GetAccountSendingEnabledRequestMarshaller().marshall(getAccountSendingEnabledRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        response = invoke(request, new GetAccountSendingEnabledResultStaxUnmarshaller(), executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.WriteApplicationSettingsRequest.withLimits",
	"Comment": "the default campaign limits for the app. these limits apply to eachcampaign for the app, unless the campaign overrides the default withlimits of its own.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "WriteApplicationSettingsRequest withLimits(CampaignLimits limits){\r\n    this.limits = limits;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.CreateStreamProcessorRequest.getSettings",
	"Comment": "face recognition input parameters to be used by the stream processor.includes the collection to use for face recognition and the faceattributes to detect.",
	"Method": "StreamProcessorSettings getSettings(){\r\n    return settings;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointResponse.getAddress",
	"Comment": "the address of the endpoint as provided by your push provider. forexample, the devicetoken or registrationid.",
	"Method": "String getAddress(){\r\n    return address;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.CelebrityDetail.setUrls",
	"Comment": "an array of urls pointing to additional celebrity information.",
	"Method": "void setUrls(java.util.Collection<String> urls){\r\n    if (urls == null) {\r\n        this.urls = null;\r\n        return;\r\n    }\r\n    this.urls = new java.util.ArrayList<String>(urls);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListPartsRequest.setKey",
	"Comment": "sets the key of the associated multipart upload whose parts are beinglisted.",
	"Method": "void setKey(String key){\r\n    this.key = key;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetCampaignActivitiesRequest.withPageSize",
	"Comment": "the number of entries you want on each page in the response.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetCampaignActivitiesRequest withPageSize(String pageSize){\r\n    this.pageSize = pageSize;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.MessageResult.setMessageId",
	"Comment": "unique message identifier associated with the message that was sent.",
	"Method": "void setMessageId(String messageId){\r\n    this.messageId = messageId;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.lex.interactionkit.utils.CreateLexServiceRequest.generatePostContentRequest",
	"Comment": "creates a request to post text input request for amazon lex service.",
	"Method": "PostContentRequest generatePostContentRequest(Map<String, String> sessionAttributes,InteractionConfig interactionConfig,AWSCredentialsProvider credentialsProvider,ResponseType mode,InputStream audioStream,String contentType,PostContentRequest generatePostContentRequest,Map<String, String> sessionAttributes,InteractionConfig interactionConfig,AWSCredentialsProvider credentialsProvider,ResponseType mode,String text){\r\n    final PostContentRequest request = generateRequestInternal(sessionAttributes, interactionConfig, credentialsProvider, mode);\r\n    final byte[] textContent = text.getBytes(StringUtils.UTF8);\r\n    request.setInputStream(new ByteArrayInputStream(textContent));\r\n    request.setContentType(MediaType.PLAIN_TEXT_UTF_8.toString());\r\n    return request;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateCampaignRequest.withWriteCampaignRequest",
	"Comment": "used to create a campaign.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateCampaignRequest withWriteCampaignRequest(WriteCampaignRequest writeCampaignRequest){\r\n    this.writeCampaignRequest = writeCampaignRequest;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.InitiateMultipartUploadResult.setBucketName",
	"Comment": "sets the name of the bucket in which the new multipart upload wasinitiated.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.GetKeyRotationStatusResult.getKeyRotationEnabled",
	"Comment": "a boolean value that specifies whether key rotation is enabled.",
	"Method": "Boolean getKeyRotationEnabled(){\r\n    return keyRotationEnabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ExportJobResource.getSegmentId",
	"Comment": "the id of the segment to export endpoints from. if not present, amazonpinpoint exports all of the endpoints that belong to the application.",
	"Method": "String getSegmentId(){\r\n    return segmentId;\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateThingGroupResult.withVersion",
	"Comment": "the version of the updated thing group.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateThingGroupResult withVersion(Long version){\r\n    this.version = version;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.verifyEmailAddressAsync",
	"Comment": "deprecated. use the verifyemailidentity operation to verifya new email address.",
	"Method": "Future<Void> verifyEmailAddressAsync(VerifyEmailAddressRequest verifyEmailAddressRequest,Future<Void> verifyEmailAddressAsync,VerifyEmailAddressRequest verifyEmailAddressRequest,AsyncHandler<VerifyEmailAddressRequest, Void> asyncHandler){\r\n    return executorService.submit(new Callable<Void>() {\r\n        public Void call() throws Exception {\r\n            Void result = null;\r\n            try {\r\n                verifyEmailAddress(verifyEmailAddressRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(verifyEmailAddressRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.verifyEmailAddressAsync",
	"Comment": "deprecated. use the verifyemailidentity operation to verifya new email address.",
	"Method": "Future<Void> verifyEmailAddressAsync(VerifyEmailAddressRequest verifyEmailAddressRequest,Future<Void> verifyEmailAddressAsync,VerifyEmailAddressRequest verifyEmailAddressRequest,AsyncHandler<VerifyEmailAddressRequest, Void> asyncHandler){\r\n    Void result = null;\r\n    try {\r\n        verifyEmailAddress(verifyEmailAddressRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(verifyEmailAddressRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ReEncryptRequest.withGrantTokens",
	"Comment": "a list of grant tokens.for more information, see grant tokens in the aws key management service developerguide.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ReEncryptRequest withGrantTokens(String grantTokens,ReEncryptRequest withGrantTokens,java.util.Collection<String> grantTokens){\r\n    setGrantTokens(grantTokens);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetLabelDetectionResult.setStatusMessage",
	"Comment": "if the job fails, statusmessage provides a descriptive errormessage.",
	"Method": "void setStatusMessage(String statusMessage){\r\n    this.statusMessage = statusMessage;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartListing.getKey",
	"Comment": "returns the key value specified in the original request used to identifywhich multipart upload contains the parts to list.",
	"Method": "String getKey(){\r\n    return key;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CreateConfigurationSetEventDestinationRequest.setConfigurationSetName",
	"Comment": "the name of the configuration set that the event destination should beassociated with.",
	"Method": "void setConfigurationSetName(String configurationSetName){\r\n    this.configurationSetName = configurationSetName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ReplicationRule.getDestinationConfig",
	"Comment": "returns the destination configuration for the replication rule.",
	"Method": "ReplicationDestinationConfig getDestinationConfig(){\r\n    return destinationConfig;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.ChangeMessageVisibilityBatchRequest.withEntries",
	"Comment": "a list of receipt handles of the messages for which the visibilitytimeout must be changed.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ChangeMessageVisibilityBatchRequest withEntries(ChangeMessageVisibilityBatchRequestEntry entries,ChangeMessageVisibilityBatchRequest withEntries,java.util.Collection<ChangeMessageVisibilityBatchRequestEntry> entries){\r\n    setEntries(entries);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.UpdateConfigurationSetTrackingOptionsRequest.withConfigurationSetName",
	"Comment": "the name of the configuration set for which you want to update the customtracking domain.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateConfigurationSetTrackingOptionsRequest withConfigurationSetName(String configurationSetName){\r\n    this.configurationSetName = configurationSetName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.model.UploadResult.getBucketName",
	"Comment": "returns the name of the bucket containing the uploaded object.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.mobile.client.AWSMobileClient.registerUserSignInProvidersWithPermissions",
	"Comment": "register the signinprovider with their permissionssupplied by the user.",
	"Method": "void registerUserSignInProvidersWithPermissions(){\r\n    Log.d(TAG, \"Using the SignInProviderConfig supplied by the user.\");\r\n    final IdentityManager identityManager = IdentityManager.getDefaultIdentityManager();\r\n    for (final SignInProviderConfig config : signInProviderConfig) {\r\n        identityManager.addSignInProvider((Class<? extends SignInProvider>) config.getSignInProviderClass());\r\n        if (config.getProviderPermissions() != null) {\r\n            if (FacebookSignInProvider.class.isInstance(config.getSignInProviderClass())) {\r\n                FacebookSignInProvider.setPermissions(config.getProviderPermissions());\r\n            }\r\n            if (GoogleSignInProvider.class.isInstance(config.getSignInProviderClass())) {\r\n                GoogleSignInProvider.setPermissions(config.getProviderPermissions());\r\n            }\r\n        }\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetEndpointRequest.withEndpointId",
	"Comment": "the unique id of the endpoint.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetEndpointRequest withEndpointId(String endpointId){\r\n    this.endpointId = endpointId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceDetection.withFace",
	"Comment": "the face properties for the detected face.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "FaceDetection withFace(FaceDetail face){\r\n    this.face = face;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ReEncryptRequest.clearSourceEncryptionContextEntries",
	"Comment": "removes all the entries added into sourceencryptioncontext.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ReEncryptRequest clearSourceEncryptionContextEntries(){\r\n    this.sourceEncryptionContext = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.MultipartUploadListing.setMaxUploads",
	"Comment": "sets the optional maximum number of uploads to be listed, as specified inthe original request.",
	"Method": "void setMaxUploads(int maxUploads){\r\n    this.maxUploads = maxUploads;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetContentModerationResult.setStatusMessage",
	"Comment": "if the job fails, statusmessage provides a descriptive errormessage.",
	"Method": "void setStatusMessage(String statusMessage){\r\n    this.statusMessage = statusMessage;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SendTemplatedEmailRequest.withConfigurationSetName",
	"Comment": "the name of the configuration set to use when you send an email usingsendtemplatedemail.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendTemplatedEmailRequest withConfigurationSetName(String configurationSetName){\r\n    this.configurationSetName = configurationSetName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.AmazonSQSAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this async client to executerequests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Mustache.setValue",
	"Comment": "boolean value that indicates whether the face has mustache or not.",
	"Method": "void setValue(Boolean value){\r\n    this.value = value;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectMetadataRequest.setVersionId",
	"Comment": "sets the optional version id of the object version whose metadata isbeing retrieved. if not specified, the latest version will be used.",
	"Method": "void setVersionId(String versionId){\r\n    this.versionId = versionId;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.MessageAttributeValue.withStringValue",
	"Comment": "strings are unicode with utf8 binary encoding. for a list of code values,see ascii printable characters.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "MessageAttributeValue withStringValue(String stringValue){\r\n    this.stringValue = stringValue;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.EncryptionMaterials.getSymmetricKey",
	"Comment": "returns the symmetric key stored in this encryptionmaterials object.",
	"Method": "SecretKey getSymmetricKey(){\r\n    return this.symmetricKey;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteObjectsRequest.withRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket. it returns thisupdated deleteobjectsrequest object so that additional method calls can bechained together.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "DeleteObjectsRequest withRequesterPays(boolean isRequesterPays){\r\n    setRequesterPays(isRequesterPays);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SendTemplatedEmailResult.setMessageId",
	"Comment": "the unique message identifier returned from thesendtemplatedemail action.",
	"Method": "void setMessageId(String messageId){\r\n    this.messageId = messageId;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignResponse.withName",
	"Comment": "the custom name of the campaign.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CampaignResponse withName(String name){\r\n    this.name = name;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.InvokeResult.getStatusCode",
	"Comment": "the http status code will be in the 200 range for successful request. forthe requestresponse invocation type this status code will be200. for the event invocation type this status code will be202. for the dryrun invocation type the status code will be204.",
	"Method": "Integer getStatusCode(){\r\n    return statusCode;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GCMChannelRequest.withEnabled",
	"Comment": "if the channel is enabled for sending messages.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GCMChannelRequest withEnabled(Boolean enabled){\r\n    this.enabled = enabled;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.CreatePlatformEndpointRequest.withAttributes",
	"Comment": "for a list of attributes, see setendpointattributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreatePlatformEndpointRequest withAttributes(java.util.Map<String, String> attributes){\r\n    this.attributes = attributes;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketInventoryConfigurationsResult.withNextContinuationToken",
	"Comment": "sets the optional nextcontinuationtoken.nextcontinuationtoken is sent when istruncated is true meaning there aremore keys in the bucket that can be listed. the next list requests to amazons3 can be continued by providing this nextcontinuationtoken.",
	"Method": "ListBucketInventoryConfigurationsResult withNextContinuationToken(String nextContinuationToken){\r\n    setNextContinuationToken(nextContinuationToken);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ReputationOptions.setReputationMetricsEnabled",
	"Comment": "describes whether or not amazon ses publishes reputation metrics for theconfiguration set, such as bounce and complaint rates, to amazoncloudwatch.if the value is true, reputation metrics are published. ifthe value is false, reputation metrics are not published.the default value is false.",
	"Method": "void setReputationMetricsEnabled(Boolean reputationMetricsEnabled){\r\n    this.reputationMetricsEnabled = reputationMetricsEnabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceDetection.withTimestamp",
	"Comment": "time, in milliseconds from the start of the video, that the face wasdetected.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "FaceDetection withTimestamp(Long timestamp){\r\n    this.timestamp = timestamp;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetAppsRequest.withPageSize",
	"Comment": "the number of entries you want on each page in the response.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetAppsRequest withPageSize(String pageSize){\r\n    this.pageSize = pageSize;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.pinpoint.PinpointConfiguration.withClientConfiguration",
	"Comment": "sets the client configuration this client will use when making request",
	"Method": "PinpointConfiguration withClientConfiguration(ClientConfiguration clientConfig){\r\n    this.clientConfiguration = new ClientConfiguration(clientConfig);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartContentModerationRequest.withNotificationChannel",
	"Comment": "the amazon sns topic arn that you want amazon rekognition video topublish the completion status of the content moderation analysis to.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "StartContentModerationRequest withNotificationChannel(NotificationChannel notificationChannel){\r\n    this.notificationChannel = notificationChannel;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.setAccessControlList",
	"Comment": "sets the optional access control list for the new object. if specified,cannedacl will be ignored.",
	"Method": "void setAccessControlList(AccessControlList accessControlList){\r\n    this.accessControlList = accessControlList;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetBucketLocationRequest.withBucketName",
	"Comment": "sets the name of the bucket whose location is being requested, andreturns this updated object so that additional method calls can bechained together.",
	"Method": "GetBucketLocationRequest withBucketName(String bucketName){\r\n    setBucketName(bucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.Message.withBody",
	"Comment": "the message body.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Message withBody(Body body){\r\n    this.body = body;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteCampaignRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteCampaignRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CreateApplicationRequest.setName",
	"Comment": "the display name of the application. used in the amazon pinpoint console.",
	"Method": "void setName(String name){\r\n    this.name = name;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetContentModerationResult.withVideoMetadata",
	"Comment": "information about a video that amazon rekognition analyzed.videometadata is returned in every page of paginatedresponses from getcontentmoderation.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetContentModerationResult withVideoMetadata(VideoMetadata videoMetadata){\r\n    this.videoMetadata = videoMetadata;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.BoundingBox.setWidth",
	"Comment": "width of the bounding box as a ratio of the overall image width.",
	"Method": "void setWidth(Float width){\r\n    this.width = width;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.setUploadId",
	"Comment": "sets the id of the existing, initiated multipart upload with which thisnew part will be associated.",
	"Method": "void setUploadId(String uploadId){\r\n    this.uploadId = uploadId;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.kinesisvideo.util.VideoEncoderUtils.isHardwareAccelerated",
	"Comment": "tries to guess whether the encoder is hardware accelerated.",
	"Method": "boolean isHardwareAccelerated(MediaCodecInfo encoder){\r\n    return encoder.getName().startsWith(SOFTWARE_ENCODER_PREFIX);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetBucketLocationRequest.setBucketName",
	"Comment": "sets the name of the bucket whose location is being requested.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.DeleteAttributesRequest.setExpected",
	"Comment": "the update condition which, if specified, determines whether thespecified attributes will be deleted or not. the update condition mustbe satisfied in order for this request to be processed and theattributes to be deleted.",
	"Method": "void setExpected(UpdateCondition expected){\r\n    this.expected = expected;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.AmazonS3Client.setBucketRequestPayment",
	"Comment": "sets the request payment configuration for a given amazon s3 bucket. thisoperation can be done only by the owner of the amazon s3 bucket.when the request payment configuration for a amazon s3 bucket is set torequester, the requester instead of the bucket owner paysthe cost of the request and the data download from the bucket. the bucketowner always pays the cost of storing data.",
	"Method": "void setBucketRequestPayment(SetRequestPaymentConfigurationRequest setRequestPaymentConfigurationRequest){\r\n    final String bucketName = setRequestPaymentConfigurationRequest.getBucketName();\r\n    final RequestPaymentConfiguration configuration = setRequestPaymentConfigurationRequest.getConfiguration();\r\n    assertParameterNotNull(bucketName, \"The bucket name parameter must be specified while setting the Requester Pays.\");\r\n    assertParameterNotNull(configuration, \"The request payment configuration parameter must be specified when setting the Requester Pays.\");\r\n    final Request<SetRequestPaymentConfigurationRequest> request = createRequest(bucketName, null, setRequestPaymentConfigurationRequest, HttpMethodName.PUT);\r\n    request.addParameter(\"requestPayment\", null);\r\n    request.addHeader(\"Content-Type\", \"application/xml\");\r\n    final byte[] bytes = requestPaymentConfigurationXmlFactory.convertToXmlByteArray(configuration);\r\n    request.addHeader(Headers.CONTENT_LENGTH, String.valueOf(bytes.length));\r\n    request.setContent(new ByteArrayInputStream(bytes));\r\n    invoke(request, voidResponseHandler, bucketName, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.AbortMultipartUploadRequest.withRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket. it returns thisupdated abortmultipartuploadrequest object so that additional method calls can bechained together.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "AbortMultipartUploadRequest withRequesterPays(boolean isRequesterPays){\r\n    setRequesterPays(isRequesterPays);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.VerifyDomainIdentityRequest.withDomain",
	"Comment": "the domain to be verified.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "VerifyDomainIdentityRequest withDomain(String domain){\r\n    this.domain = domain;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.ListFacesResult.setNextToken",
	"Comment": "if the response is truncated, amazon rekognition returns this token thatyou can use in the subsequent request to retrieve the next set of faces.",
	"Method": "void setNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser.parseListMyBucketsResponse",
	"Comment": "parses a listallmybuckets response xml document from an input stream.",
	"Method": "ListAllMyBucketsHandler parseListMyBucketsResponse(InputStream inputStream){\r\n    final ListAllMyBucketsHandler handler = new ListAllMyBucketsHandler();\r\n    parseXmlInputStream(handler, sanitizeXmlDocument(handler, inputStream));\r\n    return handler;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.GrantConstraints.clearEncryptionContextEqualsEntries",
	"Comment": "removes all the entries added into encryptioncontextequals.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GrantConstraints clearEncryptionContextEqualsEntries(){\r\n    this.encryptionContextEquals = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.setDestinationBucketName",
	"Comment": "sets the destination bucket name which will contain the new, copiedobject.",
	"Method": "void setDestinationBucketName(String destinationBucketName){\r\n    this.destinationBucketName = destinationBucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GPSCoordinates.withLatitude",
	"Comment": "latitudereturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GPSCoordinates withLatitude(Double latitude){\r\n    this.latitude = latitude;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.kinesisvideo.internal.producer.KinesisVideoMetrics.getTotalContentViewSize",
	"Comment": "returns the total allocated memory size for the content view objects for all streams",
	"Method": "long getTotalContentViewSize(){\r\n    return totalContentViewSize;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.GetCustomVerificationEmailTemplateResult.setFromEmailAddress",
	"Comment": "the email address that the custom verification email is sent from.",
	"Method": "void setFromEmailAddress(String fromEmailAddress){\r\n    this.fromEmailAddress = fromEmailAddress;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.VersionListing.setVersionSummaries",
	"Comment": "for internal use only. sets the list of version summaries describing theversions stored in the associated s3 bucket.",
	"Method": "void setVersionSummaries(List<S3VersionSummary> versionSummaries){\r\n    this.versionSummaries = versionSummaries;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CreateConfigurationSetTrackingOptionsRequest.setConfigurationSetName",
	"Comment": "the name of the configuration set that the tracking options should beassociated with.",
	"Method": "void setConfigurationSetName(String configurationSetName){\r\n    this.configurationSetName = configurationSetName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.BaiduMessage.setImageIconUrl",
	"Comment": "the url that points to an image used as the large icon to thenotification content view.",
	"Method": "void setImageIconUrl(String imageIconUrl){\r\n    this.imageIconUrl = imageIconUrl;\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.GetMLModelResult.getScoreThreshold",
	"Comment": "the scoring threshold is used in binary classificationmlmodel models. it marks theboundary between a positive prediction and a negative prediction.output values greater than or equal to the threshold receive a positiveresult from the mlmodel, such as true. output values lessthan the threshold receive a negative response from the mlmodel, such asfalse.",
	"Method": "Float getScoreThreshold(){\r\n    return scoreThreshold;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointUser.withUserId",
	"Comment": "the unique id of the user.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointUser withUserId(String userId){\r\n    this.userId = userId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobResource.withSegmentId",
	"Comment": "the id of the segment to update if the import job is meant to update anexisting segment.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ImportJobResource withSegmentId(String segmentId){\r\n    this.segmentId = segmentId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.withFileOffset",
	"Comment": "sets the optional offset in the specified file, at which to beginuploading data for this part, and returns this updated uploadpartrequestobject so that additional method calls can be chained together.if not specified, data will be read from the beginning of the file.",
	"Method": "UploadPartRequest withFileOffset(long fileOffset){\r\n    setFileOffset(fileOffset);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSSandboxChannelRequest.withTeamId",
	"Comment": "the team id used for apns tokens.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSSandboxChannelRequest withTeamId(String teamId){\r\n    this.teamId = teamId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListSubscriptionsByTopicRequest.setTopicArn",
	"Comment": "the arn of the topic for which you wish to find subscriptions.",
	"Method": "void setTopicArn(String topicArn){\r\n    this.topicArn = topicArn;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMChannelResponse.withVersion",
	"Comment": "the channel version.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ADMChannelResponse withVersion(Integer version){\r\n    this.version = version;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteSegmentRequest.withSegmentId",
	"Comment": "the unique id of the segment.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteSegmentRequest withSegmentId(String segmentId){\r\n    this.segmentId = segmentId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.RecipientDsnFields.setStatus",
	"Comment": "the status code that indicates what went wrong. this is required by rfc 3464.",
	"Method": "void setStatus(String status){\r\n    this.status = status;\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.GetMLModelResult.setScoreThreshold",
	"Comment": "the scoring threshold is used in binary classificationmlmodel models. it marks theboundary between a positive prediction and a negative prediction.output values greater than or equal to the threshold receive a positiveresult from the mlmodel, such as true. output values lessthan the threshold receive a negative response from the mlmodel, such asfalse.",
	"Method": "void setScoreThreshold(Float scoreThreshold){\r\n    this.scoreThreshold = scoreThreshold;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.buffered.QueueBufferConfig.setMaxBatchSize",
	"Comment": "specifies the maximum number of entries the bufferinc client will put ina single batch request.",
	"Method": "void setMaxBatchSize(int maxBatchSize){\r\n    this.maxBatchSize = maxBatchSize;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.ListTagsForStreamResult.getTags",
	"Comment": "a list of tags associated with streamname, starting with thefirst tag after exclusivestarttagkey and up to the specifiedlimit.",
	"Method": "java.util.List<Tag> getTags(){\r\n    return tags;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetLabelDetectionResult.withErrorCode",
	"Comment": "sets the value of the errorcode property for this object.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetLabelDetectionResult withErrorCode(String errorCode){\r\n    this.errorCode = errorCode;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ActivityResponse.withTimezonesCompletedCount",
	"Comment": "the total number of timezones completed.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ActivityResponse withTimezonesCompletedCount(Integer timezonesCompletedCount){\r\n    this.timezonesCompletedCount = timezonesCompletedCount;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.IdentityNotificationAttributes.withForwardingEnabled",
	"Comment": "describes whether amazon ses will forward bounce and complaintnotifications as email. true indicates that amazon ses willforward bounce and complaint notifications as email, whilefalse indicates that bounce and complaint notifications willbe published only to the specified bounce and complaint amazon snstopics.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "IdentityNotificationAttributes withForwardingEnabled(Boolean forwardingEnabled){\r\n    this.forwardingEnabled = forwardingEnabled;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateThingGroupsForThingRequest.withThingGroupsToRemove",
	"Comment": "the groups from which the thing will be removed.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateThingGroupsForThingRequest withThingGroupsToRemove(String thingGroupsToRemove,UpdateThingGroupsForThingRequest withThingGroupsToRemove,java.util.Collection<String> thingGroupsToRemove){\r\n    setThingGroupsToRemove(thingGroupsToRemove);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateApnsSandboxChannelRequest.setAPNSSandboxChannelRequest",
	"Comment": "apple development push notification service channel definition.",
	"Method": "void setAPNSSandboxChannelRequest(APNSSandboxChannelRequest aPNSSandboxChannelRequest){\r\n    this.aPNSSandboxChannelRequest = aPNSSandboxChannelRequest;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.MessageRequest.withTraceId",
	"Comment": "a unique id that you can use to trace a message. this id is visible torecipients.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "MessageRequest withTraceId(String traceId){\r\n    this.traceId = traceId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartListing.setNextPartNumberMarker",
	"Comment": "sets the next part number marker. if this listing is truncated, this isthe part number marker that should be used in the next request to get thenext page of results.",
	"Method": "void setNextPartNumberMarker(int nextPartNumberMarker){\r\n    this.nextPartNumberMarker = nextPartNumberMarker;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.Message.setImageIconUrl",
	"Comment": "the url that points to the icon image for the push notification icon, forexample, the app icon.",
	"Method": "void setImageIconUrl(String imageIconUrl){\r\n    this.imageIconUrl = imageIconUrl;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.setNewObjectMetadata",
	"Comment": "sets the object metadata to use for the new, copied object. by defaultthe object metadata from the source object is copied to the destinationobject, but when setting object metadata with this method, no metadatafrom the source object is copied. instead, the new destination objectwill have the metadata specified with this call.",
	"Method": "void setNewObjectMetadata(ObjectMetadata newObjectMetadata){\r\n    this.newObjectMetadata = newObjectMetadata;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DescribeActiveReceiptRuleSetResult.setMetadata",
	"Comment": "the metadata for the currently active receipt rule set. the metadataconsists of the rule set name and a timestamp of when the rule set wascreated.",
	"Method": "void setMetadata(ReceiptRuleSetMetadata metadata){\r\n    this.metadata = metadata;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.CelebrityRecognition.setTimestamp",
	"Comment": "the time, in milliseconds from the start of the video, that the celebritywas recognized.",
	"Method": "void setTimestamp(Long timestamp){\r\n    this.timestamp = timestamp;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DirectMessageConfiguration.setAPNSMessage",
	"Comment": "the message to apns channels. overrides the default push notificationmessage.",
	"Method": "void setAPNSMessage(APNSMessage aPNSMessage){\r\n    this.aPNSMessage = aPNSMessage;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.AmazonCloudWatchLogsClient.describeExportTasks",
	"Comment": "lists the specified export tasks. you can list all your export tasks orfilter the results based on task id or task status.",
	"Method": "DescribeExportTasksResult describeExportTasks(DescribeExportTasksRequest describeExportTasksRequest){\r\n    ExecutionContext executionContext = createExecutionContext(describeExportTasksRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<DescribeExportTasksRequest> request = null;\r\n    Response<DescribeExportTasksResult> response = null;\r\n    try {\r\n        awsRequestMetrics.startEvent(Field.RequestMarshallTime);\r\n        try {\r\n            request = new DescribeExportTasksRequestMarshaller().marshall(describeExportTasksRequest);\r\n            request.setAWSRequestMetrics(awsRequestMetrics);\r\n        } finally {\r\n            awsRequestMetrics.endEvent(Field.RequestMarshallTime);\r\n        }\r\n        Unmarshaller<DescribeExportTasksResult, JsonUnmarshallerContext> unmarshaller = new DescribeExportTasksResultJsonUnmarshaller();\r\n        JsonResponseHandler<DescribeExportTasksResult> responseHandler = new JsonResponseHandler<DescribeExportTasksResult>(unmarshaller);\r\n        response = invoke(request, responseHandler, executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.MessageAttributeValue.getBinaryValue",
	"Comment": "binary type attributes can store any binary data, for example, compresseddata, encrypted data, or images.",
	"Method": "java.nio.ByteBuffer getBinaryValue(){\r\n    return binaryValue;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.setUnmodifiedSinceConstraint",
	"Comment": "sets the optional unmodified constraint that restricts this request toexecuting only if the source object has not been modified afterthe specified date.the unmodified constraint may be used with matching etag constraints, butnot with any other type of constraint.note that amazon s3 will ignore any dates occurring in the future.",
	"Method": "void setUnmodifiedSinceConstraint(Date date){\r\n    this.unmodifiedSinceConstraint = date;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.PutKeyPolicyRequest.withBypassPolicyLockoutSafetyCheck",
	"Comment": "a flag to indicate whether to bypass the key policy lockout safety check.setting this value to true increases the risk that the cmk becomesunmanageable. do not set this value to true indiscriminately.for more information, refer to the scenario in the default key policy section in the aws key management servicedeveloper guide.use this parameter only when you intend to prevent the principal that ismaking the request from making a subsequent putkeypolicyrequest on the cmk.the default value is false.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PutKeyPolicyRequest withBypassPolicyLockoutSafetyCheck(Boolean bypassPolicyLockoutSafetyCheck){\r\n    this.bypassPolicyLockoutSafetyCheck = bypassPolicyLockoutSafetyCheck;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.UpdateCondition.withExists",
	"Comment": "a value specifying whether or not the specified attribute must existwith the specified value in order for the update condition to besatisfied. specify true if the attribute must exist forthe update condition to be satisfied. specify false ifthe attribute should not exist in order for the update condition to besatisfied.returns a reference to this object so that method calls can be chained together.",
	"Method": "UpdateCondition withExists(Boolean exists){\r\n    this.exists = exists;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClient.setReceiptRulePosition",
	"Comment": "sets the position of the specified receipt rule in the receipt rule set.for information about managing receipt rules, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "SetReceiptRulePositionResult setReceiptRulePosition(SetReceiptRulePositionRequest setReceiptRulePositionRequest){\r\n    ExecutionContext executionContext = createExecutionContext(setReceiptRulePositionRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<SetReceiptRulePositionRequest> request = null;\r\n    Response<SetReceiptRulePositionResult> response = null;\r\n    try {\r\n        request = new SetReceiptRulePositionRequestMarshaller().marshall(setReceiptRulePositionRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        response = invoke(request, new SetReceiptRulePositionResultStaxUnmarshaller(), executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSVoipChannelRequest.withPrivateKey",
	"Comment": "the certificate private key.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSVoipChannelRequest withPrivateKey(String privateKey){\r\n    this.privateKey = privateKey;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointResponse.getCreationDate",
	"Comment": "the date and time when the endpoint was created, shown in iso 8601format.",
	"Method": "String getCreationDate(){\r\n    return creationDate;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.TestMetricFilterResult.withMatches",
	"Comment": "the matched events.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "TestMetricFilterResult withMatches(MetricFilterMatchRecord matches,TestMetricFilterResult withMatches,java.util.Collection<MetricFilterMatchRecord> matches){\r\n    setMatches(matches);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListMultipartUploadsRequest.getUploadIdMarker",
	"Comment": "returns the optional upload id marker indicating where in the results tobegin listing.together with the key marker, specifies the multipart upload after whichlisting should begin. if no key marker is specified, the upload id markeris ignored. otherwise, any multipart uploads for a key equal to the keymarker may be included in the list only if they have an upload idlexicographically greater than the specified marker.",
	"Method": "String getUploadIdMarker(){\r\n    return uploadIdMarker;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListMultipartUploadsRequest.setUploadIdMarker",
	"Comment": "sets the optional upload id marker indicating where in the results tobegin listing.together with the key marker, specifies the multipart upload after whichlisting should begin. if no key marker is specified, the upload id markeris ignored. otherwise, any multipart uploads for a key equal to the keymarker may be included in the list only if they have an upload idlexicographically greater than the specified marker.",
	"Method": "void setUploadIdMarker(String uploadIdMarker){\r\n    this.uploadIdMarker = uploadIdMarker;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.AbortMultipartUploadRequest.withUploadId",
	"Comment": "sets the id of the multipart upload to abort, and returns this updatedabortmultipartuploadrequest object so that additional method calls can bechained together.",
	"Method": "AbortMultipartUploadRequest withUploadId(String uploadId){\r\n    this.uploadId = uploadId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSAsyncClient.checkIfPhoneNumberIsOptedOutAsync",
	"Comment": "accepts a phone number and indicates whether the phone holder has optedout of receiving sms messages from your account. you cannot send smsmessages to a number that is opted out.to resume sending messages, you can opt in the number by using theoptinphonenumber action.",
	"Method": "Future<CheckIfPhoneNumberIsOptedOutResult> checkIfPhoneNumberIsOptedOutAsync(CheckIfPhoneNumberIsOptedOutRequest checkIfPhoneNumberIsOptedOutRequest,Future<CheckIfPhoneNumberIsOptedOutResult> checkIfPhoneNumberIsOptedOutAsync,CheckIfPhoneNumberIsOptedOutRequest checkIfPhoneNumberIsOptedOutRequest,AsyncHandler<CheckIfPhoneNumberIsOptedOutRequest, CheckIfPhoneNumberIsOptedOutResult> asyncHandler){\r\n    return executorService.submit(new Callable<CheckIfPhoneNumberIsOptedOutResult>() {\r\n        public CheckIfPhoneNumberIsOptedOutResult call() throws Exception {\r\n            CheckIfPhoneNumberIsOptedOutResult result = null;\r\n            try {\r\n                result = checkIfPhoneNumberIsOptedOut(checkIfPhoneNumberIsOptedOutRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(checkIfPhoneNumberIsOptedOutRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSAsyncClient.checkIfPhoneNumberIsOptedOutAsync",
	"Comment": "accepts a phone number and indicates whether the phone holder has optedout of receiving sms messages from your account. you cannot send smsmessages to a number that is opted out.to resume sending messages, you can opt in the number by using theoptinphonenumber action.",
	"Method": "Future<CheckIfPhoneNumberIsOptedOutResult> checkIfPhoneNumberIsOptedOutAsync(CheckIfPhoneNumberIsOptedOutRequest checkIfPhoneNumberIsOptedOutRequest,Future<CheckIfPhoneNumberIsOptedOutResult> checkIfPhoneNumberIsOptedOutAsync,CheckIfPhoneNumberIsOptedOutRequest checkIfPhoneNumberIsOptedOutRequest,AsyncHandler<CheckIfPhoneNumberIsOptedOutRequest, CheckIfPhoneNumberIsOptedOutResult> asyncHandler){\r\n    CheckIfPhoneNumberIsOptedOutResult result = null;\r\n    try {\r\n        result = checkIfPhoneNumberIsOptedOut(checkIfPhoneNumberIsOptedOutRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(checkIfPhoneNumberIsOptedOutRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.MultipartUploadListing.setKeyMarker",
	"Comment": "sets the optional key marker specified in the original request to specifywhere in the results to begin listing multipart uploads.",
	"Method": "void setKeyMarker(String keyMarker){\r\n    this.keyMarker = keyMarker;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transferutility.TransferUtility.getTransfersWithTypeAndStates",
	"Comment": "gets a list of transferobserver instances which are observing recordswith the given type.",
	"Method": "List<TransferObserver> getTransfersWithTypeAndStates(TransferType type,TransferState[] states){\r\n    final List<TransferObserver> transferObservers = new ArrayList<TransferObserver>();\r\n    Cursor c = null;\r\n    try {\r\n        c = dbUtil.queryTransfersWithTypeAndStates(type, states);\r\n        while (c.moveToNext()) {\r\n            final int partNum = c.getInt(c.getColumnIndexOrThrow(TransferTable.COLUMN_PART_NUM));\r\n            if (partNum != 0) {\r\n                continue;\r\n            }\r\n            final int id = c.getInt(c.getColumnIndexOrThrow(TransferTable.COLUMN_ID));\r\n            final TransferObserver to = new TransferObserver(id, dbUtil);\r\n            to.updateFromDB(c);\r\n            transferObservers.add(to);\r\n        }\r\n    } finally {\r\n        if (c != null) {\r\n            c.close();\r\n        }\r\n    }\r\n    return transferObservers;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SendUsersMessageRequest.clearContextEntries",
	"Comment": "removes all the entries added into context.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendUsersMessageRequest clearContextEntries(){\r\n    this.context = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.MessageResponse.clearResultEntries",
	"Comment": "removes all the entries added into result.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "MessageResponse clearResultEntries(){\r\n    this.result = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentReference.withId",
	"Comment": "a unique identifier for the segment.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SegmentReference withId(String id){\r\n    this.id = id;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.StreamDescription.isHasMoreShards",
	"Comment": "if set to true, more shards in the stream are available todescribe.",
	"Method": "Boolean isHasMoreShards(){\r\n    return hasMoreShards;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.ReplaceableItem.withName",
	"Comment": "the name of the replaceable item.returns a reference to this object so that method calls can be chained together.",
	"Method": "ReplaceableItem withName(String name){\r\n    this.name = name;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketLoggingConfiguration.setLogFilePrefix",
	"Comment": "sets the log file prefix for this bucket logging configuration.",
	"Method": "void setLogFilePrefix(String logFilePrefix){\r\n    if (logFilePrefix == null) {\r\n        logFilePrefix = \"\";\r\n    }\r\n    this.logFilePrefix = logFilePrefix;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.NumberValidateResponse.withCity",
	"Comment": "the city where the phone number was originally registered.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "NumberValidateResponse withCity(String city){\r\n    this.city = city;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.GetRecordsResult.withRecords",
	"Comment": "the data records retrieved from the shard.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetRecordsResult withRecords(Record records,GetRecordsResult withRecords,java.util.Collection<Record> records){\r\n    setRecords(records);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.AmazonSimpleDBAsyncClient.domainMetadataAsync",
	"Comment": "returns information about the domain, including when the domain wascreated, the number of items and attributes in the domain, and thesize of the attribute names and values.",
	"Method": "Future<DomainMetadataResult> domainMetadataAsync(DomainMetadataRequest domainMetadataRequest,Future<DomainMetadataResult> domainMetadataAsync,DomainMetadataRequest domainMetadataRequest,AsyncHandler<DomainMetadataRequest, DomainMetadataResult> asyncHandler){\r\n    return executorService.submit(new Callable<DomainMetadataResult>() {\r\n        public DomainMetadataResult call() throws Exception {\r\n            DomainMetadataResult result;\r\n            try {\r\n                result = domainMetadata(domainMetadataRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(domainMetadataRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.AmazonSimpleDBAsyncClient.domainMetadataAsync",
	"Comment": "returns information about the domain, including when the domain wascreated, the number of items and attributes in the domain, and thesize of the attribute names and values.",
	"Method": "Future<DomainMetadataResult> domainMetadataAsync(DomainMetadataRequest domainMetadataRequest,Future<DomainMetadataResult> domainMetadataAsync,DomainMetadataRequest domainMetadataRequest,AsyncHandler<DomainMetadataRequest, DomainMetadataResult> asyncHandler){\r\n    DomainMetadataResult result;\r\n    try {\r\n        result = domainMetadata(domainMetadataRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(domainMetadataRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Smile.withValue",
	"Comment": "boolean value that indicates whether the face is smiling or not.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Smile withValue(Boolean value){\r\n    this.value = value;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateThingGroupRequest.getExpectedVersion",
	"Comment": "the expected version of the thing group. if this does not match theversion of the thing group being updated, the update will fail.",
	"Method": "Long getExpectedVersion(){\r\n    return expectedVersion;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.PersonMatch.withFaceMatches",
	"Comment": "information about the faces in the input collection that match the faceof a person in the video.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PersonMatch withFaceMatches(FaceMatch faceMatches,PersonMatch withFaceMatches,java.util.Collection<FaceMatch> faceMatches){\r\n    setFaceMatches(faceMatches);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.S3VersionSummary.isDeleteMarker",
	"Comment": "returns whether or not this version represents a delete marker.delete markers are special types of versions that have no data associatedwith them. when deleting a versioned object in amazon s3 withoutspecifying an explicit version id, a new delete marker is created as thelatest version of that object to mark that the object was deleted. thisoccurs even though the previous versions still exist in amazon s3.delete markers have no data associated with them and therefore have noassociated acl, size or storage class. only requesters with read accessto a bucket can learn of their existence by listing the versions in abucket.",
	"Method": "boolean isDeleteMarker(){\r\n    return isDeleteMarker;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSChannelRequest.withTokenKeyId",
	"Comment": "the token key used for apns tokens.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSChannelRequest withTokenKeyId(String tokenKeyId){\r\n    this.tokenKeyId = tokenKeyId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Eyeglasses.getValue",
	"Comment": "boolean value that indicates whether the face is wearing eye glasses ornot.",
	"Method": "Boolean getValue(){\r\n    return value;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectMetadataRequest.withRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket. it returns thisupdated getobjectmetadatarequest object so that additional method calls can bechained together.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "GetObjectMetadataRequest withRequesterPays(boolean isRequesterPays){\r\n    setRequesterPays(isRequesterPays);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.GetAttributesRequest.withDomainName",
	"Comment": "the name of the domain in which to perform the operation.returns a reference to this object so that method calls can be chained together.",
	"Method": "GetAttributesRequest withDomainName(String domainName){\r\n    this.domainName = domainName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignLimits.setMessagesPerSecond",
	"Comment": "the number of messages that the campaign can send per second. the minimumvalue is 50, and the maximum is 20000.",
	"Method": "void setMessagesPerSecond(Integer messagesPerSecond){\r\n    this.messagesPerSecond = messagesPerSecond;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointResponse.setEffectiveDate",
	"Comment": "the date and time when the endpoint was last updated, shown in iso 8601format.",
	"Method": "void setEffectiveDate(String effectiveDate){\r\n    this.effectiveDate = effectiveDate;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.DeleteMessageBatchRequestEntry.getId",
	"Comment": "an identifier for this particular receipt handle. this is used tocommunicate the result. note that the ids of a batch requestneed to be unique within the request.",
	"Method": "String getId(){\r\n    return id;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetSegmentVersionsRequest.withSegmentId",
	"Comment": "the unique id of the segment.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetSegmentVersionsRequest withSegmentId(String segmentId){\r\n    this.segmentId = segmentId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketWebsiteConfiguration.getRoutingRules",
	"Comment": "return the list of routing rules that can be used for configuringredirects if certain conditions are meet.",
	"Method": "List<RoutingRule> getRoutingRules(){\r\n    return routingRules;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.ResourcePolicy.withPolicyName",
	"Comment": "the name of the resource policy.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ResourcePolicy withPolicyName(String policyName){\r\n    this.policyName = policyName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.AmazonRekognitionClient.describeStreamProcessor",
	"Comment": "provides information about a stream processor created by . you can getinformation about the input and output streams, the input parameters forthe face recognition being performed, and the current status of thestream processor.",
	"Method": "DescribeStreamProcessorResult describeStreamProcessor(DescribeStreamProcessorRequest describeStreamProcessorRequest){\r\n    ExecutionContext executionContext = createExecutionContext(describeStreamProcessorRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<DescribeStreamProcessorRequest> request = null;\r\n    Response<DescribeStreamProcessorResult> response = null;\r\n    try {\r\n        awsRequestMetrics.startEvent(Field.RequestMarshallTime);\r\n        try {\r\n            request = new DescribeStreamProcessorRequestMarshaller().marshall(describeStreamProcessorRequest);\r\n            request.setAWSRequestMetrics(awsRequestMetrics);\r\n        } finally {\r\n            awsRequestMetrics.endEvent(Field.RequestMarshallTime);\r\n        }\r\n        Unmarshaller<DescribeStreamProcessorResult, JsonUnmarshallerContext> unmarshaller = new DescribeStreamProcessorResultJsonUnmarshaller();\r\n        JsonResponseHandler<DescribeStreamProcessorResult> responseHandler = new JsonResponseHandler<DescribeStreamProcessorResult>(unmarshaller);\r\n        response = invoke(request, responseHandler, executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceDetection.setTimestamp",
	"Comment": "time, in milliseconds from the start of the video, that the face wasdetected.",
	"Method": "void setTimestamp(Long timestamp){\r\n    this.timestamp = timestamp;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser.parseListObjectsV2Response",
	"Comment": "parses a listbucketv2 response xml document from an input stream.",
	"Method": "ListObjectsV2Handler parseListObjectsV2Response(InputStream inputStream,boolean shouldSDKDecodeResponse){\r\n    final ListObjectsV2Handler handler = new ListObjectsV2Handler(shouldSDKDecodeResponse);\r\n    parseXmlInputStream(handler, sanitizeXmlDocument(handler, inputStream));\r\n    return handler;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SendEmailResult.getMessageId",
	"Comment": "the unique message identifier returned from the sendemailaction.",
	"Method": "String getMessageId(){\r\n    return messageId;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.AmazonCloudWatchLogsClient.putResourcePolicy",
	"Comment": "creates or updates a resource policy allowing other aws services to putlog events to this account, such as amazon route 53. an account can haveup to 10 resource policies per region.",
	"Method": "PutResourcePolicyResult putResourcePolicy(PutResourcePolicyRequest putResourcePolicyRequest){\r\n    ExecutionContext executionContext = createExecutionContext(putResourcePolicyRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<PutResourcePolicyRequest> request = null;\r\n    Response<PutResourcePolicyResult> response = null;\r\n    try {\r\n        awsRequestMetrics.startEvent(Field.RequestMarshallTime);\r\n        try {\r\n            request = new PutResourcePolicyRequestMarshaller().marshall(putResourcePolicyRequest);\r\n            request.setAWSRequestMetrics(awsRequestMetrics);\r\n        } finally {\r\n            awsRequestMetrics.endEvent(Field.RequestMarshallTime);\r\n        }\r\n        Unmarshaller<PutResourcePolicyResult, JsonUnmarshallerContext> unmarshaller = new PutResourcePolicyResultJsonUnmarshaller();\r\n        JsonResponseHandler<PutResourcePolicyResult> responseHandler = new JsonResponseHandler<PutResourcePolicyResult>(unmarshaller);\r\n        response = invoke(request, responseHandler, executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.buffered.QueueBuffer.changeMessageVisibilitySync",
	"Comment": "changes visibility of a message in sqs. does not return until aconfirmation from sqs has been received.",
	"Method": "void changeMessageVisibilitySync(ChangeMessageVisibilityRequest request){\r\n    Future<Void> future = sendBuffer.changeMessageVisibility(request, null);\r\n    waitForFuture(future);\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.model.CopyResult.getSourceBucketName",
	"Comment": "gets the name of the bucket containing the source object to be copied.",
	"Method": "String getSourceBucketName(){\r\n    return sourceBucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateThingRequest.withRemoveThingType",
	"Comment": "remove a thing type association. if true, the association isremoved.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateThingRequest withRemoveThingType(Boolean removeThingType){\r\n    this.removeThingType = removeThingType;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DefaultMessage.setSubstitutions",
	"Comment": "default message substitutions. can be overridden by individual addresssubstitutions.",
	"Method": "void setSubstitutions(java.util.Map<String, java.util.List<String>> substitutions){\r\n    this.substitutions = substitutions;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SetIdentityFeedbackForwardingEnabledRequest.setForwardingEnabled",
	"Comment": "sets whether amazon ses will forward bounce and complaint notificationsas email. true specifies that amazon ses will forward bounceand complaint notifications as email, in addition to any amazon sns topicpublishing otherwise specified. false specifies that amazonses will publish bounce and complaint notifications only through amazonsns. this value can only be set to false when amazon snstopics are set for both bounce and complaintnotification types.",
	"Method": "void setForwardingEnabled(Boolean forwardingEnabled){\r\n    this.forwardingEnabled = forwardingEnabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.BaiduChannelResponse.withEnabled",
	"Comment": "if the channel is enabled for sending messages.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "BaiduChannelResponse withEnabled(Boolean enabled){\r\n    this.enabled = enabled;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DirectMessageConfiguration.setDefaultPushNotificationMessage",
	"Comment": "the default push notification message for all push channels.",
	"Method": "void setDefaultPushNotificationMessage(DefaultPushNotificationMessage defaultPushNotificationMessage){\r\n    this.defaultPushNotificationMessage = defaultPushNotificationMessage;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketLifecycleConfigurationRequest.getBucketName",
	"Comment": "gets the name of the bucket whose lifecycle configuration is being set.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.ListCollectionsResult.withCollectionIds",
	"Comment": "an array of collection ids.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListCollectionsResult withCollectionIds(String collectionIds,ListCollectionsResult withCollectionIds,java.util.Collection<String> collectionIds){\r\n    setCollectionIds(collectionIds);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketNotificationConfiguration.withNotificationConfiguration",
	"Comment": "sets the given notification configurations and returns this object.",
	"Method": "BucketNotificationConfiguration withNotificationConfiguration(Map<String, NotificationConfiguration> notificationConfiguration){\r\n    configurations.clear();\r\n    configurations.putAll(notificationConfiguration);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.DescribeCollectionResult.getCollectionARN",
	"Comment": "returns the value of the collectionarn property for this object.",
	"Method": "String getCollectionARN(){\r\n    return collectionARN;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetExportJobsRequest.withPageSize",
	"Comment": "the number of entries you want on each page in the response.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetExportJobsRequest withPageSize(String pageSize){\r\n    this.pageSize = pageSize;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CompleteMultipartUploadResult.getBucketName",
	"Comment": "returns the name of the bucket containing the completed multipart object.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.PutRecordsRequest.withRecords",
	"Comment": "the records associated with the request.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PutRecordsRequest withRecords(PutRecordsRequestEntry records,PutRecordsRequest withRecords,java.util.Collection<PutRecordsRequestEntry> records){\r\n    setRecords(records);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.AmazonS3Client.addStringListHeader",
	"Comment": "adds the specified string list header, joined together separated withcommas, to the specified request. this method will not add a string listheader if the specified values are null or empty.",
	"Method": "void addStringListHeader(Request<?> request,String header,List<String> values){\r\n    if (values != null && !values.isEmpty()) {\r\n        request.addHeader(header, ServiceUtils.join(values));\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.GetLogEventsRequest.isStartFromHead",
	"Comment": "if the value is true, the earliest log events are returned first. if thevalue is false, the latest log events are returned first. the defaultvalue is false.",
	"Method": "Boolean isStartFromHead(){\r\n    return startFromHead;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ConfirmSubscriptionRequest.setTopicArn",
	"Comment": "the arn of the topic for which you wish to confirm a subscription.",
	"Method": "void setTopicArn(String topicArn){\r\n    this.topicArn = topicArn;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.SendMessageBatchResultEntry.withMessageId",
	"Comment": "an identifier for the message.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendMessageBatchResultEntry withMessageId(String messageId){\r\n    this.messageId = messageId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.Message.withImageIconUrl",
	"Comment": "the url that points to the icon image for the push notification icon, forexample, the app icon.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Message withImageIconUrl(String imageIconUrl){\r\n    this.imageIconUrl = imageIconUrl;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SendBulkTemplatedEmailResult.setStatus",
	"Comment": "the unique message identifier returned from thesendbulktemplatedemail action.",
	"Method": "void setStatus(java.util.Collection<BulkEmailDestinationStatus> status){\r\n    if (status == null) {\r\n        this.status = null;\r\n        return;\r\n    }\r\n    this.status = new java.util.ArrayList<BulkEmailDestinationStatus>(status);\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.UpdateConfigurationSetReputationMetricsEnabledRequest.withEnabled",
	"Comment": "describes whether or not amazon ses will publish reputation metrics forthe configuration set, such as bounce and complaint rates, to amazoncloudwatch.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateConfigurationSetReputationMetricsEnabledRequest withEnabled(Boolean enabled){\r\n    this.enabled = enabled;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.StartSpeechSynthesisTaskResult.getSynthesisTask",
	"Comment": "synthesistask object that provides information and attributes about anewly submitted speech synthesis task.",
	"Method": "SynthesisTask getSynthesisTask(){\r\n    return synthesisTask;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMChannelRequest.setClientId",
	"Comment": "the client id that you obtained from the amazon app distribution portal.",
	"Method": "void setClientId(String clientId){\r\n    this.clientId = clientId;\r\n}"
}, {
	"Path": "com.amazonaws.serverless.proxy.internal.servlet.FilterHolder.getFilterConfig",
	"Comment": "the filter config object implementation. this is the default config object implemented in this file",
	"Method": "FilterConfig getFilterConfig(){\r\n    return filterConfig;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DescribeReceiptRuleSetResult.withMetadata",
	"Comment": "the metadata for the receipt rule set, which consists of the rule setname and the timestamp of when the rule set was created.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DescribeReceiptRuleSetResult withMetadata(ReceiptRuleSetMetadata metadata){\r\n    this.metadata = metadata;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointBatchItem.withLocation",
	"Comment": "the endpoint location attributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointBatchItem withLocation(EndpointLocation location){\r\n    this.location = location;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketReplicationConfiguration.addRule",
	"Comment": "adds a new rule to the replication configuration associated with thisamazon s3 bucket. returns the updated object.",
	"Method": "BucketReplicationConfiguration addRule(String id,ReplicationRule rule){\r\n    if (id == null || id.trim().isEmpty()) {\r\n        throw new IllegalArgumentException(\"Rule id cannot be null or empty.\");\r\n    }\r\n    if (rule == null) {\r\n        throw new IllegalArgumentException(\"Replication rule cannot be null\");\r\n    }\r\n    rules.put(id, rule);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSSandboxChannelResponse.withDefaultAuthenticationMethod",
	"Comment": "the default authentication method used for apns.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSSandboxChannelResponse withDefaultAuthenticationMethod(String defaultAuthenticationMethod){\r\n    this.defaultAuthenticationMethod = defaultAuthenticationMethod;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateEndpointsBatchRequest.withEndpointBatchRequest",
	"Comment": "endpoint batch update request.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateEndpointsBatchRequest withEndpointBatchRequest(EndpointBatchRequest endpointBatchRequest){\r\n    this.endpointBatchRequest = endpointBatchRequest;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateThingGroupRequest.withExpectedVersion",
	"Comment": "the expected version of the thing group. if this does not match theversion of the thing group being updated, the update will fail.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateThingGroupRequest withExpectedVersion(Long expectedVersion){\r\n    this.expectedVersion = expectedVersion;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Warning.getErrorCode",
	"Comment": "returns the value of the errorcode property for this object.",
	"Method": "String getErrorCode(){\r\n    return errorCode;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListPartsRequest.withMaxParts",
	"Comment": "sets the optional maximum number of parts to be returned in the partlisting and returns this updated listpartsrequest objects so thatadditional method calls can be chained together.",
	"Method": "ListPartsRequest withMaxParts(int maxParts){\r\n    this.maxParts = maxParts;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SendCustomVerificationEmailResult.withMessageId",
	"Comment": "the unique message identifier returned from thesendcustomverificationemail operation.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendCustomVerificationEmailResult withMessageId(String messageId){\r\n    this.messageId = messageId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentResponse.withImportDefinition",
	"Comment": "the import job settings.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SegmentResponse withImportDefinition(SegmentImportResource importDefinition){\r\n    this.importDefinition = importDefinition;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateAuthorizerRequest.cleartokenSigningPublicKeysEntries",
	"Comment": "removes all the entries added into tokensigningpublickeys.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateAuthorizerRequest cleartokenSigningPublicKeysEntries(){\r\n    this.tokenSigningPublicKeys = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.ExportTask.withStatus",
	"Comment": "the status of the export task.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ExportTask withStatus(ExportTaskStatus status){\r\n    this.status = status;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.BounceAction.getSender",
	"Comment": "the email address of the sender of the bounced email. this is the addressfrom which the bounce message will be sent.",
	"Method": "String getSender(){\r\n    return sender;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.SendMessageRequest.withMessageBody",
	"Comment": "the message to send. string maximum 256 kb in size. for a list of allowedcharacters, see the preceding note.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendMessageRequest withMessageBody(String messageBody){\r\n    this.messageBody = messageBody;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.amazonmobileanalytics.monetization.MonetizationEventBuilder.setCurrency",
	"Comment": "sets the item price currency to use when building the monetization event",
	"Method": "void setCurrency(String currency){\r\n    this.currency = currency;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.AddressConfiguration.getRawContent",
	"Comment": "the raw json formatted string to be used as the payload. this valueoverrides the message.",
	"Method": "String getRawContent(){\r\n    return rawContent;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DirectMessageConfiguration.setSMSMessage",
	"Comment": "the message to sms channels. overrides the default message.",
	"Method": "void setSMSMessage(SMSMessage sMSMessage){\r\n    this.sMSMessage = sMSMessage;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GCMMessage.clearDataEntries",
	"Comment": "removes all the entries added into data.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GCMMessage clearDataEntries(){\r\n    this.data = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetCelebrityRecognitionResult.withErrorCode",
	"Comment": "sets the value of the errorcode property for this object.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetCelebrityRecognitionResult withErrorCode(String errorCode){\r\n    this.errorCode = errorCode;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.pinpoint.analytics.monetization.MonetizationEventBuilder.setCurrency",
	"Comment": "sets the item price currency to use when building the monetization event",
	"Method": "void setCurrency(String currency){\r\n    this.currency = currency;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SetIdentityHeadersInNotificationsEnabledRequest.isEnabled",
	"Comment": "sets whether amazon ses includes the original email headers in amazon snsnotifications of the specified notification type. a value oftrue specifies that amazon ses will include headers innotifications, and a value of false specifies that amazonses will not include headers in notifications.this value can only be set when notificationtype is alreadyset to use a particular amazon sns topic.",
	"Method": "Boolean isEnabled(){\r\n    return enabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ExportJobResponse.withTotalPieces",
	"Comment": "the total number of pieces that must be processed to finish the job. eachpiece is an approximately equal portion of the endpoints.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ExportJobResponse withTotalPieces(Integer totalPieces){\r\n    this.totalPieces = totalPieces;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.PutAttributesRequest.withExpected",
	"Comment": "the update condition which, if specified, determines whether thespecified attributes will be updated or not. the update condition mustbe satisfied in order for this request to be processed and theattributes to be updated.returns a reference to this object so that method calls can be chained together.",
	"Method": "PutAttributesRequest withExpected(UpdateCondition expected){\r\n    this.expected = expected;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.BaiduMessage.withRawContent",
	"Comment": "the raw json formatted string to be used as the payload. this valueoverrides the message.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "BaiduMessage withRawContent(String rawContent){\r\n    this.rawContent = rawContent;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ChannelResponse.withVersion",
	"Comment": "version of channelreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ChannelResponse withVersion(Integer version){\r\n    this.version = version;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.amazonmobileanalytics.monetization.GooglePlayMonetizationEventBuilder.isValid",
	"Comment": "returns true only if the productid, quantity, formatted item price, andtransaction id are set",
	"Method": "boolean isValid(){\r\n    if (getProductId() == null) {\r\n        Log.w(TAG, \"Cannot build Google Monetization event: it is missing the product id\");\r\n        return false;\r\n    }\r\n    if (getQuantity() == null) {\r\n        Log.w(TAG, \"Google Monetization event is not valid: it is missing the quantity\");\r\n        return false;\r\n    }\r\n    if (getFormattedItemPrice() == null) {\r\n        Log.w(TAG, \"Google Monetization event is not valid: it is missing the formatted localized price\");\r\n        return false;\r\n    }\r\n    if (getTransactionId() == null) {\r\n        Log.w(TAG, \"Google Monetization event is not valid: it is missing the transaction id\");\r\n        return false;\r\n    }\r\n    return true;\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.TranscriptionJob.withTranscript",
	"Comment": "an object that describes the output of the transcription job.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "TranscriptionJob withTranscript(Transcript transcript){\r\n    this.transcript = transcript;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.pinpoint.analytics.AnalyticsClient.setCampaignAttributes",
	"Comment": "adds the specified campaign attributes to events to track campaign analyticyou should not use this method as it will be called by the notificationmanager when the app is openedfrom a push notification.",
	"Method": "void setCampaignAttributes(Map<String, String> campaign){\r\n    if (campaign == null) {\r\n        log.warn(\"Null campaign attributes provided to setCampaignAttributes.\");\r\n        return;\r\n    }\r\n    campaignAttributes = campaign;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectRequest.withResponseHeaders",
	"Comment": "sets the headers to be overridden in the service response and returnsthis object, for method chaining.",
	"Method": "GetObjectRequest withResponseHeaders(ResponseHeaderOverrides responseHeaders){\r\n    setResponseHeaders(responseHeaders);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.DescribeVoicesRequest.getNextToken",
	"Comment": "an opaque pagination token returned from the previousdescribevoices operation. if present, this indicates whereto continue the listing.",
	"Method": "String getNextToken(){\r\n    return nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.PublishRequest.clearMessageAttributesEntries",
	"Comment": "removes all the entries added into messageattributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PublishRequest clearMessageAttributesEntries(){\r\n    this.messageAttributes = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.AddressConfiguration.withRawContent",
	"Comment": "the raw json formatted string to be used as the payload. this valueoverrides the message.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "AddressConfiguration withRawContent(String rawContent){\r\n    this.rawContent = rawContent;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartFaceDetectionRequest.withNotificationChannel",
	"Comment": "the arn of the amazon sns topic to which you want amazon rekognitionvideo to publish the completion status of the face detection operation.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "StartFaceDetectionRequest withNotificationChannel(NotificationChannel notificationChannel){\r\n    this.notificationChannel = notificationChannel;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.GetCustomVerificationEmailTemplateResult.withFromEmailAddress",
	"Comment": "the email address that the custom verification email is sent from.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetCustomVerificationEmailTemplateResult withFromEmailAddress(String fromEmailAddress){\r\n    this.fromEmailAddress = fromEmailAddress;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetAdmChannelRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetAdmChannelRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.serverless.sample.springboot.Application.handlerMapping",
	"Comment": "create required handlermapping, to avoid several default handlermapping instances being created",
	"Method": "HandlerMapping handlerMapping(){\r\n    return new RequestMappingHandlerMapping();\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CustomVerificationEmailTemplate.setSuccessRedirectionURL",
	"Comment": "the url that the recipient of the verification email is sent to if his orher address is successfully verified.",
	"Method": "void setSuccessRedirectionURL(String successRedirectionURL){\r\n    this.successRedirectionURL = successRedirectionURL;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.Endpoint.withAttributes",
	"Comment": "attributes for endpoint.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Endpoint withAttributes(java.util.Map<String, String> attributes){\r\n    this.attributes = attributes;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DefaultPushNotificationMessage.getSubstitutions",
	"Comment": "default message substitutions. can be overridden by individual addresssubstitutions.",
	"Method": "java.util.Map<String, java.util.List<String>> getSubstitutions(){\r\n    return substitutions;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartLabelDetectionRequest.getVideo",
	"Comment": "the video in which you want to detect labels. the video must be stored inan amazon s3 bucket.",
	"Method": "Video getVideo(){\r\n    return video;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteBucketPolicyRequest.withBucketName",
	"Comment": "sets the name of the amazon s3 bucket whose policy is being deleted, andreturns the updated request object so that additional method calls can bechained together.",
	"Method": "DeleteBucketPolicyRequest withBucketName(String bucketName){\r\n    setBucketName(bucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SMSChannelResponse.withLastModifiedDate",
	"Comment": "last date this was updatedreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SMSChannelResponse withLastModifiedDate(String lastModifiedDate){\r\n    this.lastModifiedDate = lastModifiedDate;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SendBulkTemplatedEmailRequest.withTemplate",
	"Comment": "the template to use when sending this email.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendBulkTemplatedEmailRequest withTemplate(String template){\r\n    this.template = template;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.lex.interactionkit.internal.audio.LexAudioRecorder.postAudioRecordingProcessing",
	"Comment": "performs additional audio processing after a sample has been recorded.compress audio samples and send to output stream. update recorder statebased on audio sample recorded.",
	"Method": "void postAudioRecordingProcessing(int numSamplesRead,short[] buffer,AudioSourceListener listener){\r\n    if (numSamplesRead > 0) {\r\n        currentState = mVAD.processSamples(buffer, numSamplesRead);\r\n        final byte[] compressedBuffer = mAudioEncoder.encode(buffer, numSamplesRead);\r\n        try {\r\n            mProducerStream.write(compressedBuffer, 0, compressedBuffer.length);\r\n            mProducerStream.flush();\r\n        } catch (final IOException e) {\r\n            throw new AudioSourceException(\"Error writing to audio upload output stream\", e);\r\n        }\r\n    }\r\n    final long timeSinceLastEvent = SystemClock.elapsedRealtime() - lastEventTime;\r\n    if (state == VADState.NOT_STARTPOINTED) {\r\n        if (currentState == VADState.STARTPOINTED) {\r\n            Log.v(TAG, \"Speech detected\");\r\n            listener.onBeginningOfSpeech();\r\n        } else if (!noSpeechTimeoutFired && timeSinceLastEvent >= mAudioTimeouts.getNoSpeechTimeout()) {\r\n            Log.i(TAG, \"No speech timeout fired\");\r\n            noSpeechTimeoutFired = true;\r\n            listener.onNoSpeechTimeout();\r\n        }\r\n    } else if (state == VADState.STARTPOINTED) {\r\n        if (currentState == VADState.ENDPOINTED) {\r\n            Log.v(TAG, \"Silence detected\");\r\n            listener.onSilenceDetected();\r\n        } else if (!maxSpeechTimeoutFired && timeSinceLastEvent >= mAudioTimeouts.getMaxSpeechTimeout()) {\r\n            Log.i(TAG, \"Max speech timeout fired\");\r\n            maxSpeechTimeoutFired = true;\r\n            listener.onMaxSpeechTimeout();\r\n        }\r\n    } else {\r\n        throw new AudioSourceException(\"Invalid VAD state transition while processing audio\");\r\n    }\r\n    if (state != currentState) {\r\n        lastEventTime = SystemClock.elapsedRealtime();\r\n        state = currentState;\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.TagLogGroupRequest.cleartagsEntries",
	"Comment": "removes all the entries added into tags.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "TagLogGroupRequest cleartagsEntries(){\r\n    this.tags = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme.fromCEKAlgo",
	"Comment": "returns the content crypto scheme of the given content encryptionalgorithm.",
	"Method": "ContentCryptoScheme fromCEKAlgo(String cekAlgo,ContentCryptoScheme fromCEKAlgo,String cekAlgo,boolean isRangeGet){\r\n    if (AES_GCM.getCipherAlgorithm().equals(cekAlgo)) {\r\n        return isRangeGet ? AES_CTR : AES_GCM;\r\n    }\r\n    if (cekAlgo == null || AES_CBC.getCipherAlgorithm().equals(cekAlgo))\r\n        return AES_CBC;\r\n    throw new UnsupportedOperationException(\"Unsupported content encryption scheme: \" + cekAlgo);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.EncryptionUtils.createInstructionGetRequest",
	"Comment": "creates a get request to retrieve an instruction file from s3.",
	"Method": "GetObjectRequest createInstructionGetRequest(GetObjectRequest request){\r\n    return new GetObjectRequest(request.getBucketName(), request.getKey() + INSTRUCTION_SUFFIX, request.getVersionId());\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointDemographic.setMake",
	"Comment": "the manufacturer of the endpoint device, such as apple or samsung.",
	"Method": "void setMake(String make){\r\n    this.make = make;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transferutility.TransferDBUtil.queryTransfersWithTypeAndStates",
	"Comment": "queries all the records which have the given type and states.",
	"Method": "Cursor queryTransfersWithTypeAndStates(TransferType type,TransferState[] states){\r\n    final String selection;\r\n    final String[] selectionArgs;\r\n    int index = 0;\r\n    int numStates = states.length;\r\n    String placeholderString = createPlaceholders(numStates);\r\n    if (type == TransferType.ANY) {\r\n        selection = TransferTable.COLUMN_STATE + \" in (\" + placeholderString + \")\";\r\n        selectionArgs = new String[numStates];\r\n        for (index = 0; index < numStates; index++) {\r\n            selectionArgs[index] = states[index].toString();\r\n        }\r\n    } else {\r\n        selection = TransferTable.COLUMN_STATE + \" in (\" + placeholderString + \") and \" + TransferTable.COLUMN_TYPE + \"=?\";\r\n        selectionArgs = new String[numStates + 1];\r\n        for (index = 0; index < numStates; index++) {\r\n            selectionArgs[index] = states[index].toString();\r\n        }\r\n        selectionArgs[index] = type.toString();\r\n    }\r\n    return transferDBBase.query(transferDBBase.getContentUri(), null, selection, selectionArgs, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.iterable.S3Objects.withPrefix",
	"Comment": "constructs an iterable that covers the objects in an amazon s3 bucketwhere the key begins with the given prefix.",
	"Method": "S3Objects withPrefix(AmazonS3 s3,String bucketName,String prefix){\r\n    S3Objects objects = new S3Objects(s3, bucketName);\r\n    objects.prefix = prefix;\r\n    return objects;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.getDestinationBucketName",
	"Comment": "gets the destination bucket name which will contain the new, copiedobject.",
	"Method": "String getDestinationBucketName(){\r\n    return destinationBucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.SendMessageRequest.setMessageAttributes",
	"Comment": "each message attribute consists of a name, type, and value. for moreinformation, see message attribute items in the amazon sqs developer guide.",
	"Method": "void setMessageAttributes(java.util.Map<String, MessageAttributeValue> messageAttributes){\r\n    this.messageAttributes = messageAttributes;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.MultipartUploadListing.setUploadIdMarker",
	"Comment": "sets the optional upload id marker specified in the original request tospecify where in the results to begin listing multipart uploads.",
	"Method": "void setUploadIdMarker(String uploadIdMarker){\r\n    this.uploadIdMarker = uploadIdMarker;\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.GetMLModelResult.getScoreThresholdLastUpdatedAt",
	"Comment": "the time of the most recent edit to the scorethreshold. thetime is expressed in epoch time.",
	"Method": "java.util.Date getScoreThresholdLastUpdatedAt(){\r\n    return scoreThresholdLastUpdatedAt;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.AmazonCloudWatchLogsClient.describeLogStreams",
	"Comment": "lists the log streams for the specified log group. you can list all thelog streams or filter the results by prefix. you can also control how theresults are ordered.this operation has a limit of five transactions per second, after whichtransactions are throttled.",
	"Method": "DescribeLogStreamsResult describeLogStreams(DescribeLogStreamsRequest describeLogStreamsRequest){\r\n    ExecutionContext executionContext = createExecutionContext(describeLogStreamsRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<DescribeLogStreamsRequest> request = null;\r\n    Response<DescribeLogStreamsResult> response = null;\r\n    try {\r\n        awsRequestMetrics.startEvent(Field.RequestMarshallTime);\r\n        try {\r\n            request = new DescribeLogStreamsRequestMarshaller().marshall(describeLogStreamsRequest);\r\n            request.setAWSRequestMetrics(awsRequestMetrics);\r\n        } finally {\r\n            awsRequestMetrics.endEvent(Field.RequestMarshallTime);\r\n        }\r\n        Unmarshaller<DescribeLogStreamsResult, JsonUnmarshallerContext> unmarshaller = new DescribeLogStreamsResultJsonUnmarshaller();\r\n        JsonResponseHandler<DescribeLogStreamsResult> responseHandler = new JsonResponseHandler<DescribeLogStreamsResult>(unmarshaller);\r\n        response = invoke(request, responseHandler, executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.ReplaceableAttribute.withName",
	"Comment": "the name of the replaceable attribute.returns a reference to this object so that method calls can be chained together.",
	"Method": "ReplaceableAttribute withName(String name){\r\n    this.name = name;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateSecurityProfileRequest.withExpectedVersion",
	"Comment": "the expected version of the security profile. a new version is generatedwhenever the security profile is updated. if you specify a value that isdifferent than the actual version, aversionconflictexception is thrown.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateSecurityProfileRequest withExpectedVersion(Long expectedVersion){\r\n    this.expectedVersion = expectedVersion;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.GetMLModelResult.clearTrainingParametersEntries",
	"Comment": "removes all the entries added into trainingparameters.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetMLModelResult clearTrainingParametersEntries(){\r\n    this.trainingParameters = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetChannelsRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetChannelsRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CustomVerificationEmailTemplate.setFailureRedirectionURL",
	"Comment": "the url that the recipient of the verification email is sent to if his orher address is not successfully verified.",
	"Method": "void setFailureRedirectionURL(String failureRedirectionURL){\r\n    this.failureRedirectionURL = failureRedirectionURL;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ChannelResponse.withLastModifiedBy",
	"Comment": "who made the last changereturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ChannelResponse withLastModifiedBy(String lastModifiedBy){\r\n    this.lastModifiedBy = lastModifiedBy;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointResponse.setAddress",
	"Comment": "the address of the endpoint as provided by your push provider. forexample, the devicetoken or registrationid.",
	"Method": "void setAddress(String address){\r\n    this.address = address;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignResponse.withSchedule",
	"Comment": "the campaign schedule.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CampaignResponse withSchedule(Schedule schedule){\r\n    this.schedule = schedule;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.auth.policy.conditions.SNSConditionFactory.newProtocolCondition",
	"Comment": "constructs a new aws access control policy condition that allows anaccess control statement to restrict subscriptions to an amazon sns topicbased on the protocol being used for the subscription. for example, thiscondition can restrict subscriptions to a topic to endpoints using httpsto ensure that messages are securely delivered.",
	"Method": "Condition newProtocolCondition(String protocol){\r\n    return new StringCondition(StringComparisonType.StringEquals, PROTOCOL_CONDITION_KEY, protocol);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketReplicationConfigurationRequest.withReplicationConfiguration",
	"Comment": "sets the replication configuration for an amazon s3 bucket. returns theupdated object. .",
	"Method": "SetBucketReplicationConfigurationRequest withReplicationConfiguration(BucketReplicationConfiguration replicationConfiguration){\r\n    setReplicationConfiguration(replicationConfiguration);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.EventDestination.withMatchingEventTypes",
	"Comment": "the type of email sending events to publish to the event destination.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EventDestination withMatchingEventTypes(String matchingEventTypes,EventDestination withMatchingEventTypes,java.util.Collection<String> matchingEventTypes){\r\n    setMatchingEventTypes(matchingEventTypes);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListSubscriptionsRequest.getNextToken",
	"Comment": "token returned by the previous listsubscriptions request.",
	"Method": "String getNextToken(){\r\n    return nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetSegmentVersionRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetSegmentVersionRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.pinpoint.targeting.notification.NotificationClient.registerGCMDeviceToken",
	"Comment": "this method should be called once the device token has been received fromthe gcm api in order to enable being targeted for campaign pushnotifications.",
	"Method": "void registerGCMDeviceToken(String deviceToken){\r\n    notificationClientBase.registerDeviceToken(deviceToken);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSMessage.clearDataEntries",
	"Comment": "removes all the entries added into data.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSMessage clearDataEntries(){\r\n    this.data = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CreateCustomVerificationEmailTemplateRequest.setSuccessRedirectionURL",
	"Comment": "the url that the recipient of the verification email is sent to if his orher address is successfully verified.",
	"Method": "void setSuccessRedirectionURL(String successRedirectionURL){\r\n    this.successRedirectionURL = successRedirectionURL;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.kinesis.kinesisrecorder.JSONRecordAdapter.getStreamName",
	"Comment": "returns stream name from json object which was made viatranslatefromrecord.",
	"Method": "String getStreamName(JSONObject jsonObject){\r\n    return jsonObject.getString(STREAM_NAME_FIELD);\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.UpdateConfigurationSetEventDestinationRequest.withConfigurationSetName",
	"Comment": "the name of the configuration set that contains the event destinationthat you want to update.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateConfigurationSetEventDestinationRequest withConfigurationSetName(String configurationSetName){\r\n    this.configurationSetName = configurationSetName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SendRawEmailResult.withMessageId",
	"Comment": "the unique message identifier returned from the sendrawemailaction.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendRawEmailResult withMessageId(String messageId){\r\n    this.messageId = messageId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.BaiduMessage.withBody",
	"Comment": "the message body of the notification.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "BaiduMessage withBody(String body){\r\n    this.body = body;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectTaggingResult.withVersionId",
	"Comment": "set the version id of the object the tags were retrieved from.",
	"Method": "GetObjectTaggingResult withVersionId(String versionId){\r\n    setVersionId(versionId);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CORSRule.withMaxAgeSeconds",
	"Comment": "sets the max age in seconds of this rule and returns a reference to thisobject for method chaining.",
	"Method": "CORSRule withMaxAgeSeconds(int maxAgeSeconds){\r\n    this.maxAgeSeconds = maxAgeSeconds;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.AmazonS3Client.populateRequestWithCopyPartParameters",
	"Comment": "populates the specified request with the numerous options available incopyobjectrequest.",
	"Method": "void populateRequestWithCopyPartParameters(Request<?> request,CopyPartRequest copyPartRequest){\r\n    String copySourceHeader = \"/\" + S3HttpUtils.urlEncode(copyPartRequest.getSourceBucketName(), true) + \"/\" + S3HttpUtils.urlEncode(copyPartRequest.getSourceKey(), true);\r\n    if (copyPartRequest.getSourceVersionId() != null) {\r\n        copySourceHeader += \"?versionId=\" + copyPartRequest.getSourceVersionId();\r\n    }\r\n    request.addHeader(\"x-amz-copy-source\", copySourceHeader);\r\n    addDateHeader(request, Headers.COPY_SOURCE_IF_MODIFIED_SINCE, copyPartRequest.getModifiedSinceConstraint());\r\n    addDateHeader(request, Headers.COPY_SOURCE_IF_UNMODIFIED_SINCE, copyPartRequest.getUnmodifiedSinceConstraint());\r\n    addStringListHeader(request, Headers.COPY_SOURCE_IF_MATCH, copyPartRequest.getMatchingETagConstraints());\r\n    addStringListHeader(request, Headers.COPY_SOURCE_IF_NO_MATCH, copyPartRequest.getNonmatchingETagConstraints());\r\n    if (copyPartRequest.getFirstByte() != null && copyPartRequest.getLastByte() != null) {\r\n        final String range = \"bytes=\" + copyPartRequest.getFirstByte() + \"-\" + copyPartRequest.getLastByte();\r\n        request.addHeader(Headers.COPY_PART_RANGE, range);\r\n    }\r\n    populateSourceSSE_C(request, copyPartRequest.getSourceSSECustomerKey());\r\n    populateSSE_C(request, copyPartRequest.getDestinationSSECustomerKey());\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointanalytics.model.PutEventsRequest.withClientContextEncoding",
	"Comment": "the encoding used for the client context.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PutEventsRequest withClientContextEncoding(String clientContextEncoding){\r\n    this.clientContextEncoding = clientContextEncoding;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.verifyDomainIdentityAsync",
	"Comment": "adds a domain to the list of identities for your amazon ses account inthe current aws region and attempts to verify it. for more informationabout verifying domains, see verifying email addresses and domains in the amazon ses developerguide.you can execute this operation no more than once per second.",
	"Method": "Future<VerifyDomainIdentityResult> verifyDomainIdentityAsync(VerifyDomainIdentityRequest verifyDomainIdentityRequest,Future<VerifyDomainIdentityResult> verifyDomainIdentityAsync,VerifyDomainIdentityRequest verifyDomainIdentityRequest,AsyncHandler<VerifyDomainIdentityRequest, VerifyDomainIdentityResult> asyncHandler){\r\n    return executorService.submit(new Callable<VerifyDomainIdentityResult>() {\r\n        public VerifyDomainIdentityResult call() throws Exception {\r\n            VerifyDomainIdentityResult result = null;\r\n            try {\r\n                result = verifyDomainIdentity(verifyDomainIdentityRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(verifyDomainIdentityRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.verifyDomainIdentityAsync",
	"Comment": "adds a domain to the list of identities for your amazon ses account inthe current aws region and attempts to verify it. for more informationabout verifying domains, see verifying email addresses and domains in the amazon ses developerguide.you can execute this operation no more than once per second.",
	"Method": "Future<VerifyDomainIdentityResult> verifyDomainIdentityAsync(VerifyDomainIdentityRequest verifyDomainIdentityRequest,Future<VerifyDomainIdentityResult> verifyDomainIdentityAsync,VerifyDomainIdentityRequest verifyDomainIdentityRequest,AsyncHandler<VerifyDomainIdentityRequest, VerifyDomainIdentityResult> asyncHandler){\r\n    VerifyDomainIdentityResult result = null;\r\n    try {\r\n        result = verifyDomainIdentity(verifyDomainIdentityRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(verifyDomainIdentityRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.lexrts.model.PostContentResult.withSlotToElicit",
	"Comment": "if the dialogstate value is elicitslot, returnsthe name of the slot for which amazon lex is eliciting a value.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PostContentResult withSlotToElicit(String slotToElicit){\r\n    this.slotToElicit = slotToElicit;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMMessage.setConsolidationKey",
	"Comment": "optional. arbitrary string used to indicate multiple messages arelogically the same and that adm is allowed to drop previously enqueuedmessages in favor of this one.",
	"Method": "void setConsolidationKey(String consolidationKey){\r\n    this.consolidationKey = consolidationKey;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceDetail.getLandmarks",
	"Comment": "indicates the location of landmarks on the face. default attribute.",
	"Method": "java.util.List<Landmark> getLandmarks(){\r\n    return landmarks;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.UpdateCustomVerificationEmailTemplateRequest.getFromEmailAddress",
	"Comment": "the email address that the custom verification email is sent from.",
	"Method": "String getFromEmailAddress(){\r\n    return fromEmailAddress;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ObjectMetadata.getInstanceLength",
	"Comment": "returns the physical length of the entire object stored in s3. this isuseful during, for example, a range get operation.",
	"Method": "long getInstanceLength(){\r\n    final String contentRange = (String) metadata.get(Headers.CONTENT_RANGE);\r\n    if (contentRange != null) {\r\n        final int pos = contentRange.lastIndexOf(\"/\");\r\n        if (pos >= 0) {\r\n            return Long.parseLong(contentRange.substring(pos + 1));\r\n        }\r\n    }\r\n    return getContentLength();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.AbortMultipartUploadRequest.withBucketName",
	"Comment": "sets the name of the bucket containing the multipart upload to abort andreturns the updated object so that additional calls can be chainedtogether.",
	"Method": "AbortMultipartUploadRequest withBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.internal.UploadCallable.uploadInOneChunk",
	"Comment": "uploads the given request in a single chunk and returns the result.",
	"Method": "UploadResult uploadInOneChunk(){\r\n    PutObjectResult putObjectResult = s3.putObject(putObjectRequest);\r\n    UploadResult uploadResult = new UploadResult();\r\n    uploadResult.setBucketName(putObjectRequest.getBucketName());\r\n    uploadResult.setKey(putObjectRequest.getKey());\r\n    uploadResult.setETag(putObjectResult.getETag());\r\n    uploadResult.setVersionId(putObjectResult.getVersionId());\r\n    return uploadResult;\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.AmazonTranscribeAsyncClient.deleteTranscriptionJobAsync",
	"Comment": "deletes a previously submitted transcription job as well as any othergenerated results such as the transcription, models, and so on.",
	"Method": "Future<Void> deleteTranscriptionJobAsync(DeleteTranscriptionJobRequest deleteTranscriptionJobRequest,Future<Void> deleteTranscriptionJobAsync,DeleteTranscriptionJobRequest deleteTranscriptionJobRequest,AsyncHandler<DeleteTranscriptionJobRequest, Void> asyncHandler){\r\n    return executorService.submit(new Callable<Void>() {\r\n        public Void call() throws Exception {\r\n            Void result = null;\r\n            try {\r\n                deleteTranscriptionJob(deleteTranscriptionJobRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(deleteTranscriptionJobRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.AmazonTranscribeAsyncClient.deleteTranscriptionJobAsync",
	"Comment": "deletes a previously submitted transcription job as well as any othergenerated results such as the transcription, models, and so on.",
	"Method": "Future<Void> deleteTranscriptionJobAsync(DeleteTranscriptionJobRequest deleteTranscriptionJobRequest,Future<Void> deleteTranscriptionJobAsync,DeleteTranscriptionJobRequest deleteTranscriptionJobRequest,AsyncHandler<DeleteTranscriptionJobRequest, Void> asyncHandler){\r\n    Void result = null;\r\n    try {\r\n        deleteTranscriptionJob(deleteTranscriptionJobRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(deleteTranscriptionJobRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.TagResourceRequest.getTags",
	"Comment": "one or more tags. each tag consists of a tag key and a tag value.",
	"Method": "java.util.List<Tag> getTags(){\r\n    return tags;\r\n}"
}, {
	"Path": "com.amazonaws.kinesisvideo.producer.FragmentAckType.getIntType",
	"Comment": "returns the type as an integer which can be consumed by the native layer",
	"Method": "int getIntType(){\r\n    return mType;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketMetricsConfigurationsResult.getNextContinuationToken",
	"Comment": "gets the optional nextcontinuationtoken.nextcontinuationtoken is sent when istruncated is true meaning there aremore keys in the bucket that can be listed. the next list requests to amazons3 can be continued by providing this nextcontinuationtoken.",
	"Method": "String getNextContinuationToken(){\r\n    return nextContinuationToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.WriteSegmentRequest.setSegmentGroups",
	"Comment": "a segment group, which consists of zero or more source segments, plusdimensions that are applied to those source segments. your request canonly include one segment group. your request can include either asegmentgroups object or a dimensions object, but not both.",
	"Method": "void setSegmentGroups(SegmentGroupList segmentGroups){\r\n    this.segmentGroups = segmentGroups;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideoarchivedmedia.model.Fragment.withFragmentLengthInMilliseconds",
	"Comment": "the playback duration or other time value associated with the fragment.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Fragment withFragmentLengthInMilliseconds(Long fragmentLengthInMilliseconds){\r\n    this.fragmentLengthInMilliseconds = fragmentLengthInMilliseconds;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.pinpoint.PinpointConfiguration.getExecutor",
	"Comment": "the custom executor used for handlers in the targetingclient.",
	"Method": "ExecutorService getExecutor(){\r\n    return executor;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.AmazonPollyClient.deleteLexicon",
	"Comment": "deletes the specified pronunciation lexicon stored in an aws region. alexicon which has been deleted is not available for speech synthesis, noris it possible to retrieve it using either the getlexicon orlistlexicon apis.for more information, see managing lexicons.",
	"Method": "DeleteLexiconResult deleteLexicon(DeleteLexiconRequest deleteLexiconRequest){\r\n    ExecutionContext executionContext = createExecutionContext(deleteLexiconRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<DeleteLexiconRequest> request = null;\r\n    Response<DeleteLexiconResult> response = null;\r\n    try {\r\n        awsRequestMetrics.startEvent(Field.RequestMarshallTime);\r\n        try {\r\n            request = new DeleteLexiconRequestMarshaller().marshall(deleteLexiconRequest);\r\n            request.setAWSRequestMetrics(awsRequestMetrics);\r\n        } finally {\r\n            awsRequestMetrics.endEvent(Field.RequestMarshallTime);\r\n        }\r\n        Unmarshaller<DeleteLexiconResult, JsonUnmarshallerContext> unmarshaller = new DeleteLexiconResultJsonUnmarshaller();\r\n        JsonResponseHandler<DeleteLexiconResult> responseHandler = new JsonResponseHandler<DeleteLexiconResult>(unmarshaller);\r\n        response = invoke(request, responseHandler, executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClient.updateCustomVerificationEmailTemplate",
	"Comment": "updates an existing custom verification email template.for more information about custom verification email templates, see using custom verification email templates in the amazon sesdeveloper guide.you can execute this operation no more than once per second.",
	"Method": "void updateCustomVerificationEmailTemplate(UpdateCustomVerificationEmailTemplateRequest updateCustomVerificationEmailTemplateRequest){\r\n    ExecutionContext executionContext = createExecutionContext(updateCustomVerificationEmailTemplateRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<UpdateCustomVerificationEmailTemplateRequest> request = null;\r\n    Response<Void> response = null;\r\n    try {\r\n        request = new UpdateCustomVerificationEmailTemplateRequestMarshaller().marshall(updateCustomVerificationEmailTemplateRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        invoke(request, null, executionContext);\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DescribeReceiptRuleSetResult.setMetadata",
	"Comment": "the metadata for the receipt rule set, which consists of the rule setname and the timestamp of when the rule set was created.",
	"Method": "void setMetadata(ReceiptRuleSetMetadata metadata){\r\n    this.metadata = metadata;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.EventDestination.setMatchingEventTypes",
	"Comment": "the type of email sending events to publish to the event destination.",
	"Method": "void setMatchingEventTypes(java.util.Collection<String> matchingEventTypes){\r\n    if (matchingEventTypes == null) {\r\n        this.matchingEventTypes = null;\r\n        return;\r\n    }\r\n    this.matchingEventTypes = new java.util.ArrayList<String>(matchingEventTypes);\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceRecord.setFace",
	"Comment": "describes the face properties such as the bounding box, face id, image idof the input image, and external image id that you assigned.",
	"Method": "void setFace(Face face){\r\n    this.face = face;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideoarchivedmedia.model.Fragment.setFragmentLengthInMilliseconds",
	"Comment": "the playback duration or other time value associated with the fragment.",
	"Method": "void setFragmentLengthInMilliseconds(Long fragmentLengthInMilliseconds){\r\n    this.fragmentLengthInMilliseconds = fragmentLengthInMilliseconds;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.pinpoint.PinpointConfiguration.getClientConfiguration",
	"Comment": "gets the client configuration this client will use when making requests.if none was supplied to the constructor this will return the defaultclient configuration.",
	"Method": "ClientConfiguration getClientConfiguration(){\r\n    return this.clientConfiguration;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignResponse.setSegmentVersion",
	"Comment": "the version of the segment to which the campaign sends messages.",
	"Method": "void setSegmentVersion(Integer segmentVersion){\r\n    this.segmentVersion = segmentVersion;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetFaceDetectionResult.getStatusMessage",
	"Comment": "if the job fails, statusmessage provides a descriptive errormessage.",
	"Method": "String getStatusMessage(){\r\n    return statusMessage;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DescribeReceiptRuleRequest.withRuleName",
	"Comment": "the name of the receipt rule.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DescribeReceiptRuleRequest withRuleName(String ruleName){\r\n    this.ruleName = ruleName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.pinpoint.internal.event.EventRecorder.newInstance",
	"Comment": "constructs a new eventrecorder specifying the client to use.",
	"Method": "EventRecorder newInstance(PinpointContext pinpointContext,EventRecorder newInstance,PinpointContext pinpointContext,PinpointDBUtil dbUtil){\r\n    final ExecutorService submissionRunnableQueue = new ThreadPoolExecutor(1, 1, 0L, TimeUnit.MILLISECONDS, new LinkedBlockingQueue<Runnable>(MAX_EVENT_OPERATIONS), new ThreadPoolExecutor.DiscardPolicy());\r\n    return new EventRecorder(pinpointContext, dbUtil, submissionRunnableQueue);\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ListTemplatesResult.setTemplatesMetadata",
	"Comment": "an array the contains the name and creation time stamp for each templatein your amazon ses account.",
	"Method": "void setTemplatesMetadata(java.util.Collection<TemplateMetadata> templatesMetadata){\r\n    if (templatesMetadata == null) {\r\n        this.templatesMetadata = null;\r\n        return;\r\n    }\r\n    this.templatesMetadata = new java.util.ArrayList<TemplateMetadata>(templatesMetadata);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.AmazonPinpointClient.getCampaignVersion",
	"Comment": "returns information about a specific version of a campaign.",
	"Method": "GetCampaignVersionResult getCampaignVersion(GetCampaignVersionRequest getCampaignVersionRequest){\r\n    ExecutionContext executionContext = createExecutionContext(getCampaignVersionRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<GetCampaignVersionRequest> request = null;\r\n    Response<GetCampaignVersionResult> response = null;\r\n    try {\r\n        awsRequestMetrics.startEvent(Field.RequestMarshallTime);\r\n        try {\r\n            request = new GetCampaignVersionRequestMarshaller().marshall(getCampaignVersionRequest);\r\n            request.setAWSRequestMetrics(awsRequestMetrics);\r\n        } finally {\r\n            awsRequestMetrics.endEvent(Field.RequestMarshallTime);\r\n        }\r\n        Unmarshaller<GetCampaignVersionResult, JsonUnmarshallerContext> unmarshaller = new GetCampaignVersionResultJsonUnmarshaller();\r\n        JsonResponseHandler<GetCampaignVersionResult> responseHandler = new JsonResponseHandler<GetCampaignVersionResult>(unmarshaller);\r\n        response = invoke(request, responseHandler, executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GCMChannelResponse.withLastModifiedBy",
	"Comment": "who last updated this entryreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GCMChannelResponse withLastModifiedBy(String lastModifiedBy){\r\n    this.lastModifiedBy = lastModifiedBy;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.iotdata.AWSIotDataClient.updateThingShadow",
	"Comment": "updates the thing shadow for the specified thing.for more information, see updatethingshadow in the aws iot developer guide.",
	"Method": "UpdateThingShadowResult updateThingShadow(UpdateThingShadowRequest updateThingShadowRequest){\r\n    ExecutionContext executionContext = createExecutionContext(updateThingShadowRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<UpdateThingShadowRequest> request = null;\r\n    Response<UpdateThingShadowResult> response = null;\r\n    try {\r\n        awsRequestMetrics.startEvent(Field.RequestMarshallTime);\r\n        try {\r\n            request = new UpdateThingShadowRequestMarshaller().marshall(updateThingShadowRequest);\r\n            request.setAWSRequestMetrics(awsRequestMetrics);\r\n        } finally {\r\n            awsRequestMetrics.endEvent(Field.RequestMarshallTime);\r\n        }\r\n        Unmarshaller<UpdateThingShadowResult, JsonUnmarshallerContext> unmarshaller = new UpdateThingShadowResultJsonUnmarshaller();\r\n        JsonResponseHandler<UpdateThingShadowResult> responseHandler = new JsonResponseHandler<UpdateThingShadowResult>(unmarshaller);\r\n        response = invoke(request, responseHandler, executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GCMMessage.withSilentPush",
	"Comment": "indicates if the message should display on the users device. silentpushes can be used for remote configuration and phone home use cases.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GCMMessage withSilentPush(Boolean silentPush){\r\n    this.silentPush = silentPush;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.ListSpeechSynthesisTasksResult.setSynthesisTasks",
	"Comment": "list of synthesistask objects that provides information from thespecified task in the list request, including output format, creationtime, task status, and so on.",
	"Method": "void setSynthesisTasks(java.util.Collection<SynthesisTask> synthesisTasks){\r\n    if (synthesisTasks == null) {\r\n        this.synthesisTasks = null;\r\n        return;\r\n    }\r\n    this.synthesisTasks = new java.util.ArrayList<SynthesisTask>(synthesisTasks);\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.UpdateConfigurationSetReputationMetricsEnabledRequest.getEnabled",
	"Comment": "describes whether or not amazon ses will publish reputation metrics forthe configuration set, such as bounce and complaint rates, to amazoncloudwatch.",
	"Method": "Boolean getEnabled(){\r\n    return enabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceDetection.getTimestamp",
	"Comment": "time, in milliseconds from the start of the video, that the face wasdetected.",
	"Method": "Long getTimestamp(){\r\n    return timestamp;\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.CreateVocabularyResult.withLastModifiedTime",
	"Comment": "the date and time that the vocabulary was created.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreateVocabularyResult withLastModifiedTime(java.util.Date lastModifiedTime){\r\n    this.lastModifiedTime = lastModifiedTime;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetObjectAclRequest.setRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "void setRequesterPays(boolean isRequesterPays){\r\n    this.isRequesterPays = isRequesterPays;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignsResponse.withNextToken",
	"Comment": "the string that you use in a subsequent request to get the next page ofresults in a paginated response.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CampaignsResponse withNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CORSRule.withAllowedOrigins",
	"Comment": "sets the allowed origins of this rule and returns a reference to thisobject for method chaining.",
	"Method": "CORSRule withAllowedOrigins(List<String> allowedOrigins){\r\n    this.allowedOrigins = allowedOrigins;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DefaultPushNotificationMessage.getSilentPush",
	"Comment": "indicates if the message should display on the users device. silentpushes can be used for remote configuration and phone home use cases.",
	"Method": "Boolean getSilentPush(){\r\n    return silentPush;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.model.DescribeStreamResult.withStreamInfo",
	"Comment": "an object that describes the stream.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DescribeStreamResult withStreamInfo(StreamInfo streamInfo){\r\n    this.streamInfo = streamInfo;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.SearchFacesResult.withFaceMatches",
	"Comment": "an array of faces that matched the input face, along with the confidencein the match.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SearchFacesResult withFaceMatches(FaceMatch faceMatches,SearchFacesResult withFaceMatches,java.util.Collection<FaceMatch> faceMatches){\r\n    setFaceMatches(faceMatches);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.GetEndpointAttributesRequest.withEndpointArn",
	"Comment": "endpointarn for getendpointattributes input.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetEndpointAttributesRequest withEndpointArn(String endpointArn){\r\n    this.endpointArn = endpointArn;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartCelebrityRecognitionRequest.withVideo",
	"Comment": "the video in which you want to recognize celebrities. the video must bestored in an amazon s3 bucket.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "StartCelebrityRecognitionRequest withVideo(Video video){\r\n    this.video = video;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.serverless.proxy.internal.servlet.AwsHttpServletRequest.parseCookieHeaderValue",
	"Comment": "given the cookie header value, parses it and creates a cookie object",
	"Method": "Cookie[] parseCookieHeaderValue(String headerValue){\r\n    List<HeaderValue> parsedHeaders = this.parseHeaderValue(headerValue, \";\", \",\");\r\n    return parsedHeaders.stream().filter(e -> e.getKey() != null).map(e -> new Cookie(SecurityUtils.crlf(e.getKey()), SecurityUtils.crlf(e.getValue()))).toArray(Cookie[]::new);\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.CreateStreamProcessorRequest.getInput",
	"Comment": "kinesis video stream stream that provides the source streaming video. ifyou are using the aws cli, the parameter name isstreamprocessorinput.",
	"Method": "StreamProcessorInput getInput(){\r\n    return input;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SendUsersMessageRequest.getTraceId",
	"Comment": "a unique id that you can use to trace a message. this id is visible torecipients.",
	"Method": "String getTraceId(){\r\n    return traceId;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.ChangeMessageVisibilityBatchRequestEntry.getId",
	"Comment": "an identifier for this particular receipt handle. this is used tocommunicate the result. note that the ids of a batch requestneed to be unique within the request.",
	"Method": "String getId(){\r\n    return id;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointSendConfiguration.withRawContent",
	"Comment": "the raw json formatted string to be used as the payload. this valueoverrides the message.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointSendConfiguration withRawContent(String rawContent){\r\n    this.rawContent = rawContent;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StreamProcessorInput.setKinesisVideoStream",
	"Comment": "the kinesis video stream input stream for the source streaming video.",
	"Method": "void setKinesisVideoStream(KinesisVideoStream kinesisVideoStream){\r\n    this.kinesisVideoStream = kinesisVideoStream;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.CreatePlatformApplicationRequest.getAttributes",
	"Comment": "for a list of attributes, see setplatformapplicationattributes",
	"Method": "java.util.Map<String, String> getAttributes(){\r\n    return attributes;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetAppResult.withApplicationResponse",
	"Comment": "application response.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetAppResult withApplicationResponse(ApplicationResponse applicationResponse){\r\n    this.applicationResponse = applicationResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.MultiFileOutputStream.getFile",
	"Comment": "retrieves the file with the specified part number as the file extension.",
	"Method": "File getFile(int partNumber){\r\n    return new File(root, namePrefix + \".\" + partNumber);\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.SendMessageBatchResult.withFailed",
	"Comment": "a list of batchresulterrorentry items with the error detail abouteach message that could not be enqueued.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendMessageBatchResult withFailed(BatchResultErrorEntry failed,SendMessageBatchResult withFailed,java.util.Collection<BatchResultErrorEntry> failed){\r\n    setFailed(failed);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListNextBatchOfVersionsRequest.withPreviousVersionListing",
	"Comment": "sets the previous version listing and returns the updated request object so that additionalmethod calls can be chained together.",
	"Method": "ListNextBatchOfVersionsRequest withPreviousVersionListing(VersionListing previousVersionListing){\r\n    setPreviousVersionListing(previousVersionListing);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartPersonTrackingRequest.withNotificationChannel",
	"Comment": "the amazon sns topic arn you want amazon rekognition video to publish thecompletion status of the people detection operation to.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "StartPersonTrackingRequest withNotificationChannel(NotificationChannel notificationChannel){\r\n    this.notificationChannel = notificationChannel;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListPhoneNumbersOptedOutRequest.setNextToken",
	"Comment": "a nexttoken string is used when you call thelistphonenumbersoptedout action to retrieve additionalrecords that are available after the first page of results.",
	"Method": "void setNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.StreamDescriptionSummary.withStreamCreationTimestamp",
	"Comment": "the approximate time that the stream was created.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "StreamDescriptionSummary withStreamCreationTimestamp(java.util.Date streamCreationTimestamp){\r\n    this.streamCreationTimestamp = streamCreationTimestamp;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetApnsSandboxChannelResult.setAPNSSandboxChannelResponse",
	"Comment": "apple development push notification service channel definition.",
	"Method": "void setAPNSSandboxChannelResponse(APNSSandboxChannelResponse aPNSSandboxChannelResponse){\r\n    this.aPNSSandboxChannelResponse = aPNSSandboxChannelResponse;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointLocation.withPostalCode",
	"Comment": "the postal code or zip code of the endpoint.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointLocation withPostalCode(String postalCode){\r\n    this.postalCode = postalCode;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ReputationOptions.withReputationMetricsEnabled",
	"Comment": "describes whether or not amazon ses publishes reputation metrics for theconfiguration set, such as bounce and complaint rates, to amazoncloudwatch.if the value is true, reputation metrics are published. ifthe value is false, reputation metrics are not published.the default value is false.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ReputationOptions withReputationMetricsEnabled(Boolean reputationMetricsEnabled){\r\n    this.reputationMetricsEnabled = reputationMetricsEnabled;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SetIdentityDkimEnabledRequest.getIdentity",
	"Comment": "the identity for which dkim signing should be enabled or disabled.",
	"Method": "String getIdentity(){\r\n    return identity;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.RegionTest.testFromValueForOthers",
	"Comment": "tests if correct enums are returned when the location constraints arepassed to fromvalue method.",
	"Method": "void testFromValueForOthers(){\r\n    assertEquals(Region.EU_Ireland, Region.fromValue(\"eu-west-1\"));\r\n    assertEquals(Region.EU_Ireland, Region.fromValue(\"EU\"));\r\n    assertEquals(Region.US_GovCloud, Region.fromValue(\"s3-us-gov-west-1\"));\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.TranscriptionJobSummary.setFailureReason",
	"Comment": "if the transcriptionjobstatus field is failed,a description of the error.",
	"Method": "void setFailureReason(String failureReason){\r\n    this.failureReason = failureReason;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.EncryptionUtils.getDecryptedSymmetricKey",
	"Comment": "decrypts an encrypted symmetric key using the provided encryptionmaterials and returns it as a secretkey object.",
	"Method": "SecretKey getDecryptedSymmetricKey(byte[] encryptedSymmetricKeyBytes,EncryptionMaterials materials,Provider cryptoProvider){\r\n    Key keyToDoDecryption;\r\n    if (materials.getKeyPair() != null) {\r\n        keyToDoDecryption = materials.getKeyPair().getPrivate();\r\n    } else {\r\n        keyToDoDecryption = materials.getSymmetricKey();\r\n    }\r\n    try {\r\n        Cipher cipher;\r\n        if (cryptoProvider != null) {\r\n            cipher = Cipher.getInstance(keyToDoDecryption.getAlgorithm(), cryptoProvider);\r\n        } else {\r\n            cipher = Cipher.getInstance(keyToDoDecryption.getAlgorithm());\r\n        }\r\n        cipher.init(Cipher.DECRYPT_MODE, keyToDoDecryption);\r\n        byte[] decryptedSymmetricKeyBytes = cipher.doFinal(encryptedSymmetricKeyBytes);\r\n        return new SecretKeySpec(decryptedSymmetricKeyBytes, JceEncryptionConstants.SYMMETRIC_KEY_ALGORITHM);\r\n    } catch (Exception e) {\r\n        throw new AmazonClientException(\"Unable to decrypt symmetric key from object metadata : \" + e.getMessage(), e);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateApnsChannelResult.getAPNSChannelResponse",
	"Comment": "apple distribution push notification service channel definition.",
	"Method": "APNSChannelResponse getAPNSChannelResponse(){\r\n    return aPNSChannelResponse;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.model.CopyResult.getVersionId",
	"Comment": "returns the version id of the new object. the version id is only set ifversioning has been enabled for the bucket.",
	"Method": "String getVersionId(){\r\n    return versionId;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSMessage.setRawContent",
	"Comment": "the raw json formatted string to be used as the payload. this valueoverrides the message.",
	"Method": "void setRawContent(String rawContent){\r\n    this.rawContent = rawContent;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListMultipartUploadsRequest.withBucketName",
	"Comment": "sets the name of the bucket containing the uploads to list, and returnsthis updated listmultipartuploadsrequest object so that additional methodcalls can be chained together.",
	"Method": "ListMultipartUploadsRequest withBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.AmazonCloudWatchLogsClient.tagLogGroup",
	"Comment": "adds or updates the specified tags for the specified log group.to list the tags for a log group, use listtagsloggroup. to removetags, use untagloggroup.for more information about tags, see tag log groups in amazon cloudwatch logs in the amazon cloudwatchlogs user guide.",
	"Method": "void tagLogGroup(TagLogGroupRequest tagLogGroupRequest){\r\n    ExecutionContext executionContext = createExecutionContext(tagLogGroupRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<TagLogGroupRequest> request = null;\r\n    Response<Void> response = null;\r\n    try {\r\n        awsRequestMetrics.startEvent(Field.RequestMarshallTime);\r\n        try {\r\n            request = new TagLogGroupRequestMarshaller().marshall(tagLogGroupRequest);\r\n            request.setAWSRequestMetrics(awsRequestMetrics);\r\n        } finally {\r\n            awsRequestMetrics.endEvent(Field.RequestMarshallTime);\r\n        }\r\n        JsonResponseHandler<Void> responseHandler = new JsonResponseHandler<Void>(null);\r\n        invoke(request, responseHandler, executionContext);\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.GetSubscriptionAttributesResult.clearAttributesEntries",
	"Comment": "removes all the entries added into attributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetSubscriptionAttributesResult clearAttributesEntries(){\r\n    this.attributes = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CompleteMultipartUploadResult.setVersionId",
	"Comment": "sets the version id of the new object, only present if versioning hasbeen enabled for the bucket.",
	"Method": "void setVersionId(String versionId){\r\n    this.versionId = versionId;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.CreatePlatformApplicationRequest.setAttributes",
	"Comment": "for a list of attributes, see setplatformapplicationattributes",
	"Method": "void setAttributes(java.util.Map<String, String> attributes){\r\n    this.attributes = attributes;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.IdentityNotificationAttributes.withHeadersInBounceNotificationsEnabled",
	"Comment": "describes whether amazon ses includes the original email headers inamazon sns notifications of type bounce. a value oftrue specifies that amazon ses will include headers inbounce notifications, and a value of false specifies thatamazon ses will not include headers in bounce notifications.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "IdentityNotificationAttributes withHeadersInBounceNotificationsEnabled(Boolean headersInBounceNotificationsEnabled){\r\n    this.headersInBounceNotificationsEnabled = headersInBounceNotificationsEnabled;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.PhoneNumberValidateRequest.withNumberValidateRequest",
	"Comment": "phone number information request.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PhoneNumberValidateRequest withNumberValidateRequest(NumberValidateRequest numberValidateRequest){\r\n    this.numberValidateRequest = numberValidateRequest;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.DeleteMessageBatchResult.withSuccessful",
	"Comment": "a list of deletemessagebatchresultentry items.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteMessageBatchResult withSuccessful(DeleteMessageBatchResultEntry successful,DeleteMessageBatchResult withSuccessful,java.util.Collection<DeleteMessageBatchResultEntry> successful){\r\n    setSuccessful(successful);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartListing.setAbortRuleId",
	"Comment": "id of the lifecycle rule that makes a multipart upload eligible for abort operation.",
	"Method": "void setAbortRuleId(String abortRuleId){\r\n    this.abortRuleId = abortRuleId;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetLabelDetectionResult.setVideoMetadata",
	"Comment": "information about a video that amazon rekognition video analyzed.videometadata is returned in every page of paginatedresponses from a amazon rekognition video operation.",
	"Method": "void setVideoMetadata(VideoMetadata videoMetadata){\r\n    this.videoMetadata = videoMetadata;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.internal.CopyCallable.copyInOneChunk",
	"Comment": "performs the copy of the amazon s3 object from source bucket todestination bucket. the amazon s3 object is copied to destination in onesingle request.",
	"Method": "CopyResult copyInOneChunk(){\r\n    CopyObjectResult copyObjectResult = s3.copyObject(copyObjectRequest);\r\n    CopyResult copyResult = new CopyResult();\r\n    copyResult.setSourceBucketName(copyObjectRequest.getSourceBucketName());\r\n    copyResult.setSourceKey(copyObjectRequest.getSourceKey());\r\n    copyResult.setDestinationBucketName(copyObjectRequest.getDestinationBucketName());\r\n    copyResult.setDestinationKey(copyObjectRequest.getDestinationKey());\r\n    copyResult.setETag(copyObjectResult.getETag());\r\n    copyResult.setVersionId(copyObjectResult.getVersionId());\r\n    return copyResult;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSAsyncClient.deleteEndpointAsync",
	"Comment": "deletes the endpoint for a device and mobile app from amazon sns. thisaction is idempotent. for more information, see usingamazon sns mobile push notifications.when you delete an endpoint that is also subscribed to a topic, then youmust also unsubscribe the endpoint from the topic.",
	"Method": "Future<Void> deleteEndpointAsync(DeleteEndpointRequest deleteEndpointRequest,Future<Void> deleteEndpointAsync,DeleteEndpointRequest deleteEndpointRequest,AsyncHandler<DeleteEndpointRequest, Void> asyncHandler){\r\n    return executorService.submit(new Callable<Void>() {\r\n        public Void call() throws Exception {\r\n            Void result = null;\r\n            try {\r\n                deleteEndpoint(deleteEndpointRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(deleteEndpointRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSAsyncClient.deleteEndpointAsync",
	"Comment": "deletes the endpoint for a device and mobile app from amazon sns. thisaction is idempotent. for more information, see usingamazon sns mobile push notifications.when you delete an endpoint that is also subscribed to a topic, then youmust also unsubscribe the endpoint from the topic.",
	"Method": "Future<Void> deleteEndpointAsync(DeleteEndpointRequest deleteEndpointRequest,Future<Void> deleteEndpointAsync,DeleteEndpointRequest deleteEndpointRequest,AsyncHandler<DeleteEndpointRequest, Void> asyncHandler){\r\n    Void result = null;\r\n    try {\r\n        deleteEndpoint(deleteEndpointRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(deleteEndpointRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointResponse.withMetrics",
	"Comment": "custom metrics that your app reports to amazon pinpoint.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointResponse withMetrics(java.util.Map<String, Double> metrics){\r\n    this.metrics = metrics;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetExportJobsRequest.getToken",
	"Comment": "the nexttoken string returned on a previous page that you use to get thenext page of results in a paginated response.",
	"Method": "String getToken(){\r\n    return token;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetCelebrityRecognitionResult.withWarnings",
	"Comment": "sets the value of the warnings property for this object.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetCelebrityRecognitionResult withWarnings(Warning warnings,GetCelebrityRecognitionResult withWarnings,java.util.Collection<Warning> warnings){\r\n    setWarnings(warnings);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteGcmChannelRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteGcmChannelRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.PersistableDownload.isRequesterPays",
	"Comment": "returns true if requesterpays is enabled on the amazon s3 bucket elsefalse.",
	"Method": "boolean isRequesterPays(){\r\n    return isRequesterPays;\r\n}"
}, {
	"Path": "com.amazonaws.services.lexrts.model.PostTextResult.clearsessionAttributesEntries",
	"Comment": "removes all the entries added into sessionattributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PostTextResult clearsessionAttributesEntries(){\r\n    this.sessionAttributes = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetSegmentVersionRequest.withVersion",
	"Comment": "the segment version.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetSegmentVersionRequest withVersion(String version){\r\n    this.version = version;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointRequest.withDemographic",
	"Comment": "demographic attributes for the endpoint.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointRequest withDemographic(EndpointDemographic demographic){\r\n    this.demographic = demographic;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMChannelRequest.getEnabled",
	"Comment": "indicates whether or not the channel is enabled for sending messages.",
	"Method": "Boolean getEnabled(){\r\n    return enabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial.wrap",
	"Comment": "returns a new instance of contentcryptomaterial by wrappingthe input parameters, including the already secured cek. no network callsare involved.",
	"Method": "ContentCryptoMaterial wrap(SecretKey cek,byte[] iv,ContentCryptoScheme contentCryptoScheme,Provider provider,SecuredCEK cekSecured){\r\n    return new ContentCryptoMaterial(cekSecured.getMaterialDescription(), cekSecured.getEncrypted(), cekSecured.getKeyWrapAlgorithm(), contentCryptoScheme.createCipherLite(cek, iv, Cipher.ENCRYPT_MODE, provider));\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.IdentityNotificationAttributes.setHeadersInComplaintNotificationsEnabled",
	"Comment": "describes whether amazon ses includes the original email headers inamazon sns notifications of type complaint. a value oftrue specifies that amazon ses will include headers incomplaint notifications, and a value of false specifies thatamazon ses will not include headers in complaint notifications.",
	"Method": "void setHeadersInComplaintNotificationsEnabled(Boolean headersInComplaintNotificationsEnabled){\r\n    this.headersInComplaintNotificationsEnabled = headersInComplaintNotificationsEnabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.TreatmentResource.withTreatmentDescription",
	"Comment": "a custom description for the treatment.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "TreatmentResource withTreatmentDescription(String treatmentDescription){\r\n    this.treatmentDescription = treatmentDescription;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSAsyncClient.listPlatformApplicationsAsync",
	"Comment": "lists the platform application objects for the supported pushnotification services, such as apns and gcm. the results forlistplatformapplications are paginated and return a limitedlist of applications, up to 100. if additional records are availableafter the first page results, then a nexttoken string will be returned.to receive the next page, you call listplatformapplicationsusing the nexttoken string received from the previous call. when thereare no more records to return, nexttoken will be null. for moreinformation, see usingamazon sns mobile push notifications.",
	"Method": "Future<ListPlatformApplicationsResult> listPlatformApplicationsAsync(ListPlatformApplicationsRequest listPlatformApplicationsRequest,Future<ListPlatformApplicationsResult> listPlatformApplicationsAsync,ListPlatformApplicationsRequest listPlatformApplicationsRequest,AsyncHandler<ListPlatformApplicationsRequest, ListPlatformApplicationsResult> asyncHandler){\r\n    return executorService.submit(new Callable<ListPlatformApplicationsResult>() {\r\n        public ListPlatformApplicationsResult call() throws Exception {\r\n            ListPlatformApplicationsResult result = null;\r\n            try {\r\n                result = listPlatformApplications(listPlatformApplicationsRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(listPlatformApplicationsRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSAsyncClient.listPlatformApplicationsAsync",
	"Comment": "lists the platform application objects for the supported pushnotification services, such as apns and gcm. the results forlistplatformapplications are paginated and return a limitedlist of applications, up to 100. if additional records are availableafter the first page results, then a nexttoken string will be returned.to receive the next page, you call listplatformapplicationsusing the nexttoken string received from the previous call. when thereare no more records to return, nexttoken will be null. for moreinformation, see usingamazon sns mobile push notifications.",
	"Method": "Future<ListPlatformApplicationsResult> listPlatformApplicationsAsync(ListPlatformApplicationsRequest listPlatformApplicationsRequest,Future<ListPlatformApplicationsResult> listPlatformApplicationsAsync,ListPlatformApplicationsRequest listPlatformApplicationsRequest,AsyncHandler<ListPlatformApplicationsRequest, ListPlatformApplicationsResult> asyncHandler){\r\n    ListPlatformApplicationsResult result = null;\r\n    try {\r\n        result = listPlatformApplications(listPlatformApplicationsRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(listPlatformApplicationsRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CreateSegmentRequest.withWriteSegmentRequest",
	"Comment": "segment definition.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreateSegmentRequest withWriteSegmentRequest(WriteSegmentRequest writeSegmentRequest){\r\n    this.writeSegmentRequest = writeSegmentRequest;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.transform.BucketConfigurationXmlFactory.convertToXmlByteArray",
	"Comment": "converts the specified notification configuration into an xml byte array.",
	"Method": "byte[] convertToXmlByteArray(BucketVersioningConfiguration versioningConfiguration,byte[] convertToXmlByteArray,BucketAccelerateConfiguration accelerateConfiguration,byte[] convertToXmlByteArray,BucketLoggingConfiguration loggingConfiguration,byte[] convertToXmlByteArray,BucketNotificationConfiguration notificationConfiguration,byte[] convertToXmlByteArray,BucketReplicationConfiguration replicationConfiguration,byte[] convertToXmlByteArray,BucketWebsiteConfiguration websiteConfiguration,byte[] convertToXmlByteArray,BucketLifecycleConfiguration config,byte[] convertToXmlByteArray,BucketCrossOriginConfiguration config,byte[] convertToXmlByteArray,BucketTaggingConfiguration config,byte[] convertToXmlByteArray,InventoryConfiguration config,byte[] convertToXmlByteArray,AnalyticsConfiguration config,byte[] convertToXmlByteArray,MetricsConfiguration config){\r\n    final XmlWriter xml = new XmlWriter();\r\n    xml.start(\"MetricsConfiguration\", \"xmlns\", Constants.XML_NAMESPACE);\r\n    addParameterIfNotNull(xml, \"Id\", config.getId());\r\n    writeMetricsFilter(xml, config.getFilter());\r\n    xml.end();\r\n    return xml.getBytes();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.WriteCampaignRequest.withLimits",
	"Comment": "the campaign limits settings.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "WriteCampaignRequest withLimits(CampaignLimits limits){\r\n    this.limits = limits;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetContentModerationResult.getStatusMessage",
	"Comment": "if the job fails, statusmessage provides a descriptive errormessage.",
	"Method": "String getStatusMessage(){\r\n    return statusMessage;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.DescribeKeyRequest.withGrantTokens",
	"Comment": "a list of grant tokens.for more information, see grant tokens in the aws key management service developerguide.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DescribeKeyRequest withGrantTokens(String grantTokens,DescribeKeyRequest withGrantTokens,java.util.Collection<String> grantTokens){\r\n    setGrantTokens(grantTokens);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.Schedule.setEndTime",
	"Comment": "the scheduled time that the campaign ends in iso 8601 format.",
	"Method": "void setEndTime(String endTime){\r\n    this.endTime = endTime;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSMessage.withSubstitutions",
	"Comment": "default message substitutions. can be overridden by individual addresssubstitutions.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSMessage withSubstitutions(java.util.Map<String, java.util.List<String>> substitutions){\r\n    this.substitutions = substitutions;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.GetIdentityDkimAttributesResult.withDkimAttributes",
	"Comment": "the dkim attributes for an email address or a domain.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetIdentityDkimAttributesResult withDkimAttributes(java.util.Map<String, IdentityDkimAttributes> dkimAttributes){\r\n    this.dkimAttributes = dkimAttributes;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SMSChannelResponse.withVersion",
	"Comment": "version of channelreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SMSChannelResponse withVersion(Integer version){\r\n    this.version = version;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetImportJobsRequest.withPageSize",
	"Comment": "the number of entries you want on each page in the response.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetImportJobsRequest withPageSize(String pageSize){\r\n    this.pageSize = pageSize;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.internal.S3ProgressPublisher.publishTransferPersistable",
	"Comment": "used to submit a task to publish the availability of a persistabletransfer to the given listener.",
	"Method": "Future<?> publishTransferPersistable(ProgressListener listener,PersistableTransfer persistableTransfer){\r\n    if (persistableTransfer == null || !(listener instanceof S3ProgressListener))\r\n        return null;\r\n    final S3ProgressListener s3listener = (S3ProgressListener) listener;\r\n    return getExecutorService().submit(new Runnable() {\r\n        @Override\r\n        public void run() {\r\n            s3listener.onPersistableTransfer(persistableTransfer);\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.internal.S3ProgressPublisher.publishTransferPersistable",
	"Comment": "used to submit a task to publish the availability of a persistabletransfer to the given listener.",
	"Method": "Future<?> publishTransferPersistable(ProgressListener listener,PersistableTransfer persistableTransfer){\r\n    s3listener.onPersistableTransfer(persistableTransfer);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteEndpointRequest.withEndpointId",
	"Comment": "the unique id of the endpoint.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteEndpointRequest withEndpointId(String endpointId){\r\n    this.endpointId = endpointId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.MessageConfiguration.getBaiduMessage",
	"Comment": "the message that the campaign delivers to baidu channels. overrides thedefault message.",
	"Method": "Message getBaiduMessage(){\r\n    return baiduMessage;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.ListSpeechSynthesisTasksResult.withSynthesisTasks",
	"Comment": "list of synthesistask objects that provides information from thespecified task in the list request, including output format, creationtime, task status, and so on.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListSpeechSynthesisTasksResult withSynthesisTasks(SynthesisTask synthesisTasks,ListSpeechSynthesisTasksResult withSynthesisTasks,java.util.Collection<SynthesisTask> synthesisTasks){\r\n    setSynthesisTasks(synthesisTasks);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ObjectListing.setNextMarker",
	"Comment": "for internal use only. sets the marker to use in the next list objectsrequest in order to see the next page of results for a truncated objectlisting.",
	"Method": "void setNextMarker(String nextMarker){\r\n    this.nextMarker = nextMarker;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CORSRule.getMaxAgeSeconds",
	"Comment": "sets the id of this rule and returns a reference to this object formethod chaining.",
	"Method": "int getMaxAgeSeconds(){\r\n    return maxAgeSeconds;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ActivityResponse.withScheduledStart",
	"Comment": "the scheduled start time for the activity in iso 8601 format.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ActivityResponse withScheduledStart(String scheduledStart){\r\n    this.scheduledStart = scheduledStart;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.TransferManager.getAmazonS3Client",
	"Comment": "returns the underlying amazon s3 client used to make requests to amazons3.",
	"Method": "AmazonS3 getAmazonS3Client(){\r\n    return s3;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.StartSpeechSynthesisTaskRequest.setText",
	"Comment": "the input text to synthesize. if you specify ssml as the texttype, followthe ssml format for the input text.",
	"Method": "void setText(String text){\r\n    this.text = text;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketInventoryConfigurationsRequest.getContinuationToken",
	"Comment": "gets the optional continuation token.continuation token allows a list to becontinued from a specific point. continuationtoken is provided in truncated list results.",
	"Method": "String getContinuationToken(){\r\n    return continuationToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.SubscribeRequest.withTopicArn",
	"Comment": "the arn of the topic you want to subscribe to.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SubscribeRequest withTopicArn(String topicArn){\r\n    this.topicArn = topicArn;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ReceiptAction.withSNSAction",
	"Comment": "publishes the email content within a notification to amazon sns.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ReceiptAction withSNSAction(SNSAction sNSAction){\r\n    this.sNSAction = sNSAction;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SendEmailRequest.withConfigurationSetName",
	"Comment": "the name of the configuration set to use when you send an email usingsendemail.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendEmailRequest withConfigurationSetName(String configurationSetName){\r\n    this.configurationSetName = configurationSetName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceDetail.setSunglasses",
	"Comment": "indicates whether or not the face is wearing sunglasses, and theconfidence level in the determination.",
	"Method": "void setSunglasses(Sunglasses sunglasses){\r\n    this.sunglasses = sunglasses;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.updateTemplateAsync",
	"Comment": "updates an email template. email templates enable you to sendpersonalized email to one or more destinations in a single api operation.for more information, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "Future<UpdateTemplateResult> updateTemplateAsync(UpdateTemplateRequest updateTemplateRequest,Future<UpdateTemplateResult> updateTemplateAsync,UpdateTemplateRequest updateTemplateRequest,AsyncHandler<UpdateTemplateRequest, UpdateTemplateResult> asyncHandler){\r\n    return executorService.submit(new Callable<UpdateTemplateResult>() {\r\n        public UpdateTemplateResult call() throws Exception {\r\n            UpdateTemplateResult result = null;\r\n            try {\r\n                result = updateTemplate(updateTemplateRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(updateTemplateRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.updateTemplateAsync",
	"Comment": "updates an email template. email templates enable you to sendpersonalized email to one or more destinations in a single api operation.for more information, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "Future<UpdateTemplateResult> updateTemplateAsync(UpdateTemplateRequest updateTemplateRequest,Future<UpdateTemplateResult> updateTemplateAsync,UpdateTemplateRequest updateTemplateRequest,AsyncHandler<UpdateTemplateRequest, UpdateTemplateResult> asyncHandler){\r\n    UpdateTemplateResult result = null;\r\n    try {\r\n        result = updateTemplate(updateTemplateRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(updateTemplateRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideoarchivedmedia.AWSKinesisVideoArchivedMediaClient.listFragments",
	"Comment": "returns a list of fragment objects from the specified stream andstart location within the archived data.",
	"Method": "ListFragmentsResult listFragments(ListFragmentsRequest listFragmentsRequest){\r\n    ExecutionContext executionContext = createExecutionContext(listFragmentsRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<ListFragmentsRequest> request = null;\r\n    Response<ListFragmentsResult> response = null;\r\n    try {\r\n        awsRequestMetrics.startEvent(Field.RequestMarshallTime);\r\n        try {\r\n            request = new ListFragmentsRequestMarshaller().marshall(listFragmentsRequest);\r\n            request.setAWSRequestMetrics(awsRequestMetrics);\r\n        } finally {\r\n            awsRequestMetrics.endEvent(Field.RequestMarshallTime);\r\n        }\r\n        Unmarshaller<ListFragmentsResult, JsonUnmarshallerContext> unmarshaller = new ListFragmentsResultJsonUnmarshaller();\r\n        JsonResponseHandler<ListFragmentsResult> responseHandler = new JsonResponseHandler<ListFragmentsResult>(unmarshaller);\r\n        response = invoke(request, responseHandler, executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetFaceSearchResult.withVideoMetadata",
	"Comment": "information about a video that amazon rekognition analyzed.videometadata is returned in every page of paginatedresponses from a amazon rekognition video operation.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetFaceSearchResult withVideoMetadata(VideoMetadata videoMetadata){\r\n    this.videoMetadata = videoMetadata;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.transform.AclXmlFactory.convertToXml",
	"Comment": "returns an xml fragment representing the specified group grantee.",
	"Method": "XmlWriter convertToXml(Grantee grantee,XmlWriter xml,XmlWriter convertToXml,CanonicalGrantee grantee,XmlWriter xml,XmlWriter convertToXml,EmailAddressGrantee grantee,XmlWriter xml,XmlWriter convertToXml,GroupGrantee grantee,XmlWriter xml){\r\n    xml.start(\"Grantee\", new String[] { \"xmlns:xsi\", \"xsi:type\" }, new String[] { \"http://www.w3.org/2001/XMLSchema-instance\", \"Group\" });\r\n    xml.start(\"URI\").value(grantee.getIdentifier()).end();\r\n    xml.end();\r\n    return xml;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetSegmentImportJobsRequest.withPageSize",
	"Comment": "the number of entries you want on each page in the response.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetSegmentImportJobsRequest withPageSize(String pageSize){\r\n    this.pageSize = pageSize;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.RestoreObjectRequest.setExpirationInDays",
	"Comment": "sets the time, in days, between when an object is uploaded to the bucketand when it expires.",
	"Method": "void setExpirationInDays(int expirationInDays){\r\n    this.expirationInDays = expirationInDays;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ListCustomVerificationEmailTemplatesRequest.getNextToken",
	"Comment": "an array the contains the name and creation time stamp for each templatein your amazon ses account.",
	"Method": "String getNextToken(){\r\n    return nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SendDataPoint.withTimestamp",
	"Comment": "time of the data point.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendDataPoint withTimestamp(java.util.Date timestamp){\r\n    this.timestamp = timestamp;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ExportJobsResponse.withNextToken",
	"Comment": "the string that you use in a subsequent request to get the next page ofresults in a paginated response.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ExportJobsResponse withNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.Schedule.setStartTime",
	"Comment": "the scheduled time that the campaign begins in iso 8601 format.",
	"Method": "void setStartTime(String startTime){\r\n    this.startTime = startTime;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.SearchFacesResult.getFaceMatches",
	"Comment": "an array of faces that matched the input face, along with the confidencein the match.",
	"Method": "java.util.List<FaceMatch> getFaceMatches(){\r\n    return faceMatches;\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.TranscriptionJob.withCreationTime",
	"Comment": "a timestamp that shows when the job was created.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "TranscriptionJob withCreationTime(java.util.Date creationTime){\r\n    this.creationTime = creationTime;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.internal.TransferManagerUtils.calculateOptimalPartSize",
	"Comment": "returns the optimal part size, in bytes, for each individual part uploadin a multipart upload.",
	"Method": "long calculateOptimalPartSize(PutObjectRequest putObjectRequest,TransferManagerConfiguration configuration){\r\n    double contentLength = TransferManagerUtils.getContentLength(putObjectRequest);\r\n    double optimalPartSize = contentLength / MAXIMUM_UPLOAD_PARTS;\r\n    optimalPartSize = Math.ceil(optimalPartSize);\r\n    return (long) Math.max(optimalPartSize, configuration.getMinimumUploadPartSize());\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.SetPlatformApplicationAttributesRequest.getPlatformApplicationArn",
	"Comment": "platformapplicationarn for setplatformapplicationattributes action.",
	"Method": "String getPlatformApplicationArn(){\r\n    return platformApplicationArn;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.pinpoint.analytics.AnalyticsClient.recordEvent",
	"Comment": "record the specified event to the local filestore please note if theamount of data stored events takes up exceeds 5mib further recordingswill be dropped",
	"Method": "void recordEvent(AnalyticsEvent event){\r\n    if (event == null) {\r\n        log.info(\"The provided event was null.\");\r\n        return;\r\n    }\r\n    final AnalyticsEvent recordEvent = AnalyticsEvent.createFromEvent(context, sessionId, System.currentTimeMillis(), event);\r\n    eventRecorder.recordEvent(recordEvent);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketCrossOriginConfigurationRequest.withCrossOriginConfiguration",
	"Comment": "sets the new cross origin configuration for the specified bucket andreturns this object, enabling additional method calls to be chainedtogether.",
	"Method": "SetBucketCrossOriginConfigurationRequest withCrossOriginConfiguration(BucketCrossOriginConfiguration crossOriginConfiguration){\r\n    setCrossOriginConfiguration(crossOriginConfiguration);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.getSourceKey",
	"Comment": "gets the source bucket key under which the source object to be copied isstored.",
	"Method": "String getSourceKey(){\r\n    return sourceKey;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.GetParametersForImportResult.withParametersValidTo",
	"Comment": "the time at which the import token and public key are no longer valid.after this time, you cannot use them to make an importkeymaterialrequest and you must send another getparametersforimportrequest to get new ones.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetParametersForImportResult withParametersValidTo(java.util.Date parametersValidTo){\r\n    this.parametersValidTo = parametersValidTo;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Section.withStartTimestamp",
	"Comment": "sets the value of the starttimestamp property for this object.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Section withStartTimestamp(Long startTimestamp){\r\n    this.startTimestamp = startTimestamp;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.AddPermissionRequest.setTopicArn",
	"Comment": "the arn of the topic whose access control policy you wish to modify.",
	"Method": "void setTopicArn(String topicArn){\r\n    this.topicArn = topicArn;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideoarchivedmedia.model.HLSTimestampRange.withStartTimestamp",
	"Comment": "the start of the time stamp range for the requested media.if the hlstimestamprange value is specified, thestarttimestamp value is required.this value is inclusive. fragments that start before thestartingtimestamp and continue past it are included in thesession.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "HLSTimestampRange withStartTimestamp(java.util.Date startTimestamp){\r\n    this.startTimestamp = startTimestamp;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.createReceiptRuleAsync",
	"Comment": "creates a receipt rule.for information about setting up receipt rules, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "Future<CreateReceiptRuleResult> createReceiptRuleAsync(CreateReceiptRuleRequest createReceiptRuleRequest,Future<CreateReceiptRuleResult> createReceiptRuleAsync,CreateReceiptRuleRequest createReceiptRuleRequest,AsyncHandler<CreateReceiptRuleRequest, CreateReceiptRuleResult> asyncHandler){\r\n    return executorService.submit(new Callable<CreateReceiptRuleResult>() {\r\n        public CreateReceiptRuleResult call() throws Exception {\r\n            CreateReceiptRuleResult result = null;\r\n            try {\r\n                result = createReceiptRule(createReceiptRuleRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(createReceiptRuleRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.createReceiptRuleAsync",
	"Comment": "creates a receipt rule.for information about setting up receipt rules, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "Future<CreateReceiptRuleResult> createReceiptRuleAsync(CreateReceiptRuleRequest createReceiptRuleRequest,Future<CreateReceiptRuleResult> createReceiptRuleAsync,CreateReceiptRuleRequest createReceiptRuleRequest,AsyncHandler<CreateReceiptRuleRequest, CreateReceiptRuleResult> asyncHandler){\r\n    CreateReceiptRuleResult result = null;\r\n    try {\r\n        result = createReceiptRule(createReceiptRuleRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(createReceiptRuleRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClient.createTemplate",
	"Comment": "creates an email template. email templates enable you to sendpersonalized email to one or more destinations in a single api operation.for more information, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "CreateTemplateResult createTemplate(CreateTemplateRequest createTemplateRequest){\r\n    ExecutionContext executionContext = createExecutionContext(createTemplateRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<CreateTemplateRequest> request = null;\r\n    Response<CreateTemplateResult> response = null;\r\n    try {\r\n        request = new CreateTemplateRequestMarshaller().marshall(createTemplateRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        response = invoke(request, new CreateTemplateResultStaxUnmarshaller(), executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SendTemplatedEmailRequest.setConfigurationSetName",
	"Comment": "the name of the configuration set to use when you send an email usingsendtemplatedemail.",
	"Method": "void setConfigurationSetName(String configurationSetName){\r\n    this.configurationSetName = configurationSetName;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListSubscriptionsByTopicResult.withSubscriptions",
	"Comment": "a list of subscriptions.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListSubscriptionsByTopicResult withSubscriptions(Subscription subscriptions,ListSubscriptionsByTopicResult withSubscriptions,java.util.Collection<Subscription> subscriptions){\r\n    setSubscriptions(subscriptions);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListPlatformApplicationsResult.getNextToken",
	"Comment": "nexttoken string is returned when calling listplatformapplications actionif additional records are available after the first page results.",
	"Method": "String getNextToken(){\r\n    return nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceDetail.withSunglasses",
	"Comment": "indicates whether or not the face is wearing sunglasses, and theconfidence level in the determination.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "FaceDetail withSunglasses(Sunglasses sunglasses){\r\n    this.sunglasses = sunglasses;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.Template.withTemplateName",
	"Comment": "the name of the template. you will refer to this name when you send emailusing the sendtemplatedemail orsendbulktemplatedemail operations.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Template withTemplateName(String templateName){\r\n    this.templateName = templateName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.amazonmobileanalytics.monetization.MonetizationEventBuilder.setProductId",
	"Comment": "sets the product id to use when building the monetization event",
	"Method": "void setProductId(String productId){\r\n    this.productId = productId;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteBucketPolicyRequest.getBucketName",
	"Comment": "returns the name of the amazon s3 bucket whose policy is being deleted.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListVersionsRequest.getBucketName",
	"Comment": "gets the name of the amazon s3 bucket whose versions are to be listed.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.NumberValidateResponse.getPhoneType",
	"Comment": "a description of the phone type. possible values are mobile, landline,voip, invalid, prepaid, and other.",
	"Method": "String getPhoneType(){\r\n    return phoneType;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.ListLexiconsResult.withLexicons",
	"Comment": "a list of lexicon names and attributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListLexiconsResult withLexicons(LexiconDescription lexicons,ListLexiconsResult withLexicons,java.util.Collection<LexiconDescription> lexicons){\r\n    setLexicons(lexicons);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyPartRequest.withSourceKey",
	"Comment": "sets the source bucket key under which the source object to be copied isstored.",
	"Method": "CopyPartRequest withSourceKey(String sourceKey){\r\n    this.sourceKey = sourceKey;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ListAliasesResult.withTruncated",
	"Comment": "a flag that indicates whether there are more items in the list. when thisvalue is true, the list in this response is truncated. to get more items,pass the value of the nextmarker element in this response tothe marker parameter in a subsequent request.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListAliasesResult withTruncated(Boolean truncated){\r\n    this.truncated = truncated;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.internal.DownloadImpl.getObjectMetadata",
	"Comment": "returns the objectmetadata for the object being downloaded.",
	"Method": "ObjectMetadata getObjectMetadata(){\r\n    return s3Object.getObjectMetadata();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ExportJobsResponse.setNextToken",
	"Comment": "the string that you use in a subsequent request to get the next page ofresults in a paginated response.",
	"Method": "void setNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetSegmentExportJobsRequest.withPageSize",
	"Comment": "the number of entries you want on each page in the response.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetSegmentExportJobsRequest withPageSize(String pageSize){\r\n    this.pageSize = pageSize;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.Message.withMessageAttributes",
	"Comment": "each message attribute consists of a name, type, and value. for moreinformation, see message attribute items in the amazon sqs developer guide.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Message withMessageAttributes(java.util.Map<String, MessageAttributeValue> messageAttributes){\r\n    this.messageAttributes = messageAttributes;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetLabelDetectionResult.setLabels",
	"Comment": "an array of labels detected in the video. each element contains thedetected label and the time, in milliseconds from the start of the video,that the label was detected.",
	"Method": "void setLabels(java.util.Collection<LabelDetection> labels){\r\n    if (labels == null) {\r\n        this.labels = null;\r\n        return;\r\n    }\r\n    this.labels = new java.util.ArrayList<LabelDetection>(labels);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectRequest.setGeneralProgressListener",
	"Comment": "sets the optional progress listener for receiving updates about objectdownload status.",
	"Method": "void setGeneralProgressListener(ProgressListener generalProgressListener){\r\n    this.generalProgressListener = generalProgressListener;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ObjectListing.getNextMarker",
	"Comment": "gets the marker to use in the next listobjects request inorder to see the next page of results. if an object listing is nottruncated, this method will return null. for truncatedrequests, this value is equal to the greatest lexicographical value ofthe object keys and common prefixes included in this listing.",
	"Method": "String getNextMarker(){\r\n    return nextMarker;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceDetail.getEmotions",
	"Comment": "the emotions detected on the face, and the confidence level in thedetermination. for example, happy, sad, and angry.",
	"Method": "java.util.List<Emotion> getEmotions(){\r\n    return emotions;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointanalytics.model.Event.clearattributesEntries",
	"Comment": "removes all the entries added into attributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Event clearattributesEntries(){\r\n    this.attributes = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.Prediction.clearpredictedScoresEntries",
	"Comment": "removes all the entries added into predictedscores.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Prediction clearpredictedScoresEntries(){\r\n    this.predictedScores = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.ListDomainsRequest.getNextToken",
	"Comment": "a string informing amazon simpledb where to start the next list ofdomain names.",
	"Method": "String getNextToken(){\r\n    return nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceDetail.getSunglasses",
	"Comment": "indicates whether or not the face is wearing sunglasses, and theconfidence level in the determination.",
	"Method": "Sunglasses getSunglasses(){\r\n    return sunglasses;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SetIdentityMailFromDomainRequest.setIdentity",
	"Comment": "the verified identity for which you want to enable or disable thespecified custom mail from domain.",
	"Method": "void setIdentity(String identity){\r\n    this.identity = identity;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.CreatePlatformApplicationRequest.clearAttributesEntries",
	"Comment": "removes all the entries added into attributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreatePlatformApplicationRequest clearAttributesEntries(){\r\n    this.attributes = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.BaiduChannelResponse.withVersion",
	"Comment": "version of channelreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "BaiduChannelResponse withVersion(Integer version){\r\n    this.version = version;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartListing.setTruncated",
	"Comment": "sets whether or not this listing is truncated, and additional requestsneed to be made to get more results.",
	"Method": "void setTruncated(boolean isTruncated){\r\n    this.isTruncated = isTruncated;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartPersonTrackingRequest.getVideo",
	"Comment": "the video in which you want to detect people. the video must be stored inan amazon s3 bucket.",
	"Method": "Video getVideo(){\r\n    return video;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectRequest.getProgressListener",
	"Comment": "returns the optional progress listener for receiving updates about objectdownload status.",
	"Method": "com.amazonaws.services.s3.model.ProgressListener getProgressListener(){\r\n    if (generalProgressListener instanceof LegacyS3ProgressListener) {\r\n        return ((LegacyS3ProgressListener) generalProgressListener).unwrap();\r\n    } else {\r\n        return null;\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetLabelDetectionResult.getLabels",
	"Comment": "an array of labels detected in the video. each element contains thedetected label and the time, in milliseconds from the start of the video,that the label was detected.",
	"Method": "java.util.List<LabelDetection> getLabels(){\r\n    return labels;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.deleteReceiptRuleSetAsync",
	"Comment": "deletes the specified receipt rule set and all of the receipt rules itcontains.the currently active rule set cannot be deleted.for information about managing receipt rule sets, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "Future<DeleteReceiptRuleSetResult> deleteReceiptRuleSetAsync(DeleteReceiptRuleSetRequest deleteReceiptRuleSetRequest,Future<DeleteReceiptRuleSetResult> deleteReceiptRuleSetAsync,DeleteReceiptRuleSetRequest deleteReceiptRuleSetRequest,AsyncHandler<DeleteReceiptRuleSetRequest, DeleteReceiptRuleSetResult> asyncHandler){\r\n    return executorService.submit(new Callable<DeleteReceiptRuleSetResult>() {\r\n        public DeleteReceiptRuleSetResult call() throws Exception {\r\n            DeleteReceiptRuleSetResult result = null;\r\n            try {\r\n                result = deleteReceiptRuleSet(deleteReceiptRuleSetRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(deleteReceiptRuleSetRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.deleteReceiptRuleSetAsync",
	"Comment": "deletes the specified receipt rule set and all of the receipt rules itcontains.the currently active rule set cannot be deleted.for information about managing receipt rule sets, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "Future<DeleteReceiptRuleSetResult> deleteReceiptRuleSetAsync(DeleteReceiptRuleSetRequest deleteReceiptRuleSetRequest,Future<DeleteReceiptRuleSetResult> deleteReceiptRuleSetAsync,DeleteReceiptRuleSetRequest deleteReceiptRuleSetRequest,AsyncHandler<DeleteReceiptRuleSetRequest, DeleteReceiptRuleSetResult> asyncHandler){\r\n    DeleteReceiptRuleSetResult result = null;\r\n    try {\r\n        result = deleteReceiptRuleSet(deleteReceiptRuleSetRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(deleteReceiptRuleSetRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.StreamDescription.getEnhancedMonitoring",
	"Comment": "represents the current enhanced monitoring settings of the stream.",
	"Method": "java.util.List<EnhancedMetrics> getEnhancedMonitoring(){\r\n    return enhancedMonitoring;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.DeletePlatformApplicationRequest.setPlatformApplicationArn",
	"Comment": "platformapplicationarn of platform application object to delete.",
	"Method": "void setPlatformApplicationArn(String platformApplicationArn){\r\n    this.platformApplicationArn = platformApplicationArn;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.NumberValidateResponse.getZipCode",
	"Comment": "the postal code for the location where the phone number was originallyregistered.",
	"Method": "String getZipCode(){\r\n    return zipCode;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.DescribeStreamProcessorResult.getInput",
	"Comment": "kinesis video stream that provides the source streaming video.",
	"Method": "StreamProcessorInput getInput(){\r\n    return input;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetCelebrityRecognitionResult.setVideoMetadata",
	"Comment": "information about a video that amazon rekognition video analyzed.videometadata is returned in every page of paginatedresponses from a amazon rekognition video operation.",
	"Method": "void setVideoMetadata(VideoMetadata videoMetadata){\r\n    this.videoMetadata = videoMetadata;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.DeleteDomainRequest.withDomainName",
	"Comment": "the name of the domain to delete.returns a reference to this object so that method calls can be chained together.",
	"Method": "DeleteDomainRequest withDomainName(String domainName){\r\n    this.domainName = domainName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ObjectListing.setBucketName",
	"Comment": "for internal use only. sets the name of the amazon s3 bucket containingthe objects listed in this s3objectlisting.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateApnsChannelRequest.withAPNSChannelRequest",
	"Comment": "apple push notification service channel definition.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateApnsChannelRequest withAPNSChannelRequest(APNSChannelRequest aPNSChannelRequest){\r\n    this.aPNSChannelRequest = aPNSChannelRequest;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.model.ListTagsForStreamResult.clearTagsEntries",
	"Comment": "removes all the entries added into tags.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListTagsForStreamResult clearTagsEntries(){\r\n    this.tags = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GeneratePresignedUrlRequest.setVersionId",
	"Comment": "sets the version id of the object, only present if versioning hasbeen enabled for the bucket.",
	"Method": "void setVersionId(String versionId){\r\n    this.versionId = versionId;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketMetricsConfigurationsResult.withNextContinuationToken",
	"Comment": "sets the optional nextcontinuationtoken.nextcontinuationtoken is sent when istruncated is true meaning there aremore keys in the bucket that can be listed. the next list requests to amazons3 can be continued by providing this nextcontinuationtoken.",
	"Method": "ListBucketMetricsConfigurationsResult withNextContinuationToken(String nextContinuationToken){\r\n    setNextContinuationToken(nextContinuationToken);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.MessageAttributeValue.getStringValue",
	"Comment": "strings are unicode with utf8 binary encoding. for a list of code values,see ascii printable characters.",
	"Method": "String getStringValue(){\r\n    return stringValue;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.DeleteResourcePolicyRequest.withPolicyName",
	"Comment": "the name of the policy to be revoked. this parameter is required.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteResourcePolicyRequest withPolicyName(String policyName){\r\n    this.policyName = policyName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketWebsiteConfigurationRequest.setConfiguration",
	"Comment": "sets the website configuration to send as part of this request.",
	"Method": "void setConfiguration(BucketWebsiteConfiguration configuration){\r\n    this.configuration = configuration;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetFaceDetectionResult.withErrorCode",
	"Comment": "sets the value of the errorcode property for this object.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetFaceDetectionResult withErrorCode(String errorCode){\r\n    this.errorCode = errorCode;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceDetail.setAgeRange",
	"Comment": "the estimated age range, in years, for the face. low represents thelowest estimated age and high represents the highest estimated age.",
	"Method": "void setAgeRange(AgeRange ageRange){\r\n    this.ageRange = ageRange;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.S3VersionSummary.setVersionId",
	"Comment": "sets the version id which uniquely identifies this version of an object.",
	"Method": "void setVersionId(String id){\r\n    this.versionId = id;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.DomainMetadataResult.setAttributeValuesSizeBytes",
	"Comment": "the total size of all attribute values in the domain, in bytes.",
	"Method": "void setAttributeValuesSizeBytes(Long attributeValuesSizeBytes){\r\n    this.attributeValuesSizeBytes = attributeValuesSizeBytes;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.NumberValidateResponse.withZipCode",
	"Comment": "the postal code for the location where the phone number was originallyregistered.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "NumberValidateResponse withZipCode(String zipCode){\r\n    this.zipCode = zipCode;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.internal.UploadCallable.uploadInParts",
	"Comment": "uploads the request in multiple chunks, submitting each upload chunk taskto the thread pool and recording its corresponding future object, as wellas the multipart upload id.",
	"Method": "UploadResult uploadInParts(){\r\n    boolean isUsingEncryption = s3 instanceof AmazonS3EncryptionClient;\r\n    long optimalPartSize = getOptimalPartSize(isUsingEncryption);\r\n    if (multipartUploadId == null) {\r\n        multipartUploadId = initiateMultipartUpload(putObjectRequest, isUsingEncryption);\r\n    }\r\n    try {\r\n        UploadPartRequestFactory requestFactory = new UploadPartRequestFactory(putObjectRequest, multipartUploadId, optimalPartSize);\r\n        if (TransferManagerUtils.isUploadParallelizable(putObjectRequest, isUsingEncryption)) {\r\n            captureUploadStateIfPossible();\r\n            uploadPartsInParallel(requestFactory, multipartUploadId);\r\n            return null;\r\n        } else {\r\n            return uploadPartsInSeries(requestFactory);\r\n        }\r\n    } catch (Exception e) {\r\n        fireProgressEvent(ProgressEvent.FAILED_EVENT_CODE);\r\n        performAbortMultipartUpload();\r\n        throw e;\r\n    } finally {\r\n        if (putObjectRequest.getInputStream() != null) {\r\n            try {\r\n                putObjectRequest.getInputStream().close();\r\n            } catch (Exception e) {\r\n                log.warn(\"Unable to cleanly close input stream: \" + e.getMessage(), e);\r\n            }\r\n        }\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Eyeglasses.setValue",
	"Comment": "boolean value that indicates whether the face is wearing eye glasses ornot.",
	"Method": "void setValue(Boolean value){\r\n    this.value = value;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.CreateStreamProcessorRequest.withSettings",
	"Comment": "face recognition input parameters to be used by the stream processor.includes the collection to use for face recognition and the faceattributes to detect.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreateStreamProcessorRequest withSettings(StreamProcessorSettings settings){\r\n    this.settings = settings;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.TestRenderTemplateResult.setRenderedTemplate",
	"Comment": "the complete mime message rendered by applying the data in thetemplatedata parameter to the template specified in the templatenameparameter.",
	"Method": "void setRenderedTemplate(String renderedTemplate){\r\n    this.renderedTemplate = renderedTemplate;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignsResponse.withItem",
	"Comment": "a list of campaigns.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CampaignsResponse withItem(CampaignResponse item,CampaignsResponse withItem,java.util.Collection<CampaignResponse> item){\r\n    setItem(item);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DirectMessageConfiguration.getDefaultPushNotificationMessage",
	"Comment": "the default push notification message for all push channels.",
	"Method": "DefaultPushNotificationMessage getDefaultPushNotificationMessage(){\r\n    return defaultPushNotificationMessage;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.ChangeMessageVisibilityBatchRequestEntry.withId",
	"Comment": "an identifier for this particular receipt handle. this is used tocommunicate the result. note that the ids of a batch requestneed to be unique within the request.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ChangeMessageVisibilityBatchRequestEntry withId(String id){\r\n    this.id = id;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.pinpoint.targeting.notification.NotificationClient.handleFCMCampaignPush",
	"Comment": "handles pinpoint fcm push messages by posting a local notification whenthe app is in the background, or sending a local broadcast if the app isin the foreground. also on api level 19 devices and above, if localnotifications have been disabled and the app is in the background, alocal broadcast is sent.",
	"Method": "CampaignPushResult handleFCMCampaignPush(String from,Map<String, String> data){\r\n    NotificationDetails.NotificationDetailsBuilder notificationDetailsBuilder = NotificationDetails.builder().from(from).mapData(data).intentAction(FCM_INTENT_ACTION);\r\n    return notificationClientBase.handleCampaignPush(notificationDetailsBuilder.build());\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.pinpoint.analytics.monetization.GooglePlayMonetizationEventBuilder.withProductId",
	"Comment": "sets the product identifier field of the item being purchased.",
	"Method": "GooglePlayMonetizationEventBuilder withProductId(String productId){\r\n    setProductId(productId);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.BaiduChannelRequest.withSecretKey",
	"Comment": "platform credential secret key from baidu.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "BaiduChannelRequest withSecretKey(String secretKey){\r\n    this.secretKey = secretKey;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.BaiduMessage.setSilentPush",
	"Comment": "indicates if the message should display on the users device. silentpushes can be used for remote configuration and phone home use cases.",
	"Method": "void setSilentPush(Boolean silentPush){\r\n    this.silentPush = silentPush;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.BounceAction.withSender",
	"Comment": "the email address of the sender of the bounced email. this is the addressfrom which the bounce message will be sent.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "BounceAction withSender(String sender){\r\n    this.sender = sender;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.RejectedLogEventsInfo.withTooNewLogEventStartIndex",
	"Comment": "the log events that are too new.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "RejectedLogEventsInfo withTooNewLogEventStartIndex(Integer tooNewLogEventStartIndex){\r\n    this.tooNewLogEventStartIndex = tooNewLogEventStartIndex;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyPartRequest.setUnmodifiedSinceConstraint",
	"Comment": "sets the optional unmodified constraint that restricts this request toexecuting only if the source object has not been modified afterthe specified date.the unmodified constraint may be used with matching etag constraints, butnot with any other type of constraint.note that amazon s3 will ignore any dates occurring in the future.",
	"Method": "void setUnmodifiedSinceConstraint(Date date){\r\n    this.unmodifiedSinceConstraint = date;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ChannelsResponse.setChannels",
	"Comment": "a map of channels, with the channeltype as the key and the channel as thevalue.",
	"Method": "void setChannels(java.util.Map<String, ChannelResponse> channels){\r\n    this.channels = channels;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GCMMessage.getSmallImageIconUrl",
	"Comment": "the url that points to an image used as the small icon for thenotification which will be used to represent the notification in thestatus bar and content view",
	"Method": "String getSmallImageIconUrl(){\r\n    return smallImageIconUrl;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.UpdateConfigurationSetSendingEnabledRequest.isEnabled",
	"Comment": "describes whether email sending is enabled or disabled for theconfiguration set.",
	"Method": "Boolean isEnabled(){\r\n    return enabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.BoundingBox.withHeight",
	"Comment": "height of the bounding box as a ratio of the overall image height.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "BoundingBox withHeight(Float height){\r\n    this.height = height;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentDemographics.withChannel",
	"Comment": "the channel criteria for the segment.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SegmentDemographics withChannel(SetDimension channel){\r\n    this.channel = channel;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignLimits.getTotal",
	"Comment": "the maximum total number of messages that the campaign can send.",
	"Method": "Integer getTotal(){\r\n    return total;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideoarchivedmedia.model.HLSFragmentSelector.getTimestampRange",
	"Comment": "the start and end of the time stamp range for the requested media.this value should not be present if playbacktype islive.",
	"Method": "HLSTimestampRange getTimestampRange(){\r\n    return timestampRange;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListEndpointsByPlatformApplicationResult.getNextToken",
	"Comment": "nexttoken string is returned when callinglistendpointsbyplatformapplication action if additional records areavailable after the first page results.",
	"Method": "String getNextToken(){\r\n    return nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.InitiateMultipartUploadRequest.setAccessControlList",
	"Comment": "sets the optional access control list for the new upload. if specified,cannedacl will be ignored.",
	"Method": "void setAccessControlList(AccessControlList accessControlList){\r\n    this.accessControlList = accessControlList;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.createReceiptRuleSetAsync",
	"Comment": "creates an empty receipt rule set.for information about setting up receipt rule sets, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "Future<CreateReceiptRuleSetResult> createReceiptRuleSetAsync(CreateReceiptRuleSetRequest createReceiptRuleSetRequest,Future<CreateReceiptRuleSetResult> createReceiptRuleSetAsync,CreateReceiptRuleSetRequest createReceiptRuleSetRequest,AsyncHandler<CreateReceiptRuleSetRequest, CreateReceiptRuleSetResult> asyncHandler){\r\n    return executorService.submit(new Callable<CreateReceiptRuleSetResult>() {\r\n        public CreateReceiptRuleSetResult call() throws Exception {\r\n            CreateReceiptRuleSetResult result = null;\r\n            try {\r\n                result = createReceiptRuleSet(createReceiptRuleSetRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(createReceiptRuleSetRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.createReceiptRuleSetAsync",
	"Comment": "creates an empty receipt rule set.for information about setting up receipt rule sets, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "Future<CreateReceiptRuleSetResult> createReceiptRuleSetAsync(CreateReceiptRuleSetRequest createReceiptRuleSetRequest,Future<CreateReceiptRuleSetResult> createReceiptRuleSetAsync,CreateReceiptRuleSetRequest createReceiptRuleSetRequest,AsyncHandler<CreateReceiptRuleSetRequest, CreateReceiptRuleSetResult> asyncHandler){\r\n    CreateReceiptRuleSetResult result = null;\r\n    try {\r\n        result = createReceiptRuleSet(createReceiptRuleSetRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(createReceiptRuleSetRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.AmazonCloudWatchLogsClient.deleteResourcePolicy",
	"Comment": "deletes a resource policy from this account. this revokes the access ofthe identities in that policy to put log events to this account.",
	"Method": "void deleteResourcePolicy(DeleteResourcePolicyRequest deleteResourcePolicyRequest){\r\n    ExecutionContext executionContext = createExecutionContext(deleteResourcePolicyRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<DeleteResourcePolicyRequest> request = null;\r\n    Response<Void> response = null;\r\n    try {\r\n        awsRequestMetrics.startEvent(Field.RequestMarshallTime);\r\n        try {\r\n            request = new DeleteResourcePolicyRequestMarshaller().marshall(deleteResourcePolicyRequest);\r\n            request.setAWSRequestMetrics(awsRequestMetrics);\r\n        } finally {\r\n            awsRequestMetrics.endEvent(Field.RequestMarshallTime);\r\n        }\r\n        JsonResponseHandler<Void> responseHandler = new JsonResponseHandler<Void>(null);\r\n        invoke(request, responseHandler, executionContext);\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.DeleteMessageBatchRequestEntry.withId",
	"Comment": "an identifier for this particular receipt handle. this is used tocommunicate the result. note that the ids of a batch requestneed to be unique within the request.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteMessageBatchRequestEntry withId(String id){\r\n    this.id = id;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.PutAttributesRequest.withAttributes",
	"Comment": "the list of attributes.returns a reference to this object so that method calls can be chained together.",
	"Method": "PutAttributesRequest withAttributes(ReplaceableAttribute attributes,PutAttributesRequest withAttributes,java.util.Collection<ReplaceableAttribute> attributes){\r\n    if (attributes == null) {\r\n        this.attributes = null;\r\n    } else {\r\n        com.amazonaws.internal.ListWithAutoConstructFlag<ReplaceableAttribute> attributesCopy = new com.amazonaws.internal.ListWithAutoConstructFlag<ReplaceableAttribute>(attributes.size());\r\n        attributesCopy.addAll(attributes);\r\n        this.attributes = attributesCopy;\r\n    }\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobRequest.getSegmentId",
	"Comment": "the id of the segment to update if the import job is meant to update anexisting segment.",
	"Method": "String getSegmentId(){\r\n    return segmentId;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.UpdateCustomVerificationEmailTemplateRequest.setSuccessRedirectionURL",
	"Comment": "the url that the recipient of the verification email is sent to if his orher address is successfully verified.",
	"Method": "void setSuccessRedirectionURL(String successRedirectionURL){\r\n    this.successRedirectionURL = successRedirectionURL;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.GetLexiconResult.setLexicon",
	"Comment": "lexicon object that provides name and the string content of the lexicon.",
	"Method": "void setLexicon(Lexicon lexicon){\r\n    this.lexicon = lexicon;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ListTemplatesRequest.getNextToken",
	"Comment": "a token returned from a previous call to listtemplates toindicate the position in the list of email templates.",
	"Method": "String getNextToken(){\r\n    return nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.mobileanalytics.model.Event.withSession",
	"Comment": "the session the event occured within.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Event withSession(Session session){\r\n    this.session = session;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.DeletableItem.getAttributes",
	"Comment": "returns the value of the attributes property for this object.",
	"Method": "java.util.List<Attribute> getAttributes(){\r\n    if (attributes == null) {\r\n        attributes = new com.amazonaws.internal.ListWithAutoConstructFlag<Attribute>();\r\n        attributes.setAutoConstruct(true);\r\n    }\r\n    return attributes;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectAclRequest.setRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "void setRequesterPays(boolean isRequesterPays){\r\n    this.isRequesterPays = isRequesterPays;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketLifecycleConfiguration.withRules",
	"Comment": "sets the rules that comprise this configuration and returns a referenceto this object for easy method chaining.",
	"Method": "BucketLifecycleConfiguration withRules(List<Rule> rules,BucketLifecycleConfiguration withRules,Rule rules){\r\n    setRules(Arrays.asList(rules));\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SetIdentityMailFromDomainRequest.withIdentity",
	"Comment": "the verified identity for which you want to enable or disable thespecified custom mail from domain.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SetIdentityMailFromDomainRequest withIdentity(String identity){\r\n    this.identity = identity;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartFaceSearchRequest.setVideo",
	"Comment": "the video you want to search. the video must be stored in an amazon s3bucket.",
	"Method": "void setVideo(Video video){\r\n    this.video = video;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.SetPlatformApplicationAttributesRequest.clearAttributesEntries",
	"Comment": "removes all the entries added into attributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SetPlatformApplicationAttributesRequest clearAttributesEntries(){\r\n    this.attributes = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketCrossOriginConfigurationRequest.setCrossOriginConfiguration",
	"Comment": "sets the new cross origin configuration for the specified bucket.",
	"Method": "void setCrossOriginConfiguration(BucketCrossOriginConfiguration crossOriginConfiguration){\r\n    this.crossOriginConfiguration = crossOriginConfiguration;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.VersionListing.setNextKeyMarker",
	"Comment": "for internal use only. sets the key marker to use in the nextlistversions request in order to see the next page of results for atruncated version listing.",
	"Method": "void setNextKeyMarker(String marker){\r\n    this.nextKeyMarker = marker;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.ListStreamsResult.withHasMoreStreams",
	"Comment": "if set to true, there are more streams available to list.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListStreamsResult withHasMoreStreams(Boolean hasMoreStreams){\r\n    this.hasMoreStreams = hasMoreStreams;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentDemographics.withPlatform",
	"Comment": "the device platform criteria for the segment.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SegmentDemographics withPlatform(SetDimension platform){\r\n    this.platform = platform;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectRequest.withRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket. it returns thisupdated getobjectrequest object so that additional method calls can bechained together.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "GetObjectRequest withRequesterPays(boolean isRequesterPays){\r\n    setRequesterPays(isRequesterPays);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.PutMetricFilterRequest.getMetricTransformations",
	"Comment": "a collection of information that defines how metric data gets emitted.",
	"Method": "java.util.List<MetricTransformation> getMetricTransformations(){\r\n    return metricTransformations;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSClient.setPlatformApplicationAttributes",
	"Comment": "sets the attributes of the platform application object for the supportedpush notification services, such as apns and gcm. for more information,see usingamazon sns mobile push notifications. for information on configuringattributes for message delivery status, see usingamazon sns application attributes for message delivery status.",
	"Method": "void setPlatformApplicationAttributes(SetPlatformApplicationAttributesRequest setPlatformApplicationAttributesRequest){\r\n    ExecutionContext executionContext = createExecutionContext(setPlatformApplicationAttributesRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<SetPlatformApplicationAttributesRequest> request = null;\r\n    Response<Void> response = null;\r\n    try {\r\n        request = new SetPlatformApplicationAttributesRequestMarshaller().marshall(setPlatformApplicationAttributesRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        invoke(request, null, executionContext);\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateThingRequest.withExpectedVersion",
	"Comment": "the expected version of the thing record in the registry. if the versionof the record in the registry does not match the expected versionspecified in the request, the updatething request isrejected with a versionconflictexception.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateThingRequest withExpectedVersion(Long expectedVersion){\r\n    this.expectedVersion = expectedVersion;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.GetCustomVerificationEmailTemplateRequest.setTemplateName",
	"Comment": "the name of the custom verification email template that you want toretrieve.",
	"Method": "void setTemplateName(String templateName){\r\n    this.templateName = templateName;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.util.ClientContext.toBase64String",
	"Comment": "serializes the client context into a base64 encoded json string.",
	"Method": "String toBase64String(){\r\n    if (base64String == null) {\r\n        synchronized (this) {\r\n            if (base64String == null) {\r\n                base64String = Base64.encodeAsString(json.toString().getBytes(StringUtils.UTF8));\r\n            }\r\n        }\r\n    }\r\n    return base64String;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.GetCustomVerificationEmailTemplateResult.getSuccessRedirectionURL",
	"Comment": "the url that the recipient of the verification email is sent to if his orher address is successfully verified.",
	"Method": "String getSuccessRedirectionURL(){\r\n    return successRedirectionURL;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ReceiptRule.isEnabled",
	"Comment": "if true, the receipt rule is active. the default value isfalse.",
	"Method": "Boolean isEnabled(){\r\n    return enabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.withBucketName",
	"Comment": "sets the name of the bucket containing the existing, initiated multipartupload, with which this new part will be associated, and returns thisupdated object so that additional method calls can be chained together.",
	"Method": "UploadPartRequest withBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.PutResourcePolicyRequest.withPolicyName",
	"Comment": "name of the new policy. this parameter is required.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PutResourcePolicyRequest withPolicyName(String policyName){\r\n    this.policyName = policyName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.kinesisvideo.internal.producer.KinesisVideoMetrics.getTotalTransferRate",
	"Comment": "returns the total transfer rate in bytes per second for all the streams",
	"Method": "long getTotalTransferRate(){\r\n    return totalTransferRate;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetSegmentExportJobsRequest.getToken",
	"Comment": "the nexttoken string returned on a previous page that you use to get thenext page of results in a paginated response.",
	"Method": "String getToken(){\r\n    return token;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMMessage.withSmallImageIconUrl",
	"Comment": "the url that points to an image used as the small icon for thenotification which will be used to represent the notification in thestatus bar and content viewreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ADMMessage withSmallImageIconUrl(String smallImageIconUrl){\r\n    this.smallImageIconUrl = smallImageIconUrl;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointResponse.getRequestId",
	"Comment": "the unique id for the most recent request to update the endpoint.",
	"Method": "String getRequestId(){\r\n    return requestId;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartListing.setMaxParts",
	"Comment": "sets the optional max parts value specified in the original request tolimit how many parts are listed.",
	"Method": "void setMaxParts(int maxParts){\r\n    this.maxParts = maxParts;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.AlreadyExistsException.getName",
	"Comment": "indicates that a resource could not be created because the resource namealready exists.",
	"Method": "String getName(){\r\n    return name;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetSegmentsRequest.setToken",
	"Comment": "the nexttoken string returned on a previous page that you use to get thenext page of results in a paginated response.",
	"Method": "void setToken(String token){\r\n    this.token = token;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GCMMessage.clearSubstitutionsEntries",
	"Comment": "removes all the entries added into substitutions.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GCMMessage clearSubstitutionsEntries(){\r\n    this.substitutions = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.GetSpeechSynthesisTaskResult.setSynthesisTask",
	"Comment": "synthesistask object that provides information from the requested task,including output format, creation time, task status, and so on.",
	"Method": "void setSynthesisTask(SynthesisTask synthesisTask){\r\n    this.synthesisTask = synthesisTask;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.AttributeDimension.withValues",
	"Comment": "the criteria values for the segment dimension. endpoints with matchingattribute values are included or excluded from the segment, depending onthe setting for type.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "AttributeDimension withValues(String values,AttributeDimension withValues,java.util.Collection<String> values){\r\n    setValues(values);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetAppsResult.withApplicationsResponse",
	"Comment": "get applications result.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetAppsResult withApplicationsResponse(ApplicationsResponse applicationsResponse){\r\n    this.applicationsResponse = applicationsResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.BulkEmailDestinationStatus.getMessageId",
	"Comment": "the unique message identifier returned from thesendbulktemplatedemail operation.",
	"Method": "String getMessageId(){\r\n    return messageId;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ReputationOptions.isReputationMetricsEnabled",
	"Comment": "describes whether or not amazon ses publishes reputation metrics for theconfiguration set, such as bounce and complaint rates, to amazoncloudwatch.if the value is true, reputation metrics are published. ifthe value is false, reputation metrics are not published.the default value is false.",
	"Method": "Boolean isReputationMetricsEnabled(){\r\n    return reputationMetricsEnabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.ListTagsForStreamResult.withTags",
	"Comment": "a list of tags associated with streamname, starting with thefirst tag after exclusivestarttagkey and up to the specifiedlimit.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListTagsForStreamResult withTags(Tag tags,ListTagsForStreamResult withTags,java.util.Collection<Tag> tags){\r\n    setTags(tags);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.MessageAttributeValue.setBinaryValue",
	"Comment": "binary type attributes can store any binary data, for example, compresseddata, encrypted data, or images.",
	"Method": "void setBinaryValue(java.nio.ByteBuffer binaryValue){\r\n    this.binaryValue = binaryValue;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transferutility.TransferUtility.getTransfersWithType",
	"Comment": "gets a list of transferobserver instances which are observing recordswith the given type.",
	"Method": "List<TransferObserver> getTransfersWithType(TransferType type){\r\n    final List<TransferObserver> transferObservers = new ArrayList<TransferObserver>();\r\n    Cursor c = null;\r\n    try {\r\n        c = dbUtil.queryAllTransfersWithType(type);\r\n        while (c.moveToNext()) {\r\n            final int id = c.getInt(c.getColumnIndexOrThrow(TransferTable.COLUMN_ID));\r\n            final TransferObserver to = new TransferObserver(id, dbUtil);\r\n            to.updateFromDB(c);\r\n            transferObservers.add(to);\r\n        }\r\n    } finally {\r\n        if (c != null) {\r\n            c.close();\r\n        }\r\n    }\r\n    return transferObservers;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.InitiateMultipartUploadResult.getBucketName",
	"Comment": "returns the name of the bucket in which the new multipart upload wasinitiated.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.AmazonTranscribeClient.getTranscriptionJob",
	"Comment": "returns information about a transcription job. to see the status of thejob, check the transcriptionjobstatus field. if the statusis completed, the job is finished and you can find theresults at the location specified in thetranscriptionfileuri field.",
	"Method": "GetTranscriptionJobResult getTranscriptionJob(GetTranscriptionJobRequest getTranscriptionJobRequest){\r\n    ExecutionContext executionContext = createExecutionContext(getTranscriptionJobRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<GetTranscriptionJobRequest> request = null;\r\n    Response<GetTranscriptionJobResult> response = null;\r\n    try {\r\n        awsRequestMetrics.startEvent(Field.RequestMarshallTime);\r\n        try {\r\n            request = new GetTranscriptionJobRequestMarshaller().marshall(getTranscriptionJobRequest);\r\n            request.setAWSRequestMetrics(awsRequestMetrics);\r\n        } finally {\r\n            awsRequestMetrics.endEvent(Field.RequestMarshallTime);\r\n        }\r\n        Unmarshaller<GetTranscriptionJobResult, JsonUnmarshallerContext> unmarshaller = new GetTranscriptionJobResultJsonUnmarshaller();\r\n        JsonResponseHandler<GetTranscriptionJobResult> responseHandler = new JsonResponseHandler<GetTranscriptionJobResult>(unmarshaller);\r\n        response = invoke(request, responseHandler, executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SendTemplatedEmailResult.getMessageId",
	"Comment": "the unique message identifier returned from thesendtemplatedemail action.",
	"Method": "String getMessageId(){\r\n    return messageId;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSVoipSandboxChannelResponse.withCreationDate",
	"Comment": "when was this segment createdreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSVoipSandboxChannelResponse withCreationDate(String creationDate){\r\n    this.creationDate = creationDate;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetBucketInventoryConfigurationRequest.getBucketName",
	"Comment": "returns the name of the bucket containing the inventory configuration to retrieve.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.lexrts.model.PostContentResult.withContentType",
	"Comment": "content type as specified in the accept http header in therequest.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PostContentResult withContentType(String contentType){\r\n    this.contentType = contentType;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.BaiduMessage.clearSubstitutionsEntries",
	"Comment": "removes all the entries added into substitutions.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "BaiduMessage clearSubstitutionsEntries(){\r\n    this.substitutions = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListTopicsRequest.withNextToken",
	"Comment": "token returned by the previous listtopics request.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListTopicsRequest withNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SMSChannelResponse.withEnabled",
	"Comment": "if the channel is enabled for sending messages.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SMSChannelResponse withEnabled(Boolean enabled){\r\n    this.enabled = enabled;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.getUnmodifiedSinceConstraint",
	"Comment": "gets the optional unmodified constraint that restricts this request toexecuting only if the source object has not been modified afterthe specified date.the unmodified since constraint may be used with matching etagconstraints, but not with any other type of constraint.",
	"Method": "Date getUnmodifiedSinceConstraint(){\r\n    return unmodifiedSinceConstraint;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.PersonMatch.withPerson",
	"Comment": "information about the matched person.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PersonMatch withPerson(PersonDetail person){\r\n    this.person = person;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateApnsVoipSandboxChannelRequest.setAPNSVoipSandboxChannelRequest",
	"Comment": "apple voip developer push notification service channel definition.",
	"Method": "void setAPNSVoipSandboxChannelRequest(APNSVoipSandboxChannelRequest aPNSVoipSandboxChannelRequest){\r\n    this.aPNSVoipSandboxChannelRequest = aPNSVoipSandboxChannelRequest;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketLifecycleConfigurationRequest.withLifecycleConfiguration",
	"Comment": "sets the new lifecycle configuration for the specified bucket and returnsthis object, enabling additional method calls to be chained together.",
	"Method": "SetBucketLifecycleConfigurationRequest withLifecycleConfiguration(BucketLifecycleConfiguration lifecycleConfiguration){\r\n    setLifecycleConfiguration(lifecycleConfiguration);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.BatchPutAttributesRequest.setDomainName",
	"Comment": "the name of the domain in which the attributes are being stored.",
	"Method": "void setDomainName(String domainName){\r\n    this.domainName = domainName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.withProgressListener",
	"Comment": "sets the optional progress listener for receiving updates about objectupload status, and returns this updated object so that additional methodcalls can be chained together.",
	"Method": "UploadPartRequest withProgressListener(com.amazonaws.services.s3.model.ProgressListener progressListener){\r\n    setProgressListener(progressListener);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.RepeatableFileInputStream.reset",
	"Comment": "resets the input stream to the last mark point, or the beginning of thestream if there is no mark point, by creating a new fileinputstream basedon the underlying file.",
	"Method": "void reset(){\r\n    this.fis.close();\r\n    abortIfNeeded();\r\n    this.fis = new FileInputStream(file);\r\n    long skipped = 0;\r\n    long toSkip = markPoint;\r\n    while (toSkip > 0) {\r\n        skipped = this.fis.skip(toSkip);\r\n        toSkip -= skipped;\r\n    }\r\n    if (log.isDebugEnabled()) {\r\n        log.debug(\"Reset to mark point \" + markPoint + \" after returning \" + bytesReadPastMarkPoint + \" bytes\");\r\n    }\r\n    this.bytesReadPastMarkPoint = 0;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.SynthesizeSpeechRequest.withText",
	"Comment": "input text to synthesize. if you specify ssml as thetexttype, follow the ssml format for the input text.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SynthesizeSpeechRequest withText(String text){\r\n    this.text = text;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.sendBounceAsync",
	"Comment": "generates and sends a bounce message to the sender of an email youreceived through amazon ses. you can only use this api on an email up to24 hours after you receive it.you cannot use this api to send generic bounces for mail that was notreceived by amazon ses.for information about receiving email through amazon ses, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "Future<SendBounceResult> sendBounceAsync(SendBounceRequest sendBounceRequest,Future<SendBounceResult> sendBounceAsync,SendBounceRequest sendBounceRequest,AsyncHandler<SendBounceRequest, SendBounceResult> asyncHandler){\r\n    return executorService.submit(new Callable<SendBounceResult>() {\r\n        public SendBounceResult call() throws Exception {\r\n            SendBounceResult result = null;\r\n            try {\r\n                result = sendBounce(sendBounceRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(sendBounceRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.sendBounceAsync",
	"Comment": "generates and sends a bounce message to the sender of an email youreceived through amazon ses. you can only use this api on an email up to24 hours after you receive it.you cannot use this api to send generic bounces for mail that was notreceived by amazon ses.for information about receiving email through amazon ses, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "Future<SendBounceResult> sendBounceAsync(SendBounceRequest sendBounceRequest,Future<SendBounceResult> sendBounceAsync,SendBounceRequest sendBounceRequest,AsyncHandler<SendBounceRequest, SendBounceResult> asyncHandler){\r\n    SendBounceResult result = null;\r\n    try {\r\n        result = sendBounce(sendBounceRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(sendBounceRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.AmazonS3Exception.getAdditionalDetails",
	"Comment": "returns any additional information retrieved in the error response.",
	"Method": "Map<String, String> getAdditionalDetails(){\r\n    return additionalDetails;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSSandboxChannelResponse.withIsArchived",
	"Comment": "is this channel archivedreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSSandboxChannelResponse withIsArchived(Boolean isArchived){\r\n    this.isArchived = isArchived;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSMessage.isSilentPush",
	"Comment": "indicates if the message should display on the users device. silentpushes can be used for remote configuration and phone home use cases.",
	"Method": "Boolean isSilentPush(){\r\n    return silentPush;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketPolicy.setPolicyText",
	"Comment": "sets the raw policy json text. a bucket will have no policy text unlessthe policy text is explicitly provided through this method.",
	"Method": "void setPolicyText(String policyText){\r\n    this.policyText = policyText;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DeleteCustomVerificationEmailTemplateRequest.getTemplateName",
	"Comment": "the name of the custom verification email template that you want todelete.",
	"Method": "String getTemplateName(){\r\n    return templateName;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.PersonDetection.withTimestamp",
	"Comment": "the time, in milliseconds from the start of the video, that the personwas tracked.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PersonDetection withTimestamp(Long timestamp){\r\n    this.timestamp = timestamp;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.IdentityNotificationAttributes.getHeadersInComplaintNotificationsEnabled",
	"Comment": "describes whether amazon ses includes the original email headers inamazon sns notifications of type complaint. a value oftrue specifies that amazon ses will include headers incomplaint notifications, and a value of false specifies thatamazon ses will not include headers in complaint notifications.",
	"Method": "Boolean getHeadersInComplaintNotificationsEnabled(){\r\n    return headersInComplaintNotificationsEnabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CustomVerificationEmailTemplate.getFailureRedirectionURL",
	"Comment": "the url that the recipient of the verification email is sent to if his orher address is not successfully verified.",
	"Method": "String getFailureRedirectionURL(){\r\n    return failureRedirectionURL;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CustomVerificationEmailTemplate.getSuccessRedirectionURL",
	"Comment": "the url that the recipient of the verification email is sent to if his orher address is successfully verified.",
	"Method": "String getSuccessRedirectionURL(){\r\n    return successRedirectionURL;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketVersioningConfiguration.getStatus",
	"Comment": "returns the current status of versioning for this bucket versioningconfiguration object, indicating if versioning is enabled or not for abucket.",
	"Method": "String getStatus(){\r\n    return status;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMMessage.withSilentPush",
	"Comment": "indicates if the message should display on the users device. silentpushes can be used for remote configuration and phone home use cases.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ADMMessage withSilentPush(Boolean silentPush){\r\n    this.silentPush = silentPush;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.BaiduChannelResponse.withLastModifiedDate",
	"Comment": "last date this was updatedreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "BaiduChannelResponse withLastModifiedDate(String lastModifiedDate){\r\n    this.lastModifiedDate = lastModifiedDate;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CreateConfigurationSetTrackingOptionsRequest.withConfigurationSetName",
	"Comment": "the name of the configuration set that the tracking options should beassociated with.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreateConfigurationSetTrackingOptionsRequest withConfigurationSetName(String configurationSetName){\r\n    this.configurationSetName = configurationSetName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteObjectsRequest.withKeys",
	"Comment": "convenience method to specify a set of keys without versions.",
	"Method": "DeleteObjectsRequest withKeys(List<KeyVersion> keys,DeleteObjectsRequest withKeys,String keys){\r\n    final List<KeyVersion> keyVersions = new ArrayList<KeyVersion>(keys.length);\r\n    for (final String key : keys) {\r\n        keyVersions.add(new KeyVersion(key));\r\n    }\r\n    setKeys(keyVersions);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ConfirmSubscriptionResult.withSubscriptionArn",
	"Comment": "the arn of the created subscription.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ConfirmSubscriptionResult withSubscriptionArn(String subscriptionArn){\r\n    this.subscriptionArn = subscriptionArn;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketInventoryConfigurationsResult.getNextContinuationToken",
	"Comment": "gets the optional nextcontinuationtoken.nextcontinuationtoken is sent when istruncated is true meaning there aremore keys in the bucket that can be listed. the next list requests to amazons3 can be continued by providing this nextcontinuationtoken.",
	"Method": "String getNextContinuationToken(){\r\n    return nextContinuationToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.AddressConfiguration.clearSubstitutionsEntries",
	"Comment": "removes all the entries added into substitutions.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "AddressConfiguration clearSubstitutionsEntries(){\r\n    this.substitutions = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ExportJobResource.withSegmentVersion",
	"Comment": "the version of the segment to export if specified.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ExportJobResource withSegmentVersion(Integer segmentVersion){\r\n    this.segmentVersion = segmentVersion;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.PutEventsResult.withResults",
	"Comment": "events submission response.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PutEventsResult withResults(java.util.Map<String, ItemResponse> results){\r\n    this.results = results;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.DescribeVoicesRequest.setNextToken",
	"Comment": "an opaque pagination token returned from the previousdescribevoices operation. if present, this indicates whereto continue the listing.",
	"Method": "void setNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.Prediction.withPredictedScores",
	"Comment": "provides the raw classification score corresponding to each label.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Prediction withPredictedScores(java.util.Map<String, Float> predictedScores){\r\n    this.predictedScores = predictedScores;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.WriteCampaignRequest.withHoldoutPercent",
	"Comment": "the allocated percentage of end users who will not receive messages fromthis campaign.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "WriteCampaignRequest withHoldoutPercent(Integer holdoutPercent){\r\n    this.holdoutPercent = holdoutPercent;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CreateReceiptFilterRequest.withFilter",
	"Comment": "a data structure that describes the ip address filter to create, whichconsists of a name, an ip address range, and whether to allow or blockmail from it.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreateReceiptFilterRequest withFilter(ReceiptFilter filter){\r\n    this.filter = filter;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ExportJobResponse.withTotalProcessed",
	"Comment": "the number of endpoints that were processed by the job.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ExportJobResponse withTotalProcessed(Integer totalProcessed){\r\n    this.totalProcessed = totalProcessed;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketLoggingConfiguration.setDestinationBucketName",
	"Comment": "sets the destination bucket name for this logging configuration.",
	"Method": "void setDestinationBucketName(String destinationBucketName){\r\n    this.destinationBucketName = destinationBucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.NumberValidateResponse.getCountry",
	"Comment": "the country or region where the phone number was originally registered.",
	"Method": "String getCountry(){\r\n    return country;\r\n}"
}, {
	"Path": "com.amazonaws.auth.AwsChunkedEncodingInputStream.reset",
	"Comment": "reset the stream, either by resetting the wrapped stream or using thebuffer created by this class.",
	"Method": "void reset(){\r\n    abortIfNeeded();\r\n    currentChunkIterator = null;\r\n    priorChunkSignature = headerSignature;\r\n    if (is.markSupported()) {\r\n        if (log.isDebugEnabled()) {\r\n            log.debug(\"AwsChunkedEncodingInputStream reset \" + \"(will reset the wrapped stream because it is mark-supported).\");\r\n        }\r\n        is.reset();\r\n    } else {\r\n        if (log.isDebugEnabled()) {\r\n            log.debug(\"AwsChunkedEncodingInputStream reset \" + \"(will use the buffer of the decoded stream).\");\r\n        }\r\n        if (null == decodedStreamBuffer) {\r\n            throw new IOException(\"Cannot reset the stream because the mark is not set.\");\r\n        }\r\n        decodedStreamBuffer.startReadBuffer();\r\n    }\r\n    currentChunkIterator = null;\r\n    isAtStart = true;\r\n    isTerminating = false;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SendCustomVerificationEmailRequest.setTemplateName",
	"Comment": "the name of the custom verification email template to use when sendingthe verification email.",
	"Method": "void setTemplateName(String templateName){\r\n    this.templateName = templateName;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.IdentityMailFromDomainAttributes.withMailFromDomain",
	"Comment": "the custom mail from domain that the identity is configured to use.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "IdentityMailFromDomainAttributes withMailFromDomain(String mailFromDomain){\r\n    this.mailFromDomain = mailFromDomain;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.transform.BucketLifecycleSaxUnmarshallerTest.unknownStorageClassInResponse_DoesNotFailToUnmarshall",
	"Comment": "unmarshalling responses should be future proof for enums like storageclass as the service canreturn new enums at any time. see tt0059898483 for details.",
	"Method": "void unknownStorageClassInResponse_DoesNotFailToUnmarshall(){\r\n    Rule rule = getRule(parseLifecycleConfiguration(UNKNOWN_STORAGE_CLASS_RESPONSE), 0);\r\n    assertEquals(FUTURE_STORAGE_CLASS, rule.getTransition().getStorageClassAsString());\r\n    assertEquals(FUTURE_STORAGE_CLASS, rule.getNoncurrentVersionTransition().getStorageClassAsString());\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceDetail.setPose",
	"Comment": "indicates the pose of the face as determined by its pitch, roll, and yaw.default attribute.",
	"Method": "void setPose(Pose pose){\r\n    this.pose = pose;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMChannelResponse.withLastModifiedDate",
	"Comment": "the date and time when this channel was last modified.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ADMChannelResponse withLastModifiedDate(String lastModifiedDate){\r\n    this.lastModifiedDate = lastModifiedDate;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.BaiduChannelResponse.withLastModifiedBy",
	"Comment": "who made the last changereturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "BaiduChannelResponse withLastModifiedBy(String lastModifiedBy){\r\n    this.lastModifiedBy = lastModifiedBy;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideoarchivedmedia.model.Fragment.withFragmentSizeInBytes",
	"Comment": "the total fragment size, including information about the fragment andcontained media data.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Fragment withFragmentSizeInBytes(Long fragmentSizeInBytes){\r\n    this.fragmentSizeInBytes = fragmentSizeInBytes;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobResponse.setFailures",
	"Comment": "provides up to 100 of the first failed entries for the job, if any exist.",
	"Method": "void setFailures(java.util.Collection<String> failures){\r\n    if (failures == null) {\r\n        this.failures = null;\r\n        return;\r\n    }\r\n    this.failures = new java.util.ArrayList<String>(failures);\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ReceiptRule.withScanEnabled",
	"Comment": "if true, then messages that this receipt rule applies to arescanned for spam and viruses. the default value is false.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ReceiptRule withScanEnabled(Boolean scanEnabled){\r\n    this.scanEnabled = scanEnabled;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentDimensions.withMetrics",
	"Comment": "custom segment metrics.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SegmentDimensions withMetrics(java.util.Map<String, MetricDimension> metrics){\r\n    this.metrics = metrics;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetSegmentRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetSegmentRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.Item.withAlternateNameEncoding",
	"Comment": "returns a reference to this object so that method calls can be chained together.",
	"Method": "Item withAlternateNameEncoding(String alternateNameEncoding){\r\n    this.alternateNameEncoding = alternateNameEncoding;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSVoipSandboxChannelResponse.withHasCredential",
	"Comment": "not used. retained for backwards compatibility.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSVoipSandboxChannelResponse withHasCredential(Boolean hasCredential){\r\n    this.hasCredential = hasCredential;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.MetricDimension.withValue",
	"Comment": "value to be compared.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "MetricDimension withValue(Double value){\r\n    this.value = value;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.GetIdentityPoliciesRequest.withPolicyNames",
	"Comment": "a list of the names of policies to be retrieved. you can retrieve amaximum of 20 policies at a time. if you do not know the names of thepolicies that are attached to the identity, you can uselistidentitypolicies.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetIdentityPoliciesRequest withPolicyNames(String policyNames,GetIdentityPoliciesRequest withPolicyNames,java.util.Collection<String> policyNames){\r\n    setPolicyNames(policyNames);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.DeleteMessageBatchRequestEntry.withReceiptHandle",
	"Comment": "a receipt handle.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteMessageBatchRequestEntry withReceiptHandle(String receiptHandle){\r\n    this.receiptHandle = receiptHandle;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobResource.getSegmentId",
	"Comment": "the id of the segment to update if the import job is meant to update anexisting segment.",
	"Method": "String getSegmentId(){\r\n    return segmentId;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetSegmentVersionRequest.withSegmentId",
	"Comment": "the unique id of the segment.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetSegmentVersionRequest withSegmentId(String segmentId){\r\n    this.segmentId = segmentId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DeleteCustomVerificationEmailTemplateRequest.withTemplateName",
	"Comment": "the name of the custom verification email template that you want todelete.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteCustomVerificationEmailTemplateRequest withTemplateName(String templateName){\r\n    this.templateName = templateName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartContentModerationRequest.setVideo",
	"Comment": "the video in which you want to moderate content. the video must be storedin an amazon s3 bucket.",
	"Method": "void setVideo(Video video){\r\n    this.video = video;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SetIdentityHeadersInNotificationsEnabledRequest.withEnabled",
	"Comment": "sets whether amazon ses includes the original email headers in amazon snsnotifications of the specified notification type. a value oftrue specifies that amazon ses will include headers innotifications, and a value of false specifies that amazonses will not include headers in notifications.this value can only be set when notificationtype is alreadyset to use a particular amazon sns topic.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SetIdentityHeadersInNotificationsEnabledRequest withEnabled(Boolean enabled){\r\n    this.enabled = enabled;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.lex.interactionkit.InteractionClient.carryOnWithMic",
	"Comment": "starts listening for the user to speak, through the microphones. the voice interaction clientdetects the start and end of speech.",
	"Method": "void carryOnWithMic(Map<String, String> sessionAttributes,ResponseType mode){\r\n    checkBusyState();\r\n    final InteractionClient client = this;\r\n    new Thread(new Runnable() {\r\n        @Override\r\n        public void run() {\r\n            final Handler handler = new Handler(context.getMainLooper());\r\n            Runnable returnCallBack;\r\n            try {\r\n                if (AudioEncoding.LPCM.equals(interactionConfig.getAudioEncoding())) {\r\n                    audioEncoder = new BufferedAudioEncoder(new L16PcmEncoder());\r\n                } else {\r\n                    audioEncoder = new BufferedAudioEncoder(new OpusEncoder());\r\n                }\r\n                audioTimeouts = new AudioTimeouts(interactionConfig.getNoSpeechTimeoutInterval(), interactionConfig.getMaxSpeechTimeoutInterval());\r\n                vadConfig = new DnnVADConfig(interactionConfig.getLrtThreshold(), interactionConfig.getStartPointingThreshold(), interactionConfig.getEndPointingThreshold());\r\n                lexAudioRecorder = new LexAudioRecorderBuilder(context).audioEncoder(audioEncoder).audioTimeouts(audioTimeouts).dnnVADConfig(vadConfig).build();\r\n                final int maxTotalAudioLengthInMills = audioTimeouts.getNoSpeechTimeout() + audioTimeouts.getMaxSpeechTimeout();\r\n                final int pipeSize = AudioRecorder.DEFAULT_SAMPLE_RATE * (int) TimeUnit.MILLISECONDS.toSeconds(maxTotalAudioLengthInMills) * (SAMPLE_SIZE / Byte.SIZE);\r\n                final InputStream audioInStream = new BufferedInputStream(lexAudioRecorder.getConsumerStream(), pipeSize);\r\n                final PostContentRequest request = CreateLexServiceRequest.generatePostContentRequest(sessionAttributes, interactionConfig, credentialsProvider, mode, audioInStream, audioEncoder.getMediaType().toString());\r\n                startListening(handler, microphoneListener, lexAudioRecorder, request, client, mode);\r\n            } catch (final Exception e) {\r\n                returnCallBack = new Runnable() {\r\n                    @Override\r\n                    public void run() {\r\n                        interactionListener.onInteractionError(null, e);\r\n                    }\r\n                };\r\n                handler.post(returnCallBack);\r\n            } finally {\r\n                setBusyState(NOT_BUSY);\r\n            }\r\n        }\r\n    }).start();\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.lex.interactionkit.InteractionClient.carryOnWithMic",
	"Comment": "starts listening for the user to speak, through the microphones. the voice interaction clientdetects the start and end of speech.",
	"Method": "void carryOnWithMic(Map<String, String> sessionAttributes,ResponseType mode){\r\n    final Handler handler = new Handler(context.getMainLooper());\r\n    Runnable returnCallBack;\r\n    try {\r\n        if (AudioEncoding.LPCM.equals(interactionConfig.getAudioEncoding())) {\r\n            audioEncoder = new BufferedAudioEncoder(new L16PcmEncoder());\r\n        } else {\r\n            audioEncoder = new BufferedAudioEncoder(new OpusEncoder());\r\n        }\r\n        audioTimeouts = new AudioTimeouts(interactionConfig.getNoSpeechTimeoutInterval(), interactionConfig.getMaxSpeechTimeoutInterval());\r\n        vadConfig = new DnnVADConfig(interactionConfig.getLrtThreshold(), interactionConfig.getStartPointingThreshold(), interactionConfig.getEndPointingThreshold());\r\n        lexAudioRecorder = new LexAudioRecorderBuilder(context).audioEncoder(audioEncoder).audioTimeouts(audioTimeouts).dnnVADConfig(vadConfig).build();\r\n        final int maxTotalAudioLengthInMills = audioTimeouts.getNoSpeechTimeout() + audioTimeouts.getMaxSpeechTimeout();\r\n        final int pipeSize = AudioRecorder.DEFAULT_SAMPLE_RATE * (int) TimeUnit.MILLISECONDS.toSeconds(maxTotalAudioLengthInMills) * (SAMPLE_SIZE / Byte.SIZE);\r\n        final InputStream audioInStream = new BufferedInputStream(lexAudioRecorder.getConsumerStream(), pipeSize);\r\n        final PostContentRequest request = CreateLexServiceRequest.generatePostContentRequest(sessionAttributes, interactionConfig, credentialsProvider, mode, audioInStream, audioEncoder.getMediaType().toString());\r\n        startListening(handler, microphoneListener, lexAudioRecorder, request, client, mode);\r\n    } catch (final Exception e) {\r\n        returnCallBack = new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                interactionListener.onInteractionError(null, e);\r\n            }\r\n        };\r\n        handler.post(returnCallBack);\r\n    } finally {\r\n        setBusyState(NOT_BUSY);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.lex.interactionkit.InteractionClient.carryOnWithMic",
	"Comment": "starts listening for the user to speak, through the microphones. the voice interaction clientdetects the start and end of speech.",
	"Method": "void carryOnWithMic(Map<String, String> sessionAttributes,ResponseType mode){\r\n    interactionListener.onInteractionError(null, e);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ObjectListing.setPrefix",
	"Comment": "for internal use only. sets the prefix parameter originally used torequest this object listing.",
	"Method": "void setPrefix(String prefix){\r\n    this.prefix = prefix;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyPartRequest.getDestinationKey",
	"Comment": "gets the destination bucket key under which the new, copied object willbe stored.",
	"Method": "String getDestinationKey(){\r\n    return destinationKey;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartListing.getAbortRuleId",
	"Comment": "id of the lifecycle rule that makes a multipart upload eligible for abort operation.",
	"Method": "String getAbortRuleId(){\r\n    return abortRuleId;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SMSChannelResponse.getCreationDate",
	"Comment": "the date that the settings were last updated in iso 8601 format.",
	"Method": "String getCreationDate(){\r\n    return creationDate;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.deleteTemplateAsync",
	"Comment": "deletes an email template.you can execute this operation no more than once per second.",
	"Method": "Future<DeleteTemplateResult> deleteTemplateAsync(DeleteTemplateRequest deleteTemplateRequest,Future<DeleteTemplateResult> deleteTemplateAsync,DeleteTemplateRequest deleteTemplateRequest,AsyncHandler<DeleteTemplateRequest, DeleteTemplateResult> asyncHandler){\r\n    return executorService.submit(new Callable<DeleteTemplateResult>() {\r\n        public DeleteTemplateResult call() throws Exception {\r\n            DeleteTemplateResult result = null;\r\n            try {\r\n                result = deleteTemplate(deleteTemplateRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(deleteTemplateRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.deleteTemplateAsync",
	"Comment": "deletes an email template.you can execute this operation no more than once per second.",
	"Method": "Future<DeleteTemplateResult> deleteTemplateAsync(DeleteTemplateRequest deleteTemplateRequest,Future<DeleteTemplateResult> deleteTemplateAsync,DeleteTemplateRequest deleteTemplateRequest,AsyncHandler<DeleteTemplateRequest, DeleteTemplateResult> asyncHandler){\r\n    DeleteTemplateResult result = null;\r\n    try {\r\n        result = deleteTemplate(deleteTemplateRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(deleteTemplateRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.StreamDescriptionSummary.setEnhancedMonitoring",
	"Comment": "represents the current enhanced monitoring settings of the stream.",
	"Method": "void setEnhancedMonitoring(java.util.Collection<EnhancedMetrics> enhancedMonitoring){\r\n    if (enhancedMonitoring == null) {\r\n        this.enhancedMonitoring = null;\r\n        return;\r\n    }\r\n    this.enhancedMonitoring = new java.util.ArrayList<EnhancedMetrics>(enhancedMonitoring);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ExportJobsResponse.getNextToken",
	"Comment": "the string that you use in a subsequent request to get the next page ofresults in a paginated response.",
	"Method": "String getNextToken(){\r\n    return nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.ChangeMessageVisibilityBatchRequest.setEntries",
	"Comment": "a list of receipt handles of the messages for which the visibilitytimeout must be changed.",
	"Method": "void setEntries(java.util.Collection<ChangeMessageVisibilityBatchRequestEntry> entries){\r\n    if (entries == null) {\r\n        this.entries = null;\r\n        return;\r\n    }\r\n    this.entries = new java.util.ArrayList<ChangeMessageVisibilityBatchRequestEntry>(entries);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetObjectAclRequest.getAcl",
	"Comment": "returns the custom acl to be applied to the specified object when thisrequest is executed. a request can use either a custom acl or a cannedacl, but not both.",
	"Method": "AccessControlList getAcl(){\r\n    return acl;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.UpdateCondition.withName",
	"Comment": "the name of the attribute involved in the condition.returns a reference to this object so that method calls can be chained together.",
	"Method": "UpdateCondition withName(String name){\r\n    this.name = name;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Smile.isValue",
	"Comment": "boolean value that indicates whether the face is smiling or not.",
	"Method": "Boolean isValue(){\r\n    return value;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.WriteApplicationSettingsRequest.setLimits",
	"Comment": "the default campaign limits for the app. these limits apply to eachcampaign for the app, unless the campaign overrides the default withlimits of its own.",
	"Method": "void setLimits(CampaignLimits limits){\r\n    this.limits = limits;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSAsyncClient.getEndpointAttributesAsync",
	"Comment": "retrieves the endpoint attributes for a device on one of the supportedpush notification services, such as gcm and apns. for more information,see usingamazon sns mobile push notifications.",
	"Method": "Future<GetEndpointAttributesResult> getEndpointAttributesAsync(GetEndpointAttributesRequest getEndpointAttributesRequest,Future<GetEndpointAttributesResult> getEndpointAttributesAsync,GetEndpointAttributesRequest getEndpointAttributesRequest,AsyncHandler<GetEndpointAttributesRequest, GetEndpointAttributesResult> asyncHandler){\r\n    return executorService.submit(new Callable<GetEndpointAttributesResult>() {\r\n        public GetEndpointAttributesResult call() throws Exception {\r\n            GetEndpointAttributesResult result = null;\r\n            try {\r\n                result = getEndpointAttributes(getEndpointAttributesRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(getEndpointAttributesRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSAsyncClient.getEndpointAttributesAsync",
	"Comment": "retrieves the endpoint attributes for a device on one of the supportedpush notification services, such as gcm and apns. for more information,see usingamazon sns mobile push notifications.",
	"Method": "Future<GetEndpointAttributesResult> getEndpointAttributesAsync(GetEndpointAttributesRequest getEndpointAttributesRequest,Future<GetEndpointAttributesResult> getEndpointAttributesAsync,GetEndpointAttributesRequest getEndpointAttributesRequest,AsyncHandler<GetEndpointAttributesRequest, GetEndpointAttributesResult> asyncHandler){\r\n    GetEndpointAttributesResult result = null;\r\n    try {\r\n        result = getEndpointAttributes(getEndpointAttributesRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(getEndpointAttributesRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser.parseXmlInputStream",
	"Comment": "parses an xml document from an input stream using a document handler.",
	"Method": "void parseXmlInputStream(DefaultHandler handler,InputStream inputStream){\r\n    try {\r\n        if (log.isDebugEnabled()) {\r\n            log.debug(\"Parsing XML response document with handler: \" + handler.getClass());\r\n        }\r\n        final BufferedReader breader = new BufferedReader(new InputStreamReader(inputStream, Constants.DEFAULT_ENCODING));\r\n        xr.setContentHandler(handler);\r\n        xr.setErrorHandler(handler);\r\n        xr.parse(new InputSource(breader));\r\n    } catch (final IOException e) {\r\n        throw e;\r\n    } catch (final Throwable t) {\r\n        try {\r\n            inputStream.close();\r\n        } catch (final IOException e) {\r\n            if (log.isErrorEnabled()) {\r\n                log.error(\"Unable to close response InputStream up after XML parse failure\", e);\r\n            }\r\n        }\r\n        throw new AmazonClientException(\"Failed to parse XML document with handler \" + handler.getClass(), t);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EventItemResponse.setMessage",
	"Comment": "a custom message that is associated with the processing of an event.",
	"Method": "void setMessage(String message){\r\n    this.message = message;\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.GetMLModelRequest.withVerbose",
	"Comment": "specifies whether the getmlmodel operation should returnrecipe.if true, recipe is returned.if false, recipe is not returned.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetMLModelRequest withVerbose(Boolean verbose){\r\n    this.verbose = verbose;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Request.getContinuationToken",
	"Comment": "gets the optional continuation token. continuation token allows a list tobe continued from a specific point. continuationtoken is provided intruncated list results.",
	"Method": "String getContinuationToken(){\r\n    return continuationToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.GetQueueUrlRequest.withQueueOwnerAWSAccountId",
	"Comment": "the aws account id of the account that created the queue.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetQueueUrlRequest withQueueOwnerAWSAccountId(String queueOwnerAWSAccountId){\r\n    this.queueOwnerAWSAccountId = queueOwnerAWSAccountId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.StartSpeechSynthesisTaskRequest.setLexiconNames",
	"Comment": "list of one or more pronunciation lexicon names you want the service toapply during synthesis. lexicons are applied only if the language of thelexicon is the same as the language of the voice.",
	"Method": "void setLexiconNames(java.util.Collection<String> lexiconNames){\r\n    if (lexiconNames == null) {\r\n        this.lexiconNames = null;\r\n        return;\r\n    }\r\n    this.lexiconNames = new java.util.ArrayList<String>(lexiconNames);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignLimits.setTotal",
	"Comment": "the maximum total number of messages that the campaign can send.",
	"Method": "void setTotal(Integer total){\r\n    this.total = total;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SendTemplatedEmailRequest.withTemplate",
	"Comment": "the template to use when sending this email.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendTemplatedEmailRequest withTemplate(String template){\r\n    this.template = template;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.BatchResultErrorEntry.setCode",
	"Comment": "an error code representing why the action failed on this entry.",
	"Method": "void setCode(String code){\r\n    this.code = code;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ListTemplatesRequest.setMaxItems",
	"Comment": "the maximum number of templates to return. this value must be at least 1and less than or equal to 10. if you do not specify a value, or if youspecify a value less than 1 or greater than 10, the operation will returnup to 10 results.",
	"Method": "void setMaxItems(Integer maxItems){\r\n    this.maxItems = maxItems;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PutInstructionFileRequest.getS3ObjectId",
	"Comment": "returns the s3 object id for which the new instruction file will becreated.this is not the instruction file id.",
	"Method": "S3ObjectId getS3ObjectId(){\r\n    return s3ObjectId;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignLimits.setDaily",
	"Comment": "the maximum number of messages that the campaign can send daily.",
	"Method": "void setDaily(Integer daily){\r\n    this.daily = daily;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.DescribeLogStreamsRequest.withDescending",
	"Comment": "if the value is true, results are returned in descending order. if thevalue is to false, results are returned in ascending order. the defaultvalue is false.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DescribeLogStreamsRequest withDescending(Boolean descending){\r\n    this.descending = descending;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.UpdateVocabularyResult.withLastModifiedTime",
	"Comment": "the date and time that the vocabulary was updated.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateVocabularyResult withLastModifiedTime(java.util.Date lastModifiedTime){\r\n    this.lastModifiedTime = lastModifiedTime;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.EncryptionInstruction.getMaterialsDescription",
	"Comment": "returns the description of the encryption materials that were used toencrypt the envelope symmetric key.",
	"Method": "Map<String, String> getMaterialsDescription(){\r\n    return this.materialsDescription;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.PutEventsRequest.clearBatchItemEntries",
	"Comment": "removes all the entries added into batchitem.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PutEventsRequest clearBatchItemEntries(){\r\n    this.batchItem = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CompleteMultipartUploadRequest.withRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket. it returns thisupdated completemultipartuploadrequest object so that additional method calls can bechained together.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "CompleteMultipartUploadRequest withRequesterPays(boolean isRequesterPays){\r\n    setRequesterPays(isRequesterPays);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CloudWatchDestination.withDimensionConfigurations",
	"Comment": "a list of dimensions upon which to categorize your emails when youpublish email sending events to amazon cloudwatch.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CloudWatchDestination withDimensionConfigurations(CloudWatchDimensionConfiguration dimensionConfigurations,CloudWatchDestination withDimensionConfigurations,java.util.Collection<CloudWatchDimensionConfiguration> dimensionConfigurations){\r\n    setDimensionConfigurations(dimensionConfigurations);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.EncryptionUtils.getStringFromMetadata",
	"Comment": "retrieves the string value of the given header from the metadata. returnsnull if the field is not found in the metadata.",
	"Method": "String getStringFromMetadata(String headerName,ObjectMetadata metadata){\r\n    Map<String, String> userMetadata = metadata.getUserMetadata();\r\n    if (userMetadata == null || !userMetadata.containsKey(headerName)) {\r\n        return null;\r\n    } else {\r\n        return userMetadata.get(headerName);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.CreateGrantRequest.withOperations",
	"Comment": "a list of operations that the grant permits.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreateGrantRequest withOperations(String operations,CreateGrantRequest withOperations,java.util.Collection<String> operations){\r\n    setOperations(operations);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.UpdateAccountSendingEnabledRequest.isEnabled",
	"Comment": "describes whether email sending is enabled or disabled for your amazonses account in the current aws region.",
	"Method": "Boolean isEnabled(){\r\n    return enabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.GetLogEventsRequest.withStartFromHead",
	"Comment": "if the value is true, the earliest log events are returned first. if thevalue is false, the latest log events are returned first. the defaultvalue is false.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetLogEventsRequest withStartFromHead(Boolean startFromHead){\r\n    this.startFromHead = startFromHead;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.kinesis.kinesisrecorder.AbstractKinesisRecorder.nextBatch",
	"Comment": "reads a batch of records belong to the same stream into a list. if datais read successfully, the stream name is returned.",
	"Method": "String nextBatch(RecordIterator iterator,List<byte[]> data,int maxCount,int maxSize){\r\n    data.clear();\r\n    String lastStreamName = null;\r\n    int size = 0;\r\n    int count = 0;\r\n    final FileRecordParser frp = new FileRecordParser();\r\n    while (iterator.hasNext() && count < maxCount && size < maxSize) {\r\n        final String line = iterator.peek();\r\n        if (line == null || line.isEmpty()) {\r\n            iterator.next();\r\n            continue;\r\n        }\r\n        try {\r\n            frp.parse(line);\r\n        } catch (final Exception e) {\r\n            LOGGER.warn(\"Failed to read line. Skip.\", e);\r\n            iterator.next();\r\n            continue;\r\n        }\r\n        if (lastStreamName == null || lastStreamName.equals(frp.streamName)) {\r\n            data.add(frp.bytes);\r\n            count++;\r\n            size += frp.bytes.length;\r\n            lastStreamName = frp.streamName;\r\n            iterator.next();\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n    return lastStreamName;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.TextDetection.withGeometry",
	"Comment": "the location of the detected text on the image. includes an axis alignedcoarse bounding box surrounding the text and a finer grain polygon formore accurate spatial information.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "TextDetection withGeometry(Geometry geometry){\r\n    this.geometry = geometry;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteVersionRequest.setBucketName",
	"Comment": "sets the name of the amazon s3 bucket containing the version to delete.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GCMChannelResponse.withApplicationId",
	"Comment": "the id of the application to which the channel applies.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GCMChannelResponse withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectAclRequest.withRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket. it returns thisupdated getobjectaclrequest object so that additional method calls can bechained together.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "GetObjectAclRequest withRequesterPays(boolean isRequesterPays){\r\n    setRequesterPays(isRequesterPays);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.DescribeLogStreamsResult.withLogStreams",
	"Comment": "the log streams.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DescribeLogStreamsResult withLogStreams(LogStream logStreams,DescribeLogStreamsResult withLogStreams,java.util.Collection<LogStream> logStreams){\r\n    setLogStreams(logStreams);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSChannelResponse.withEnabled",
	"Comment": "if the channel is enabled for sending messages.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSChannelResponse withEnabled(Boolean enabled){\r\n    this.enabled = enabled;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetSegmentVersionsRequest.withToken",
	"Comment": "the nexttoken string returned on a previous page that you use to get thenext page of results in a paginated response.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetSegmentVersionsRequest withToken(String token){\r\n    this.token = token;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.VersionListing.setEncodingType",
	"Comment": "for internal use only. sets the encoding type used by amazon s3 to encodeobject key names in the xml response.",
	"Method": "void setEncodingType(String encodingType){\r\n    this.encodingType = encodingType;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.GetIdentityPoliciesRequest.getPolicyNames",
	"Comment": "a list of the names of policies to be retrieved. you can retrieve amaximum of 20 policies at a time. if you do not know the names of thepolicies that are attached to the identity, you can uselistidentitypolicies.",
	"Method": "java.util.List<String> getPolicyNames(){\r\n    return policyNames;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Smile.setValue",
	"Comment": "boolean value that indicates whether the face is smiling or not.",
	"Method": "void setValue(Boolean value){\r\n    this.value = value;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EventsBatch.withEndpoint",
	"Comment": "endpoint informationreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EventsBatch withEndpoint(EndpointRequest endpoint){\r\n    this.endpoint = endpoint;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SendUsersMessageRequest.withTraceId",
	"Comment": "a unique id that you can use to trace a message. this id is visible torecipients.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendUsersMessageRequest withTraceId(String traceId){\r\n    this.traceId = traceId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.model.StreamInfo.withCreationTime",
	"Comment": "a time stamp that indicates when the stream was created.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "StreamInfo withCreationTime(java.util.Date creationTime){\r\n    this.creationTime = creationTime;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SendUsersMessageResponse.withResult",
	"Comment": "an object that shows the endpoints that were messaged for each user. theobject provides a list of user ids. for each user id, it provides theendpoint ids that were messaged. for each endpoint id, it provides anendpointmessageresult object.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendUsersMessageResponse withResult(java.util.Map<String, java.util.Map<String, EndpointMessageResult>> result){\r\n    this.result = result;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.SynthesisTask.withCreationTime",
	"Comment": "timestamp for the time the synthesis task was started.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SynthesisTask withCreationTime(java.util.Date creationTime){\r\n    this.creationTime = creationTime;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.WriteCampaignRequest.withIsPaused",
	"Comment": "indicates whether the campaign is paused. a paused campaign does not sendmessages unless you resume it by setting ispaused to false.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "WriteCampaignRequest withIsPaused(Boolean isPaused){\r\n    this.isPaused = isPaused;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.lex.interactionkit.ui.InteractiveVoiceViewAdapter.validateAppData",
	"Comment": "validates app details.override this method to implement custom attribute verification.",
	"Method": "void validateAppData(){\r\n    if (interactionConfig == null) {\r\n        throw new InvalidParameterException(\"Interaction config is not set\");\r\n    } else {\r\n        if (interactionConfig.getBotName() == null || interactionConfig.getBotName().isEmpty()) {\r\n            throw new InvalidParameterException(\"Bot name is not set\");\r\n        }\r\n        if (interactionConfig.getBotAlias() == null || interactionConfig.getBotAlias().isEmpty()) {\r\n            throw new InvalidParameterException(\"Bot alias is not set\");\r\n        }\r\n    }\r\n    if (awsRegion == null) {\r\n        throw new InvalidParameterException(\"AWS Region is not set\");\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SendEmailRequest.getConfigurationSetName",
	"Comment": "the name of the configuration set to use when you send an email usingsendemail.",
	"Method": "String getConfigurationSetName(){\r\n    return configurationSetName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetBucketMetricsConfigurationRequest.withBucketName",
	"Comment": "sets the name of the bucket containing the metrics configuration to retrieveand returns this object for method chaining.",
	"Method": "GetBucketMetricsConfigurationRequest withBucketName(String bucketName){\r\n    setBucketName(bucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.WriteCampaignRequest.withName",
	"Comment": "the custom name of the campaign.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "WriteCampaignRequest withName(String name){\r\n    this.name = name;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateCACertificateRequest.withRegistrationConfig",
	"Comment": "information about the registration configuration.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateCACertificateRequest withRegistrationConfig(RegistrationConfig registrationConfig){\r\n    this.registrationConfig = registrationConfig;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.BatchResultErrorEntry.getCode",
	"Comment": "an error code representing why the action failed on this entry.",
	"Method": "String getCode(){\r\n    return code;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyPartRequest.withDestinationBucketName",
	"Comment": "sets the name of the destination bucket which will contain the new,copied object and returns this object, enabling additional method callsto be chained together.",
	"Method": "CopyPartRequest withDestinationBucketName(String destinationBucketName){\r\n    setDestinationBucketName(destinationBucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ConfirmSubscriptionRequest.withTopicArn",
	"Comment": "the arn of the topic for which you wish to confirm a subscription.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ConfirmSubscriptionRequest withTopicArn(String topicArn){\r\n    this.topicArn = topicArn;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transferutility.UploadTask.call",
	"Comment": "runs upload task and returns whether successfully uploaded.",
	"Method": "Boolean call(){\r\n    if (TransferService.networkInfoReceiver != null && !TransferService.networkInfoReceiver.isNetworkConnected()) {\r\n        LOGGER.info(\"Network not connected. Setting the state to WAITING_FOR_NETWORK.\");\r\n        updater.updateState(upload.id, TransferState.WAITING_FOR_NETWORK);\r\n        return false;\r\n    }\r\n    updater.updateState(upload.id, TransferState.IN_PROGRESS);\r\n    if (upload.isMultipart == 1 && upload.partNumber == 0) {\r\n        return uploadMultipartAndWaitForCompletion();\r\n    } else if (upload.isMultipart == 0) {\r\n        return uploadSinglePartAndWaitForCompletion();\r\n    }\r\n    return false;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.EventDestination.withCloudWatchDestination",
	"Comment": "an object that contains the names, default values, and sources of thedimensions associated with an amazon cloudwatch event destination.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EventDestination withCloudWatchDestination(CloudWatchDestination cloudWatchDestination){\r\n    this.cloudWatchDestination = cloudWatchDestination;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.analytics.AnalyticsConfiguration.setStorageClassAnalysis",
	"Comment": "sets the storageclassanalysis object which indicates that data related to access patternswill be collected and made available to analyze the tradeoffs between different storage classes.",
	"Method": "void setStorageClassAnalysis(StorageClassAnalysis storageClassAnalysis){\r\n    this.storageClassAnalysis = storageClassAnalysis;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.amazonmobileanalytics.internal.session.client.DefaultSessionClient.stopSession",
	"Comment": "stops an application session used solely by amazon insights",
	"Method": "void stopSession(){\r\n    state.stop();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMMessage.getConsolidationKey",
	"Comment": "optional. arbitrary string used to indicate multiple messages arelogically the same and that adm is allowed to drop previously enqueuedmessages in favor of this one.",
	"Method": "String getConsolidationKey(){\r\n    return consolidationKey;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EmailChannelResponse.withIsArchived",
	"Comment": "is this channel archivedreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EmailChannelResponse withIsArchived(Boolean isArchived){\r\n    this.isArchived = isArchived;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ListRetirableGrantsResult.setTruncated",
	"Comment": "a flag that indicates whether there are more items in the list. when thisvalue is true, the list in this response is truncated. to get more items,pass the value of the nextmarker element in this response tothe marker parameter in a subsequent request.",
	"Method": "void setTruncated(Boolean truncated){\r\n    this.truncated = truncated;\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.GetMLModelResult.getFinishedAt",
	"Comment": "the epoch time when amazon machine learning marked themlmodel as completed or failed.finishedat is only available when the mlmodelis in the completed or failed state.",
	"Method": "java.util.Date getFinishedAt(){\r\n    return finishedAt;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ListIdentitiesResult.withIdentities",
	"Comment": "a list of identities.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListIdentitiesResult withIdentities(String identities,ListIdentitiesResult withIdentities,java.util.Collection<String> identities){\r\n    setIdentities(identities);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketAnalyticsConfigurationsRequest.getBucketName",
	"Comment": "gets the name of the amazon s3 bucket whoseanalytics configurations are to be listed.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.EncryptedInitiateMultipartUploadRequest.withMaterialsDescription",
	"Comment": "sets the materials description for the encryption materials to be usedwith the current multi part upload request.",
	"Method": "EncryptedInitiateMultipartUploadRequest withMaterialsDescription(Map<String, String> materialsDescription){\r\n    setMaterialsDescription(materialsDescription);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.CompareFacesResult.withFaceMatches",
	"Comment": "an array of faces in the target image that match the source image face.each comparefacesmatch object provides the bounding box, theconfidence level that the bounding box contains a face, and thesimilarity score for the face in the bounding box and the face in thesource image.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CompareFacesResult withFaceMatches(CompareFacesMatch faceMatches,CompareFacesResult withFaceMatches,java.util.Collection<CompareFacesMatch> faceMatches){\r\n    setFaceMatches(faceMatches);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMMessage.withExpiresAfter",
	"Comment": "optional. number of seconds adm should retain the message if the deviceis offlinereturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ADMMessage withExpiresAfter(String expiresAfter){\r\n    this.expiresAfter = expiresAfter;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.NumberValidateResponse.setPhoneType",
	"Comment": "a description of the phone type. possible values are mobile, landline,voip, invalid, prepaid, and other.",
	"Method": "void setPhoneType(String phoneType){\r\n    this.phoneType = phoneType;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartCelebrityRecognitionRequest.withNotificationChannel",
	"Comment": "the amazon sns topic arn that you want amazon rekognition video topublish the completion status of the celebrity recognition analysis to.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "StartCelebrityRecognitionRequest withNotificationChannel(NotificationChannel notificationChannel){\r\n    this.notificationChannel = notificationChannel;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListPlatformApplicationsResult.setNextToken",
	"Comment": "nexttoken string is returned when calling listplatformapplications actionif additional records are available after the first page results.",
	"Method": "void setNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.analytics.AnalyticsS3BucketDestination.setBucketAccountId",
	"Comment": "sets the account id that owns the destination bucket.if no account id is provided, the owner will not be validated prior to exporting data.",
	"Method": "void setBucketAccountId(String bucketAccountId){\r\n    this.bucketAccountId = bucketAccountId;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignResponse.withVersion",
	"Comment": "the campaign version number.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CampaignResponse withVersion(Integer version){\r\n    this.version = version;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ReceiptAction.withAddHeaderAction",
	"Comment": "adds a header to the received email.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ReceiptAction withAddHeaderAction(AddHeaderAction addHeaderAction){\r\n    this.addHeaderAction = addHeaderAction;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointanalytics.model.PutEventsRequest.getClientContext",
	"Comment": "the client context including the client id, app title, app version andpackage name.",
	"Method": "String getClientContext(){\r\n    return clientContext;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.internal.ServiceUtils.convertRequestToUrl",
	"Comment": "converts the specified request object into a url, containing all thespecified parameters, the specified request endpoint, etc.",
	"Method": "URL convertRequestToUrl(Request<?> request,boolean removeLeadingSlashInResourcePath){\r\n    String resourcePath = HttpUtils.urlEncode(request.getResourcePath(), true);\r\n    if (removeLeadingSlashInResourcePath && resourcePath.startsWith(\"/\")) {\r\n        resourcePath = resourcePath.substring(1);\r\n    }\r\n    String urlPath = \"/\" + resourcePath;\r\n    urlPath = urlPath.replaceAll(\"(?<=/)/\", \"/\");\r\n    String urlString = request.getEndpoint() + urlPath;\r\n    boolean firstParam = true;\r\n    Map<String, String> parameters = request.getParameters();\r\n    Map<String, List<String>> parametersWithList = null;\r\n    if (request instanceof AmazonPollyCustomRequest) {\r\n        parametersWithList = ((AmazonPollyCustomRequest<?>) request).getParametersWithList();\r\n    }\r\n    for (String param : (parametersWithList == null ? parameters : parametersWithList).keySet()) {\r\n        if (firstParam) {\r\n            urlString += \"?\";\r\n            firstParam = false;\r\n        } else {\r\n            urlString += \"&\";\r\n        }\r\n        if (parametersWithList != null) {\r\n            List<String> values = parametersWithList.get(param);\r\n            Collections.sort(values);\r\n            Iterator<?> iter = values.iterator();\r\n            while (iter.hasNext()) {\r\n                urlString += param + \"=\" + HttpUtils.urlEncode(iter.next().toString(), false);\r\n                if (iter.hasNext()) {\r\n                    urlString += \"&\";\r\n                }\r\n            }\r\n        } else {\r\n            String value = parameters.get(param);\r\n            urlString += param + \"=\" + HttpUtils.urlEncode(value.toString(), false);\r\n        }\r\n    }\r\n    try {\r\n        return new URL(urlString);\r\n    } catch (MalformedURLException e) {\r\n        throw new AmazonClientException(\"Unable to convert request to well formed URL: \" + e.getMessage(), e);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SMSChannelResponse.withCreationDate",
	"Comment": "the date that the settings were last updated in iso 8601 format.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SMSChannelResponse withCreationDate(String creationDate){\r\n    this.creationDate = creationDate;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.MessageResponse.setEndpointResult",
	"Comment": "a map containing a multi part response for each address, with theendpointid as the key and the result as the value.",
	"Method": "void setEndpointResult(java.util.Map<String, EndpointMessageResult> endpointResult){\r\n    this.endpointResult = endpointResult;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.analytics.AnalyticsConfiguration.getId",
	"Comment": "returns the identifier used to represent an analytics configuration.",
	"Method": "String getId(){\r\n    return id;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EventStream.getApplicationId",
	"Comment": "the id of the application from which events should be published.",
	"Method": "String getApplicationId(){\r\n    return applicationId;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.UpdateCustomVerificationEmailTemplateRequest.getSuccessRedirectionURL",
	"Comment": "the url that the recipient of the verification email is sent to if his orher address is successfully verified.",
	"Method": "String getSuccessRedirectionURL(){\r\n    return successRedirectionURL;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.UpdateReceiptRuleRequest.withRule",
	"Comment": "a data structure that contains the updated receipt rule information.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateReceiptRuleRequest withRule(ReceiptRule rule){\r\n    this.rule = rule;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.lexrts.model.PostContentResult.getSlotToElicit",
	"Comment": "if the dialogstate value is elicitslot, returnsthe name of the slot for which amazon lex is eliciting a value.",
	"Method": "String getSlotToElicit(){\r\n    return slotToElicit;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.lex.interactionkit.ui.InteractiveVoiceView.setCurrentRadius",
	"Comment": "sets new radius for voice animation and requests for a new drawing.",
	"Method": "void setCurrentRadius(float radius){\r\n    mCurrentRadiusPix = radius;\r\n    invalidate();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartListing.getUploadId",
	"Comment": "returns the upload id value specified in the original request used toidentify which multipart upload contains the parts to list.",
	"Method": "String getUploadId(){\r\n    return uploadId;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignHook.withLambdaFunctionName",
	"Comment": "lambda function name or arn to be called for deliveryreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CampaignHook withLambdaFunctionName(String lambdaFunctionName){\r\n    this.lambdaFunctionName = lambdaFunctionName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ListAliasesResult.setTruncated",
	"Comment": "a flag that indicates whether there are more items in the list. when thisvalue is true, the list in this response is truncated. to get more items,pass the value of the nextmarker element in this response tothe marker parameter in a subsequent request.",
	"Method": "void setTruncated(Boolean truncated){\r\n    this.truncated = truncated;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.PutKeyPolicyRequest.isBypassPolicyLockoutSafetyCheck",
	"Comment": "a flag to indicate whether to bypass the key policy lockout safety check.setting this value to true increases the risk that the cmk becomesunmanageable. do not set this value to true indiscriminately.for more information, refer to the scenario in the default key policy section in the aws key management servicedeveloper guide.use this parameter only when you intend to prevent the principal that ismaking the request from making a subsequent putkeypolicyrequest on the cmk.the default value is false.",
	"Method": "Boolean isBypassPolicyLockoutSafetyCheck(){\r\n    return bypassPolicyLockoutSafetyCheck;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideoarchivedmedia.model.Fragment.getProducerTimestamp",
	"Comment": "the time stamp from the producer corresponding to the fragment.",
	"Method": "java.util.Date getProducerTimestamp(){\r\n    return producerTimestamp;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateBaiduChannelResult.withBaiduChannelResponse",
	"Comment": "baidu cloud messaging channel definitionreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateBaiduChannelResult withBaiduChannelResponse(BaiduChannelResponse baiduChannelResponse){\r\n    this.baiduChannelResponse = baiduChannelResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.SendMessageRequest.getMessageBody",
	"Comment": "the message to send. string maximum 256 kb in size. for a list of allowedcharacters, see the preceding note.",
	"Method": "String getMessageBody(){\r\n    return messageBody;\r\n}"
}, {
	"Path": "com.amazonaws.serverless.proxy.internal.servlet.FilterHolder.getRegistration",
	"Comment": "returns the registration object for the filter. the registration object defined in this file implementsboth filterregistration and filterregistration.dynamic",
	"Method": "Registration getRegistration(){\r\n    return registration;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClient.createReceiptRuleSet",
	"Comment": "creates an empty receipt rule set.for information about setting up receipt rule sets, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "CreateReceiptRuleSetResult createReceiptRuleSet(CreateReceiptRuleSetRequest createReceiptRuleSetRequest){\r\n    ExecutionContext executionContext = createExecutionContext(createReceiptRuleSetRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<CreateReceiptRuleSetRequest> request = null;\r\n    Response<CreateReceiptRuleSetResult> response = null;\r\n    try {\r\n        request = new CreateReceiptRuleSetRequestMarshaller().marshall(createReceiptRuleSetRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        response = invoke(request, new CreateReceiptRuleSetResultStaxUnmarshaller(), executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketLifecycleConfigurationRequest.setBucketName",
	"Comment": "sets the name of the bucket whose lifecycle configuration is being set.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.EncryptionUtils.createSymmetricCipher",
	"Comment": "creates a symmetric cipher in the specified mode from the given symmetrickey and iv. the given crypto provider will provide the encryptionimplementation. if the crypto provider is null, then the default jcecrypto provider will be used.",
	"Method": "Cipher createSymmetricCipher(SecretKey symmetricCryptoKey,int encryptMode,Provider cryptoProvider,byte[] initVector){\r\n    try {\r\n        Cipher cipher;\r\n        if (cryptoProvider != null) {\r\n            cipher = Cipher.getInstance(JceEncryptionConstants.SYMMETRIC_CIPHER_METHOD, cryptoProvider);\r\n        } else {\r\n            cipher = Cipher.getInstance(JceEncryptionConstants.SYMMETRIC_CIPHER_METHOD);\r\n        }\r\n        if (initVector != null) {\r\n            cipher.init(encryptMode, symmetricCryptoKey, new IvParameterSpec(initVector));\r\n        } else {\r\n            cipher.init(encryptMode, symmetricCryptoKey);\r\n        }\r\n        return cipher;\r\n    } catch (Exception e) {\r\n        throw new AmazonClientException(\"Unable to build cipher: \" + e.getMessage() + \"\\nMake sure you have the JCE unlimited strength policy files installed and \" + \"configured for your JVM: http://www.ngs.ac.uk/tools/jcepolicyfiles\", e);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.CreateGrantRequest.getConstraints",
	"Comment": "a structure that you can use to allow certain operations in the grantonly when the desired encryption context is present. for more informationabout encryption context, see encryption context in the aws key management service developerguide.",
	"Method": "GrantConstraints getConstraints(){\r\n    return constraints;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Request.getEncodingType",
	"Comment": "gets the optional encodingtype parameter indicating theencoding method to be applied on the response.",
	"Method": "String getEncodingType(){\r\n    return encodingType;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteAdmChannelRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteAdmChannelRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.QuietTime.withEnd",
	"Comment": "the default end time for quiet time in iso 8601 format.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "QuietTime withEnd(String end){\r\n    this.end = end;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.EnableEnhancedMonitoringResult.setDesiredShardLevelMetrics",
	"Comment": "represents the list of all the metrics that would be in the enhancedstate after the operation.",
	"Method": "void setDesiredShardLevelMetrics(java.util.Collection<String> desiredShardLevelMetrics){\r\n    if (desiredShardLevelMetrics == null) {\r\n        this.desiredShardLevelMetrics = null;\r\n        return;\r\n    }\r\n    this.desiredShardLevelMetrics = new java.util.ArrayList<String>(desiredShardLevelMetrics);\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.model.CopyResult.setDestinationKey",
	"Comment": "sets the destination bucket key under which the new, copied object willbe stored.",
	"Method": "void setDestinationKey(String destinationKey){\r\n    this.destinationKey = destinationKey;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.PublishRequest.withMessageAttributes",
	"Comment": "message attributes for publish action.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PublishRequest withMessageAttributes(java.util.Map<String, MessageAttributeValue> messageAttributes){\r\n    this.messageAttributes = messageAttributes;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyPartRequest.getSourceKey",
	"Comment": "gets the source bucket key under which the source object to be copied isstored.",
	"Method": "String getSourceKey(){\r\n    return sourceKey;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.S3VersionSummary.getLastModified",
	"Comment": "gets the date according to amazon s3 at which this version was lastmodified.",
	"Method": "Date getLastModified(){\r\n    return lastModified;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.CreateCollectionResult.getFaceModelVersion",
	"Comment": "version number of the face detection model associated with the collectionyou are creating.",
	"Method": "String getFaceModelVersion(){\r\n    return faceModelVersion;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceDetail.setQuality",
	"Comment": "identifies image brightness and sharpness. default attribute.",
	"Method": "void setQuality(ImageQuality quality){\r\n    this.quality = quality;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetLabelDetectionResult.getVideoMetadata",
	"Comment": "information about a video that amazon rekognition video analyzed.videometadata is returned in every page of paginatedresponses from a amazon rekognition video operation.",
	"Method": "VideoMetadata getVideoMetadata(){\r\n    return videoMetadata;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListSubscriptionsResult.withSubscriptions",
	"Comment": "a list of subscriptions.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListSubscriptionsResult withSubscriptions(Subscription subscriptions,ListSubscriptionsResult withSubscriptions,java.util.Collection<Subscription> subscriptions){\r\n    setSubscriptions(subscriptions);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ListResourceTagsResult.getTruncated",
	"Comment": "a flag that indicates whether there are more items in the list. when thisvalue is true, the list in this response is truncated. to get more items,pass the value of the nextmarker element in this response tothe marker parameter in a subsequent request.",
	"Method": "Boolean getTruncated(){\r\n    return truncated;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.StreamDescriptionSummary.getEnhancedMonitoring",
	"Comment": "represents the current enhanced monitoring settings of the stream.",
	"Method": "java.util.List<EnhancedMetrics> getEnhancedMonitoring(){\r\n    return enhancedMonitoring;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ApplicationSettingsResource.withLastModifiedDate",
	"Comment": "the date that the settings were last updated in iso 8601 format.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ApplicationSettingsResource withLastModifiedDate(String lastModifiedDate){\r\n    this.lastModifiedDate = lastModifiedDate;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetCampaignVersionsRequest.withCampaignId",
	"Comment": "the unique id of the campaign.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetCampaignVersionsRequest withCampaignId(String campaignId){\r\n    this.campaignId = campaignId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CompleteMultipartUploadResult.getVersionId",
	"Comment": "returns the version id of the new object, only present if versioning hasbeen enabled for the bucket.",
	"Method": "String getVersionId(){\r\n    return versionId;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.lex.interactionkit.ui.InteractiveVoiceView.setColorIconAwaitingResponse",
	"Comment": "sets the color of the button icon when the client is waiting for responsefrom amazon lex bot.",
	"Method": "void setColorIconAwaitingResponse(String color){\r\n    mIconColorWaiting = getColor(color);\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.ListDeadLetterSourceQueuesResult.setQueueUrls",
	"Comment": "a list of source queue urls that have the redrivepolicy queue attributeconfigured with a dead letter queue.",
	"Method": "void setQueueUrls(java.util.Collection<String> queueUrls){\r\n    if (queueUrls == null) {\r\n        this.queueUrls = null;\r\n        return;\r\n    }\r\n    this.queueUrls = new java.util.ArrayList<String>(queueUrls);\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ConfirmSubscriptionRequest.getTopicArn",
	"Comment": "the arn of the topic for which you wish to confirm a subscription.",
	"Method": "String getTopicArn(){\r\n    return topicArn;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.withSourceBucketName",
	"Comment": "sets the name of the bucket containing the source object to be copied,and returns this object, enabling additional method calls to be chainedtogether.",
	"Method": "CopyObjectRequest withSourceBucketName(String sourceBucketName){\r\n    setSourceBucketName(sourceBucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointMessageResult.withMessageId",
	"Comment": "unique message identifier associated with the message that was sent.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointMessageResult withMessageId(String messageId){\r\n    this.messageId = messageId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.Message.getMessageAttributes",
	"Comment": "each message attribute consists of a name, type, and value. for moreinformation, see message attribute items in the amazon sqs developer guide.",
	"Method": "java.util.Map<String, MessageAttributeValue> getMessageAttributes(){\r\n    return messageAttributes;\r\n}"
}, {
	"Path": "com.amazonaws.kinesisvideo.internal.producer.jni.NativeKinesisVideoProducerJni.createStream",
	"Comment": "callback from the native code to schedule a call to create stream",
	"Method": "KinesisVideoProducerStream createStream(StreamInfo streamInfo,StreamCallbacks streamCallbacks,int createStream,String deviceName,String streamName,String contentType,String kmsKeyId,long retentionPeriod,long callAfter,long timeout,byte[] authData,int authType,long customData){\r\n    synchronized (mCallbackSyncObject) {\r\n        try {\r\n            mServiceCallbacks.createStream(deviceName, streamName, contentType, kmsKeyId, retentionPeriod, callAfter, timeout, authData, authType, customData);\r\n            return STATUS_SUCCESS;\r\n        } catch (final ProducerException e) {\r\n            return e.getStatusCode();\r\n        }\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteEmailChannelRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteEmailChannelRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DescribeConfigurationSetResult.setReputationOptions",
	"Comment": "an object that represents the reputation settings for the configurationset.",
	"Method": "void setReputationOptions(ReputationOptions reputationOptions){\r\n    this.reputationOptions = reputationOptions;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.CelebrityDetail.withName",
	"Comment": "the name of the celebrity.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CelebrityDetail withName(String name){\r\n    this.name = name;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DescribeConfigurationSetResult.getReputationOptions",
	"Comment": "an object that represents the reputation settings for the configurationset.",
	"Method": "ReputationOptions getReputationOptions(){\r\n    return reputationOptions;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.SendMessageBatchRequestEntry.clearMessageAttributesEntries",
	"Comment": "removes all the entries added into messageattributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendMessageBatchRequestEntry clearMessageAttributesEntries(){\r\n    this.messageAttributes = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListSubscriptionsByTopicRequest.setNextToken",
	"Comment": "token returned by the previous listsubscriptionsbytopicrequest.",
	"Method": "void setNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketMetricsConfigurationsResult.setNextContinuationToken",
	"Comment": "sets the optional nextcontinuationtoken.nextcontinuationtoken is sent when istruncated is true meaning there aremore keys in the bucket that can be listed. the next list requests to amazons3 can be continued by providing this nextcontinuationtoken.",
	"Method": "void setNextContinuationToken(String nextContinuationToken){\r\n    this.nextContinuationToken = nextContinuationToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.ServiceUtils.join",
	"Comment": "returns a new string created by joining each of the strings in thespecified list together, with a comma between them.",
	"Method": "String join(List<String> strings){\r\n    String result = \"\";\r\n    boolean first = true;\r\n    for (final String s : strings) {\r\n        if (!first) {\r\n            result += \", \";\r\n        }\r\n        result += s;\r\n        first = false;\r\n    }\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.PutAttributesRequest.getExpected",
	"Comment": "the update condition which, if specified, determines whether thespecified attributes will be updated or not. the update condition mustbe satisfied in order for this request to be processed and theattributes to be updated.",
	"Method": "UpdateCondition getExpected(){\r\n    return expected;\r\n}"
}, {
	"Path": "com.amazonaws.serverless.sample.springboot.Application.handlerAdapter",
	"Comment": "create required handleradapter, to avoid several default handleradapter instances being created",
	"Method": "HandlerAdapter handlerAdapter(){\r\n    return new RequestMappingHandlerAdapter();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartListing.getOwner",
	"Comment": "returns details on the user who owns the associated multipart upload.",
	"Method": "Owner getOwner(){\r\n    return owner;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ObjectListing.getPrefix",
	"Comment": "gets the prefix parameter originally used to request this object listing,or null if no prefix was specified. all objects and commonprefixes included in this object listing start with the specified prefix.",
	"Method": "String getPrefix(){\r\n    return prefix;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transferutility.TransferDBUtil.insertMultipartUploadRecord",
	"Comment": "inserts a part upload record into database with the given values.",
	"Method": "Uri insertMultipartUploadRecord(String bucket,String key,File file,long fileOffset,int partNumber,String uploadId,long bytesTotal,int isLastPart){\r\n    final ContentValues values = generateContentValuesForMultiPartUpload(bucket, key, file, fileOffset, partNumber, uploadId, bytesTotal, isLastPart, new ObjectMetadata(), null);\r\n    return transferDBBase.insert(transferDBBase.getContentUri(), values);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartListing.getEncodingType",
	"Comment": "gets the encoding type used by amazon s3 to encode object key names inthe xml response. if you specify encodingtype requestparameter, amazon s3 includes this element in the response, and returnsencoded key name values in the key element.",
	"Method": "String getEncodingType(){\r\n    return encodingType;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListSubscriptionsByTopicResult.setNextToken",
	"Comment": "token to pass along to the next listsubscriptionsbytopicrequest. this element is returned if there are more subscriptions toretrieve.",
	"Method": "void setNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.iterable.S3Objects.inBucket",
	"Comment": "constructs an iterable that covers all the objects in an amazon s3bucket.",
	"Method": "S3Objects inBucket(AmazonS3 s3,String bucketName){\r\n    return new S3Objects(s3, bucketName);\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.DescribeExportTasksResult.withExportTasks",
	"Comment": "the export tasks.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DescribeExportTasksResult withExportTasks(ExportTask exportTasks,DescribeExportTasksResult withExportTasks,java.util.Collection<ExportTask> exportTasks){\r\n    setExportTasks(exportTasks);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.IndexFacesResult.withFaceRecords",
	"Comment": "an array of faces detected and added to the collection. for moreinformation, see searching faces in a collection in the amazonrekognition developer guide.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "IndexFacesResult withFaceRecords(FaceRecord faceRecords,IndexFacesResult withFaceRecords,java.util.Collection<FaceRecord> faceRecords){\r\n    setFaceRecords(faceRecords);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.SearchFacesByImageResult.getFaceMatches",
	"Comment": "an array of faces that match the input face, along with the confidence inthe match.",
	"Method": "java.util.List<FaceMatch> getFaceMatches(){\r\n    return faceMatches;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.NumberValidateResponse.getCountryCodeNumeric",
	"Comment": "the numeric code for the country or region where the phone number wasoriginally registered.",
	"Method": "String getCountryCodeNumeric(){\r\n    return countryCodeNumeric;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.SendMessageBatchRequest.withEntries",
	"Comment": "a list of sendmessagebatchrequestentry items.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendMessageBatchRequest withEntries(SendMessageBatchRequestEntry entries,SendMessageBatchRequest withEntries,java.util.Collection<SendMessageBatchRequestEntry> entries){\r\n    setEntries(entries);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.serverless.proxy.model.ContainerConfig.isBinaryContentType",
	"Comment": "determine if specified content type has been configured as binary",
	"Method": "boolean isBinaryContentType(String contentType){\r\n    return contentType != null && binaryContentTypes.contains(contentType.trim());\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignLimits.getMessagesPerSecond",
	"Comment": "the number of messages that the campaign can send per second. the minimumvalue is 50, and the maximum is 20000.",
	"Method": "Integer getMessagesPerSecond(){\r\n    return messagesPerSecond;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.NumberValidateResponse.getCleansedPhoneNumberNational",
	"Comment": "the cleansed phone number, shown in the local phone number format.",
	"Method": "String getCleansedPhoneNumberNational(){\r\n    return cleansedPhoneNumberNational;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.InitiateMultipartUploadRequest.withObjectMetadata",
	"Comment": "sets the additional information about the new object being created, suchas content type, content encoding, user metadata, etc.returns this updated initiatemultipartuploadrequest object so thatadditional method calls can be chained together.",
	"Method": "InitiateMultipartUploadRequest withObjectMetadata(ObjectMetadata objectMetadata){\r\n    setObjectMetadata(objectMetadata);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignResponse.withHook",
	"Comment": "campaign hook information.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CampaignResponse withHook(CampaignHook hook){\r\n    this.hook = hook;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SMSMessage.setSubstitutions",
	"Comment": "default message substitutions. can be overridden by individual addresssubstitutions.",
	"Method": "void setSubstitutions(java.util.Map<String, java.util.List<String>> substitutions){\r\n    this.substitutions = substitutions;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClient.createCustomVerificationEmailTemplate",
	"Comment": "creates a new custom verification email template.for more information about custom verification email templates, see using custom verification email templates in the amazon sesdeveloper guide.you can execute this operation no more than once per second.",
	"Method": "void createCustomVerificationEmailTemplate(CreateCustomVerificationEmailTemplateRequest createCustomVerificationEmailTemplateRequest){\r\n    ExecutionContext executionContext = createExecutionContext(createCustomVerificationEmailTemplateRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<CreateCustomVerificationEmailTemplateRequest> request = null;\r\n    Response<Void> response = null;\r\n    try {\r\n        request = new CreateCustomVerificationEmailTemplateRequestMarshaller().marshall(createCustomVerificationEmailTemplateRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        invoke(request, null, executionContext);\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ReceiptAction.getLambdaAction",
	"Comment": "calls an aws lambda function, and optionally, publishes a notification toamazon sns.",
	"Method": "LambdaAction getLambdaAction(){\r\n    return lambdaAction;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ReputationOptions.isSendingEnabled",
	"Comment": "describes whether email sending is enabled or disabled for theconfiguration set. if the value is true, then amazon seswill send emails that use the configuration set. if the value isfalse, amazon ses will not send emails that use theconfiguration set. the default value is true. you can changethis setting using updateconfigurationsetsendingenabled.",
	"Method": "Boolean isSendingEnabled(){\r\n    return sendingEnabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointSendConfiguration.clearSubstitutionsEntries",
	"Comment": "removes all the entries added into substitutions.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointSendConfiguration clearSubstitutionsEntries(){\r\n    this.substitutions = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.withUnmodifiedSinceConstraint",
	"Comment": "sets the optional unmodified constraint that restricts this request toexecuting only if the source object has not been modified afterthe specified date. returns this object, enabling additional method callsto be chained together.the unmodified constraint may be used with matching etag constraints, butnot with any other type of constraint.note that amazon s3 will ignore any dates occurring in the future.",
	"Method": "CopyObjectRequest withUnmodifiedSinceConstraint(Date date){\r\n    setUnmodifiedSinceConstraint(date);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListVersionsRequest.setMaxResults",
	"Comment": "sets the optional maxresults parameter indicating themaximum number of results to include in the response.",
	"Method": "void setMaxResults(Integer maxResults){\r\n    this.maxResults = maxResults;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.createCustomVerificationEmailTemplateAsync",
	"Comment": "creates a new custom verification email template.for more information about custom verification email templates, see using custom verification email templates in the amazon sesdeveloper guide.you can execute this operation no more than once per second.",
	"Method": "Future<Void> createCustomVerificationEmailTemplateAsync(CreateCustomVerificationEmailTemplateRequest createCustomVerificationEmailTemplateRequest,Future<Void> createCustomVerificationEmailTemplateAsync,CreateCustomVerificationEmailTemplateRequest createCustomVerificationEmailTemplateRequest,AsyncHandler<CreateCustomVerificationEmailTemplateRequest, Void> asyncHandler){\r\n    return executorService.submit(new Callable<Void>() {\r\n        public Void call() throws Exception {\r\n            Void result = null;\r\n            try {\r\n                createCustomVerificationEmailTemplate(createCustomVerificationEmailTemplateRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(createCustomVerificationEmailTemplateRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.createCustomVerificationEmailTemplateAsync",
	"Comment": "creates a new custom verification email template.for more information about custom verification email templates, see using custom verification email templates in the amazon sesdeveloper guide.you can execute this operation no more than once per second.",
	"Method": "Future<Void> createCustomVerificationEmailTemplateAsync(CreateCustomVerificationEmailTemplateRequest createCustomVerificationEmailTemplateRequest,Future<Void> createCustomVerificationEmailTemplateAsync,CreateCustomVerificationEmailTemplateRequest createCustomVerificationEmailTemplateRequest,AsyncHandler<CreateCustomVerificationEmailTemplateRequest, Void> asyncHandler){\r\n    Void result = null;\r\n    try {\r\n        createCustomVerificationEmailTemplate(createCustomVerificationEmailTemplateRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(createCustomVerificationEmailTemplateRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ObjectMetadata.setHeader",
	"Comment": "for internal use only. sets a specific metadata header value. notintended to be called by external code.",
	"Method": "void setHeader(String key,Object value){\r\n    metadata.put(key, value);\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.VocabularyInfo.withLastModifiedTime",
	"Comment": "the date and time that the vocabulary was last modified.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "VocabularyInfo withLastModifiedTime(java.util.Date lastModifiedTime){\r\n    this.lastModifiedTime = lastModifiedTime;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointsResponse.withItem",
	"Comment": "the list of endpoints.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointsResponse withItem(EndpointResponse item,EndpointsResponse withItem,java.util.Collection<EndpointResponse> item){\r\n    setItem(item);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListSubscriptionsRequest.setNextToken",
	"Comment": "token returned by the previous listsubscriptions request.",
	"Method": "void setNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DescribeConfigurationSetResult.setTrackingOptions",
	"Comment": "the name of the custom open and click tracking domain associated with theconfiguration set.",
	"Method": "void setTrackingOptions(TrackingOptions trackingOptions){\r\n    this.trackingOptions = trackingOptions;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ObjectMetadata.getRestoreExpirationTime",
	"Comment": "returns the time at which an object that has been temporarily restoredfrom amazon glacier will expire, and will need to be restored again inorder to be accessed. returns null if this is not a temporary copy of anobject restored from glacier.",
	"Method": "Date getRestoreExpirationTime(){\r\n    return cloneDate(restoreExpirationTime);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateAccountAuditConfigurationRequest.getAuditCheckConfigurations",
	"Comment": "specifies which audit checks are enabled and disabled for this account.use describeaccountauditconfiguration to see the list of allchecks including those that are currently enabled.note that some data collection may begin immediately when certain checksare enabled. when a check is disabled, any data collected so far inrelation to the check is deleted.you cannot disable a check if it is used by any scheduled audit. you mustfirst delete the check from the scheduled audit or delete the scheduledaudit itself.on the first call to updateaccountauditconfiguration thisparameter is required and must specify at least one enabled check.",
	"Method": "java.util.Map<String, AuditCheckConfiguration> getAuditCheckConfigurations(){\r\n    return auditCheckConfigurations;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial.toObjectMetadata",
	"Comment": "returns the given metadata updated with this content crypto material.",
	"Method": "ObjectMetadata toObjectMetadata(ObjectMetadata metadata,CryptoMode mode,ObjectMetadata toObjectMetadata,ObjectMetadata metadata){\r\n    final byte[] encryptedCEK = getEncryptedCEK();\r\n    metadata.addUserMetadata(Headers.CRYPTO_KEY_V2, Base64.encodeAsString(encryptedCEK));\r\n    final byte[] iv = cipherLite.getIV();\r\n    metadata.addUserMetadata(Headers.CRYPTO_IV, Base64.encodeAsString(iv));\r\n    metadata.addUserMetadata(Headers.MATERIALS_DESCRIPTION, kekMaterialDescAsJson());\r\n    final ContentCryptoScheme scheme = getContentCryptoScheme();\r\n    metadata.addUserMetadata(Headers.CRYPTO_CEK_ALGORITHM, scheme.getCipherAlgorithm());\r\n    final int tagLen = scheme.getTagLengthInBits();\r\n    if (tagLen > 0) {\r\n        metadata.addUserMetadata(Headers.CRYPTO_TAG_LENGTH, String.valueOf(tagLen));\r\n    }\r\n    final String keyWrapAlgo = getKeyWrappingAlgorithm();\r\n    if (keyWrapAlgo != null) {\r\n        metadata.addUserMetadata(Headers.CRYPTO_KEYWRAP_ALGORITHM, keyWrapAlgo);\r\n    }\r\n    return metadata;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.S3Action.setObjectKeyPrefix",
	"Comment": "the key prefix of the amazon s3 bucket. the key prefix is similar to adirectory name that enables you to store similar data under the samedirectory in a bucket.",
	"Method": "void setObjectKeyPrefix(String objectKeyPrefix){\r\n    this.objectKeyPrefix = objectKeyPrefix;\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.GetTranscriptionJobResult.setTranscriptionJob",
	"Comment": "an object that contains the results of the transcription job.",
	"Method": "void setTranscriptionJob(TranscriptionJob transcriptionJob){\r\n    this.transcriptionJob = transcriptionJob;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EmailChannelResponse.withMessagesPerSecond",
	"Comment": "messages per second that can be sentreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EmailChannelResponse withMessagesPerSecond(Integer messagesPerSecond){\r\n    this.messagesPerSecond = messagesPerSecond;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.Message.getImageSmallIconUrl",
	"Comment": "the url that points to the small icon image for the push notificationicon, for example, the app icon.",
	"Method": "String getImageSmallIconUrl(){\r\n    return imageSmallIconUrl;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ActivityResponse.withEnd",
	"Comment": "the actual time the activity was marked cancelled or completed. providedin iso 8601 format.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ActivityResponse withEnd(String end){\r\n    this.end = end;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateApnsChannelRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateApnsChannelRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.AmazonSimpleDBClient.domainMetadata",
	"Comment": "returns information about the domain, including when the domain wascreated, the number of items and attributes in the domain, and thesize of the attribute names and values.",
	"Method": "DomainMetadataResult domainMetadata(DomainMetadataRequest domainMetadataRequest){\r\n    ExecutionContext executionContext = createExecutionContext(domainMetadataRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    Request<DomainMetadataRequest> request = null;\r\n    Response<DomainMetadataResult> response = null;\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    try {\r\n        request = new DomainMetadataRequestMarshaller().marshall(domainMetadataRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        response = invoke(request, new DomainMetadataResultStaxUnmarshaller(), executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.IdentityNotificationAttributes.setHeadersInDeliveryNotificationsEnabled",
	"Comment": "describes whether amazon ses includes the original email headers inamazon sns notifications of type delivery. a value oftrue specifies that amazon ses will include headers indelivery notifications, and a value of false specifies thatamazon ses will not include headers in delivery notifications.",
	"Method": "void setHeadersInDeliveryNotificationsEnabled(Boolean headersInDeliveryNotificationsEnabled){\r\n    this.headersInDeliveryNotificationsEnabled = headersInDeliveryNotificationsEnabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.analytics.StorageClassAnalysisDataExport.withOutputSchemaVersion",
	"Comment": "sets the version of the output schema to use when exporting data",
	"Method": "StorageClassAnalysisDataExport withOutputSchemaVersion(StorageClassAnalysisSchemaVersion outputSchemaVersion,StorageClassAnalysisDataExport withOutputSchemaVersion,String outputSchemaVersion){\r\n    setOutputSchemaVersion(outputSchemaVersion);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.Session.withDuration",
	"Comment": "session duration in millisreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Session withDuration(Long duration){\r\n    this.duration = duration;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.TranscriptionJobSummary.withCreationTime",
	"Comment": "a timestamp that shows when the job was created.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "TranscriptionJobSummary withCreationTime(java.util.Date creationTime){\r\n    this.creationTime = creationTime;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Result.setMaxKeys",
	"Comment": "sets the optional maxkeys parameter indicating the maximumnumber of keys to include in the response.",
	"Method": "void setMaxKeys(int maxKeys){\r\n    this.maxKeys = maxKeys;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.GetCustomVerificationEmailTemplateResult.setFailureRedirectionURL",
	"Comment": "the url that the recipient of the verification email is sent to if his orher address is not successfully verified.",
	"Method": "void setFailureRedirectionURL(String failureRedirectionURL){\r\n    this.failureRedirectionURL = failureRedirectionURL;\r\n}"
}, {
	"Path": "wx.csba.shared.util.codec.SHA1.getFormattedText",
	"Comment": "takes the raw bytes from the digest and formats them correct.",
	"Method": "String getFormattedText(byte[] bytes){\r\n    int len = bytes.length;\r\n    StringBuilder buf = new StringBuilder(len * 2);\r\n    for (int j = 0; j < len; j++) {\r\n        buf.append(HEX_DIGITS[(bytes[j] >> 4) & 0x0f]);\r\n        buf.append(HEX_DIGITS[bytes[j] & 0x0f]);\r\n    }\r\n    return buf.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideoarchivedmedia.model.Fragment.withServerTimestamp",
	"Comment": "the time stamp from the aws server corresponding to the fragment.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Fragment withServerTimestamp(java.util.Date serverTimestamp){\r\n    this.serverTimestamp = serverTimestamp;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListPartsRequest.getMaxParts",
	"Comment": "returns the optional maximum number of parts to be returned in the partlisting.",
	"Method": "Integer getMaxParts(){\r\n    return maxParts;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.UpdateConfigurationSetReputationMetricsEnabledRequest.isEnabled",
	"Comment": "describes whether or not amazon ses will publish reputation metrics forthe configuration set, such as bounce and complaint rates, to amazoncloudwatch.",
	"Method": "Boolean isEnabled(){\r\n    return enabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.iotdata.model.PublishRequest.withTopic",
	"Comment": "the name of the mqtt topic.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PublishRequest withTopic(String topic){\r\n    this.topic = topic;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.TextDetection.withDetectedText",
	"Comment": "the word or line of text recognized by amazon rekognition.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "TextDetection withDetectedText(String detectedText){\r\n    this.detectedText = detectedText;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.internal.CopyCallable.copyPartsInParallel",
	"Comment": "submits a callable for each part to be copied to our thread pool andrecords its corresponding future.",
	"Method": "void copyPartsInParallel(CopyPartRequestFactory requestFactory){\r\n    while (requestFactory.hasMoreRequests()) {\r\n        if (threadPool.isShutdown())\r\n            throw new CancellationException(\"TransferManager has been shutdown\");\r\n        CopyPartRequest request = requestFactory.getNextCopyPartRequest();\r\n        futures.add(threadPool.submit(new CopyPartCallable(s3, request)));\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.ServiceUtils.isMultipartUploadETag",
	"Comment": "returns true if the specified etag was from a multipart upload.",
	"Method": "boolean isMultipartUploadETag(String eTag){\r\n    return eTag.contains(\"-\");\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.deleteConfigurationSetEventDestinationAsync",
	"Comment": "deletes a configuration set event destination. configuration set eventdestinations are associated with configuration sets, which enable you topublish email sending events. for information about using configurationsets, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "Future<DeleteConfigurationSetEventDestinationResult> deleteConfigurationSetEventDestinationAsync(DeleteConfigurationSetEventDestinationRequest deleteConfigurationSetEventDestinationRequest,Future<DeleteConfigurationSetEventDestinationResult> deleteConfigurationSetEventDestinationAsync,DeleteConfigurationSetEventDestinationRequest deleteConfigurationSetEventDestinationRequest,AsyncHandler<DeleteConfigurationSetEventDestinationRequest, DeleteConfigurationSetEventDestinationResult> asyncHandler){\r\n    return executorService.submit(new Callable<DeleteConfigurationSetEventDestinationResult>() {\r\n        public DeleteConfigurationSetEventDestinationResult call() throws Exception {\r\n            DeleteConfigurationSetEventDestinationResult result = null;\r\n            try {\r\n                result = deleteConfigurationSetEventDestination(deleteConfigurationSetEventDestinationRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(deleteConfigurationSetEventDestinationRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.deleteConfigurationSetEventDestinationAsync",
	"Comment": "deletes a configuration set event destination. configuration set eventdestinations are associated with configuration sets, which enable you topublish email sending events. for information about using configurationsets, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "Future<DeleteConfigurationSetEventDestinationResult> deleteConfigurationSetEventDestinationAsync(DeleteConfigurationSetEventDestinationRequest deleteConfigurationSetEventDestinationRequest,Future<DeleteConfigurationSetEventDestinationResult> deleteConfigurationSetEventDestinationAsync,DeleteConfigurationSetEventDestinationRequest deleteConfigurationSetEventDestinationRequest,AsyncHandler<DeleteConfigurationSetEventDestinationRequest, DeleteConfigurationSetEventDestinationResult> asyncHandler){\r\n    DeleteConfigurationSetEventDestinationResult result = null;\r\n    try {\r\n        result = deleteConfigurationSetEventDestination(deleteConfigurationSetEventDestinationRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(deleteConfigurationSetEventDestinationRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListEndpointsByPlatformApplicationRequest.withPlatformApplicationArn",
	"Comment": "platformapplicationarn for listendpointsbyplatformapplicationinputaction.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListEndpointsByPlatformApplicationRequest withPlatformApplicationArn(String platformApplicationArn){\r\n    this.platformApplicationArn = platformApplicationArn;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.InitiateMultipartUploadRequest.getKey",
	"Comment": "returns the key by which to store the new multipart upload, and hence,the eventual object created from the multipart upload.",
	"Method": "String getKey(){\r\n    return key;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.GetPlatformApplicationAttributesRequest.getPlatformApplicationArn",
	"Comment": "platformapplicationarn for getplatformapplicationattributesinput.",
	"Method": "String getPlatformApplicationArn(){\r\n    return platformApplicationArn;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.LabelDetection.getTimestamp",
	"Comment": "time, in milliseconds from the start of the video, that the label wasdetected.",
	"Method": "Long getTimestamp(){\r\n    return timestamp;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ApplicationResponse.withId",
	"Comment": "the unique application id.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ApplicationResponse withId(String id){\r\n    this.id = id;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.EncryptedGetObjectRequest.getExtraMaterialDescription",
	"Comment": "returns the supplemental material description to be used for retrievingthe encryption materials.",
	"Method": "ExtraMaterialsDescription getExtraMaterialDescription(){\r\n    return supplemental;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.Message.getMessageId",
	"Comment": "a unique identifier for the message. message ids are considered uniqueacross all aws accounts for an extended period of time.",
	"Method": "String getMessageId(){\r\n    return messageId;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClient.verifyEmailIdentity",
	"Comment": "adds an email address to the list of identities for your amazon sesaccount in the current aws region and attempts to verify it. as a resultof executing this operation, a verification email is sent to thespecified address.you can execute this operation no more than once per second.",
	"Method": "VerifyEmailIdentityResult verifyEmailIdentity(VerifyEmailIdentityRequest verifyEmailIdentityRequest){\r\n    ExecutionContext executionContext = createExecutionContext(verifyEmailIdentityRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<VerifyEmailIdentityRequest> request = null;\r\n    Response<VerifyEmailIdentityResult> response = null;\r\n    try {\r\n        request = new VerifyEmailIdentityRequestMarshaller().marshall(verifyEmailIdentityRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        response = invoke(request, new VerifyEmailIdentityResultStaxUnmarshaller(), executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMMessage.clearDataEntries",
	"Comment": "removes all the entries added into data.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ADMMessage clearDataEntries(){\r\n    this.data = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DeleteVerifiedEmailAddressRequest.getEmailAddress",
	"Comment": "an email address to be removed from the list of verified addresses.",
	"Method": "String getEmailAddress(){\r\n    return emailAddress;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceRecord.getFace",
	"Comment": "describes the face properties such as the bounding box, face id, image idof the input image, and external image id that you assigned.",
	"Method": "Face getFace(){\r\n    return face;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListVersionsRequest.getMaxResults",
	"Comment": "gets the optional maxresults parameter indicating themaximum number of results to include in the response. amazon s3 mightreturn fewer than this, but will never return more. even ifmaxresults is not specified, amazon s3 will limit the numberof results in the response.",
	"Method": "Integer getMaxResults(){\r\n    return maxResults;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.UpdateReceiptRuleRequest.setRule",
	"Comment": "a data structure that contains the updated receipt rule information.",
	"Method": "void setRule(ReceiptRule rule){\r\n    this.rule = rule;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DescribeConfigurationSetRequest.withConfigurationSetName",
	"Comment": "the name of the configuration set to describe.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DescribeConfigurationSetRequest withConfigurationSetName(String configurationSetName){\r\n    this.configurationSetName = configurationSetName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.SendMessageBatchRequestEntry.withMessageBody",
	"Comment": "body of the message.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendMessageBatchRequestEntry withMessageBody(String messageBody){\r\n    this.messageBody = messageBody;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobRequest.withRegisterEndpoints",
	"Comment": "sets whether the endpoints are registered with amazon pinpoint when theyare imported.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ImportJobRequest withRegisterEndpoints(Boolean registerEndpoints){\r\n    this.registerEndpoints = registerEndpoints;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.EncryptionUtils.calculateCryptoContentLength",
	"Comment": "calculates the length of the encrypted file given the original plaintextfile length and the cipher that will be used for encryption.",
	"Method": "long calculateCryptoContentLength(Cipher symmetricCipher,PutObjectRequest request,ObjectMetadata metadata,long calculateCryptoContentLength,Cipher symmetricCipher,UploadPartRequest request){\r\n    long plaintextLength;\r\n    if (request.getFile() != null) {\r\n        if (request.getPartSize() > 0)\r\n            plaintextLength = request.getPartSize();\r\n        else\r\n            plaintextLength = request.getFile().length();\r\n    } else if (request.getInputStream() != null) {\r\n        plaintextLength = request.getPartSize();\r\n    } else {\r\n        return -1;\r\n    }\r\n    long cipherBlockSize = symmetricCipher.getBlockSize();\r\n    long offset = cipherBlockSize - (plaintextLength % cipherBlockSize);\r\n    return plaintextLength + offset;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.EncryptionUtils.parseJSONInstruction",
	"Comment": "parses instruction data retrieved from s3 and returns a jsonobjectrepresenting the instruction",
	"Method": "Map<String, String> parseJSONInstruction(S3Object instructionObject){\r\n    try {\r\n        String instructionString = convertStreamToString(instructionObject.getObjectContent());\r\n        return JsonUtils.jsonToMap(instructionString);\r\n    } catch (Exception e) {\r\n        throw new AmazonClientException(\"Error parsing JSON instruction file: \" + e.getMessage());\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.TranscriptionJob.getMedia",
	"Comment": "an object that describes the input media for the transcription job.",
	"Method": "Media getMedia(){\r\n    return media;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ConfirmSubscriptionRequest.withAuthenticateOnUnsubscribe",
	"Comment": "disallows unauthenticated unsubscribes of the subscription. if the valueof this parameter is true and the request has an awssignature, then only the topic owner and the subscription owner canunsubscribe the endpoint. the unsubscribe action requires awsauthentication.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ConfirmSubscriptionRequest withAuthenticateOnUnsubscribe(String authenticateOnUnsubscribe){\r\n    this.authenticateOnUnsubscribe = authenticateOnUnsubscribe;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.StartTranscriptionJobRequest.setMedia",
	"Comment": "an object that describes the input media for a transcription job.",
	"Method": "void setMedia(Media media){\r\n    this.media = media;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteBucketMetricsConfigurationRequest.setBucketName",
	"Comment": "sets the name of the bucket from which the metrics configuration is deleted.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.ModerationLabel.withName",
	"Comment": "the label name for the type of content detected in the image.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ModerationLabel withName(String name){\r\n    this.name = name;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteEmailChannelResult.withEmailChannelResponse",
	"Comment": "email channel response.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteEmailChannelResult withEmailChannelResponse(EmailChannelResponse emailChannelResponse){\r\n    this.emailChannelResponse = emailChannelResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceDetail.setLandmarks",
	"Comment": "indicates the location of landmarks on the face. default attribute.",
	"Method": "void setLandmarks(java.util.Collection<Landmark> landmarks){\r\n    if (landmarks == null) {\r\n        this.landmarks = null;\r\n        return;\r\n    }\r\n    this.landmarks = new java.util.ArrayList<Landmark>(landmarks);\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.TagResourceRequest.setTags",
	"Comment": "one or more tags. each tag consists of a tag key and a tag value.",
	"Method": "void setTags(java.util.Collection<Tag> tags){\r\n    if (tags == null) {\r\n        this.tags = null;\r\n        return;\r\n    }\r\n    this.tags = new java.util.ArrayList<Tag>(tags);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CryptoConfiguration.getCryptoProvider",
	"Comment": "returns the crypto provider whose encryption implementation will be usedto encrypt and decrypt data.",
	"Method": "Provider getCryptoProvider(){\r\n    return this.cryptoProvider;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideoarchivedmedia.model.Fragment.setFragmentSizeInBytes",
	"Comment": "the total fragment size, including information about the fragment andcontained media data.",
	"Method": "void setFragmentSizeInBytes(Long fragmentSizeInBytes){\r\n    this.fragmentSizeInBytes = fragmentSizeInBytes;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSAsyncClient.listSubscriptionsByTopicAsync",
	"Comment": "returns a list of the subscriptions to a specific topic. each callreturns a limited list of subscriptions, up to 100. if there are moresubscriptions, a nexttoken is also returned. use thenexttoken parameter in a newlistsubscriptionsbytopic call to get further results.",
	"Method": "Future<ListSubscriptionsByTopicResult> listSubscriptionsByTopicAsync(ListSubscriptionsByTopicRequest listSubscriptionsByTopicRequest,Future<ListSubscriptionsByTopicResult> listSubscriptionsByTopicAsync,ListSubscriptionsByTopicRequest listSubscriptionsByTopicRequest,AsyncHandler<ListSubscriptionsByTopicRequest, ListSubscriptionsByTopicResult> asyncHandler){\r\n    return executorService.submit(new Callable<ListSubscriptionsByTopicResult>() {\r\n        public ListSubscriptionsByTopicResult call() throws Exception {\r\n            ListSubscriptionsByTopicResult result = null;\r\n            try {\r\n                result = listSubscriptionsByTopic(listSubscriptionsByTopicRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(listSubscriptionsByTopicRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSAsyncClient.listSubscriptionsByTopicAsync",
	"Comment": "returns a list of the subscriptions to a specific topic. each callreturns a limited list of subscriptions, up to 100. if there are moresubscriptions, a nexttoken is also returned. use thenexttoken parameter in a newlistsubscriptionsbytopic call to get further results.",
	"Method": "Future<ListSubscriptionsByTopicResult> listSubscriptionsByTopicAsync(ListSubscriptionsByTopicRequest listSubscriptionsByTopicRequest,Future<ListSubscriptionsByTopicResult> listSubscriptionsByTopicAsync,ListSubscriptionsByTopicRequest listSubscriptionsByTopicRequest,AsyncHandler<ListSubscriptionsByTopicRequest, ListSubscriptionsByTopicResult> asyncHandler){\r\n    ListSubscriptionsByTopicResult result = null;\r\n    try {\r\n        result = listSubscriptionsByTopic(listSubscriptionsByTopicRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(listSubscriptionsByTopicRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteApnsSandboxChannelResult.withAPNSSandboxChannelResponse",
	"Comment": "apple development push notification service channel definition.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteApnsSandboxChannelResult withAPNSSandboxChannelResponse(APNSSandboxChannelResponse aPNSSandboxChannelResponse){\r\n    this.aPNSSandboxChannelResponse = aPNSSandboxChannelResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CORSRule.getExposedHeaders",
	"Comment": "returns expose headers of this rule and returns a reference to thisobject for method chaining.",
	"Method": "List<String> getExposedHeaders(){\r\n    return exposedHeaders;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadObjectRequest.withExecutorService",
	"Comment": "configure a custom executor service for concurrent uploads.",
	"Method": "UploadObjectRequest withExecutorService(ExecutorService executorService){\r\n    this.executorService = executorService;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.serverless.proxy.jersey.JerseyServletResponseWriter.writeResponseStatusAndHeaders",
	"Comment": "writes the response status code and headers, returns an outputstream that the jersey application can write to.",
	"Method": "OutputStream writeResponseStatusAndHeaders(long contentLength,ContainerResponse containerResponse){\r\n    Timer.start(\"JERSEY_WRITE_RESPONSE\");\r\n    servletResponse.setStatus(containerResponse.getStatusInfo().getStatusCode());\r\n    for (final Map.Entry<String, List<String>> e : containerResponse.getStringHeaders().entrySet()) {\r\n        for (final String value : e.getValue()) {\r\n            servletResponse.setHeader(e.getKey(), value);\r\n        }\r\n    }\r\n    try {\r\n        Timer.stop(\"JERSEY_WRITE_RESPONSE\");\r\n        return servletResponse.getOutputStream();\r\n    } catch (IOException e) {\r\n        log.error(\"Could not get servlet response output stream\", e);\r\n        Timer.stop(\"JERSEY_WRITE_RESPONSE\");\r\n        throw new InternalServerErrorException(\"Could not get servlet response output stream\", e);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointLocation.setLongitude",
	"Comment": "the longitude of the endpoint location, rounded to one decimal place.",
	"Method": "void setLongitude(Double longitude){\r\n    this.longitude = longitude;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.ChangeMessageVisibilityBatchResultEntry.setId",
	"Comment": "represents a message whose visibility timeout has been changedsuccessfully.",
	"Method": "void setId(String id){\r\n    this.id = id;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.TemplateMetadata.withName",
	"Comment": "the name of the template.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "TemplateMetadata withName(String name){\r\n    this.name = name;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceDetail.getGender",
	"Comment": "gender of the face and the confidence level in the determination.",
	"Method": "Gender getGender(){\r\n    return gender;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.RecognizeCelebritiesResult.setCelebrityFaces",
	"Comment": "details about each celebrity found in the image. amazon rekognition candetect a maximum of 15 celebrities in an image.",
	"Method": "void setCelebrityFaces(java.util.Collection<Celebrity> celebrityFaces){\r\n    if (celebrityFaces == null) {\r\n        this.celebrityFaces = null;\r\n        return;\r\n    }\r\n    this.celebrityFaces = new java.util.ArrayList<Celebrity>(celebrityFaces);\r\n}"
}, {
	"Path": "com.amazonaws.mobile.client.AWSMobileClient.removeUserStateListener",
	"Comment": "removes a listener. this will hold onto references.remove when a lifecycle ends to prevent memory leaks.",
	"Method": "boolean removeUserStateListener(UserStateListener listener){\r\n    synchronized (listeners) {\r\n        int index = listeners.indexOf(listener);\r\n        if (index != -1) {\r\n            this.listeners.remove(index);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.pinpoint.targeting.endpointProfile.EndpointProfile.getAddress",
	"Comment": "returns the address of the endpoint. the token that is returned by the channel selected.",
	"Method": "String getAddress(){\r\n    return this.pinpointContext.getNotificationClient().getDeviceToken();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.VersionListing.setBucketName",
	"Comment": "for internal use only. sets the name of the amazon s3 bucket containingthe versions listed in this s3versionlisting.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteApnsChannelResult.getAPNSChannelResponse",
	"Comment": "apple distribution push notification service channel definition.",
	"Method": "APNSChannelResponse getAPNSChannelResponse(){\r\n    return aPNSChannelResponse;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetFaceDetectionResult.getErrorCode",
	"Comment": "returns the value of the errorcode property for this object.",
	"Method": "String getErrorCode(){\r\n    return errorCode;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.Message.withMediaUrl",
	"Comment": "the url that points to the media resource, for example a .mp4 or .giffile.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Message withMediaUrl(String mediaUrl){\r\n    this.mediaUrl = mediaUrl;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.setRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "void setRequesterPays(boolean isRequesterPays){\r\n    this.isRequesterPays = isRequesterPays;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.InputStreamsTest.testByteRangeCapturingInputStream",
	"Comment": "tests that we can properly capture a byte range with thebyterangecapturinginputstream class.",
	"Method": "void testByteRangeCapturingInputStream(){\r\n    int sampleDataLength = sampleData.length();\r\n    ByteRangeCapturingInputStream in = new ByteRangeCapturingInputStream(new ByteArrayInputStream(sampleData.getBytes(StringUtils.UTF8)), sampleDataLength - 10, sampleDataLength);\r\n    in.mark(100);\r\n    in.read(new byte[sampleDataLength - 10]);\r\n    in.reset();\r\n    in.read(new byte[sampleDataLength]);\r\n    assertEquals(\"9876543210\", new String(in.getBlock(), StringUtils.UTF8));\r\n    in = new ByteRangeCapturingInputStream(new ByteArrayInputStream(sampleData.getBytes(StringUtils.UTF8)), 10, 20);\r\n    in.read(new byte[sampleDataLength]);\r\n    assertEquals(\"1234567890\", new String(in.getBlock(), StringUtils.UTF8));\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.SynthesizeSpeechResult.withRequestCharacters",
	"Comment": "number of characters synthesized.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SynthesizeSpeechResult withRequestCharacters(Integer requestCharacters){\r\n    this.requestCharacters = requestCharacters;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSAsyncClient.listPhoneNumbersOptedOutAsync",
	"Comment": "returns a list of phone numbers that are opted out, meaning you cannotsend sms messages to them.the results for listphonenumbersoptedout are paginated, andeach page returns up to 100 phone numbers. if additional phone numbersare available after the first page of results, then anexttoken string will be returned. to receive the next page,you call listphonenumbersoptedout again using thenexttoken string received from the previous call. when thereare no more records to return, nexttoken will be null.",
	"Method": "Future<ListPhoneNumbersOptedOutResult> listPhoneNumbersOptedOutAsync(ListPhoneNumbersOptedOutRequest listPhoneNumbersOptedOutRequest,Future<ListPhoneNumbersOptedOutResult> listPhoneNumbersOptedOutAsync,ListPhoneNumbersOptedOutRequest listPhoneNumbersOptedOutRequest,AsyncHandler<ListPhoneNumbersOptedOutRequest, ListPhoneNumbersOptedOutResult> asyncHandler){\r\n    return executorService.submit(new Callable<ListPhoneNumbersOptedOutResult>() {\r\n        public ListPhoneNumbersOptedOutResult call() throws Exception {\r\n            ListPhoneNumbersOptedOutResult result = null;\r\n            try {\r\n                result = listPhoneNumbersOptedOut(listPhoneNumbersOptedOutRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(listPhoneNumbersOptedOutRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSAsyncClient.listPhoneNumbersOptedOutAsync",
	"Comment": "returns a list of phone numbers that are opted out, meaning you cannotsend sms messages to them.the results for listphonenumbersoptedout are paginated, andeach page returns up to 100 phone numbers. if additional phone numbersare available after the first page of results, then anexttoken string will be returned. to receive the next page,you call listphonenumbersoptedout again using thenexttoken string received from the previous call. when thereare no more records to return, nexttoken will be null.",
	"Method": "Future<ListPhoneNumbersOptedOutResult> listPhoneNumbersOptedOutAsync(ListPhoneNumbersOptedOutRequest listPhoneNumbersOptedOutRequest,Future<ListPhoneNumbersOptedOutResult> listPhoneNumbersOptedOutAsync,ListPhoneNumbersOptedOutRequest listPhoneNumbersOptedOutRequest,AsyncHandler<ListPhoneNumbersOptedOutRequest, ListPhoneNumbersOptedOutResult> asyncHandler){\r\n    ListPhoneNumbersOptedOutResult result = null;\r\n    try {\r\n        result = listPhoneNumbersOptedOut(listPhoneNumbersOptedOutRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(listPhoneNumbersOptedOutRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.BatchResultErrorEntry.withMessage",
	"Comment": "a message explaining why the action failed on this entry.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "BatchResultErrorEntry withMessage(String message){\r\n    this.message = message;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetCampaignsRequest.withToken",
	"Comment": "the nexttoken string returned on a previous page that you use to get thenext page of results in a paginated response.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetCampaignsRequest withToken(String token){\r\n    this.token = token;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetPersonTrackingResult.withErrorCode",
	"Comment": "sets the value of the errorcode property for this object.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetPersonTrackingResult withErrorCode(String errorCode){\r\n    this.errorCode = errorCode;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CreateAppRequest.withCreateApplicationRequest",
	"Comment": "application request.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreateAppRequest withCreateApplicationRequest(CreateApplicationRequest createApplicationRequest){\r\n    this.createApplicationRequest = createApplicationRequest;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CreateExportJobRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreateExportJobRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.model.ListStreamsResult.withStreamInfoList",
	"Comment": "an array of streaminfo objects.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListStreamsResult withStreamInfoList(StreamInfo streamInfoList,ListStreamsResult withStreamInfoList,java.util.Collection<StreamInfo> streamInfoList){\r\n    setStreamInfoList(streamInfoList);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentReference.withVersion",
	"Comment": "if specified contains a specific version of the segment included.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SegmentReference withVersion(Integer version){\r\n    this.version = version;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transferutility.TransferDBUtil.generateContentValuesForMultiPartUpload",
	"Comment": "generates a contentvalues object to insert into the database with thegiven values for a multipart upload record.",
	"Method": "ContentValues generateContentValuesForMultiPartUpload(String bucket,String key,File file,long fileOffset,int partNumber,String uploadId,long bytesTotal,int isLastPart,ObjectMetadata metadata,CannedAccessControlList cannedAcl){\r\n    final ContentValues values = new ContentValues();\r\n    values.put(TransferTable.COLUMN_TYPE, TransferType.UPLOAD.toString());\r\n    values.put(TransferTable.COLUMN_STATE, TransferState.WAITING.toString());\r\n    values.put(TransferTable.COLUMN_BUCKET_NAME, bucket);\r\n    values.put(TransferTable.COLUMN_KEY, key);\r\n    values.put(TransferTable.COLUMN_FILE, file.getAbsolutePath());\r\n    values.put(TransferTable.COLUMN_BYTES_CURRENT, 0L);\r\n    values.put(TransferTable.COLUMN_BYTES_TOTAL, bytesTotal);\r\n    values.put(TransferTable.COLUMN_IS_MULTIPART, 1);\r\n    values.put(TransferTable.COLUMN_PART_NUM, partNumber);\r\n    values.put(TransferTable.COLUMN_FILE_OFFSET, fileOffset);\r\n    values.put(TransferTable.COLUMN_MULTIPART_ID, uploadId);\r\n    values.put(TransferTable.COLUMN_IS_LAST_PART, isLastPart);\r\n    values.put(TransferTable.COLUMN_IS_ENCRYPTED, 0);\r\n    values.putAll(generateContentValuesForObjectMetadata(metadata));\r\n    if (cannedAcl != null) {\r\n        values.put(TransferTable.COLUMN_CANNED_ACL, cannedAcl.toString());\r\n    }\r\n    return values;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.PersonDetail.getIndex",
	"Comment": "identifier for the person detected person within a video. use to keeptrack of the person throughout the video. the identifier is not stored byamazon rekognition.",
	"Method": "Long getIndex(){\r\n    return index;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMChannelResponse.withLastModifiedBy",
	"Comment": "the user who last updated this channel.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ADMChannelResponse withLastModifiedBy(String lastModifiedBy){\r\n    this.lastModifiedBy = lastModifiedBy;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.describeConfigurationSetAsync",
	"Comment": "returns the details of the specified configuration set. for informationabout using configuration sets, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "Future<DescribeConfigurationSetResult> describeConfigurationSetAsync(DescribeConfigurationSetRequest describeConfigurationSetRequest,Future<DescribeConfigurationSetResult> describeConfigurationSetAsync,DescribeConfigurationSetRequest describeConfigurationSetRequest,AsyncHandler<DescribeConfigurationSetRequest, DescribeConfigurationSetResult> asyncHandler){\r\n    return executorService.submit(new Callable<DescribeConfigurationSetResult>() {\r\n        public DescribeConfigurationSetResult call() throws Exception {\r\n            DescribeConfigurationSetResult result = null;\r\n            try {\r\n                result = describeConfigurationSet(describeConfigurationSetRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(describeConfigurationSetRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.describeConfigurationSetAsync",
	"Comment": "returns the details of the specified configuration set. for informationabout using configuration sets, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "Future<DescribeConfigurationSetResult> describeConfigurationSetAsync(DescribeConfigurationSetRequest describeConfigurationSetRequest,Future<DescribeConfigurationSetResult> describeConfigurationSetAsync,DescribeConfigurationSetRequest describeConfigurationSetRequest,AsyncHandler<DescribeConfigurationSetRequest, DescribeConfigurationSetResult> asyncHandler){\r\n    DescribeConfigurationSetResult result = null;\r\n    try {\r\n        result = describeConfigurationSet(describeConfigurationSetRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(describeConfigurationSetRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.WriteCampaignRequest.isIsPaused",
	"Comment": "indicates whether the campaign is paused. a paused campaign does not sendmessages unless you resume it by setting ispaused to false.",
	"Method": "Boolean isIsPaused(){\r\n    return isPaused;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DefaultPushNotificationMessage.setSubstitutions",
	"Comment": "default message substitutions. can be overridden by individual addresssubstitutions.",
	"Method": "void setSubstitutions(java.util.Map<String, java.util.List<String>> substitutions){\r\n    this.substitutions = substitutions;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Sunglasses.setValue",
	"Comment": "boolean value that indicates whether the face is wearing sunglasses ornot.",
	"Method": "void setValue(Boolean value){\r\n    this.value = value;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartListing.setUploadId",
	"Comment": "sets the upload id value specified in the original request used toidentify which multipart upload contains the parts to list.",
	"Method": "void setUploadId(String uploadId){\r\n    this.uploadId = uploadId;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.buffered.QueueBufferConfig.setLongPollWaitTimeoutSeconds",
	"Comment": "specifies the amount of time, in seconds, the receive call will block onthe server waiting for messages to arrive if the queue is empty when thereceive call is first made. this setting has no effect if long polling isdisabled.",
	"Method": "void setLongPollWaitTimeoutSeconds(int longPollWaitTimeoutSeconds){\r\n    this.longPollWaitTimeoutSeconds = longPollWaitTimeoutSeconds;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.AmazonSimpleDBClient.listDomains",
	"Comment": "the listdomains operation lists all domains associatedwith the access key id. it returns domain names up to the limit set bymaxnumberofdomains. a nexttoken is returned if there are more thanmaxnumberofdomains domains. callinglistdomains successive times with thenexttoken provided by the operation returns up tomaxnumberofdomains more domain names with each successiveoperation call.",
	"Method": "ListDomainsResult listDomains(ListDomainsRequest listDomainsRequest,ListDomainsResult listDomains){\r\n    return listDomains(new ListDomainsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteEndpointRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteEndpointRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Request.getMaxKeys",
	"Comment": "gets the optional maxkeys parameter indicating the maximumnumber of keys to include in the response. amazon s3 might return fewerkeys than specified, but will never return more. even if the optionalparameter is not specified, amazon s3 will limit the number of results inthe response.",
	"Method": "Integer getMaxKeys(){\r\n    return maxKeys;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CORSRule.setId",
	"Comment": "sets the id of this rule. rules must be less than 255 alphanumericcharacters, and must be unique for a bucket. if you do not assign an id,one will be generated.",
	"Method": "void setId(String id){\r\n    this.id = id;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectAclRequest.setKey",
	"Comment": "sets the key under which the object whose acl to be retrieved is stored.",
	"Method": "void setKey(String key){\r\n    s3ObjectIdBuilder.setKey(key);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.getInputStream",
	"Comment": "returns the stream containing the data to upload for the new part.",
	"Method": "InputStream getInputStream(){\r\n    return inputStream;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.amazonmobileanalytics.MobileAnalyticsManager.getInstance",
	"Comment": "returns the instance of mobileanalyticsmanager associated with the givenappid",
	"Method": "MobileAnalyticsManager getInstance(String appId){\r\n    synchronized (instanceMap) {\r\n        return instanceMap.get(appId);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSSandboxChannelResponse.withHasTokenKey",
	"Comment": "indicates whether the channel is configured with a key for apns tokenauthentication. provide a token key by setting the tokenkey attribute.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSSandboxChannelResponse withHasTokenKey(Boolean hasTokenKey){\r\n    this.hasTokenKey = hasTokenKey;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentDimensions.clearAttributesEntries",
	"Comment": "removes all the entries added into attributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SegmentDimensions clearAttributesEntries(){\r\n    this.attributes = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.S3Object.close",
	"Comment": "releases any underlying system resources. if the resources are alreadyreleased then invoking this method has no effect.",
	"Method": "void close(){\r\n    if (getObjectContent() != null) {\r\n        getObjectContent().close();\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.GetAccountSendingEnabledResult.setEnabled",
	"Comment": "describes whether email sending is enabled or disabled for your amazonses account in the current aws region.",
	"Method": "void setEnabled(Boolean enabled){\r\n    this.enabled = enabled;\r\n}"
}, {
	"Path": "com.amazonaws.serverless.proxy.spring.SpringLambdaContainerHandler.getApplicationInitializer",
	"Comment": "returns the custom web application initializer used by the object. the custom application initializer gives you accessto the dispatcher servlet.",
	"Method": "LambdaSpringApplicationInitializer getApplicationInitializer(){\r\n    return initializer;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobRequest.isRegisterEndpoints",
	"Comment": "sets whether the endpoints are registered with amazon pinpoint when theyare imported.",
	"Method": "Boolean isRegisterEndpoints(){\r\n    return registerEndpoints;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.TransferManagerConfiguration.setMinimumUploadPartSize",
	"Comment": "sets the minimum part size for upload parts. decreasing the minimum partsize causes multipart uploads to be split into a larger number of smallerparts. setting this value too low has a negative effect on transferspeeds, causing extra latency and network communication for each part.",
	"Method": "void setMinimumUploadPartSize(long minimumUploadPartSize){\r\n    this.minimumUploadPartSize = minimumUploadPartSize;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial.cek",
	"Comment": "returns the content encrypting key unwrapped or decrypted.note if kmsis used for key protection, a remote call will be made to kms to decryptthe ciphertext blob.",
	"Method": "SecretKey cek(byte[] cekSecured,String keyWrapAlgo,EncryptionMaterials materials,Provider securityProvider,ContentCryptoScheme contentCryptoScheme,AWSKMSClient kms){\r\n    if (isKMSKeyWrapped(keyWrapAlgo)) {\r\n        return cekByKMS(cekSecured, keyWrapAlgo, materials, contentCryptoScheme, kms);\r\n    }\r\n    Key kek;\r\n    if (materials.getKeyPair() != null) {\r\n        kek = materials.getKeyPair().getPrivate();\r\n        if (kek == null) {\r\n            throw new AmazonClientException(\"Key encrypting key not available\");\r\n        }\r\n    } else {\r\n        kek = materials.getSymmetricKey();\r\n        if (kek == null) {\r\n            throw new AmazonClientException(\"Key encrypting key not available\");\r\n        }\r\n    }\r\n    try {\r\n        if (keyWrapAlgo != null) {\r\n            final Cipher cipher = securityProvider == null ? Cipher.getInstance(keyWrapAlgo) : Cipher.getInstance(keyWrapAlgo, securityProvider);\r\n            cipher.init(Cipher.UNWRAP_MODE, kek);\r\n            return (SecretKey) cipher.unwrap(cekSecured, keyWrapAlgo, Cipher.SECRET_KEY);\r\n        }\r\n        Cipher cipher;\r\n        if (securityProvider != null) {\r\n            cipher = Cipher.getInstance(kek.getAlgorithm(), securityProvider);\r\n        } else {\r\n            cipher = Cipher.getInstance(kek.getAlgorithm());\r\n        }\r\n        cipher.init(Cipher.DECRYPT_MODE, kek);\r\n        final byte[] decryptedSymmetricKeyBytes = cipher.doFinal(cekSecured);\r\n        return new SecretKeySpec(decryptedSymmetricKeyBytes, JceEncryptionConstants.SYMMETRIC_KEY_ALGORITHM);\r\n    } catch (final Exception e) {\r\n        throw new AmazonClientException(\"Unable to decrypt symmetric key from object metadata\", e);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PutInstructionFileRequest.getMaterialsDescription",
	"Comment": "returns the material description for the new instruction file.",
	"Method": "Map<String, String> getMaterialsDescription(){\r\n    return matDesc == null ? encryptionMaterials.getMaterialsDescription() : matDesc;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.CreateQueueResult.withQueueUrl",
	"Comment": "the url for the created amazon sqs queue.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreateQueueResult withQueueUrl(String queueUrl){\r\n    this.queueUrl = queueUrl;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointMessageResult.withAddress",
	"Comment": "address that endpoint message was delivered to.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointMessageResult withAddress(String address){\r\n    this.address = address;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSVoipSandboxChannelResponse.isHasTokenKey",
	"Comment": "if the channel is registered with a token key for authentication.",
	"Method": "Boolean isHasTokenKey(){\r\n    return hasTokenKey;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.GetQueueUrlResult.withQueueUrl",
	"Comment": "the url for the queue.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetQueueUrlResult withQueueUrl(String queueUrl){\r\n    this.queueUrl = queueUrl;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignSmsMessage.withBody",
	"Comment": "the sms text body.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CampaignSmsMessage withBody(String body){\r\n    this.body = body;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.ComparedFace.withQuality",
	"Comment": "identifies face image brightness and sharpness.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ComparedFace withQuality(ImageQuality quality){\r\n    this.quality = quality;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.PutRecordsResultEntry.getErrorCode",
	"Comment": "the error code for an individual record result. errorcodescan be either provisionedthroughputexceededexception orinternalfailure.",
	"Method": "String getErrorCode(){\r\n    return errorCode;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.RestUtilsTest.testCanonicalStringToSignParameters",
	"Comment": "tests that we correctly include all appropriate parameters in thecanonical string to sign.",
	"Method": "void testCanonicalStringToSignParameters(){\r\n    final DefaultRequest<Void> request = new DefaultRequest<Void>(\"service\");\r\n    request.addParameter(\"x-amz-foo\", \"bar\");\r\n    request.addParameter(\"logging\", \"true\");\r\n    request.addParameter(\"fake\", \"fake\");\r\n    final String canonicalString = RestUtils.makeS3CanonicalString(\"GET\", \"resource\", request, null);\r\n    assertTrue(canonicalString.contains(\"x-amz-foo:bar\"));\r\n    assertTrue(canonicalString.contains(\"logging=true\"));\r\n    assertFalse(canonicalString.contains(\"fake=\"));\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.NumberValidateResponse.setTimezone",
	"Comment": "the time zone for the location where the phone number was originallyregistered.",
	"Method": "void setTimezone(String timezone){\r\n    this.timezone = timezone;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignResponse.withApplicationId",
	"Comment": "the id of the application to which the campaign applies.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CampaignResponse withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteObjectRequest.getBucketName",
	"Comment": "gets the name of the amazon s3 bucket containing the object todelete.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CreateReceiptRuleRequest.withRuleSetName",
	"Comment": "the name of the rule set that the receipt rule will be added to.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreateReceiptRuleRequest withRuleSetName(String ruleSetName){\r\n    this.ruleSetName = ruleSetName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentImportResource.clearChannelCountsEntries",
	"Comment": "removes all the entries added into channelcounts.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SegmentImportResource clearChannelCountsEntries(){\r\n    this.channelCounts = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GPSPointDimension.withRangeInKilometers",
	"Comment": "range in kilometers from the coordinate.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GPSPointDimension withRangeInKilometers(Double rangeInKilometers){\r\n    this.rangeInKilometers = rangeInKilometers;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketReplicationConfiguration.getRoleARN",
	"Comment": "returns the iam role associated with this replication configuration.",
	"Method": "String getRoleARN(){\r\n    return roleARN;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SetIdentityFeedbackForwardingEnabledRequest.isForwardingEnabled",
	"Comment": "sets whether amazon ses will forward bounce and complaint notificationsas email. true specifies that amazon ses will forward bounceand complaint notifications as email, in addition to any amazon sns topicpublishing otherwise specified. false specifies that amazonses will publish bounce and complaint notifications only through amazonsns. this value can only be set to false when amazon snstopics are set for both bounce and complaintnotification types.",
	"Method": "Boolean isForwardingEnabled(){\r\n    return forwardingEnabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.PutRecordBatchResponseEntry.withErrorMessage",
	"Comment": "the error message for an individual record result.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PutRecordBatchResponseEntry withErrorMessage(String errorMessage){\r\n    this.errorMessage = errorMessage;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.NumberValidateResponse.setCounty",
	"Comment": "the county where the phone number was originally registered.",
	"Method": "void setCounty(String county){\r\n    this.county = county;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetAppRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetAppRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.VideoMetadata.withCodec",
	"Comment": "type of compression used in the analyzed video.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "VideoMetadata withCodec(String codec){\r\n    this.codec = codec;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.Template.withSubjectPart",
	"Comment": "the subject line of the email.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Template withSubjectPart(String subjectPart){\r\n    this.subjectPart = subjectPart;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ListResourceTagsResult.isTruncated",
	"Comment": "a flag that indicates whether there are more items in the list. when thisvalue is true, the list in this response is truncated. to get more items,pass the value of the nextmarker element in this response tothe marker parameter in a subsequent request.",
	"Method": "Boolean isTruncated(){\r\n    return truncated;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.Schedule.getEndTime",
	"Comment": "the scheduled time that the campaign ends in iso 8601 format.",
	"Method": "String getEndTime(){\r\n    return endTime;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.internal.TransferManagerUtils.getRequestFile",
	"Comment": "convenience method for getting the file specified in a request.",
	"Method": "File getRequestFile(PutObjectRequest putObjectRequest){\r\n    if (putObjectRequest.getFile() != null)\r\n        return putObjectRequest.getFile();\r\n    return null;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketPolicyRequest.setBucketName",
	"Comment": "sets the name of the amazon s3 bucket whose policy is being set.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.ListDeadLetterSourceQueuesResult.withQueueUrls",
	"Comment": "a list of source queue urls that have the redrivepolicy queue attributeconfigured with a dead letter queue.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListDeadLetterSourceQueuesResult withQueueUrls(String queueUrls,ListDeadLetterSourceQueuesResult withQueueUrls,java.util.Collection<String> queueUrls){\r\n    setQueueUrls(queueUrls);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ListGrantsResult.setTruncated",
	"Comment": "a flag that indicates whether there are more items in the list. when thisvalue is true, the list in this response is truncated. to get more items,pass the value of the nextmarker element in this response tothe marker parameter in a subsequent request.",
	"Method": "void setTruncated(Boolean truncated){\r\n    this.truncated = truncated;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSVoipSandboxChannelResponse.getHasTokenKey",
	"Comment": "if the channel is registered with a token key for authentication.",
	"Method": "Boolean getHasTokenKey(){\r\n    return hasTokenKey;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DefaultPushNotificationMessage.clearDataEntries",
	"Comment": "removes all the entries added into data.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DefaultPushNotificationMessage clearDataEntries(){\r\n    this.data = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketAccelerateConfigurationRequest.setAccelerateConfiguration",
	"Comment": "sets the new accelerate configuration for the specified bucket.",
	"Method": "void setAccelerateConfiguration(BucketAccelerateConfiguration accelerateConfiguration){\r\n    this.accelerateConfiguration = accelerateConfiguration;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClient.updateReceiptRule",
	"Comment": "updates a receipt rule.for information about managing receipt rules, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "UpdateReceiptRuleResult updateReceiptRule(UpdateReceiptRuleRequest updateReceiptRuleRequest){\r\n    ExecutionContext executionContext = createExecutionContext(updateReceiptRuleRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<UpdateReceiptRuleRequest> request = null;\r\n    Response<UpdateReceiptRuleResult> response = null;\r\n    try {\r\n        request = new UpdateReceiptRuleRequestMarshaller().marshall(updateReceiptRuleRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        response = invoke(request, new UpdateReceiptRuleResultStaxUnmarshaller(), executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateIndexingConfigurationRequest.withThingIndexingConfiguration",
	"Comment": "thing indexing configuration.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateIndexingConfigurationRequest withThingIndexingConfiguration(ThingIndexingConfiguration thingIndexingConfiguration){\r\n    this.thingIndexingConfiguration = thingIndexingConfiguration;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.MetricFilter.withMetricTransformations",
	"Comment": "the metric transformations.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "MetricFilter withMetricTransformations(MetricTransformation metricTransformations,MetricFilter withMetricTransformations,java.util.Collection<MetricTransformation> metricTransformations){\r\n    setMetricTransformations(metricTransformations);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceDetail.getAgeRange",
	"Comment": "the estimated age range, in years, for the face. low represents thelowest estimated age and high represents the highest estimated age.",
	"Method": "AgeRange getAgeRange(){\r\n    return ageRange;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ReceiptRuleSetMetadata.withCreatedTimestamp",
	"Comment": "the date and time the receipt rule set was created.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ReceiptRuleSetMetadata withCreatedTimestamp(java.util.Date createdTimestamp){\r\n    this.createdTimestamp = createdTimestamp;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.AmazonS3Client.setNotificationThreshold",
	"Comment": "sets the number of kbytes that need to be written before updates to thelistener occur.",
	"Method": "void setNotificationThreshold(int threshold){\r\n    this.notificationThreshold = threshold;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateApnsVoipSandboxChannelRequest.withAPNSVoipSandboxChannelRequest",
	"Comment": "apple voip developer push notification service channel definition.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateApnsVoipSandboxChannelRequest withAPNSVoipSandboxChannelRequest(APNSVoipSandboxChannelRequest aPNSVoipSandboxChannelRequest){\r\n    this.aPNSVoipSandboxChannelRequest = aPNSVoipSandboxChannelRequest;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.IdentityNotificationAttributes.withHeadersInDeliveryNotificationsEnabled",
	"Comment": "describes whether amazon ses includes the original email headers inamazon sns notifications of type delivery. a value oftrue specifies that amazon ses will include headers indelivery notifications, and a value of false specifies thatamazon ses will not include headers in delivery notifications.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "IdentityNotificationAttributes withHeadersInDeliveryNotificationsEnabled(Boolean headersInDeliveryNotificationsEnabled){\r\n    this.headersInDeliveryNotificationsEnabled = headersInDeliveryNotificationsEnabled;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSVoipChannelRequest.withEnabled",
	"Comment": "if the channel is enabled for sending messages.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSVoipChannelRequest withEnabled(Boolean enabled){\r\n    this.enabled = enabled;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.InitiateMultipartUploadRequest.setBucketName",
	"Comment": "sets the name of the bucket in which to create the new multipart upload,and hence, the eventual object created from the multipart upload.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transferutility.UploadTask.createPutObjectRequest",
	"Comment": "creates a putobjectrequest from the data in the transferrecord",
	"Method": "PutObjectRequest createPutObjectRequest(TransferRecord upload){\r\n    final File file = new File(upload.file);\r\n    final PutObjectRequest putObjectRequest = new PutObjectRequest(upload.bucketName, upload.key, file);\r\n    final ObjectMetadata om = new ObjectMetadata();\r\n    om.setContentLength(file.length());\r\n    if (upload.headerCacheControl != null) {\r\n        om.setCacheControl(upload.headerCacheControl);\r\n    }\r\n    if (upload.headerContentDisposition != null) {\r\n        om.setContentDisposition(upload.headerContentDisposition);\r\n    }\r\n    if (upload.headerContentEncoding != null) {\r\n        om.setContentEncoding(upload.headerContentEncoding);\r\n    }\r\n    if (upload.headerContentType != null) {\r\n        om.setContentType(upload.headerContentType);\r\n    } else {\r\n        om.setContentType(Mimetypes.getInstance().getMimetype(file));\r\n    }\r\n    if (upload.headerStorageClass != null) {\r\n        putObjectRequest.setStorageClass(upload.headerStorageClass);\r\n    }\r\n    if (upload.expirationTimeRuleId != null) {\r\n        om.setExpirationTimeRuleId(upload.expirationTimeRuleId);\r\n    }\r\n    if (upload.httpExpires != null) {\r\n        om.setHttpExpiresDate(new Date(Long.valueOf(upload.httpExpires)));\r\n    }\r\n    if (upload.sseAlgorithm != null) {\r\n        om.setSSEAlgorithm(upload.sseAlgorithm);\r\n    }\r\n    if (upload.userMetadata != null) {\r\n        om.setUserMetadata(upload.userMetadata);\r\n        String objectTag = upload.userMetadata.get(Headers.S3_TAGGING);\r\n        if (objectTag != null) {\r\n            try {\r\n                String[] tags = objectTag.split(OBJECT_TAGS_DELIMITER);\r\n                List<Tag> tagList = new ArrayList<Tag>();\r\n                for (String tag : tags) {\r\n                    String[] tagParts = tag.split(OBJECT_TAG_KEY_VALUE_SEPARATOR);\r\n                    tagList.add(new Tag(tagParts[0], tagParts[1]));\r\n                }\r\n                putObjectRequest.setTagging(new ObjectTagging(tagList));\r\n            } catch (Exception exception) {\r\n                LOGGER.error(\"Error in passing the object tags as request headers.\", exception);\r\n            }\r\n        }\r\n        String redirectLocation = upload.userMetadata.get(Headers.REDIRECT_LOCATION);\r\n        if (redirectLocation != null) {\r\n            putObjectRequest.setRedirectLocation(redirectLocation);\r\n        }\r\n        String isRequesterPays = upload.userMetadata.get(Headers.REQUESTER_PAYS_HEADER);\r\n        if (isRequesterPays != null) {\r\n            putObjectRequest.setRequesterPays(REQUESTER_PAYS.equals(isRequesterPays) ? true : false);\r\n        }\r\n    }\r\n    if (upload.md5 != null) {\r\n        om.setContentMD5(upload.md5);\r\n    }\r\n    if (upload.sseKMSKey != null) {\r\n        putObjectRequest.setSSEAwsKeyManagementParams(new SSEAwsKeyManagementParams(upload.sseKMSKey));\r\n    }\r\n    putObjectRequest.setMetadata(om);\r\n    putObjectRequest.setCannedAcl(getCannedAclFromString(upload.cannedAcl));\r\n    return putObjectRequest;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.MetricFilterMatchRecord.withExtractedValues",
	"Comment": "the values extracted from the event data by the filter.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "MetricFilterMatchRecord withExtractedValues(java.util.Map<String, String> extractedValues){\r\n    this.extractedValues = extractedValues;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.Item.withName",
	"Comment": "the name of the item.returns a reference to this object so that method calls can be chained together.",
	"Method": "Item withName(String name){\r\n    this.name = name;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.BouncedRecipientInfo.setRecipientArn",
	"Comment": "this parameter is used only for sending authorization. it is the arn ofthe identity that is associated with the sending authorization policythat permits you to receive email for the recipient of the bounced email.for more information about sending authorization, see the amazon ses developer guide.",
	"Method": "void setRecipientArn(String recipientArn){\r\n    this.recipientArn = recipientArn;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.DisableEnhancedMonitoringResult.setCurrentShardLevelMetrics",
	"Comment": "represents the current state of the metrics that are in the enhancedstate before the operation.",
	"Method": "void setCurrentShardLevelMetrics(java.util.Collection<String> currentShardLevelMetrics){\r\n    if (currentShardLevelMetrics == null) {\r\n        this.currentShardLevelMetrics = null;\r\n        return;\r\n    }\r\n    this.currentShardLevelMetrics = new java.util.ArrayList<String>(currentShardLevelMetrics);\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceDetail.getMustache",
	"Comment": "indicates whether or not the face has a mustache, and the confidencelevel in the determination.",
	"Method": "Mustache getMustache(){\r\n    return mustache;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SendUsersMessageRequest.withMessageConfiguration",
	"Comment": "message definitions for the default message and any messages that aretailored for specific channels.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendUsersMessageRequest withMessageConfiguration(DirectMessageConfiguration messageConfiguration){\r\n    this.messageConfiguration = messageConfiguration;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SMSChannelResponse.withHasCredential",
	"Comment": "not used. retained for backwards compatibility.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SMSChannelResponse withHasCredential(Boolean hasCredential){\r\n    this.hasCredential = hasCredential;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.EncryptionUtils.buildInstructionFromInstructionFile",
	"Comment": "builds an instruction object from the contents of an instruction file.",
	"Method": "EncryptionInstruction buildInstructionFromInstructionFile(S3Object instructionFile,EncryptionMaterials materials,Provider cryptoProvider,EncryptionInstruction buildInstructionFromInstructionFile,S3Object instructionFile,EncryptionMaterialsProvider materialsProvider,Provider cryptoProvider){\r\n    Map<String, String> instructionJSON = parseJSONInstruction(instructionFile);\r\n    String encryptedSymmetricKeyB64 = instructionJSON.get(Headers.CRYPTO_KEY);\r\n    String ivB64 = instructionJSON.get(Headers.CRYPTO_IV);\r\n    String materialsDescriptionString = instructionJSON.get(Headers.MATERIALS_DESCRIPTION);\r\n    Map<String, String> materialsDescription = convertJSONToMap(materialsDescriptionString);\r\n    byte[] encryptedSymmetricKey = Base64.decode(encryptedSymmetricKeyB64);\r\n    byte[] iv = Base64.decode(ivB64);\r\n    if (encryptedSymmetricKey == null || iv == null) {\r\n        throw new AmazonClientException(String.format(\"Necessary encryption info not found in the instruction file '%s' in bucket '%s'\", instructionFile.getKey(), instructionFile.getBucketName()));\r\n    }\r\n    EncryptionMaterials materials = retrieveOriginalMaterials(materialsDescription, materialsProvider);\r\n    if (materials == null) {\r\n        throw new AmazonClientException(String.format(\"Unable to retrieve the encryption materials that originally \" + \"encrypted object corresponding to instruction file '%s' in bucket '%s'.\", instructionFile.getKey(), instructionFile.getBucketName()));\r\n    }\r\n    SecretKey symmetricKey = getDecryptedSymmetricKey(encryptedSymmetricKey, materials, cryptoProvider);\r\n    CipherFactory cipherFactory = new CipherFactory(symmetricKey, Cipher.DECRYPT_MODE, iv, cryptoProvider);\r\n    return new EncryptionInstruction(materialsDescription, encryptedSymmetricKey, symmetricKey, cipherFactory);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EventStream.setApplicationId",
	"Comment": "the id of the application from which events should be published.",
	"Method": "void setApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignLimits.withDaily",
	"Comment": "the maximum number of messages that the campaign can send daily.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CampaignLimits withDaily(Integer daily){\r\n    this.daily = daily;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SendMessagesResult.withMessageResponse",
	"Comment": "send message response.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendMessagesResult withMessageResponse(MessageResponse messageResponse){\r\n    this.messageResponse = messageResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ReceiptAction.getWorkmailAction",
	"Comment": "calls amazon workmail and, optionally, publishes a notification to amazonamazon sns.",
	"Method": "WorkmailAction getWorkmailAction(){\r\n    return workmailAction;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ReEncryptRequest.withDestinationEncryptionContext",
	"Comment": "encryption context to use when the data is reencrypted.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ReEncryptRequest withDestinationEncryptionContext(java.util.Map<String, String> destinationEncryptionContext){\r\n    this.destinationEncryptionContext = destinationEncryptionContext;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.UpdateCondition.getExists",
	"Comment": "a value specifying whether or not the specified attribute must existwith the specified value in order for the update condition to besatisfied. specify true if the attribute must exist forthe update condition to be satisfied. specify false ifthe attribute should not exist in order for the update condition to besatisfied.",
	"Method": "Boolean getExists(){\r\n    return exists;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Request.withFetchOwner",
	"Comment": "sets the optional fetch owner flag. the owner field is not present inlistobjectsv2 results by default. if this flag is set to true the ownerfield will be included.",
	"Method": "ListObjectsV2Request withFetchOwner(boolean fetchOwner){\r\n    setFetchOwner(fetchOwner);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetSegmentVersionsRequest.setToken",
	"Comment": "the nexttoken string returned on a previous page that you use to get thenext page of results in a paginated response.",
	"Method": "void setToken(String token){\r\n    this.token = token;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyPartRequest.setDestinationBucketName",
	"Comment": "sets the destination bucket name which will contain the new, copiedobject.",
	"Method": "void setDestinationBucketName(String destinationBucketName){\r\n    this.destinationBucketName = destinationBucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.CreateStreamProcessorRequest.setInput",
	"Comment": "kinesis video stream stream that provides the source streaming video. ifyou are using the aws cli, the parameter name isstreamprocessorinput.",
	"Method": "void setInput(StreamProcessorInput input){\r\n    this.input = input;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.IdentityMailFromDomainAttributes.setMailFromDomain",
	"Comment": "the custom mail from domain that the identity is configured to use.",
	"Method": "void setMailFromDomain(String mailFromDomain){\r\n    this.mailFromDomain = mailFromDomain;\r\n}"
}, {
	"Path": "com.amazonaws.serverless.proxy.model.ContainerConfig.enableLocalhost",
	"Comment": "enables localhost custom domain name for testing. this setting should be used only in localwith sam local",
	"Method": "void enableLocalhost(){\r\n    customDomainNames.add(\"localhost\");\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SendMessagesRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendMessagesRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointRequest.withMetrics",
	"Comment": "custom metrics that your app reports to amazon pinpoint.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointRequest withMetrics(java.util.Map<String, Double> metrics){\r\n    this.metrics = metrics;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EventItemResponse.withStatusCode",
	"Comment": "the status code to respond with for a particular event idreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EventItemResponse withStatusCode(Integer statusCode){\r\n    this.statusCode = statusCode;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial.doCreate",
	"Comment": "returns a new instance of contentcryptomaterial for thegiven input parameters by using the specified content crypto scheme, ands3 crypto scheme.note network calls are involved if the cek is to be protected by kms.",
	"Method": "ContentCryptoMaterial doCreate(SecretKey cek,byte[] iv,EncryptionMaterials kekMaterials,ContentCryptoScheme contentCryptoScheme,S3CryptoScheme targetS3CryptoScheme,Provider provider,AWSKMSClient kms,AmazonWebServiceRequest req){\r\n    final SecuredCEK cekSecured = secureCEK(cek, kekMaterials, targetS3CryptoScheme.getKeyWrapScheme(), targetS3CryptoScheme.getSecureRandom(), provider, kms, req);\r\n    return wrap(cek, iv, contentCryptoScheme, provider, cekSecured);\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.FilterLogEventsResult.withEvents",
	"Comment": "the matched events.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "FilterLogEventsResult withEvents(FilteredLogEvent events,FilterLogEventsResult withEvents,java.util.Collection<FilteredLogEvent> events){\r\n    setEvents(events);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.EncryptionUtils.generateInstruction",
	"Comment": "generates an instruction that will be used to encrypt an object.",
	"Method": "EncryptionInstruction generateInstruction(EncryptionMaterials materials,Provider cryptoProvider,EncryptionInstruction generateInstruction,EncryptionMaterialsProvider materialsProvider,Provider cryptoProvider,EncryptionInstruction generateInstruction,EncryptionMaterialsProvider materialsProvider,Map<String, String> materialsDescription,Provider cryptoProvider){\r\n    return buildInstruction(materialsProvider.getEncryptionMaterials(materialsDescription), cryptoProvider);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.setSourceKey",
	"Comment": "sets the source bucket key under which the source object to be copied isstored.",
	"Method": "void setSourceKey(String sourceKey){\r\n    this.sourceKey = sourceKey;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSClient.checkIfPhoneNumberIsOptedOut",
	"Comment": "accepts a phone number and indicates whether the phone holder has optedout of receiving sms messages from your account. you cannot send smsmessages to a number that is opted out.to resume sending messages, you can opt in the number by using theoptinphonenumber action.",
	"Method": "CheckIfPhoneNumberIsOptedOutResult checkIfPhoneNumberIsOptedOut(CheckIfPhoneNumberIsOptedOutRequest checkIfPhoneNumberIsOptedOutRequest){\r\n    ExecutionContext executionContext = createExecutionContext(checkIfPhoneNumberIsOptedOutRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<CheckIfPhoneNumberIsOptedOutRequest> request = null;\r\n    Response<CheckIfPhoneNumberIsOptedOutResult> response = null;\r\n    try {\r\n        request = new CheckIfPhoneNumberIsOptedOutRequestMarshaller().marshall(checkIfPhoneNumberIsOptedOutRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        response = invoke(request, new CheckIfPhoneNumberIsOptedOutResultStaxUnmarshaller(), executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketInventoryConfigurationsRequest.setBucketName",
	"Comment": "sets the name of the amazon s3 bucket whose inventory configurations are to be listed.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListPartsRequest.getKey",
	"Comment": "returns the key of the associated multipart upload whose parts are beinglisted.",
	"Method": "String getKey(){\r\n    return key;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CompleteMultipartUploadRequest.setKey",
	"Comment": "sets the key under which the multipart upload to complete is stored.",
	"Method": "void setKey(String key){\r\n    this.key = key;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.ContentModerationDetection.withTimestamp",
	"Comment": "time, in milliseconds from the beginning of the video, that themoderation label was detected.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ContentModerationDetection withTimestamp(Long timestamp){\r\n    this.timestamp = timestamp;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.GetSpeechSynthesisTaskResult.withSynthesisTask",
	"Comment": "synthesistask object that provides information from the requested task,including output format, creation time, task status, and so on.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetSpeechSynthesisTaskResult withSynthesisTask(SynthesisTask synthesisTask){\r\n    this.synthesisTask = synthesisTask;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteEventStreamRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteEventStreamRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.pinpoint.internal.core.util.DateUtil.createLocaleIndependentDateFormatter",
	"Comment": "creates a dateformat object using the specified format string that isindependent of locale",
	"Method": "DateFormat createLocaleIndependentDateFormatter(String dateFormatString){\r\n    return new SimpleDateFormat(dateFormatString, Locale.US);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.EncryptionMaterials.getAccessor",
	"Comment": "returns null since the encryptionmaterials base class does not have a materials accessor.subclasses may override this method.",
	"Method": "EncryptionMaterialsAccessor getAccessor(){\r\n    return null;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketInventoryConfigurationsRequest.getBucketName",
	"Comment": "gets the name of the amazon s3 bucket whoseinventory configurations are to be listed.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.TransferManager.doDownload",
	"Comment": "same as public interface, but adds a state listener so that callers canbe notified of state changes to the download.",
	"Method": "Download doDownload(GetObjectRequest getObjectRequest,File file,TransferStateChangeListener stateListener,S3ProgressListener s3progressListener,boolean resumeExistingDownload){\r\n    appendSingleObjectUserAgent(getObjectRequest);\r\n    final String description = \"Downloading from \" + getObjectRequest.getBucketName() + \"/\" + getObjectRequest.getKey();\r\n    final TransferProgress transferProgress = new TransferProgress();\r\n    final S3ProgressListenerChain listenerChain = new S3ProgressListenerChain(new TransferProgressUpdatingListener(transferProgress), getObjectRequest.getGeneralProgressListener(), s3progressListener);\r\n    final ProgressListenerChain listeners = new ProgressListenerChain(new ProgressEventFilter() {\r\n        @Override\r\n        public ProgressEvent filter(ProgressEvent progressEvent) {\r\n            if (progressEvent.getEventCode() == ProgressEvent.COMPLETED_EVENT_CODE) {\r\n                progressEvent.setEventCode(0);\r\n            }\r\n            return progressEvent;\r\n        }\r\n    }, listenerChain);\r\n    getObjectRequest.setGeneralProgressListener(listeners);\r\n    final GetObjectMetadataRequest getObjectMetadataRequest = new GetObjectMetadataRequest(getObjectRequest.getBucketName(), getObjectRequest.getKey());\r\n    if (getObjectRequest.getSSECustomerKey() != null) {\r\n        getObjectMetadataRequest.setSSECustomerKey(getObjectRequest.getSSECustomerKey());\r\n    }\r\n    final ObjectMetadata objectMetadata = s3.getObjectMetadata(getObjectMetadataRequest);\r\n    final DownloadImpl download = new DownloadImpl(description, transferProgress, listenerChain, null, stateListener, getObjectRequest, file);\r\n    long startingByte = 0;\r\n    long lastByte = objectMetadata.getContentLength() - 1;\r\n    if (getObjectRequest.getRange() != null && getObjectRequest.getRange().length == 2) {\r\n        startingByte = getObjectRequest.getRange()[0];\r\n        lastByte = getObjectRequest.getRange()[1];\r\n    }\r\n    long totalBytesToDownload = lastByte - startingByte + 1;\r\n    transferProgress.setTotalBytesToTransfer(totalBytesToDownload);\r\n    if (resumeExistingDownload) {\r\n        if (file.exists()) {\r\n            final long numberOfBytesRead = file.length();\r\n            startingByte = startingByte + numberOfBytesRead;\r\n            getObjectRequest.setRange(startingByte, lastByte);\r\n            transferProgress.updateProgress(Math.min(numberOfBytesRead, totalBytesToDownload));\r\n            totalBytesToDownload = lastByte - startingByte + 1;\r\n        }\r\n    }\r\n    if (totalBytesToDownload < 0) {\r\n        throw new IllegalArgumentException(\"Unable to determine the range for download operation.\");\r\n    }\r\n    final CountDownLatch latch = new CountDownLatch(1);\r\n    final Future<?> future = submitDownloadTask(getObjectRequest, file, resumeExistingDownload, latch, download);\r\n    download.setMonitor(new DownloadMonitor(download, future));\r\n    latch.countDown();\r\n    return download;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.TransferManager.doDownload",
	"Comment": "same as public interface, but adds a state listener so that callers canbe notified of state changes to the download.",
	"Method": "Download doDownload(GetObjectRequest getObjectRequest,File file,TransferStateChangeListener stateListener,S3ProgressListener s3progressListener,boolean resumeExistingDownload){\r\n    if (progressEvent.getEventCode() == ProgressEvent.COMPLETED_EVENT_CODE) {\r\n        progressEvent.setEventCode(0);\r\n    }\r\n    return progressEvent;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.buffered.QueueBufferConfig.getLongPollWaitTimeoutSeconds",
	"Comment": "specifies the amount of time, in seconds, the receive call will block onthe server waiting for messages to arrive if the queue is empty when thereceive call is first made. this setting has no effect if long polling isdisabled.",
	"Method": "int getLongPollWaitTimeoutSeconds(){\r\n    return longPollWaitTimeoutSeconds;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.AmazonCloudWatchLogsClient.deleteRetentionPolicy",
	"Comment": "deletes the specified retention policy.log events do not expire if they belong to log groups without a retentionpolicy.",
	"Method": "void deleteRetentionPolicy(DeleteRetentionPolicyRequest deleteRetentionPolicyRequest){\r\n    ExecutionContext executionContext = createExecutionContext(deleteRetentionPolicyRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<DeleteRetentionPolicyRequest> request = null;\r\n    Response<Void> response = null;\r\n    try {\r\n        awsRequestMetrics.startEvent(Field.RequestMarshallTime);\r\n        try {\r\n            request = new DeleteRetentionPolicyRequestMarshaller().marshall(deleteRetentionPolicyRequest);\r\n            request.setAWSRequestMetrics(awsRequestMetrics);\r\n        } finally {\r\n            awsRequestMetrics.endEvent(Field.RequestMarshallTime);\r\n        }\r\n        JsonResponseHandler<Void> responseHandler = new JsonResponseHandler<Void>(null);\r\n        invoke(request, responseHandler, executionContext);\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.BouncedRecipientInfo.withRecipientArn",
	"Comment": "this parameter is used only for sending authorization. it is the arn ofthe identity that is associated with the sending authorization policythat permits you to receive email for the recipient of the bounced email.for more information about sending authorization, see the amazon ses developer guide.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "BouncedRecipientInfo withRecipientArn(String recipientArn){\r\n    this.recipientArn = recipientArn;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartListing.setKey",
	"Comment": "sets the key value specified in the original request used to identifywhich multipart upload contains the parts to list.",
	"Method": "void setKey(String key){\r\n    this.key = key;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.ListShardsRequest.withStreamCreationTimestamp",
	"Comment": "specify this input parameter to distinguish data streams that have thesame name. for example, if you create a data stream and then delete it,and you later create another data stream with the same name, you can usethis input parameter to specify which of the two streams you want to listthe shards for.you cannot specify this parameter if you specify thenexttoken parameter.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListShardsRequest withStreamCreationTimestamp(java.util.Date streamCreationTimestamp){\r\n    this.streamCreationTimestamp = streamCreationTimestamp;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetSegmentExportJobsRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetSegmentExportJobsRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.DeleteMessageBatchRequestEntry.setId",
	"Comment": "an identifier for this particular receipt handle. this is used tocommunicate the result. note that the ids of a batch requestneed to be unique within the request.",
	"Method": "void setId(String id){\r\n    this.id = id;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceDetail.setEmotions",
	"Comment": "the emotions detected on the face, and the confidence level in thedetermination. for example, happy, sad, and angry.",
	"Method": "void setEmotions(java.util.Collection<Emotion> emotions){\r\n    if (emotions == null) {\r\n        this.emotions = null;\r\n        return;\r\n    }\r\n    this.emotions = new java.util.ArrayList<Emotion>(emotions);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DirectMessageConfiguration.getBaiduMessage",
	"Comment": "the message to baidu gcm channels. overrides the default pushnotification message.",
	"Method": "BaiduMessage getBaiduMessage(){\r\n    return baiduMessage;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CreateCustomVerificationEmailTemplateRequest.getSuccessRedirectionURL",
	"Comment": "the url that the recipient of the verification email is sent to if his orher address is successfully verified.",
	"Method": "String getSuccessRedirectionURL(){\r\n    return successRedirectionURL;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ActivityResponse.withStart",
	"Comment": "the actual start time of the activity in iso 8601 format.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ActivityResponse withStart(String start){\r\n    this.start = start;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceDetail.setSmile",
	"Comment": "indicates whether or not the face is smiling, and the confidence level inthe determination.",
	"Method": "void setSmile(Smile smile){\r\n    this.smile = smile;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ReputationOptions.setSendingEnabled",
	"Comment": "describes whether email sending is enabled or disabled for theconfiguration set. if the value is true, then amazon seswill send emails that use the configuration set. if the value isfalse, amazon ses will not send emails that use theconfiguration set. the default value is true. you can changethis setting using updateconfigurationsetsendingenabled.",
	"Method": "void setSendingEnabled(Boolean sendingEnabled){\r\n    this.sendingEnabled = sendingEnabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.PersonDetection.getTimestamp",
	"Comment": "the time, in milliseconds from the start of the video, that the personwas tracked.",
	"Method": "Long getTimestamp(){\r\n    return timestamp;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.MultipartUploadListing.setTruncated",
	"Comment": "sets whether this listing is truncated, and additional requests need tobe made to get more results.",
	"Method": "void setTruncated(boolean isTruncated){\r\n    this.isTruncated = isTruncated;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.getBucketName",
	"Comment": "returns the name of the bucket containing the existing, initiatedmultipart upload, with which this new part will be associated.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideoarchivedmedia.model.GetMediaForFragmentListRequest.withFragments",
	"Comment": "a list of the numbers of fragments for which to retrieve media. youretrieve these values with listfragments.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetMediaForFragmentListRequest withFragments(String fragments,GetMediaForFragmentListRequest withFragments,java.util.Collection<String> fragments){\r\n    setFragments(fragments);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateThingGroupsForThingRequest.withThingGroupsToAdd",
	"Comment": "the groups to which the thing will be added.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateThingGroupsForThingRequest withThingGroupsToAdd(String thingGroupsToAdd,UpdateThingGroupsForThingRequest withThingGroupsToAdd,java.util.Collection<String> thingGroupsToAdd){\r\n    setThingGroupsToAdd(thingGroupsToAdd);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.KeyMetadata.getDeletionDate",
	"Comment": "the date and time after which aws kms deletes the cmk. this value ispresent only when keystate is pendingdeletion,otherwise this value is omitted.",
	"Method": "java.util.Date getDeletionDate(){\r\n    return deletionDate;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.TransferManagerConfiguration.getMultipartUploadThreshold",
	"Comment": "returns the size threshold in bytes for when to use multipart uploads.uploads over this size will automatically use a multipart uploadstrategy, while uploads smaller than this threshold will use a singleconnection to upload the whole object.multipart uploads are easier to recover from and potentially faster thansingle part uploads, especially when the upload parts can be uploaded inparallel as with files. due to additional network communication, smalluploads should use a single connection for the upload.",
	"Method": "long getMultipartUploadThreshold(){\r\n    return multipartUploadThreshold;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.WriteCampaignRequest.withHook",
	"Comment": "campaign hook information.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "WriteCampaignRequest withHook(CampaignHook hook){\r\n    this.hook = hook;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.AmazonCloudWatchLogsClient.untagLogGroup",
	"Comment": "removes the specified tags from the specified log group.to list the tags for a log group, use listtagsloggroup. to addtags, use untagloggroup.",
	"Method": "void untagLogGroup(UntagLogGroupRequest untagLogGroupRequest){\r\n    ExecutionContext executionContext = createExecutionContext(untagLogGroupRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<UntagLogGroupRequest> request = null;\r\n    Response<Void> response = null;\r\n    try {\r\n        awsRequestMetrics.startEvent(Field.RequestMarshallTime);\r\n        try {\r\n            request = new UntagLogGroupRequestMarshaller().marshall(untagLogGroupRequest);\r\n            request.setAWSRequestMetrics(awsRequestMetrics);\r\n        } finally {\r\n            awsRequestMetrics.endEvent(Field.RequestMarshallTime);\r\n        }\r\n        JsonResponseHandler<Void> responseHandler = new JsonResponseHandler<Void>(null);\r\n        invoke(request, responseHandler, executionContext);\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.EncryptRequest.clearEncryptionContextEntries",
	"Comment": "removes all the entries added into encryptioncontext.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EncryptRequest clearEncryptionContextEntries(){\r\n    this.encryptionContext = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.PutMetricFilterRequest.setMetricTransformations",
	"Comment": "a collection of information that defines how metric data gets emitted.",
	"Method": "void setMetricTransformations(java.util.Collection<MetricTransformation> metricTransformations){\r\n    if (metricTransformations == null) {\r\n        this.metricTransformations = null;\r\n        return;\r\n    }\r\n    this.metricTransformations = new java.util.ArrayList<MetricTransformation>(metricTransformations);\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSClient.getEndpointAttributes",
	"Comment": "retrieves the endpoint attributes for a device on one of the supportedpush notification services, such as gcm and apns. for more information,see usingamazon sns mobile push notifications.",
	"Method": "GetEndpointAttributesResult getEndpointAttributes(GetEndpointAttributesRequest getEndpointAttributesRequest){\r\n    ExecutionContext executionContext = createExecutionContext(getEndpointAttributesRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<GetEndpointAttributesRequest> request = null;\r\n    Response<GetEndpointAttributesResult> response = null;\r\n    try {\r\n        request = new GetEndpointAttributesRequestMarshaller().marshall(getEndpointAttributesRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        response = invoke(request, new GetEndpointAttributesResultStaxUnmarshaller(), executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.serverless.proxy.internal.servlet.AwsLambdaServletContainerHandler.setServletContext",
	"Comment": "sets the servletcontext in the handler and initialized a new filterchainmanager",
	"Method": "void setServletContext(ServletContext context){\r\n    servletContext = context;\r\n    filterChainManager = new AwsFilterChainManager((AwsServletContext) servletContext);\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.ContentModerationDetection.getTimestamp",
	"Comment": "time, in milliseconds from the beginning of the video, that themoderation label was detected.",
	"Method": "Long getTimestamp(){\r\n    return timestamp;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ListConfigurationSetsResult.getNextToken",
	"Comment": "a token indicating that there are additional configuration sets availableto be listed. pass this token to successive calls oflistconfigurationsets.",
	"Method": "String getNextToken(){\r\n    return nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.PutRecordBatchResponseEntry.withErrorCode",
	"Comment": "the error code for an individual record result.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PutRecordBatchResponseEntry withErrorCode(String errorCode){\r\n    this.errorCode = errorCode;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.InvokeResult.setPayload",
	"Comment": "it is the json representation of the object returned by the lambdafunction. this is present only if the invocation type isrequestresponse.in the event of a function error this field contains a message describingthe error. for the handled errors the lambda function willreport this message. for unhandled errors aws lambda reportsthe message.",
	"Method": "void setPayload(java.nio.ByteBuffer payload){\r\n    this.payload = payload;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClient.listReceiptRuleSets",
	"Comment": "lists the receipt rule sets that exist under your aws account in thecurrent aws region. if there are additional receipt rule sets to beretrieved, you will receive a nexttoken that you can provideto the next call to listreceiptrulesets to retrieve theadditional entries.for information about managing receipt rule sets, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "ListReceiptRuleSetsResult listReceiptRuleSets(ListReceiptRuleSetsRequest listReceiptRuleSetsRequest){\r\n    ExecutionContext executionContext = createExecutionContext(listReceiptRuleSetsRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<ListReceiptRuleSetsRequest> request = null;\r\n    Response<ListReceiptRuleSetsResult> response = null;\r\n    try {\r\n        request = new ListReceiptRuleSetsRequestMarshaller().marshall(listReceiptRuleSetsRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        response = invoke(request, new ListReceiptRuleSetsResultStaxUnmarshaller(), executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointRequest.withLocation",
	"Comment": "the endpoint location attributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointRequest withLocation(EndpointLocation location){\r\n    this.location = location;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.Content.withData",
	"Comment": "the textual data of the content.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Content withData(String data){\r\n    this.data = data;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SMSChannelResponse.setApplicationId",
	"Comment": "the unique id of the application to which the sms channel belongs.",
	"Method": "void setApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.EyeOpen.withValue",
	"Comment": "boolean value that indicates whether the eyes on the face are open.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EyeOpen withValue(Boolean value){\r\n    this.value = value;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketAnalyticsConfigurationRequest.getBucketName",
	"Comment": "returns the name of the bucket to which an analytics configuration is stored.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.MessageResult.withStatusMessage",
	"Comment": "status message for message delivery.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "MessageResult withStatusMessage(String statusMessage){\r\n    this.statusMessage = statusMessage;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.TopicConfiguration.getTopicARN",
	"Comment": "returns the topic arn for this notification configuration.",
	"Method": "String getTopicARN(){\r\n    return topicARN;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.ChangeMessageVisibilityBatchRequest.getEntries",
	"Comment": "a list of receipt handles of the messages for which the visibilitytimeout must be changed.",
	"Method": "java.util.List<ChangeMessageVisibilityBatchRequestEntry> getEntries(){\r\n    return entries;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.GetAccountSendingEnabledResult.getEnabled",
	"Comment": "describes whether email sending is enabled or disabled for your amazonses account in the current aws region.",
	"Method": "Boolean getEnabled(){\r\n    return enabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetCampaignActivitiesRequest.withToken",
	"Comment": "the nexttoken string returned on a previous page that you use to get thenext page of results in a paginated response.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetCampaignActivitiesRequest withToken(String token){\r\n    this.token = token;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSClient.getPlatformApplicationAttributes",
	"Comment": "retrieves the attributes of the platform application object for thesupported push notification services, such as apns and gcm. for moreinformation, see usingamazon sns mobile push notifications.",
	"Method": "GetPlatformApplicationAttributesResult getPlatformApplicationAttributes(GetPlatformApplicationAttributesRequest getPlatformApplicationAttributesRequest){\r\n    ExecutionContext executionContext = createExecutionContext(getPlatformApplicationAttributesRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<GetPlatformApplicationAttributesRequest> request = null;\r\n    Response<GetPlatformApplicationAttributesResult> response = null;\r\n    try {\r\n        request = new GetPlatformApplicationAttributesRequestMarshaller().marshall(getPlatformApplicationAttributesRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        response = invoke(request, new GetPlatformApplicationAttributesResultStaxUnmarshaller(), executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.SelectRequest.getConsistentRead",
	"Comment": "determines whether or not strong consistency should be enforced whendata is read from simpledb. if true, any data previouslywritten to simpledb will be returned. otherwise, results will beconsistent eventually, and the client may not see data that waswritten immediately before your read.",
	"Method": "Boolean getConsistentRead(){\r\n    return consistentRead;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketAnalyticsConfigurationRequest.setBucketName",
	"Comment": "sets the name of the bucket to which an analytics configuration is stored.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.Event.clearMetricsEntries",
	"Comment": "removes all the entries added into metrics.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Event clearMetricsEntries(){\r\n    this.metrics = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.withFile",
	"Comment": "sets the file containing the data to upload, and returns this updateduploadpartrequest object so that additional method calls can be chainedtogether.exactly one file or inputstream must be specified as the input to thisoperation.",
	"Method": "UploadPartRequest withFile(File file){\r\n    setFile(file);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobResource.setRegisterEndpoints",
	"Comment": "sets whether the endpoints are registered with amazon pinpoint when theyare imported.",
	"Method": "void setRegisterEndpoints(Boolean registerEndpoints){\r\n    this.registerEndpoints = registerEndpoints;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.UpdateCustomVerificationEmailTemplateRequest.getTemplateContent",
	"Comment": "the content of the custom verification email. the total size of the emailmust be less than 10 mb. the message body may contain html, with somelimitations. for more information, see custom verification email frequently asked questions in theamazon ses developer guide.",
	"Method": "String getTemplateContent(){\r\n    return templateContent;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.IdentityNotificationAttributes.isHeadersInDeliveryNotificationsEnabled",
	"Comment": "describes whether amazon ses includes the original email headers inamazon sns notifications of type delivery. a value oftrue specifies that amazon ses will include headers indelivery notifications, and a value of false specifies thatamazon ses will not include headers in delivery notifications.",
	"Method": "Boolean isHeadersInDeliveryNotificationsEnabled(){\r\n    return headersInDeliveryNotificationsEnabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.CompareFacesResult.getUnmatchedFaces",
	"Comment": "an array of faces in the target image that did not match the source imageface.",
	"Method": "java.util.List<ComparedFace> getUnmatchedFaces(){\r\n    return unmatchedFaces;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.CompareFacesResult.getFaceMatches",
	"Comment": "an array of faces in the target image that match the source image face.each comparefacesmatch object provides the bounding box, theconfidence level that the bounding box contains a face, and thesimilarity score for the face in the bounding box and the face in thesource image.",
	"Method": "java.util.List<CompareFacesMatch> getFaceMatches(){\r\n    return faceMatches;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointMessageResult.withStatusMessage",
	"Comment": "status message for message delivery.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointMessageResult withStatusMessage(String statusMessage){\r\n    this.statusMessage = statusMessage;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.StartSpeechSynthesisTaskRequest.withText",
	"Comment": "the input text to synthesize. if you specify ssml as the texttype, followthe ssml format for the input text.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "StartSpeechSynthesisTaskRequest withText(String text){\r\n    this.text = text;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.amazonmobileanalytics.internal.core.util.Preconditions.checkNotNull",
	"Comment": "ensures that an object reference passed as a parameter to the callingmethod is not null.",
	"Method": "T checkNotNull(T reference,T checkNotNull,T reference,Object errorMessage,T checkNotNull,T reference,String errorMessageTemplate,Object errorMessageArgs){\r\n    if (reference == null) {\r\n        throw new NullPointerException(format(errorMessageTemplate, errorMessageArgs));\r\n    }\r\n    return reference;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.model.CopyResult.getSourceKey",
	"Comment": "gets the source bucket key under which the source object to be copied isstored.",
	"Method": "String getSourceKey(){\r\n    return sourceKey;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketWebsiteConfigurationRequest.setBucketName",
	"Comment": "sets the name of the bucket whose website configuration is to be updated.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMChannelResponse.withIsArchived",
	"Comment": "indicates whether or not the channel is archived.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ADMChannelResponse withIsArchived(Boolean isArchived){\r\n    this.isArchived = isArchived;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transferutility.DownloadTask.call",
	"Comment": "runs download task and returns whether successfully downloaded.",
	"Method": "Boolean call(){\r\n    if (TransferService.networkInfoReceiver != null && !TransferService.networkInfoReceiver.isNetworkConnected()) {\r\n        LOGGER.info(\"Network disconnected. Updating the transfer state to WAITING_FOR_NETWORK.\");\r\n        updater.updateState(download.id, TransferState.WAITING_FOR_NETWORK);\r\n        return false;\r\n    }\r\n    updater.updateState(download.id, TransferState.IN_PROGRESS);\r\n    final GetObjectRequest getObjectRequest = new GetObjectRequest(download.bucketName, download.key);\r\n    TransferUtility.appendTransferServiceUserAgentString(getObjectRequest);\r\n    final File file = new File(download.file);\r\n    final long bytesCurrent = file.length();\r\n    if (bytesCurrent > 0) {\r\n        LOGGER.debug(String.format(\"Resume transfer %d from %d bytes\", download.id, bytesCurrent));\r\n        getObjectRequest.setRange(bytesCurrent, -1);\r\n    }\r\n    getObjectRequest.setGeneralProgressListener(updater.newProgressListener(download.id));\r\n    try {\r\n        final S3Object object = s3.getObject(getObjectRequest);\r\n        if (object == null) {\r\n            updater.throwError(download.id, new IllegalStateException(\"AmazonS3.getObject returns null\"));\r\n            updater.updateState(download.id, TransferState.FAILED);\r\n            return false;\r\n        }\r\n        final long bytesTotal = object.getObjectMetadata().getInstanceLength();\r\n        updater.updateProgress(download.id, bytesCurrent, bytesTotal);\r\n        saveToFile(object.getObjectContent(), file);\r\n        updater.updateProgress(download.id, bytesTotal, bytesTotal);\r\n        updater.updateState(download.id, TransferState.COMPLETED);\r\n        return true;\r\n    } catch (final Exception e) {\r\n        if (RetryUtils.isInterrupted(e)) {\r\n            LOGGER.debug(\"Transfer \" + download.id + \" is interrupted by user\");\r\n        } else if (TransferService.networkInfoReceiver != null && !TransferService.networkInfoReceiver.isNetworkConnected()) {\r\n            LOGGER.debug(\"Transfer \" + download.id + \" waits for network\");\r\n            updater.updateState(download.id, TransferState.WAITING_FOR_NETWORK);\r\n        } else {\r\n            LOGGER.debug(\"Failed to download: \" + download.id + \" due to \" + e.getMessage());\r\n            updater.throwError(download.id, e);\r\n            updater.updateState(download.id, TransferState.FAILED);\r\n        }\r\n    }\r\n    return false;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceDetail.setMustache",
	"Comment": "indicates whether or not the face has a mustache, and the confidencelevel in the determination.",
	"Method": "void setMustache(Mustache mustache){\r\n    this.mustache = mustache;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.getFile",
	"Comment": "returns the file containing the data to upload. exactly one file orinputstream must be specified as the input to this operation.",
	"Method": "File getFile(){\r\n    return file;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.getSourceBucketName",
	"Comment": "gets the name of the bucket containing the source object to be copied.",
	"Method": "String getSourceBucketName(){\r\n    return sourceBucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketNotificationConfigurationRequest.setNotificationConfiguration",
	"Comment": "sets the new notification configuration for the specified bucket.",
	"Method": "void setNotificationConfiguration(BucketNotificationConfiguration notificationConfiguration){\r\n    this.notificationConfiguration = notificationConfiguration;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.DomainMetadataResult.withAttributeNameCount",
	"Comment": "the number of unique attribute names in the domain.returns a reference to this object so that method calls can be chained together.",
	"Method": "DomainMetadataResult withAttributeNameCount(Integer attributeNameCount){\r\n    this.attributeNameCount = attributeNameCount;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.TemplateMetadata.withCreatedTimestamp",
	"Comment": "the time and date the template was created.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "TemplateMetadata withCreatedTimestamp(java.util.Date createdTimestamp){\r\n    this.createdTimestamp = createdTimestamp;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.SetPlatformApplicationAttributesRequest.withPlatformApplicationArn",
	"Comment": "platformapplicationarn for setplatformapplicationattributes action.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SetPlatformApplicationAttributesRequest withPlatformApplicationArn(String platformApplicationArn){\r\n    this.platformApplicationArn = platformApplicationArn;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateSecurityProfileResult.withCreationDate",
	"Comment": "the time the security profile was created.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateSecurityProfileResult withCreationDate(java.util.Date creationDate){\r\n    this.creationDate = creationDate;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartFaceSearchRequest.withVideo",
	"Comment": "the video you want to search. the video must be stored in an amazon s3bucket.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "StartFaceSearchRequest withVideo(Video video){\r\n    this.video = video;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateAuthorizerResult.withAuthorizerArn",
	"Comment": "the authorizer arn.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateAuthorizerResult withAuthorizerArn(String authorizerArn){\r\n    this.authorizerArn = authorizerArn;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.MessageAttributeValue.withBinaryValue",
	"Comment": "binary type attributes can store any binary data, for example, compresseddata, encrypted data, or images.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "MessageAttributeValue withBinaryValue(java.nio.ByteBuffer binaryValue){\r\n    this.binaryValue = binaryValue;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StreamProcessorInput.getKinesisVideoStream",
	"Comment": "the kinesis video stream input stream for the source streaming video.",
	"Method": "KinesisVideoStream getKinesisVideoStream(){\r\n    return kinesisVideoStream;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClient.updateConfigurationSetTrackingOptions",
	"Comment": "modifies an association between a configuration set and a custom domainfor open and click event tracking.by default, images and links used for tracking open and click events arehosted on domains operated by amazon ses. you can configure a subdomainof your own to handle these events. for information about using customdomains, see the amazon ses developer guide.",
	"Method": "UpdateConfigurationSetTrackingOptionsResult updateConfigurationSetTrackingOptions(UpdateConfigurationSetTrackingOptionsRequest updateConfigurationSetTrackingOptionsRequest){\r\n    ExecutionContext executionContext = createExecutionContext(updateConfigurationSetTrackingOptionsRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<UpdateConfigurationSetTrackingOptionsRequest> request = null;\r\n    Response<UpdateConfigurationSetTrackingOptionsResult> response = null;\r\n    try {\r\n        request = new UpdateConfigurationSetTrackingOptionsRequestMarshaller().marshall(updateConfigurationSetTrackingOptionsRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        response = invoke(request, new UpdateConfigurationSetTrackingOptionsResultStaxUnmarshaller(), executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.util.Mimetypes.registerMimetype",
	"Comment": "register a new mimetype for the given extension. if a mapping for theextension exists, this will overwrite it. note that extension is caseinsensitive.",
	"Method": "void registerMimetype(String extension,String mimetype){\r\n    extensionToMimetypeMap.put(StringUtils.lowerCase(extension), mimetype);\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.AmazonCloudWatchLogsClient.putDestinationPolicy",
	"Comment": "creates or updates an access policy associated with an existingdestination. an access policy is an iam policy document that is used to authorize claims to register asubscription filter against a given destination.",
	"Method": "void putDestinationPolicy(PutDestinationPolicyRequest putDestinationPolicyRequest){\r\n    ExecutionContext executionContext = createExecutionContext(putDestinationPolicyRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<PutDestinationPolicyRequest> request = null;\r\n    Response<Void> response = null;\r\n    try {\r\n        awsRequestMetrics.startEvent(Field.RequestMarshallTime);\r\n        try {\r\n            request = new PutDestinationPolicyRequestMarshaller().marshall(putDestinationPolicyRequest);\r\n            request.setAWSRequestMetrics(awsRequestMetrics);\r\n        } finally {\r\n            awsRequestMetrics.endEvent(Field.RequestMarshallTime);\r\n        }\r\n        JsonResponseHandler<Void> responseHandler = new JsonResponseHandler<Void>(null);\r\n        invoke(request, responseHandler, executionContext);\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.iotdata.AWSIotDataClient.getThingShadow",
	"Comment": "gets the thing shadow for the specified thing.for more information, see getthingshadow in the aws iot developer guide.",
	"Method": "GetThingShadowResult getThingShadow(GetThingShadowRequest getThingShadowRequest){\r\n    ExecutionContext executionContext = createExecutionContext(getThingShadowRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<GetThingShadowRequest> request = null;\r\n    Response<GetThingShadowResult> response = null;\r\n    try {\r\n        awsRequestMetrics.startEvent(Field.RequestMarshallTime);\r\n        try {\r\n            request = new GetThingShadowRequestMarshaller().marshall(getThingShadowRequest);\r\n            request.setAWSRequestMetrics(awsRequestMetrics);\r\n        } finally {\r\n            awsRequestMetrics.endEvent(Field.RequestMarshallTime);\r\n        }\r\n        Unmarshaller<GetThingShadowResult, JsonUnmarshallerContext> unmarshaller = new GetThingShadowResultJsonUnmarshaller();\r\n        JsonResponseHandler<GetThingShadowResult> responseHandler = new JsonResponseHandler<GetThingShadowResult>(unmarshaller);\r\n        response = invoke(request, responseHandler, executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.VersionListing.setNextVersionIdMarker",
	"Comment": "for internal use only. sets the version id marker to use in the nextlistversions request in order to see the next page of results for atruncated version listing.",
	"Method": "void setNextVersionIdMarker(String marker){\r\n    this.nextVersionIdMarker = marker;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobResponse.setTotalPieces",
	"Comment": "the total number of pieces that must be imported to finish the job. eachpiece is an approximately equal portion of the endpoints to import.",
	"Method": "void setTotalPieces(Integer totalPieces){\r\n    this.totalPieces = totalPieces;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SendUsersMessageRequest.setMessageConfiguration",
	"Comment": "message definitions for the default message and any messages that aretailored for specific channels.",
	"Method": "void setMessageConfiguration(DirectMessageConfiguration messageConfiguration){\r\n    this.messageConfiguration = messageConfiguration;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketWebsiteConfiguration.setRedirectAllRequestsTo",
	"Comment": "sets the redirect information where all requests will be redirect to.",
	"Method": "void setRedirectAllRequestsTo(RedirectRule redirectAllRequestsTo){\r\n    this.redirectAllRequestsTo = redirectAllRequestsTo;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ReceiptAction.setSNSAction",
	"Comment": "publishes the email content within a notification to amazon sns.",
	"Method": "void setSNSAction(SNSAction sNSAction){\r\n    this.sNSAction = sNSAction;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DefaultPushNotificationMessage.clearSubstitutionsEntries",
	"Comment": "removes all the entries added into substitutions.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DefaultPushNotificationMessage clearSubstitutionsEntries(){\r\n    this.substitutions = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointResponse.setRequestId",
	"Comment": "the unique id for the most recent request to update the endpoint.",
	"Method": "void setRequestId(String requestId){\r\n    this.requestId = requestId;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.TreatmentResource.withId",
	"Comment": "the unique treatment id.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "TreatmentResource withId(String id){\r\n    this.id = id;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignResponse.withTreatmentDescription",
	"Comment": "a custom description for the treatment.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CampaignResponse withTreatmentDescription(String treatmentDescription){\r\n    this.treatmentDescription = treatmentDescription;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.GetAccountSendingEnabledResult.withEnabled",
	"Comment": "describes whether email sending is enabled or disabled for your amazonses account in the current aws region.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetAccountSendingEnabledResult withEnabled(Boolean enabled){\r\n    this.enabled = enabled;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DirectMessageConfiguration.getAPNSMessage",
	"Comment": "the message to apns channels. overrides the default push notificationmessage.",
	"Method": "APNSMessage getAPNSMessage(){\r\n    return aPNSMessage;\r\n}"
}, {
	"Path": "com.amazonaws.serverless.proxy.model.ContainerConfig.isQueryStringCaseSensitive",
	"Comment": "whether query string parameters in the request should be case sensitive or not. by defaultthis is set to false for backward compatibility.",
	"Method": "boolean isQueryStringCaseSensitive(){\r\n    return queryStringCaseSensitive;\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateSecurityProfileResult.withSecurityProfileArn",
	"Comment": "the arn of the security profile that was updated.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateSecurityProfileResult withSecurityProfileArn(String securityProfileArn){\r\n    this.securityProfileArn = securityProfileArn;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.kinesis.kinesisrecorder.FileRecordParser.asString",
	"Comment": "a convenient method that serialize a kinesis record into a string.",
	"Method": "String asString(String streamName,byte[] bytes){\r\n    return streamName + DELIMITER + Base64.encodeAsString(bytes);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GCMMessage.getSilentPush",
	"Comment": "indicates if the message should display on the users device. silentpushes can be used for remote configuration and phone home use cases.",
	"Method": "Boolean getSilentPush(){\r\n    return silentPush;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.BulkEmailDestinationStatus.setMessageId",
	"Comment": "the unique message identifier returned from thesendbulktemplatedemail operation.",
	"Method": "void setMessageId(String messageId){\r\n    this.messageId = messageId;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.getNewObjectMetadata",
	"Comment": "gets the optional object metadata to set for the new, copied object.",
	"Method": "ObjectMetadata getNewObjectMetadata(){\r\n    return newObjectMetadata;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.Session.withId",
	"Comment": "a unique identifier for the session.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Session withId(String id){\r\n    this.id = id;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CreateCustomVerificationEmailTemplateRequest.withFailureRedirectionURL",
	"Comment": "the url that the recipient of the verification email is sent to if his orher address is not successfully verified.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreateCustomVerificationEmailTemplateRequest withFailureRedirectionURL(String failureRedirectionURL){\r\n    this.failureRedirectionURL = failureRedirectionURL;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ListTemplatesResult.setNextToken",
	"Comment": "a token indicating that there are additional email templates available tobe listed. pass this token to a subsequent call tolisttemplates to retrieve the next 50 email templates.",
	"Method": "void setNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.setFile",
	"Comment": "sets the file containing the data to upload. exactly one file orinputstream must be specified as the input to this operation.",
	"Method": "void setFile(File file){\r\n    this.file = file;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ListCustomVerificationEmailTemplatesResult.getNextToken",
	"Comment": "a token indicating that there are additional custom verification emailtemplates available to be listed. pass this token to a subsequent call tolisttemplates to retrieve the next 50 custom verificationemail templates.",
	"Method": "String getNextToken(){\r\n    return nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketPolicy.getPolicyText",
	"Comment": "gets the raw policy json text as returned by amazon s3. if no policy hasbeen applied to the specified bucket, the policy text will be null.",
	"Method": "String getPolicyText(){\r\n    return policyText;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.BaiduMessage.getSilentPush",
	"Comment": "indicates if the message should display on the users device. silentpushes can be used for remote configuration and phone home use cases.",
	"Method": "Boolean getSilentPush(){\r\n    return silentPush;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.Message.getImageUrl",
	"Comment": "the url that points to an image used in the push notification.",
	"Method": "String getImageUrl(){\r\n    return imageUrl;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetLabelDetectionResult.getStatusMessage",
	"Comment": "if the job fails, statusmessage provides a descriptive errormessage.",
	"Method": "String getStatusMessage(){\r\n    return statusMessage;\r\n}"
}, {
	"Path": "com.amazonaws.services.lexrts.model.PostContentResult.withInputTranscript",
	"Comment": "transcript of the voice input to the operation.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PostContentResult withInputTranscript(String inputTranscript){\r\n    this.inputTranscript = inputTranscript;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListPhoneNumbersOptedOutResult.setNextToken",
	"Comment": "a nexttoken string is returned when you call thelistphonenumbersoptedout action if additional records areavailable after the first page of results.",
	"Method": "void setNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.BulkEmailDestinationStatus.setError",
	"Comment": "a description of an error that prevented a message being sent using thesendbulktemplatedemail operation.",
	"Method": "void setError(String error){\r\n    this.error = error;\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.ListVocabulariesResult.getVocabularies",
	"Comment": "a list of objects that describe the vocabularies that match the searchcriteria in the request.",
	"Method": "java.util.List<VocabularyInfo> getVocabularies(){\r\n    return vocabularies;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.PutMetricFilterRequest.withMetricTransformations",
	"Comment": "a collection of information that defines how metric data gets emitted.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PutMetricFilterRequest withMetricTransformations(MetricTransformation metricTransformations,PutMetricFilterRequest withMetricTransformations,java.util.Collection<MetricTransformation> metricTransformations){\r\n    setMetricTransformations(metricTransformations);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketReplicationConfigurationRequest.getReplicationConfiguration",
	"Comment": "returns the replication configuration of an amazon s3 bucket.",
	"Method": "BucketReplicationConfiguration getReplicationConfiguration(){\r\n    return replicationConfiguration;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSAsyncClient.setEndpointAttributesAsync",
	"Comment": "sets the attributes for an endpoint for a device on one of the supportedpush notification services, such as gcm and apns. for more information,see usingamazon sns mobile push notifications.",
	"Method": "Future<Void> setEndpointAttributesAsync(SetEndpointAttributesRequest setEndpointAttributesRequest,Future<Void> setEndpointAttributesAsync,SetEndpointAttributesRequest setEndpointAttributesRequest,AsyncHandler<SetEndpointAttributesRequest, Void> asyncHandler){\r\n    return executorService.submit(new Callable<Void>() {\r\n        public Void call() throws Exception {\r\n            Void result = null;\r\n            try {\r\n                setEndpointAttributes(setEndpointAttributesRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(setEndpointAttributesRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSAsyncClient.setEndpointAttributesAsync",
	"Comment": "sets the attributes for an endpoint for a device on one of the supportedpush notification services, such as gcm and apns. for more information,see usingamazon sns mobile push notifications.",
	"Method": "Future<Void> setEndpointAttributesAsync(SetEndpointAttributesRequest setEndpointAttributesRequest,Future<Void> setEndpointAttributesAsync,SetEndpointAttributesRequest setEndpointAttributesRequest,AsyncHandler<SetEndpointAttributesRequest, Void> asyncHandler){\r\n    Void result = null;\r\n    try {\r\n        setEndpointAttributes(setEndpointAttributesRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(setEndpointAttributesRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.RejectedLogEventsInfo.withTooOldLogEventEndIndex",
	"Comment": "the log events that are too old.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "RejectedLogEventsInfo withTooOldLogEventEndIndex(Integer tooOldLogEventEndIndex){\r\n    this.tooOldLogEventEndIndex = tooOldLogEventEndIndex;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMMessage.clearSubstitutionsEntries",
	"Comment": "removes all the entries added into substitutions.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ADMMessage clearSubstitutionsEntries(){\r\n    this.substitutions = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentResponse.withId",
	"Comment": "the unique segment id.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SegmentResponse withId(String id){\r\n    this.id = id;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.withRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket. it returns thisupdated copyobjectrequest object so that additional method calls can bechained together.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "CopyObjectRequest withRequesterPays(boolean isRequesterPays){\r\n    setRequesterPays(isRequesterPays);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceMatch.getFace",
	"Comment": "describes the face properties such as the bounding box, face id, image idof the source image, and external image id that you assigned.",
	"Method": "Face getFace(){\r\n    return face;\r\n}"
}, {
	"Path": "com.amazonaws.kinesisvideo.internal.producer.jni.NativeKinesisVideoProducerJni.streamFormatChanged",
	"Comment": "stream format has changed. currently, only supporting codec private data",
	"Method": "void streamFormatChanged(long streamHandle,byte[] codecPrivateData){\r\n    Preconditions.checkState(isInitialized());\r\n    synchronized (mSyncObject) {\r\n        kinesisVideoStreamFormatChanged(mClientHandle, streamHandle, codecPrivateData);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser.checkForEmptyString",
	"Comment": "checks if the specified string is empty or null and if so, returns null.otherwise simply returns the string.",
	"Method": "String checkForEmptyString(String s){\r\n    if (s == null) {\r\n        return null;\r\n    }\r\n    if (s.length() == 0) {\r\n        return null;\r\n    }\r\n    return s;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CryptoConfiguration.withCryptoProvider",
	"Comment": "sets the crypto provider to the specified provider, and returns theupdated cryptoconfiguration object.",
	"Method": "CryptoConfiguration withCryptoProvider(Provider cryptoProvider,CryptoConfiguration withCryptoProvider,Provider cryptoProvider){\r\n    this.cryptoProvider = cryptoProvider;\r\n    check(cryptoMode);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetCelebrityInfoResult.getUrls",
	"Comment": "an array of urls pointing to additional celebrity information.",
	"Method": "java.util.List<String> getUrls(){\r\n    return urls;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.amazonmobileanalytics.monetization.MonetizationEventBuilder.setItemPrice",
	"Comment": "sets the numerical item price to use when building the monetization event",
	"Method": "void setItemPrice(Double itemPrice){\r\n    this.itemPrice = itemPrice;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SendMessagesRequest.withMessageRequest",
	"Comment": "send message request.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendMessagesRequest withMessageRequest(MessageRequest messageRequest){\r\n    this.messageRequest = messageRequest;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.StartSpeechSynthesisTaskResult.setSynthesisTask",
	"Comment": "synthesistask object that provides information and attributes about anewly submitted speech synthesis task.",
	"Method": "void setSynthesisTask(SynthesisTask synthesisTask){\r\n    this.synthesisTask = synthesisTask;\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.ListTranscriptionJobsResult.withTranscriptionJobSummaries",
	"Comment": "a list of objects containing summary information for a transcription job.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListTranscriptionJobsResult withTranscriptionJobSummaries(TranscriptionJobSummary transcriptionJobSummaries,ListTranscriptionJobsResult withTranscriptionJobSummaries,java.util.Collection<TranscriptionJobSummary> transcriptionJobSummaries){\r\n    setTranscriptionJobSummaries(transcriptionJobSummaries);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CreateConfigurationSetEventDestinationRequest.getConfigurationSetName",
	"Comment": "the name of the configuration set that the event destination should beassociated with.",
	"Method": "String getConfigurationSetName(){\r\n    return configurationSetName;\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.InvokeResult.getPayload",
	"Comment": "it is the json representation of the object returned by the lambdafunction. this is present only if the invocation type isrequestresponse.in the event of a function error this field contains a message describingthe error. for the handled errors the lambda function willreport this message. for unhandled errors aws lambda reportsthe message.",
	"Method": "java.nio.ByteBuffer getPayload(){\r\n    return payload;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.lex.interactionkit.continuations.LexServiceContinuation.continueWithTextInForTextOut",
	"Comment": "use this method to respond with text and expect service response with text.",
	"Method": "void continueWithTextInForTextOut(String text){\r\n    interactionClient.textInForTextOut(text, sessionAttributes);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.MessageResponse.withRequestId",
	"Comment": "original request id for which this message was delivered.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "MessageResponse withRequestId(String requestId){\r\n    this.requestId = requestId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ObjectMetadata.getExpirationTime",
	"Comment": "returns the time this object will expire and be completely removed froms3. returns null if this object will never expire.",
	"Method": "Date getExpirationTime(){\r\n    return cloneDate(expirationTime);\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.PlatformApplication.getPlatformApplicationArn",
	"Comment": "platformapplicationarn for platform application object.",
	"Method": "String getPlatformApplicationArn(){\r\n    return platformApplicationArn;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateCampaignRequest.withCampaignId",
	"Comment": "the unique id of the campaign.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateCampaignRequest withCampaignId(String campaignId){\r\n    this.campaignId = campaignId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateSegmentRequest.withWriteSegmentRequest",
	"Comment": "segment definition.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateSegmentRequest withWriteSegmentRequest(WriteSegmentRequest writeSegmentRequest){\r\n    this.writeSegmentRequest = writeSegmentRequest;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Celebrity.setUrls",
	"Comment": "an array of urls pointing to additional information about the celebrity.if there is no additional information about the celebrity, this list isempty.",
	"Method": "void setUrls(java.util.Collection<String> urls){\r\n    if (urls == null) {\r\n        this.urls = null;\r\n        return;\r\n    }\r\n    this.urls = new java.util.ArrayList<String>(urls);\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.SearchedLogStream.getSearchedCompletely",
	"Comment": "indicates whether all the events in this log stream were searched.",
	"Method": "Boolean getSearchedCompletely(){\r\n    return searchedCompletely;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CreateBucketRequest.getAccessControlList",
	"Comment": "returns the optional access control list for the new bucket. ifspecified, cannedacl will be ignored.",
	"Method": "AccessControlList getAccessControlList(){\r\n    return accessControlList;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.Attribute.withAlternateNameEncoding",
	"Comment": "returns a reference to this object so that method calls can be chained together.",
	"Method": "Attribute withAlternateNameEncoding(String alternateNameEncoding){\r\n    this.alternateNameEncoding = alternateNameEncoding;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClient.verifyEmailAddress",
	"Comment": "deprecated. use the verifyemailidentity operation to verifya new email address.",
	"Method": "void verifyEmailAddress(VerifyEmailAddressRequest verifyEmailAddressRequest){\r\n    ExecutionContext executionContext = createExecutionContext(verifyEmailAddressRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<VerifyEmailAddressRequest> request = null;\r\n    Response<Void> response = null;\r\n    try {\r\n        request = new VerifyEmailAddressRequestMarshaller().marshall(verifyEmailAddressRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        invoke(request, null, executionContext);\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EmailChannelResponse.withLastModifiedDate",
	"Comment": "last date this was updatedreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EmailChannelResponse withLastModifiedDate(String lastModifiedDate){\r\n    this.lastModifiedDate = lastModifiedDate;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceRecord.setFaceDetail",
	"Comment": "structure containing attributes of the face that the algorithm detected.",
	"Method": "void setFaceDetail(FaceDetail faceDetail){\r\n    this.faceDetail = faceDetail;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GCMMessage.getRestrictedPackageName",
	"Comment": "this parameter specifies the package name of the application where theregistration tokens must match in order to receive the message.",
	"Method": "String getRestrictedPackageName(){\r\n    return restrictedPackageName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.WriteApplicationSettingsRequest.withQuietTime",
	"Comment": "the default quiet time for the app. each campaign for this app sends nomessages during this time unless the campaign overrides the default witha quiet time of its own.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "WriteApplicationSettingsRequest withQuietTime(QuietTime quietTime){\r\n    this.quietTime = quietTime;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Celebrity.getUrls",
	"Comment": "an array of urls pointing to additional information about the celebrity.if there is no additional information about the celebrity, this list isempty.",
	"Method": "java.util.List<String> getUrls(){\r\n    return urls;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceDetail.getPose",
	"Comment": "indicates the pose of the face as determined by its pitch, roll, and yaw.default attribute.",
	"Method": "Pose getPose(){\r\n    return pose;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartListing.getNextPartNumberMarker",
	"Comment": "returns the next part number marker. if this listing is truncated, thisis the part number marker that should be used in the next request to getthe next page of results.",
	"Method": "Integer getNextPartNumberMarker(){\r\n    return nextPartNumberMarker;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.NumberValidateResponse.withCleansedPhoneNumberNational",
	"Comment": "the cleansed phone number, shown in the local phone number format.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "NumberValidateResponse withCleansedPhoneNumberNational(String cleansedPhoneNumberNational){\r\n    this.cleansedPhoneNumberNational = cleansedPhoneNumberNational;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.AbortMultipartUploadRequest.setRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "void setRequesterPays(boolean isRequesterPays){\r\n    this.isRequesterPays = isRequesterPays;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.GetLogEventsRequest.setStartFromHead",
	"Comment": "if the value is true, the earliest log events are returned first. if thevalue is false, the latest log events are returned first. the defaultvalue is false.",
	"Method": "void setStartFromHead(Boolean startFromHead){\r\n    this.startFromHead = startFromHead;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.NotificationConfiguration.getFilter",
	"Comment": "filter criteria for determining which s3 objects trigger event notifications.",
	"Method": "Filter getFilter(){\r\n    return filter;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointanalytics.model.PutEventsRequest.withEvents",
	"Comment": "an array of event json objectsreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PutEventsRequest withEvents(Event events,PutEventsRequest withEvents,java.util.Collection<Event> events){\r\n    setEvents(events);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointBatchItem.getEffectiveDate",
	"Comment": "the last time the endpoint was updated. provided in iso 8601 format.",
	"Method": "String getEffectiveDate(){\r\n    return effectiveDate;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.EyeOpen.isValue",
	"Comment": "boolean value that indicates whether the eyes on the face are open.",
	"Method": "Boolean isValue(){\r\n    return value;\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.GetMLModelResult.getComputeTime",
	"Comment": "the approximate cpu time in milliseconds that amazon machine learningspent processing the mlmodel, normalized and scaled oncomputation resources. computetime is only available if themlmodel is in the completed state.",
	"Method": "Long getComputeTime(){\r\n    return computeTime;\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateSecurityProfileResult.withLastModifiedDate",
	"Comment": "the time the security profile was last modified.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateSecurityProfileResult withLastModifiedDate(java.util.Date lastModifiedDate){\r\n    this.lastModifiedDate = lastModifiedDate;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetApnsSandboxChannelResult.getAPNSSandboxChannelResponse",
	"Comment": "apple development push notification service channel definition.",
	"Method": "APNSSandboxChannelResponse getAPNSSandboxChannelResponse(){\r\n    return aPNSSandboxChannelResponse;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetBucketAnalyticsConfigurationRequest.getBucketName",
	"Comment": "returns the name of the bucket from which an analytics configuration is to be retrieved.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ListReceiptRuleSetsResult.setRuleSets",
	"Comment": "the metadata for the currently active receipt rule set. the metadataconsists of the rule set name and the timestamp of when the rule set wascreated.",
	"Method": "void setRuleSets(java.util.Collection<ReceiptRuleSetMetadata> ruleSets){\r\n    if (ruleSets == null) {\r\n        this.ruleSets = null;\r\n        return;\r\n    }\r\n    this.ruleSets = new java.util.ArrayList<ReceiptRuleSetMetadata>(ruleSets);\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.Attribute.withAlternateValueEncoding",
	"Comment": "returns a reference to this object so that method calls can be chained together.",
	"Method": "Attribute withAlternateValueEncoding(String alternateValueEncoding){\r\n    this.alternateValueEncoding = alternateValueEncoding;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.InitiateMultipartUploadResult.getAbortRuleId",
	"Comment": "id of the lifecycle rule that makes a multipart upload eligible for abort operation.",
	"Method": "String getAbortRuleId(){\r\n    return abortRuleId;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentsResponse.withNextToken",
	"Comment": "an identifier used to retrieve the next page of results. the token isnull if no additional pages exist.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SegmentsResponse withNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.CelebrityDetail.withBoundingBox",
	"Comment": "bounding box around the body of a celebrity.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CelebrityDetail withBoundingBox(BoundingBox boundingBox){\r\n    this.boundingBox = boundingBox;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DirectMessageConfiguration.withSMSMessage",
	"Comment": "the message to sms channels. overrides the default message.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DirectMessageConfiguration withSMSMessage(SMSMessage sMSMessage){\r\n    this.sMSMessage = sMSMessage;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetContentModerationResult.getVideoMetadata",
	"Comment": "information about a video that amazon rekognition analyzed.videometadata is returned in every page of paginatedresponses from getcontentmoderation.",
	"Method": "VideoMetadata getVideoMetadata(){\r\n    return videoMetadata;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointResponse.withApplicationId",
	"Comment": "the id of the application that is associated with the endpoint.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointResponse withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.TestRenderTemplateResult.getRenderedTemplate",
	"Comment": "the complete mime message rendered by applying the data in thetemplatedata parameter to the template specified in the templatenameparameter.",
	"Method": "String getRenderedTemplate(){\r\n    return renderedTemplate;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideoarchivedmedia.model.TimestampRange.setStartTimestamp",
	"Comment": "the starting time stamp in the range of time stamps for which to returnfragments.",
	"Method": "void setStartTimestamp(java.util.Date startTimestamp){\r\n    this.startTimestamp = startTimestamp;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.SynthesizeSpeechRequest.getText",
	"Comment": "input text to synthesize. if you specify ssml as thetexttype, follow the ssml format for the input text.",
	"Method": "String getText(){\r\n    return text;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.GetTopicAttributesRequest.withTopicArn",
	"Comment": "the arn of the topic whose properties you want to get.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetTopicAttributesRequest withTopicArn(String topicArn){\r\n    this.topicArn = topicArn;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.AmazonS3Client.isSignerOverridden",
	"Comment": "has signer been explicitly overriden in the configuration?",
	"Method": "boolean isSignerOverridden(){\r\n    return clientConfiguration != null && clientConfiguration.getSignerOverride() != null;\r\n}"
}, {
	"Path": "com.amazonaws.demo.s3transferutility.DownloadActivity.initData",
	"Comment": "gets all relevant transfers from the transfer service for populating theui",
	"Method": "void initData(){\r\n    transferRecordMaps.clear();\r\n    observers = transferUtility.getTransfersWithType(TransferType.DOWNLOAD);\r\n    TransferListener listener = new DownloadListener();\r\n    for (TransferObserver observer : observers) {\r\n        observer.refresh();\r\n        HashMap<String, Object> map = new HashMap<String, Object>();\r\n        util.fillMap(map, observer, false);\r\n        transferRecordMaps.add(map);\r\n        if (TransferState.WAITING.equals(observer.getState()) || TransferState.WAITING_FOR_NETWORK.equals(observer.getState()) || TransferState.IN_PROGRESS.equals(observer.getState())) {\r\n            observer.setTransferListener(listener);\r\n        }\r\n    }\r\n    simpleAdapter.notifyDataSetChanged();\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.GetEndpointAttributesResult.clearAttributesEntries",
	"Comment": "removes all the entries added into attributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetEndpointAttributesResult clearAttributesEntries(){\r\n    this.attributes = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SendDataPoint.withComplaints",
	"Comment": "number of unwanted emails that were rejected by recipients.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendDataPoint withComplaints(Long complaints){\r\n    this.complaints = complaints;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMMessage.withImageIconUrl",
	"Comment": "the url that points to an image used as the large icon to thenotification content view.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ADMMessage withImageIconUrl(String imageIconUrl){\r\n    this.imageIconUrl = imageIconUrl;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.Session.withStopTimestamp",
	"Comment": "the date and time when the session ended.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Session withStopTimestamp(String stopTimestamp){\r\n    this.stopTimestamp = stopTimestamp;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StreamProcessorInput.withKinesisVideoStream",
	"Comment": "the kinesis video stream input stream for the source streaming video.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "StreamProcessorInput withKinesisVideoStream(KinesisVideoStream kinesisVideoStream){\r\n    this.kinesisVideoStream = kinesisVideoStream;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobResponse.withCompletionDate",
	"Comment": "the date the import job completed in iso 8601 format.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ImportJobResponse withCompletionDate(String completionDate){\r\n    this.completionDate = completionDate;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.PutDestinationResult.withDestination",
	"Comment": "the destination.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PutDestinationResult withDestination(Destination destination){\r\n    this.destination = destination;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.pinpoint.analytics.monetization.MonetizationEventBuilder.setItemPrice",
	"Comment": "sets the numerical item price to use when building the monetization event",
	"Method": "void setItemPrice(Double itemPrice){\r\n    this.itemPrice = itemPrice;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignResponse.getHoldoutPercent",
	"Comment": "the allocated percentage of end users who will not receive messages fromthis campaign.",
	"Method": "Integer getHoldoutPercent(){\r\n    return holdoutPercent;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EventStream.withApplicationId",
	"Comment": "the id of the application from which events should be published.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EventStream withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.SetSubscriptionAttributesRequest.withAttributeValue",
	"Comment": "the new value for the attribute in json format.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SetSubscriptionAttributesRequest withAttributeValue(String attributeValue){\r\n    this.attributeValue = attributeValue;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.DecryptRequest.clearEncryptionContextEntries",
	"Comment": "removes all the entries added into encryptioncontext.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DecryptRequest clearEncryptionContextEntries(){\r\n    this.encryptionContext = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignEmailMessage.withHtmlBody",
	"Comment": "the email html body.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CampaignEmailMessage withHtmlBody(String htmlBody){\r\n    this.htmlBody = htmlBody;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.ListSpeechSynthesisTasksRequest.withNextToken",
	"Comment": "the pagination token to use in the next request to continue the listingof speech synthesis tasks.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListSpeechSynthesisTasksRequest withNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentBehaviors.withRecency",
	"Comment": "the recency of use.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SegmentBehaviors withRecency(RecencyDimension recency){\r\n    this.recency = recency;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ItemResponse.clearEventsItemResponseEntries",
	"Comment": "removes all the entries added into eventsitemresponse.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ItemResponse clearEventsItemResponseEntries(){\r\n    this.eventsItemResponse = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.PutLexiconRequest.withContent",
	"Comment": "content of the pls lexicon as string data.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PutLexiconRequest withContent(String content){\r\n    this.content = content;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.getAccessControlList",
	"Comment": "returns the optional access control list for the new object. ifspecified, cannedacl will be ignored.",
	"Method": "AccessControlList getAccessControlList(){\r\n    return accessControlList;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ActivityResponse.getTotalEndpointCount",
	"Comment": "the total number of endpoints to which the campaign attempts to delivermessages.",
	"Method": "Integer getTotalEndpointCount(){\r\n    return totalEndpointCount;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DefaultMessage.getSubstitutions",
	"Comment": "default message substitutions. can be overridden by individual addresssubstitutions.",
	"Method": "java.util.Map<String, java.util.List<String>> getSubstitutions(){\r\n    return substitutions;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateBaiduChannelRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateBaiduChannelRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.EncryptedGetObjectRequest.withExtraMaterialsDescription",
	"Comment": "fluent api to set the supplemental materials description for theencryption materials to be used with the current request.",
	"Method": "EncryptedGetObjectRequest withExtraMaterialsDescription(ExtraMaterialsDescription supplemental,EncryptedGetObjectRequest withExtraMaterialsDescription,Map<String, String> supplemental){\r\n    setExtraMaterialDescription(supplemental == null ? null : new ExtraMaterialsDescription(supplemental));\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.GetParametersForImportResult.setParametersValidTo",
	"Comment": "the time at which the import token and public key are no longer valid.after this time, you cannot use them to make an importkeymaterialrequest and you must send another getparametersforimportrequest to get new ones.",
	"Method": "void setParametersValidTo(java.util.Date parametersValidTo){\r\n    this.parametersValidTo = parametersValidTo;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.DecryptRequest.withGrantTokens",
	"Comment": "a list of grant tokens.for more information, see grant tokens in the aws key management service developerguide.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DecryptRequest withGrantTokens(String grantTokens,DecryptRequest withGrantTokens,java.util.Collection<String> grantTokens){\r\n    setGrantTokens(grantTokens);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointLocation.withRegion",
	"Comment": "the region of the endpoint location. for example, in the united states,this corresponds to a state.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointLocation withRegion(String region){\r\n    this.region = region;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Warning.withErrorCode",
	"Comment": "sets the value of the errorcode property for this object.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Warning withErrorCode(String errorCode){\r\n    this.errorCode = errorCode;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteBucketAnalyticsConfigurationRequest.withBucketName",
	"Comment": "sets the name of the bucket from which an analytics configuration is deletedand returns this object for method chaining.",
	"Method": "DeleteBucketAnalyticsConfigurationRequest withBucketName(String bucketName){\r\n    setBucketName(bucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ObjectListing.setMarker",
	"Comment": "for internal use only. sets the marker parameter originally used torequest this object listing.",
	"Method": "void setMarker(String marker){\r\n    this.marker = marker;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SendDataPoint.withDeliveryAttempts",
	"Comment": "number of emails that have been sent.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendDataPoint withDeliveryAttempts(Long deliveryAttempts){\r\n    this.deliveryAttempts = deliveryAttempts;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetBucketInventoryConfigurationRequest.setBucketName",
	"Comment": "sets the name of the bucket containing the inventory configuration to retrieve.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.DeleteMessageRequest.withReceiptHandle",
	"Comment": "the receipt handle associated with the message to delete.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteMessageRequest withReceiptHandle(String receiptHandle){\r\n    this.receiptHandle = receiptHandle;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.ListDeadLetterSourceQueuesResult.getQueueUrls",
	"Comment": "a list of source queue urls that have the redrivepolicy queue attributeconfigured with a dead letter queue.",
	"Method": "java.util.List<String> getQueueUrls(){\r\n    return queueUrls;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.EncryptionUtils.encryptRequestUsingInstruction",
	"Comment": "returns an updated request where the input stream contains the encryptedobject contents. the specified instruction will be used to encrypt data.",
	"Method": "PutObjectRequest encryptRequestUsingInstruction(PutObjectRequest request,EncryptionInstruction instruction){\r\n    ObjectMetadata metadata = request.getMetadata();\r\n    if (metadata == null) {\r\n        metadata = new ObjectMetadata();\r\n    }\r\n    if (metadata.getContentMD5() != null) {\r\n        metadata.addUserMetadata(Headers.UNENCRYPTED_CONTENT_MD5, metadata.getContentMD5());\r\n    }\r\n    metadata.setContentMD5(null);\r\n    final long plaintextLength = getUnencryptedContentLength(request, metadata);\r\n    if (plaintextLength >= 0) {\r\n        metadata.addUserMetadata(Headers.UNENCRYPTED_CONTENT_LENGTH, Long.toString(plaintextLength));\r\n    }\r\n    long cryptoContentLength = calculateCryptoContentLength(instruction.getSymmetricCipher(), request, metadata);\r\n    if (cryptoContentLength >= 0) {\r\n        metadata.setContentLength(cryptoContentLength);\r\n    }\r\n    request.setMetadata(metadata);\r\n    request.setInputStream(getEncryptedInputStream(request, instruction.getCipherFactory(), plaintextLength));\r\n    request.setFile(null);\r\n    return request;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.Shard.setHashKeyRange",
	"Comment": "the range of possible hash key values for the shard, which is a set ofordered contiguous positive integers.",
	"Method": "void setHashKeyRange(HashKeyRange hashKeyRange){\r\n    this.hashKeyRange = hashKeyRange;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.SynthesizeSpeechRequest.setLexiconNames",
	"Comment": "list of one or more pronunciation lexicon names you want the service toapply during synthesis. lexicons are applied only if the language of thelexicon is the same as the language of the voice. for information aboutstoring lexicons, see putlexicon.",
	"Method": "void setLexiconNames(java.util.Collection<String> lexiconNames){\r\n    if (lexiconNames == null) {\r\n        this.lexiconNames = null;\r\n        return;\r\n    }\r\n    this.lexiconNames = new java.util.ArrayList<String>(lexiconNames);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ActivityResponse.getTimezonesTotalCount",
	"Comment": "the total number of unique timezones present in the segment.",
	"Method": "Integer getTimezonesTotalCount(){\r\n    return timezonesTotalCount;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DescribeConfigurationSetResult.withTrackingOptions",
	"Comment": "the name of the custom open and click tracking domain associated with theconfiguration set.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DescribeConfigurationSetResult withTrackingOptions(TrackingOptions trackingOptions){\r\n    this.trackingOptions = trackingOptions;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.ReceiveMessageRequest.getMaxNumberOfMessages",
	"Comment": "the maximum number of messages to return. amazon sqs never returns moremessages than this value but might return fewer. values can be from 1 to10. default is 1.all of the messages are not necessarily returned.",
	"Method": "Integer getMaxNumberOfMessages(){\r\n    return maxNumberOfMessages;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.GenerateDataKeyWithoutPlaintextRequest.setGrantTokens",
	"Comment": "a list of grant tokens.for more information, see grant tokens in the aws key management service developerguide.",
	"Method": "void setGrantTokens(java.util.Collection<String> grantTokens){\r\n    if (grantTokens == null) {\r\n        this.grantTokens = null;\r\n        return;\r\n    }\r\n    this.grantTokens = new java.util.ArrayList<String>(grantTokens);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.AmazonS3Client.createRequest",
	"Comment": "creates and initializes a new request object for the specified s3resource. this method is responsible for determining the right way toaddress resources. for example, bucket names that are not dns addressablecannot be addressed in v2, virtual host, style, and instead must use v1,path style. the returned request object has the service name, endpointand resource path correctly populated. callers can take the request, addany additional headers or parameters, then sign and execute the request.",
	"Method": "Request<X> createRequest(String bucketName,String key,X originalRequest,HttpMethodName httpMethod,Request<X> createRequest,String bucketName,String key,X originalRequest,HttpMethodName httpMethod,URI endpoint){\r\n    final Request<X> request = new DefaultRequest<X>(originalRequest, Constants.S3_SERVICE_DISPLAY_NAME);\r\n    if (clientOptions.isAccelerateModeEnabled() && !(request.getOriginalRequest() instanceof S3AccelerateUnsupported)) {\r\n        if (clientOptions.isDualstackEnabled()) {\r\n            endpoint = RuntimeHttpUtils.toUri(Constants.S3_ACCELERATE_DUALSTACK_HOSTNAME, clientConfiguration);\r\n        } else {\r\n            endpoint = RuntimeHttpUtils.toUri(Constants.S3_ACCELERATE_HOSTNAME, clientConfiguration);\r\n        }\r\n    }\r\n    request.setHttpMethod(httpMethod);\r\n    resolveRequestEndpoint(request, bucketName, key, endpoint);\r\n    return request;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteCampaignResult.withCampaignResponse",
	"Comment": "campaign definitionreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteCampaignResult withCampaignResponse(CampaignResponse campaignResponse){\r\n    this.campaignResponse = campaignResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetCampaignVersionsRequest.setToken",
	"Comment": "the nexttoken string returned on a previous page that you use to get thenext page of results in a paginated response.",
	"Method": "void setToken(String token){\r\n    this.token = token;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartFaceSearchRequest.getVideo",
	"Comment": "the video you want to search. the video must be stored in an amazon s3bucket.",
	"Method": "Video getVideo(){\r\n    return video;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetApnsChannelResult.getAPNSChannelResponse",
	"Comment": "apple distribution push notification service channel definition.",
	"Method": "APNSChannelResponse getAPNSChannelResponse(){\r\n    return aPNSChannelResponse;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ActivityResponse.withTimezonesTotalCount",
	"Comment": "the total number of unique timezones present in the segment.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ActivityResponse withTimezonesTotalCount(Integer timezonesTotalCount){\r\n    this.timezonesTotalCount = timezonesTotalCount;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.WriteCampaignRequest.setAdditionalTreatments",
	"Comment": "treatments that are defined in addition to the default treatment.",
	"Method": "void setAdditionalTreatments(java.util.Collection<WriteTreatmentResource> additionalTreatments){\r\n    if (additionalTreatments == null) {\r\n        this.additionalTreatments = null;\r\n        return;\r\n    }\r\n    this.additionalTreatments = new java.util.ArrayList<WriteTreatmentResource>(additionalTreatments);\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SendCustomVerificationEmailRequest.withTemplateName",
	"Comment": "the name of the custom verification email template to use when sendingthe verification email.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendCustomVerificationEmailRequest withTemplateName(String templateName){\r\n    this.templateName = templateName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSVoipChannelResponse.setHasTokenKey",
	"Comment": "if the channel is registered with a token key for authentication.",
	"Method": "void setHasTokenKey(Boolean hasTokenKey){\r\n    this.hasTokenKey = hasTokenKey;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMChannelRequest.setEnabled",
	"Comment": "indicates whether or not the channel is enabled for sending messages.",
	"Method": "void setEnabled(Boolean enabled){\r\n    this.enabled = enabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CustomVerificationEmailTemplateAlreadyExistsException.setCustomVerificationEmailTemplateName",
	"Comment": "indicates that the provided custom verification email template with thespecified template name already exists.",
	"Method": "void setCustomVerificationEmailTemplateName(String customVerificationEmailTemplateName){\r\n    this.customVerificationEmailTemplateName = customVerificationEmailTemplateName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.AbortMultipartUploadRequest.withKey",
	"Comment": "sets the key of the multipart upload to abort and returns the updatedabortmultipartuploadrequest object so that additional method calls can bechained together.",
	"Method": "AbortMultipartUploadRequest withKey(String key){\r\n    this.key = key;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointResponse.clearAttributesEntries",
	"Comment": "removes all the entries added into attributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointResponse clearAttributesEntries(){\r\n    this.attributes = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClient.listTemplates",
	"Comment": "lists the email templates present in your amazon ses account in thecurrent aws region.you can execute this operation no more than once per second.",
	"Method": "ListTemplatesResult listTemplates(ListTemplatesRequest listTemplatesRequest){\r\n    ExecutionContext executionContext = createExecutionContext(listTemplatesRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<ListTemplatesRequest> request = null;\r\n    Response<ListTemplatesResult> response = null;\r\n    try {\r\n        request = new ListTemplatesRequestMarshaller().marshall(listTemplatesRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        response = invoke(request, new ListTemplatesResultStaxUnmarshaller(), executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetLabelDetectionResult.withLabels",
	"Comment": "an array of labels detected in the video. each element contains thedetected label and the time, in milliseconds from the start of the video,that the label was detected.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetLabelDetectionResult withLabels(LabelDetection labels,GetLabelDetectionResult withLabels,java.util.Collection<LabelDetection> labels){\r\n    setLabels(labels);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Request.setStartAfter",
	"Comment": "sets the optional parameter indicating where you want amazon s3 to startthe object listing from. this can be any key in the bucket.",
	"Method": "void setStartAfter(String startAfter){\r\n    this.startAfter = startAfter;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.ServiceUtils.skipMd5CheckPerRequest",
	"Comment": "returns whether the specified request should skip md5 check on therequested object content.",
	"Method": "boolean skipMd5CheckPerRequest(AmazonWebServiceRequest request){\r\n    if (System.getProperty(\"com.amazonaws.services.s3.disableGetObjectMD5Validation\") != null) {\r\n        return true;\r\n    }\r\n    if (request instanceof GetObjectRequest) {\r\n        final GetObjectRequest getObjectRequest = (GetObjectRequest) request;\r\n        if (getObjectRequest.getRange() != null) {\r\n            return true;\r\n        }\r\n        if (getObjectRequest.getSSECustomerKey() != null) {\r\n            return true;\r\n        }\r\n    } else if (request instanceof PutObjectRequest) {\r\n        final PutObjectRequest putObjectRequest = (PutObjectRequest) request;\r\n        final ObjectMetadata om = putObjectRequest.getMetadata();\r\n        if (om != null && om.getSSEAlgorithm() != null) {\r\n            return true;\r\n        }\r\n        return putObjectRequest.getSSECustomerKey() != null;\r\n    } else if (request instanceof UploadPartRequest) {\r\n        final UploadPartRequest uploadPartRequest = (UploadPartRequest) request;\r\n        return uploadPartRequest.getSSECustomerKey() != null;\r\n    }\r\n    return false;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.SendMessageBatchRequestEntry.setMessageAttributes",
	"Comment": "each message attribute consists of a name, type, and value. for moreinformation, see message attribute items in the amazon sqs developer guide.",
	"Method": "void setMessageAttributes(java.util.Map<String, MessageAttributeValue> messageAttributes){\r\n    this.messageAttributes = messageAttributes;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.IdentityNotificationAttributes.getHeadersInDeliveryNotificationsEnabled",
	"Comment": "describes whether amazon ses includes the original email headers inamazon sns notifications of type delivery. a value oftrue specifies that amazon ses will include headers indelivery notifications, and a value of false specifies thatamazon ses will not include headers in delivery notifications.",
	"Method": "Boolean getHeadersInDeliveryNotificationsEnabled(){\r\n    return headersInDeliveryNotificationsEnabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideoarchivedmedia.model.GetMediaForFragmentListRequest.getFragments",
	"Comment": "a list of the numbers of fragments for which to retrieve media. youretrieve these values with listfragments.",
	"Method": "java.util.List<String> getFragments(){\r\n    return fragments;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobResponse.getFailures",
	"Comment": "provides up to 100 of the first failed entries for the job, if any exist.",
	"Method": "java.util.List<String> getFailures(){\r\n    return failures;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListPhoneNumbersOptedOutResult.setPhoneNumbers",
	"Comment": "a list of phone numbers that are opted out of receiving sms messages. thelist is paginated, and each page can contain up to 100 phone numbers.",
	"Method": "void setPhoneNumbers(java.util.Collection<String> phoneNumbers){\r\n    if (phoneNumbers == null) {\r\n        this.phoneNumbers = null;\r\n        return;\r\n    }\r\n    this.phoneNumbers = new java.util.ArrayList<String>(phoneNumbers);\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.TranscriptionJob.setTranscript",
	"Comment": "an object that describes the output of the transcription job.",
	"Method": "void setTranscript(Transcript transcript){\r\n    this.transcript = transcript;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ExportJobRequest.withSegmentId",
	"Comment": "the id of the segment to export endpoints from. if not present, amazonpinpoint exports all of the endpoints that belong to the application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ExportJobRequest withSegmentId(String segmentId){\r\n    this.segmentId = segmentId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.getCustomVerificationEmailTemplateAsync",
	"Comment": "returns the custom email verification template for the template name youspecify.for more information about custom verification email templates, see using custom verification email templates in the amazon sesdeveloper guide.you can execute this operation no more than once per second.",
	"Method": "Future<GetCustomVerificationEmailTemplateResult> getCustomVerificationEmailTemplateAsync(GetCustomVerificationEmailTemplateRequest getCustomVerificationEmailTemplateRequest,Future<GetCustomVerificationEmailTemplateResult> getCustomVerificationEmailTemplateAsync,GetCustomVerificationEmailTemplateRequest getCustomVerificationEmailTemplateRequest,AsyncHandler<GetCustomVerificationEmailTemplateRequest, GetCustomVerificationEmailTemplateResult> asyncHandler){\r\n    return executorService.submit(new Callable<GetCustomVerificationEmailTemplateResult>() {\r\n        public GetCustomVerificationEmailTemplateResult call() throws Exception {\r\n            GetCustomVerificationEmailTemplateResult result = null;\r\n            try {\r\n                result = getCustomVerificationEmailTemplate(getCustomVerificationEmailTemplateRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(getCustomVerificationEmailTemplateRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.getCustomVerificationEmailTemplateAsync",
	"Comment": "returns the custom email verification template for the template name youspecify.for more information about custom verification email templates, see using custom verification email templates in the amazon sesdeveloper guide.you can execute this operation no more than once per second.",
	"Method": "Future<GetCustomVerificationEmailTemplateResult> getCustomVerificationEmailTemplateAsync(GetCustomVerificationEmailTemplateRequest getCustomVerificationEmailTemplateRequest,Future<GetCustomVerificationEmailTemplateResult> getCustomVerificationEmailTemplateAsync,GetCustomVerificationEmailTemplateRequest getCustomVerificationEmailTemplateRequest,AsyncHandler<GetCustomVerificationEmailTemplateRequest, GetCustomVerificationEmailTemplateResult> asyncHandler){\r\n    GetCustomVerificationEmailTemplateResult result = null;\r\n    try {\r\n        result = getCustomVerificationEmailTemplate(getCustomVerificationEmailTemplateRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(getCustomVerificationEmailTemplateRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.UpdateConfigurationSetSendingEnabledRequest.withConfigurationSetName",
	"Comment": "the name of the configuration set that you want to update.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateConfigurationSetSendingEnabledRequest withConfigurationSetName(String configurationSetName){\r\n    this.configurationSetName = configurationSetName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteVersionRequest.getBucketName",
	"Comment": "gets the name of the amazon s3 bucket containing the version to delete.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.UpdateCustomVerificationEmailTemplateRequest.setFromEmailAddress",
	"Comment": "the email address that the custom verification email is sent from.",
	"Method": "void setFromEmailAddress(String fromEmailAddress){\r\n    this.fromEmailAddress = fromEmailAddress;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketLoggingConfiguration.getDestinationBucketName",
	"Comment": "returns the destination bucket name for this logging configuration.",
	"Method": "String getDestinationBucketName(){\r\n    return destinationBucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CustomVerificationEmailTemplate.withFromEmailAddress",
	"Comment": "the email address that the custom verification email is sent from.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CustomVerificationEmailTemplate withFromEmailAddress(String fromEmailAddress){\r\n    this.fromEmailAddress = fromEmailAddress;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.RestoreObjectRequest.getKey",
	"Comment": "gets the key, the name of the reference to the object to restore, whichis now stored in amazon glacier.",
	"Method": "String getKey(){\r\n    return key;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.MouthOpen.isValue",
	"Comment": "boolean value that indicates whether the mouth on the face is open ornot.",
	"Method": "Boolean isValue(){\r\n    return value;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.Message.getMediaUrl",
	"Comment": "the url that points to the media resource, for example a .mp4 or .giffile.",
	"Method": "String getMediaUrl(){\r\n    return mediaUrl;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.SynthesisTask.withOutputUri",
	"Comment": "pathway for the output speech file.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SynthesisTask withOutputUri(String outputUri){\r\n    this.outputUri = outputUri;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.MultipartUploadListing.setNextUploadIdMarker",
	"Comment": "sets the next upload id marker that should be used in the next request toget the next page of results.",
	"Method": "void setNextUploadIdMarker(String nextUploadIdMarker){\r\n    this.nextUploadIdMarker = nextUploadIdMarker;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.GetSendStatisticsResult.getSendDataPoints",
	"Comment": "a list of data points, each of which represents 15 minutes of activity.",
	"Method": "java.util.List<SendDataPoint> getSendDataPoints(){\r\n    return sendDataPoints;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.StreamDescription.withStreamCreationTimestamp",
	"Comment": "the approximate time that the stream was created.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "StreamDescription withStreamCreationTimestamp(java.util.Date streamCreationTimestamp){\r\n    this.streamCreationTimestamp = streamCreationTimestamp;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketMetricsConfigurationsRequest.setBucketName",
	"Comment": "sets the name of the bucket containing the metrics configurations to retrieve.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListSubscriptionsByTopicResult.getNextToken",
	"Comment": "token to pass along to the next listsubscriptionsbytopicrequest. this element is returned if there are more subscriptions toretrieve.",
	"Method": "String getNextToken(){\r\n    return nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.BoundingBox.setHeight",
	"Comment": "height of the bounding box as a ratio of the overall image height.",
	"Method": "void setHeight(Float height){\r\n    this.height = height;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetImportJobsRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetImportJobsRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobResource.setSegmentId",
	"Comment": "the id of the segment to update if the import job is meant to update anexisting segment.",
	"Method": "void setSegmentId(String segmentId){\r\n    this.segmentId = segmentId;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.ListSpeechSynthesisTasksResult.withNextToken",
	"Comment": "an opaque pagination token returned from the previous list operation inthis request. if present, this indicates where to continue the listing.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListSpeechSynthesisTasksResult withNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ViolationEvent.withBehavior",
	"Comment": "the behavior which was violated.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ViolationEvent withBehavior(Behavior behavior){\r\n    this.behavior = behavior;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.BounceAction.setSender",
	"Comment": "the email address of the sender of the bounced email. this is the addressfrom which the bounce message will be sent.",
	"Method": "void setSender(String sender){\r\n    this.sender = sender;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.DetectModerationLabelsResult.withModerationLabels",
	"Comment": "array of detected moderation labels and the time, in millseconds from thestart of the video, they were detected.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DetectModerationLabelsResult withModerationLabels(ModerationLabel moderationLabels,DetectModerationLabelsResult withModerationLabels,java.util.Collection<ModerationLabel> moderationLabels){\r\n    setModerationLabels(moderationLabels);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SendTemplatedEmailRequest.withTemplateArn",
	"Comment": "the arn of the template to use when sending this email.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendTemplatedEmailRequest withTemplateArn(String templateArn){\r\n    this.templateArn = templateArn;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.BatchPutAttributesRequest.withItems",
	"Comment": "a list of items on which to perform the operation.returns a reference to this object so that method calls can be chained together.",
	"Method": "BatchPutAttributesRequest withItems(ReplaceableItem items,BatchPutAttributesRequest withItems,java.util.Collection<ReplaceableItem> items){\r\n    if (items == null) {\r\n        this.items = null;\r\n    } else {\r\n        com.amazonaws.internal.ListWithAutoConstructFlag<ReplaceableItem> itemsCopy = new com.amazonaws.internal.ListWithAutoConstructFlag<ReplaceableItem>(items.size());\r\n        itemsCopy.addAll(items);\r\n        this.items = itemsCopy;\r\n    }\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetCampaignVersionsRequest.withPageSize",
	"Comment": "the number of entries you want on each page in the response.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetCampaignVersionsRequest withPageSize(String pageSize){\r\n    this.pageSize = pageSize;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobResponse.getTotalProcessed",
	"Comment": "the number of endpoints that were processed by the import job.",
	"Method": "Integer getTotalProcessed(){\r\n    return totalProcessed;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GCMMessage.setImageIconUrl",
	"Comment": "the url that points to an image used as the large icon to thenotification content view.",
	"Method": "void setImageIconUrl(String imageIconUrl){\r\n    this.imageIconUrl = imageIconUrl;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.internal.UploadCallable.uploadPartsInParallel",
	"Comment": "submits a callable for each part to upload to our thread pool and recordsits corresponding future.",
	"Method": "void uploadPartsInParallel(UploadPartRequestFactory requestFactory,String uploadId){\r\n    Map<Integer, PartSummary> partNumbers = identifyExistingPartsForResume(uploadId);\r\n    while (requestFactory.hasMoreRequests()) {\r\n        if (threadPool.isShutdown())\r\n            throw new CancellationException(\"TransferManager has been shutdown\");\r\n        UploadPartRequest request = requestFactory.getNextUploadPartRequest();\r\n        if (partNumbers.containsKey(request.getPartNumber())) {\r\n            PartSummary summary = partNumbers.get(request.getPartNumber());\r\n            eTagsToSkip.add(new PartETag(request.getPartNumber(), summary.getETag()));\r\n            transferProgress.updateProgress(summary.getSize());\r\n            continue;\r\n        }\r\n        futures.add(threadPool.submit(new UploadPartCallable(s3, request)));\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.ListLexiconsResult.setNextToken",
	"Comment": "the pagination token to use in the next request to continue the listingof lexicons. nexttoken is returned only if the response istruncated.",
	"Method": "void setNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SetActiveReceiptRuleSetRequest.getRuleSetName",
	"Comment": "the name of the receipt rule set to make active. setting this value tonull disables all email receiving.",
	"Method": "String getRuleSetName(){\r\n    return ruleSetName;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.CheckIfPhoneNumberIsOptedOutRequest.getPhoneNumber",
	"Comment": "the phone number for which you want to check the opt out status.",
	"Method": "String getPhoneNumber(){\r\n    return phoneNumber;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ItemResponse.withEventsItemResponse",
	"Comment": "events item response is a multipart response object per event id, witheventid as the key and eventitemresponse object as the valuereturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ItemResponse withEventsItemResponse(java.util.Map<String, EventItemResponse> eventsItemResponse){\r\n    this.eventsItemResponse = eventsItemResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.FilterLogEventsRequest.getInterleaved",
	"Comment": "if the value is true, the operation makes a best effort to provideresponses that contain events from multiple log streams within the loggroup, interleaved in a single response. if the value is false, all thematched log events in the first log stream are searched first, then thosein the next log stream, and so on. the default is false.",
	"Method": "Boolean getInterleaved(){\r\n    return interleaved;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointLocation.getLongitude",
	"Comment": "the longitude of the endpoint location, rounded to one decimal place.",
	"Method": "Double getLongitude(){\r\n    return longitude;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.Message.withImageUrl",
	"Comment": "the url that points to an image used in the push notification.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Message withImageUrl(String imageUrl){\r\n    this.imageUrl = imageUrl;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.DescribeStreamProcessorResult.withInput",
	"Comment": "kinesis video stream that provides the source streaming video.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DescribeStreamProcessorResult withInput(StreamProcessorInput input){\r\n    this.input = input;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.TransferManagerConfiguration.getMinimumUploadPartSize",
	"Comment": "returns the minimum part size for upload parts. decreasing the minimumpart size causes multipart uploads to be split into a larger number ofsmaller parts. setting this value too low has a negative effect ontransfer speeds, causing extra latency and network communication for eachpart.",
	"Method": "long getMinimumUploadPartSize(){\r\n    return minimumUploadPartSize;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.EncryptedPutObjectRequest.setMaterialsDescription",
	"Comment": "sets the materials description for the encryption materials to be usedwith the current putobjectrequest.",
	"Method": "void setMaterialsDescription(Map<String, String> materialsDescription){\r\n    this.materialsDescription = materialsDescription == null ? null : Collections.unmodifiableMap(new HashMap<String, String>(materialsDescription));\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartPersonTrackingRequest.setNotificationChannel",
	"Comment": "the amazon sns topic arn you want amazon rekognition video to publish thecompletion status of the people detection operation to.",
	"Method": "void setNotificationChannel(NotificationChannel notificationChannel){\r\n    this.notificationChannel = notificationChannel;\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ValidateSecurityProfileBehaviorsResult.withValid",
	"Comment": "true if the behaviors were valid.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ValidateSecurityProfileBehaviorsResult withValid(Boolean valid){\r\n    this.valid = valid;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.DescribeKeyRequest.setGrantTokens",
	"Comment": "a list of grant tokens.for more information, see grant tokens in the aws key management service developerguide.",
	"Method": "void setGrantTokens(java.util.Collection<String> grantTokens){\r\n    if (grantTokens == null) {\r\n        this.grantTokens = null;\r\n        return;\r\n    }\r\n    this.grantTokens = new java.util.ArrayList<String>(grantTokens);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMMessage.getSmallImageIconUrl",
	"Comment": "the url that points to an image used as the small icon for thenotification which will be used to represent the notification in thestatus bar and content view",
	"Method": "String getSmallImageIconUrl(){\r\n    return smallImageIconUrl;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.GrantConstraints.clearEncryptionContextSubsetEntries",
	"Comment": "removes all the entries added into encryptioncontextsubset.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GrantConstraints clearEncryptionContextSubsetEntries(){\r\n    this.encryptionContextSubset = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CreateCampaignRequest.withWriteCampaignRequest",
	"Comment": "used to create a campaign.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreateCampaignRequest withWriteCampaignRequest(WriteCampaignRequest writeCampaignRequest){\r\n    this.writeCampaignRequest = writeCampaignRequest;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ListResourceTagsResult.withTags",
	"Comment": "a list of tags. each tag consists of a tag key and a tag value.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListResourceTagsResult withTags(Tag tags,ListResourceTagsResult withTags,java.util.Collection<Tag> tags){\r\n    setTags(tags);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.amazonmobileanalytics.AnalyticsConfig.getClientConfiguration",
	"Comment": "gets the client configuration this client will use when making requests.if none was supplied to the constructor this will return the defaultclient configuration.",
	"Method": "ClientConfiguration getClientConfiguration(){\r\n    return this.clientConfiguration;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.CelebrityDetail.withFace",
	"Comment": "face details for the recognized celebrity.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CelebrityDetail withFace(FaceDetail face){\r\n    this.face = face;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.GetAttributesRequest.getConsistentRead",
	"Comment": "determines whether or not strong consistency should be enforced whendata is read from simpledb. if true, any data previouslywritten to simpledb will be returned. otherwise, results will beconsistent eventually, and the client may not see data that waswritten immediately before your read.",
	"Method": "Boolean getConsistentRead(){\r\n    return consistentRead;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial.fromObjectMetadata",
	"Comment": "factory method to return the content crypto material from the s3 objectmeta data, using the specified key encrypting key material accessor andan optional security provider.",
	"Method": "ContentCryptoMaterial fromObjectMetadata(ObjectMetadata metadata,EncryptionMaterialsAccessor kekMaterialAccessor,Provider securityProvider,boolean keyWrapExpected,AWSKMSClient kms,ContentCryptoMaterial fromObjectMetadata,ObjectMetadata metadata,EncryptionMaterialsAccessor kekMaterialAccessor,Provider securityProvider,long[] range,ExtraMaterialsDescription extra,boolean keyWrapExpected,AWSKMSClient kms){\r\n    return fromObjectMetadata0(metadata, kekMaterialAccessor, securityProvider, range, extra, keyWrapExpected, kms);\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.KeyMetadata.withDeletionDate",
	"Comment": "the date and time after which aws kms deletes the cmk. this value ispresent only when keystate is pendingdeletion,otherwise this value is omitted.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "KeyMetadata withDeletionDate(java.util.Date deletionDate){\r\n    this.deletionDate = deletionDate;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetExportJobsResult.withExportJobsResponse",
	"Comment": "export job list.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetExportJobsResult withExportJobsResponse(ExportJobsResponse exportJobsResponse){\r\n    this.exportJobsResponse = exportJobsResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobResponse.getApplicationId",
	"Comment": "the unique id of the application to which the import job applies.",
	"Method": "String getApplicationId(){\r\n    return applicationId;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobRequest.setDefineSegment",
	"Comment": "sets whether the endpoints create a segment when they are imported.",
	"Method": "void setDefineSegment(Boolean defineSegment){\r\n    this.defineSegment = defineSegment;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceMatch.setFace",
	"Comment": "describes the face properties such as the bounding box, face id, image idof the source image, and external image id that you assigned.",
	"Method": "void setFace(Face face){\r\n    this.face = face;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DefaultPushNotificationMessage.withSilentPush",
	"Comment": "indicates if the message should display on the users device. silentpushes can be used for remote configuration and phone home use cases.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DefaultPushNotificationMessage withSilentPush(Boolean silentPush){\r\n    this.silentPush = silentPush;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.S3CryptoModuleBase.putObjectUsingInstructionFile",
	"Comment": "puts an encrypted object into s3, and puts an instruction file into s3.encryption info is stored in the instruction file.",
	"Method": "PutObjectResult putObjectUsingInstructionFile(PutObjectRequest putObjectRequest){\r\n    final File fileOrig = putObjectRequest.getFile();\r\n    final InputStream isOrig = putObjectRequest.getInputStream();\r\n    final PutObjectRequest putInstFileRequest = putObjectRequest.clone().withFile(null).withInputStream(null);\r\n    putInstFileRequest.setKey(putInstFileRequest.getKey() + DOT + DEFAULT_INSTRUCTION_FILE_SUFFIX);\r\n    final ContentCryptoMaterial cekMaterial = createContentCryptoMaterial(putObjectRequest);\r\n    final PutObjectRequest req = wrapWithCipher(putObjectRequest, cekMaterial);\r\n    final PutObjectResult result;\r\n    try {\r\n        result = s3.putObject(req);\r\n    } finally {\r\n        cleanupDataSource(putObjectRequest, fileOrig, isOrig, req.getInputStream(), log);\r\n    }\r\n    s3.putObject(updateInstructionPutRequest(putInstFileRequest, cekMaterial));\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.PutEventStreamRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PutEventStreamRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.WriteCampaignRequest.setSegmentVersion",
	"Comment": "the version of the segment to which the campaign sends messages.",
	"Method": "void setSegmentVersion(Integer segmentVersion){\r\n    this.segmentVersion = segmentVersion;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transferutility.TransferRecord.start",
	"Comment": "checks the state of the transfer and starts a thread to run the transfertask if possible.",
	"Method": "boolean start(AmazonS3 s3,TransferDBUtil dbUtil,TransferStatusUpdater updater){\r\n    if (!isRunning() && checkIsReadyToRun()) {\r\n        if (type.equals(TransferType.DOWNLOAD)) {\r\n            submittedTask = TransferThreadPool.submitTask(new DownloadTask(this, s3, updater));\r\n        } else {\r\n            submittedTask = TransferThreadPool.submitTask(new UploadTask(this, s3, dbUtil, updater));\r\n        }\r\n        return true;\r\n    }\r\n    return false;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.UpdateCondition.withValue",
	"Comment": "the value of an attribute. this value can only be specified when theexists parameter is equal to true.returns a reference to this object so that method calls can be chained together.",
	"Method": "UpdateCondition withValue(String value){\r\n    this.value = value;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSMessage.withBadge",
	"Comment": "include this key when you want the system to modify the badge of your appicon. if this key is not included in the dictionary, the badge is notchanged. to remove the badge, set the value of this key to 0.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSMessage withBadge(Integer badge){\r\n    this.badge = badge;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointRequest.withEffectiveDate",
	"Comment": "the date and time when the endpoint was updated, shown in iso 8601format.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointRequest withEffectiveDate(String effectiveDate){\r\n    this.effectiveDate = effectiveDate;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ListAliasesResult.getTruncated",
	"Comment": "a flag that indicates whether there are more items in the list. when thisvalue is true, the list in this response is truncated. to get more items,pass the value of the nextmarker element in this response tothe marker parameter in a subsequent request.",
	"Method": "Boolean getTruncated(){\r\n    return truncated;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GeneratePresignedUrlRequest.addCustomQueryParameter",
	"Comment": "add a custom query parameter for the request. since multiple values are allowed for the samequery parameter, this method does not overwrite any existing parameter values in the request.any custom query parameters that are defined are used in the http request to the aws service.",
	"Method": "void addCustomQueryParameter(String name,String value){\r\n    if (customQueryParameters == null) {\r\n        customQueryParameters = new HashMap<String, String>();\r\n    }\r\n    if (customQueryParameters.get(name) == null) {\r\n        customQueryParameters.put(name, value);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointLocation.setRegion",
	"Comment": "the region of the endpoint location. for example, in the united states,this corresponds to a state.",
	"Method": "void setRegion(String region){\r\n    this.region = region;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.SendMessageBatchResult.withSuccessful",
	"Comment": "a list of sendmessagebatchresultentry items.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendMessageBatchResult withSuccessful(SendMessageBatchResultEntry successful,SendMessageBatchResult withSuccessful,java.util.Collection<SendMessageBatchResultEntry> successful){\r\n    setSuccessful(successful);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.getRedirectLocation",
	"Comment": "gets the optional redirect location for the newly copied object.",
	"Method": "String getRedirectLocation(){\r\n    return this.redirectLocation;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ListKeyPoliciesResult.withTruncated",
	"Comment": "a flag that indicates whether there are more items in the list. when thisvalue is true, the list in this response is truncated. to get more items,pass the value of the nextmarker element in this response tothe marker parameter in a subsequent request.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListKeyPoliciesResult withTruncated(Boolean truncated){\r\n    this.truncated = truncated;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.setDestinationKey",
	"Comment": "sets the destination bucket key under which the new, copied object willbe stored.",
	"Method": "void setDestinationKey(String destinationKey){\r\n    this.destinationKey = destinationKey;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.IndexFacesResult.setFaceRecords",
	"Comment": "an array of faces detected and added to the collection. for moreinformation, see searching faces in a collection in the amazonrekognition developer guide.",
	"Method": "void setFaceRecords(java.util.Collection<FaceRecord> faceRecords){\r\n    if (faceRecords == null) {\r\n        this.faceRecords = null;\r\n        return;\r\n    }\r\n    this.faceRecords = new java.util.ArrayList<FaceRecord>(faceRecords);\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.AddPermissionRequest.setAWSAccountIds",
	"Comment": "the aws account number of the principal who will be given permission. the principal must have anaws account, but does not need to be signed up for amazon sqs. forinformation about locating the aws account identification, see your aws identifiers in the amazon sqs developer guide.",
	"Method": "void setAWSAccountIds(java.util.Collection<String> aWSAccountIds){\r\n    if (aWSAccountIds == null) {\r\n        this.aWSAccountIds = null;\r\n        return;\r\n    }\r\n    this.aWSAccountIds = new java.util.ArrayList<String>(aWSAccountIds);\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.internal.MultipleFileTransfer.setState",
	"Comment": "override this method so that transferstate updates are also sent out tothe progress listener chain in forms of progressevent.",
	"Method": "void setState(TransferState state){\r\n    super.setState(state);\r\n    switch(state) {\r\n        case Waiting:\r\n            fireProgressEvent(ProgressEvent.PREPARING_EVENT_CODE);\r\n            break;\r\n        case InProgress:\r\n            if (subTransferStarted.compareAndSet(false, true)) {\r\n                fireProgressEvent(ProgressEvent.STARTED_EVENT_CODE);\r\n            }\r\n            break;\r\n        case Completed:\r\n            fireProgressEvent(ProgressEvent.COMPLETED_EVENT_CODE);\r\n            break;\r\n        case Canceled:\r\n            fireProgressEvent(ProgressEvent.CANCELED_EVENT_CODE);\r\n            break;\r\n        case Failed:\r\n            fireProgressEvent(ProgressEvent.FAILED_EVENT_CODE);\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.ListTranscriptionJobsResult.setTranscriptionJobSummaries",
	"Comment": "a list of objects containing summary information for a transcription job.",
	"Method": "void setTranscriptionJobSummaries(java.util.Collection<TranscriptionJobSummary> transcriptionJobSummaries){\r\n    if (transcriptionJobSummaries == null) {\r\n        this.transcriptionJobSummaries = null;\r\n        return;\r\n    }\r\n    this.transcriptionJobSummaries = new java.util.ArrayList<TranscriptionJobSummary>(transcriptionJobSummaries);\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.ListTagsLogGroupResult.cleartagsEntries",
	"Comment": "removes all the entries added into tags.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListTagsLogGroupResult cleartagsEntries(){\r\n    this.tags = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobResource.getSegmentName",
	"Comment": "a custom name for the segment created by the import job. use ifdefinesegment is true.",
	"Method": "String getSegmentName(){\r\n    return segmentName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Request.setMaxKeys",
	"Comment": "sets the optional maxkeys parameter indicating the maximumnumber of keys to include in the response.",
	"Method": "void setMaxKeys(Integer maxKeys){\r\n    this.maxKeys = maxKeys;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.DomainMetadataResult.withAttributeValuesSizeBytes",
	"Comment": "the total size of all attribute values in the domain, in bytes.returns a reference to this object so that method calls can be chained together.",
	"Method": "DomainMetadataResult withAttributeValuesSizeBytes(Long attributeValuesSizeBytes){\r\n    this.attributeValuesSizeBytes = attributeValuesSizeBytes;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.Prediction.setPredictedScores",
	"Comment": "provides the raw classification score corresponding to each label.",
	"Method": "void setPredictedScores(java.util.Map<String, Float> predictedScores){\r\n    this.predictedScores = predictedScores;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideoarchivedmedia.model.Fragment.getServerTimestamp",
	"Comment": "the time stamp from the aws server corresponding to the fragment.",
	"Method": "java.util.Date getServerTimestamp(){\r\n    return serverTimestamp;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListMultipartUploadsRequest.setPrefix",
	"Comment": "sets the optional prefix parameter, restricting the response to multipartuploads for keys that begin with the specified prefix.",
	"Method": "void setPrefix(String prefix){\r\n    this.prefix = prefix;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSClient.subscribe",
	"Comment": "prepares to subscribe an endpoint by sending the endpoint a confirmationmessage. to actually create a subscription, the endpoint owner must callthe confirmsubscription action with the token from theconfirmation message. confirmation tokens are valid for three days.",
	"Method": "SubscribeResult subscribe(SubscribeRequest subscribeRequest,SubscribeResult subscribe,String topicArn,String protocol,String endpoint){\r\n    SubscribeRequest subscribeRequest = new SubscribeRequest();\r\n    subscribeRequest.setTopicArn(topicArn);\r\n    subscribeRequest.setProtocol(protocol);\r\n    subscribeRequest.setEndpoint(endpoint);\r\n    return subscribe(subscribeRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CustomVerificationEmailTemplate.setFromEmailAddress",
	"Comment": "the email address that the custom verification email is sent from.",
	"Method": "void setFromEmailAddress(String fromEmailAddress){\r\n    this.fromEmailAddress = fromEmailAddress;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.VerifyDomainDkimRequest.withDomain",
	"Comment": "the name of the domain to be verified for easy dkim signing.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "VerifyDomainDkimRequest withDomain(String domain){\r\n    this.domain = domain;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.AmazonCloudWatchLogsClient.putRetentionPolicy",
	"Comment": "sets the retention of the specified log group. a retention policy allowsyou to configure the number of days for which to retain log events in thespecified log group.",
	"Method": "void putRetentionPolicy(PutRetentionPolicyRequest putRetentionPolicyRequest){\r\n    ExecutionContext executionContext = createExecutionContext(putRetentionPolicyRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<PutRetentionPolicyRequest> request = null;\r\n    Response<Void> response = null;\r\n    try {\r\n        awsRequestMetrics.startEvent(Field.RequestMarshallTime);\r\n        try {\r\n            request = new PutRetentionPolicyRequestMarshaller().marshall(putRetentionPolicyRequest);\r\n            request.setAWSRequestMetrics(awsRequestMetrics);\r\n        } finally {\r\n            awsRequestMetrics.endEvent(Field.RequestMarshallTime);\r\n        }\r\n        JsonResponseHandler<Void> responseHandler = new JsonResponseHandler<Void>(null);\r\n        invoke(request, responseHandler, executionContext);\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EventStream.withLastUpdatedBy",
	"Comment": "the iam user who last modified the event stream.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EventStream withLastUpdatedBy(String lastUpdatedBy){\r\n    this.lastUpdatedBy = lastUpdatedBy;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.VersionListing.isTruncated",
	"Comment": "gets whether or not the version listing is complete, indicating ifadditional calls to amazon s3 are needed to obtain complete versionlisting results.",
	"Method": "boolean isTruncated(){\r\n    return isTruncated;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketReplicationConfiguration.setRoleARN",
	"Comment": "sets the iam role that will be used by amazon s3 while replication.",
	"Method": "void setRoleARN(String roleARN){\r\n    this.roleARN = roleARN;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateApnsVoipSandboxChannelResult.getAPNSVoipSandboxChannelResponse",
	"Comment": "apple voip developer push notification service channel definition.",
	"Method": "APNSVoipSandboxChannelResponse getAPNSVoipSandboxChannelResponse(){\r\n    return aPNSVoipSandboxChannelResponse;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.StartSpeechSynthesisTaskRequest.getText",
	"Comment": "the input text to synthesize. if you specify ssml as the texttype, followthe ssml format for the input text.",
	"Method": "String getText(){\r\n    return text;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketInventoryConfigurationsResult.setNextContinuationToken",
	"Comment": "sets the optional nextcontinuationtoken.nextcontinuationtoken is sent when istruncated is true meaning there aremore keys in the bucket that can be listed. the next list requests to amazons3 can be continued by providing this nextcontinuationtoken.",
	"Method": "void setNextContinuationToken(String nextContinuationToken){\r\n    this.nextContinuationToken = nextContinuationToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.DeletableItem.withName",
	"Comment": "sets the value of the name property for this object.returns a reference to this object so that method calls can be chained together.",
	"Method": "DeletableItem withName(String name){\r\n    this.name = name;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.S3Action.withObjectKeyPrefix",
	"Comment": "the key prefix of the amazon s3 bucket. the key prefix is similar to adirectory name that enables you to store similar data under the samedirectory in a bucket.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "S3Action withObjectKeyPrefix(String objectKeyPrefix){\r\n    this.objectKeyPrefix = objectKeyPrefix;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.internal.AbstractTransfer.notifyStateChangeListeners",
	"Comment": "notifies all the registered state change listeners of the state update.",
	"Method": "void notifyStateChangeListeners(TransferState state){\r\n    for (TransferStateChangeListener listener : stateChangeListeners) {\r\n        listener.transferStateChanged(this, state);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateSecurityProfileRequest.setExpectedVersion",
	"Comment": "the expected version of the security profile. a new version is generatedwhenever the security profile is updated. if you specify a value that isdifferent than the actual version, aversionconflictexception is thrown.",
	"Method": "void setExpectedVersion(Long expectedVersion){\r\n    this.expectedVersion = expectedVersion;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ApplicationSettingsResource.setQuietTime",
	"Comment": "the default quiet time for the app. each campaign for this app sends nomessages during this time unless the campaign overrides the default witha quiet time of its own.",
	"Method": "void setQuietTime(QuietTime quietTime){\r\n    this.quietTime = quietTime;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyPartRequest.getUnmodifiedSinceConstraint",
	"Comment": "gets the optional unmodified constraint that restricts this request toexecuting only if the source object has not been modified afterthe specified date.the unmodified since constraint may be used with matching etagconstraints, but not with any other type of constraint.",
	"Method": "Date getUnmodifiedSinceConstraint(){\r\n    return unmodifiedSinceConstraint;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMMessage.isSilentPush",
	"Comment": "indicates if the message should display on the users device. silentpushes can be used for remote configuration and phone home use cases.",
	"Method": "Boolean isSilentPush(){\r\n    return silentPush;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial.getEncryptedCEK",
	"Comment": "returns an array of bytes representing the encrypted envelope symmetrickey.",
	"Method": "byte[] getEncryptedCEK(){\r\n    return this.encryptedCEK.clone();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.StreamDescription.withShards",
	"Comment": "the shards that comprise the stream.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "StreamDescription withShards(Shard shards,StreamDescription withShards,java.util.Collection<Shard> shards){\r\n    setShards(shards);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.WriteTreatmentResource.withSizePercent",
	"Comment": "the allocated percentage of users for this treatment.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "WriteTreatmentResource withSizePercent(Integer sizePercent){\r\n    this.sizePercent = sizePercent;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.CreatePlatformApplicationRequest.setName",
	"Comment": "application names must be made up of only uppercase and lowercase asciiletters, numbers, underscores, hyphens, and periods, and must be between1 and 256 characters long.",
	"Method": "void setName(String name){\r\n    this.name = name;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.VersionListing.setTruncated",
	"Comment": "for internal use only. sets the truncated property for this versionlisting, indicating if this is a complete listing or not and whether thecaller needs to make additional calls to s3 to get more versionsummaries.",
	"Method": "void setTruncated(boolean isTruncated){\r\n    this.isTruncated = isTruncated;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.AWSKMSClient.generateRandom",
	"Comment": "returns a random byte string that is cryptographically secure.for more information about entropy and random number generation, see theawskey management service cryptographic details whitepaper.",
	"Method": "GenerateRandomResult generateRandom(GenerateRandomRequest generateRandomRequest,GenerateRandomResult generateRandom){\r\n    GenerateRandomRequest generateRandomRequest = new GenerateRandomRequest();\r\n    return generateRandom(generateRandomRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListNextBatchOfVersionsRequest.setPreviousVersionListing",
	"Comment": "sets the previous version listing and all the features of the next version listing as well.",
	"Method": "void setPreviousVersionListing(VersionListing previousVersionListing){\r\n    if (previousVersionListing == null) {\r\n        throw new IllegalArgumentException(\"The parameter previousVersionListing must be specified.\");\r\n    }\r\n    this.previousVersionListing = previousVersionListing;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketInventoryConfigurationRequest.getBucketName",
	"Comment": "returns the name of the bucket where the inventory configuration will be stored.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.WriteApplicationSettingsRequest.setQuietTime",
	"Comment": "the default quiet time for the app. each campaign for this app sends nomessages during this time unless the campaign overrides the default witha quiet time of its own.",
	"Method": "void setQuietTime(QuietTime quietTime){\r\n    this.quietTime = quietTime;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.pinpoint.analytics.monetization.MonetizationEventBuilder.setProductId",
	"Comment": "sets the product id to use when building the monetization event",
	"Method": "void setProductId(String productId){\r\n    this.productId = productId;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.SynthesisTask.setLexiconNames",
	"Comment": "list of one or more pronunciation lexicon names you want the service toapply during synthesis. lexicons are applied only if the language of thelexicon is the same as the language of the voice.",
	"Method": "void setLexiconNames(java.util.Collection<String> lexiconNames){\r\n    if (lexiconNames == null) {\r\n        this.lexiconNames = null;\r\n        return;\r\n    }\r\n    this.lexiconNames = new java.util.ArrayList<String>(lexiconNames);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListPartsRequest.getBucketName",
	"Comment": "returns the name of the bucket containing the multipart upload whoseparts are being listed.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ExportJobResponse.getCompletedPieces",
	"Comment": "the number of pieces that have successfully completed as of the time ofthe request.",
	"Method": "Integer getCompletedPieces(){\r\n    return completedPieces;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListPartsRequest.withRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket. it returns thisupdated listpartsrequest object so that additional method calls can bechained together.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "ListPartsRequest withRequesterPays(boolean isRequesterPays){\r\n    setRequesterPays(isRequesterPays);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.TranscriptionJob.setMedia",
	"Comment": "an object that describes the input media for the transcription job.",
	"Method": "void setMedia(Media media){\r\n    this.media = media;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClient.verifyDomainIdentity",
	"Comment": "adds a domain to the list of identities for your amazon ses account inthe current aws region and attempts to verify it. for more informationabout verifying domains, see verifying email addresses and domains in the amazon ses developerguide.you can execute this operation no more than once per second.",
	"Method": "VerifyDomainIdentityResult verifyDomainIdentity(VerifyDomainIdentityRequest verifyDomainIdentityRequest){\r\n    ExecutionContext executionContext = createExecutionContext(verifyDomainIdentityRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<VerifyDomainIdentityRequest> request = null;\r\n    Response<VerifyDomainIdentityResult> response = null;\r\n    try {\r\n        request = new VerifyDomainIdentityRequestMarshaller().marshall(verifyDomainIdentityRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        response = invoke(request, new VerifyDomainIdentityResultStaxUnmarshaller(), executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointBatchItem.withEndpointStatus",
	"Comment": "unused.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointBatchItem withEndpointStatus(String endpointStatus){\r\n    this.endpointStatus = endpointStatus;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyPartRequest.setSourceBucketName",
	"Comment": "sets the name of the bucket containing the source object to be copied.",
	"Method": "void setSourceBucketName(String sourceBucketName){\r\n    this.sourceBucketName = sourceBucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSMessage.withSilentPush",
	"Comment": "indicates if the message should display on the users device. silentpushes can be used for remote configuration and phone home use cases.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSMessage withSilentPush(Boolean silentPush){\r\n    this.silentPush = silentPush;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.GenerateDataKeyRequest.withGrantTokens",
	"Comment": "a list of grant tokens.for more information, see grant tokens in the aws key management service developerguide.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GenerateDataKeyRequest withGrantTokens(String grantTokens,GenerateDataKeyRequest withGrantTokens,java.util.Collection<String> grantTokens){\r\n    setGrantTokens(grantTokens);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.DescribeStreamProcessorResult.getLastUpdateTimestamp",
	"Comment": "the time, in unix format, the stream processor was last updated. forexample, when the stream processor moves from a running state to a failedstate, or when the user starts or stops the stream processor.",
	"Method": "java.util.Date getLastUpdateTimestamp(){\r\n    return lastUpdateTimestamp;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListMultipartUploadsRequest.getPrefix",
	"Comment": "returns the optional prefix parameter that restricts the response tomultipart uploads for keys that begin with the specified prefix. useprefixes to separate a bucket into different sets of keys, similar to howa file system organizes files into directories.",
	"Method": "String getPrefix(){\r\n    return prefix;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ListCustomVerificationEmailTemplatesResult.withCustomVerificationEmailTemplates",
	"Comment": "a list of the custom verification email templates that exist in youraccount.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListCustomVerificationEmailTemplatesResult withCustomVerificationEmailTemplates(CustomVerificationEmailTemplate customVerificationEmailTemplates,ListCustomVerificationEmailTemplatesResult withCustomVerificationEmailTemplates,java.util.Collection<CustomVerificationEmailTemplate> customVerificationEmailTemplates){\r\n    setCustomVerificationEmailTemplates(customVerificationEmailTemplates);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.S3ObjectWrapper.toJsonString",
	"Comment": "converts and return the underlying s3 object as a json string.",
	"Method": "String toJsonString(){\r\n    try {\r\n        return from(s3obj.getObjectContent());\r\n    } catch (final Exception e) {\r\n        throw new AmazonClientException(\"Error parsing JSON: \" + e.getMessage());\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetSegmentResult.withSegmentResponse",
	"Comment": "segment definition.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetSegmentResult withSegmentResponse(SegmentResponse segmentResponse){\r\n    this.segmentResponse = segmentResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.Template.setTemplateName",
	"Comment": "the name of the template. you will refer to this name when you send emailusing the sendtemplatedemail orsendbulktemplatedemail operations.",
	"Method": "void setTemplateName(String templateName){\r\n    this.templateName = templateName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PutObjectResult.getVersionId",
	"Comment": "gets the optional version id of the newly uploaded object. this fieldwill be set only if object versioning is enabled for the bucket theobject was uploaded to.",
	"Method": "String getVersionId(){\r\n    return versionId;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.AddPermissionRequest.withTopicArn",
	"Comment": "the arn of the topic whose access control policy you wish to modify.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "AddPermissionRequest withTopicArn(String topicArn){\r\n    this.topicArn = topicArn;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ListTemplatesRequest.getMaxItems",
	"Comment": "the maximum number of templates to return. this value must be at least 1and less than or equal to 10. if you do not specify a value, or if youspecify a value less than 1 or greater than 10, the operation will returnup to 10 results.",
	"Method": "Integer getMaxItems(){\r\n    return maxItems;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectRequest.getResponseHeaders",
	"Comment": "returns the headers to be overridden in the service response.",
	"Method": "ResponseHeaderOverrides getResponseHeaders(){\r\n    return responseHeaders;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.AbstractS3ResponseHandler.populateObjectMetadata",
	"Comment": "populates the specified s3objectmetadata object with all object metadatapulled from the headers in the specified response.",
	"Method": "void populateObjectMetadata(HttpResponse response,ObjectMetadata metadata){\r\n    for (final Entry<String, String> header : response.getHeaders().entrySet()) {\r\n        String key = header.getKey();\r\n        if (key.startsWith(Headers.S3_USER_METADATA_PREFIX)) {\r\n            key = key.substring(Headers.S3_USER_METADATA_PREFIX.length());\r\n            metadata.addUserMetadata(key, header.getValue());\r\n        } else if (IGNORED_HEADERS.contains(key)) {\r\n            log.debug(String.format(\"%s is ignored.\", key));\r\n        } else if (key.equalsIgnoreCase(Headers.LAST_MODIFIED)) {\r\n            try {\r\n                metadata.setHeader(key, ServiceUtils.parseRfc822Date(header.getValue()));\r\n            } catch (final Exception pe) {\r\n                log.warn(\"Unable to parse last modified date: \" + header.getValue(), pe);\r\n            }\r\n        } else if (key.equalsIgnoreCase(Headers.CONTENT_LENGTH)) {\r\n            try {\r\n                metadata.setHeader(key, Long.parseLong(header.getValue()));\r\n            } catch (final NumberFormatException nfe) {\r\n                log.warn(\"Unable to parse content length: \" + header.getValue(), nfe);\r\n            }\r\n        } else if (key.equalsIgnoreCase(Headers.ETAG)) {\r\n            metadata.setHeader(key, ServiceUtils.removeQuotes(header.getValue()));\r\n        } else if (key.equalsIgnoreCase(Headers.EXPIRES)) {\r\n            try {\r\n                metadata.setHttpExpiresDate(DateUtils.parseRFC822Date(header.getValue()));\r\n            } catch (final Exception pe) {\r\n                log.warn(\"Unable to parse http expiration date: \" + header.getValue(), pe);\r\n            }\r\n        } else if (key.equalsIgnoreCase(Headers.EXPIRATION)) {\r\n            new ObjectExpirationHeaderHandler<ObjectMetadata>().handle(metadata, response);\r\n        } else if (key.equalsIgnoreCase(Headers.RESTORE)) {\r\n            new ObjectRestoreHeaderHandler<ObjectRestoreResult>().handle(metadata, response);\r\n        } else if (key.equalsIgnoreCase(Headers.REQUESTER_CHARGED_HEADER)) {\r\n            new S3RequesterChargedHeaderHandler<S3RequesterChargedResult>().handle(metadata, response);\r\n        } else if (key.equalsIgnoreCase(Headers.S3_PARTS_COUNT)) {\r\n            try {\r\n                metadata.setHeader(key, Integer.parseInt(header.getValue()));\r\n            } catch (final NumberFormatException nfe) {\r\n                throw new AmazonClientException(\"Unable to parse part count. Header x-amz-mp-parts-count has corrupted data\" + nfe.getMessage(), nfe);\r\n            }\r\n        } else {\r\n            metadata.setHeader(key, header.getValue());\r\n        }\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.Shard.withSequenceNumberRange",
	"Comment": "the range of possible sequence numbers for the shard.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Shard withSequenceNumberRange(SequenceNumberRange sequenceNumberRange){\r\n    this.sequenceNumberRange = sequenceNumberRange;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.SynthesizeSpeechPresignRequest.getText",
	"Comment": "input text to synthesize. if you specify ssml as thetexttype, follow the ssml format for the input text.",
	"Method": "String getText(){\r\n    return text;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.UpdateCondition.setValue",
	"Comment": "the value of an attribute. this value can only be specified when theexists parameter is equal to true.",
	"Method": "void setValue(String value){\r\n    this.value = value;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSVoipChannelResponse.withHasTokenKey",
	"Comment": "if the channel is registered with a token key for authentication.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSVoipChannelResponse withHasTokenKey(Boolean hasTokenKey){\r\n    this.hasTokenKey = hasTokenKey;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.GetAttributesRequest.withConsistentRead",
	"Comment": "determines whether or not strong consistency should be enforced whendata is read from simpledb. if true, any data previouslywritten to simpledb will be returned. otherwise, results will beconsistent eventually, and the client may not see data that waswritten immediately before your read.returns a reference to this object so that method calls can be chained together.",
	"Method": "GetAttributesRequest withConsistentRead(Boolean consistentRead){\r\n    this.consistentRead = consistentRead;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClient.describeReceiptRuleSet",
	"Comment": "returns the details of the specified receipt rule set.for information about managing receipt rule sets, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "DescribeReceiptRuleSetResult describeReceiptRuleSet(DescribeReceiptRuleSetRequest describeReceiptRuleSetRequest){\r\n    ExecutionContext executionContext = createExecutionContext(describeReceiptRuleSetRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<DescribeReceiptRuleSetRequest> request = null;\r\n    Response<DescribeReceiptRuleSetResult> response = null;\r\n    try {\r\n        request = new DescribeReceiptRuleSetRequestMarshaller().marshall(describeReceiptRuleSetRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        response = invoke(request, new DescribeReceiptRuleSetResultStaxUnmarshaller(), executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.DomainMetadataResult.withAttributeNamesSizeBytes",
	"Comment": "the total size of all unique attribute names in the domain, in bytes.returns a reference to this object so that method calls can be chained together.",
	"Method": "DomainMetadataResult withAttributeNamesSizeBytes(Long attributeNamesSizeBytes){\r\n    this.attributeNamesSizeBytes = attributeNamesSizeBytes;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.InvokeResult.withStatusCode",
	"Comment": "the http status code will be in the 200 range for successful request. forthe requestresponse invocation type this status code will be200. for the event invocation type this status code will be202. for the dryrun invocation type the status code will be204.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "InvokeResult withStatusCode(Integer statusCode){\r\n    this.statusCode = statusCode;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.MessageAttributeValue.withBinaryValue",
	"Comment": "binary type attributes can store any binary data, for example, compresseddata, encrypted data, or images.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "MessageAttributeValue withBinaryValue(java.nio.ByteBuffer binaryValue){\r\n    this.binaryValue = binaryValue;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetCelebrityRecognitionResult.setStatusMessage",
	"Comment": "if the job fails, statusmessage provides a descriptive errormessage.",
	"Method": "void setStatusMessage(String statusMessage){\r\n    this.statusMessage = statusMessage;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.ReceiveMessageResult.withMessages",
	"Comment": "a list of messages.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ReceiveMessageResult withMessages(Message messages,ReceiveMessageResult withMessages,java.util.Collection<Message> messages){\r\n    setMessages(messages);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateEmailChannelRequest.withEmailChannelRequest",
	"Comment": "email channel requestreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateEmailChannelRequest withEmailChannelRequest(EmailChannelRequest emailChannelRequest){\r\n    this.emailChannelRequest = emailChannelRequest;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SendBulkTemplatedEmailRequest.getDestinations",
	"Comment": "one or more destination objects. all of the recipients in adestination will receive the same version of the email. youcan specify up to 50 destination objects within adestinations array.",
	"Method": "java.util.List<BulkEmailDestination> getDestinations(){\r\n    return destinations;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ListTemplatesRequest.withMaxItems",
	"Comment": "the maximum number of templates to return. this value must be at least 1and less than or equal to 10. if you do not specify a value, or if youspecify a value less than 1 or greater than 10, the operation will returnup to 10 results.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListTemplatesRequest withMaxItems(Integer maxItems){\r\n    this.maxItems = maxItems;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListPlatformApplicationsRequest.withNextToken",
	"Comment": "nexttoken string is used when calling listplatformapplications action toretrieve additional records that are available after the first pageresults.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListPlatformApplicationsRequest withNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListPartsRequest.setBucketName",
	"Comment": "sets the name of the bucket containing the multipart upload whose partsare being listed.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.SelectRequest.withSelectExpression",
	"Comment": "the expression used to query the domain.returns a reference to this object so that method calls can be chained together.",
	"Method": "SelectRequest withSelectExpression(String selectExpression){\r\n    this.selectExpression = selectExpression;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DescribeReceiptRuleRequest.getRuleSetName",
	"Comment": "the name of the receipt rule set that the receipt rule belongs to.",
	"Method": "String getRuleSetName(){\r\n    return ruleSetName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.AbstractPutObjectRequest.setAccessControlList",
	"Comment": "sets the optional access control list for the new object. if specified,cannedacl will be ignored.",
	"Method": "void setAccessControlList(AccessControlList accessControlList){\r\n    this.accessControlList = accessControlList;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SMSChannelResponse.getApplicationId",
	"Comment": "the unique id of the application to which the sms channel belongs.",
	"Method": "String getApplicationId(){\r\n    return applicationId;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.CreatePlatformEndpointRequest.setPlatformApplicationArn",
	"Comment": "platformapplicationarn returned from createplatformapplication is used tocreate a an endpoint.",
	"Method": "void setPlatformApplicationArn(String platformApplicationArn){\r\n    this.platformApplicationArn = platformApplicationArn;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartFaceDetectionRequest.getNotificationChannel",
	"Comment": "the arn of the amazon sns topic to which you want amazon rekognitionvideo to publish the completion status of the face detection operation.",
	"Method": "NotificationChannel getNotificationChannel(){\r\n    return notificationChannel;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CustomVerificationEmailTemplate.withTemplateSubject",
	"Comment": "the subject line of the custom verification email.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CustomVerificationEmailTemplate withTemplateSubject(String templateSubject){\r\n    this.templateSubject = templateSubject;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.UpdateReceiptRuleRequest.getRule",
	"Comment": "a data structure that contains the updated receipt rule information.",
	"Method": "ReceiptRule getRule(){\r\n    return rule;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideoarchivedmedia.model.Fragment.getFragmentLengthInMilliseconds",
	"Comment": "the playback duration or other time value associated with the fragment.",
	"Method": "Long getFragmentLengthInMilliseconds(){\r\n    return fragmentLengthInMilliseconds;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketInventoryConfigurationRequest.setBucketName",
	"Comment": "sets the name of the bucket where the inventory configuration will be stored.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.Message.setMessageId",
	"Comment": "a unique identifier for the message. message ids are considered uniqueacross all aws accounts for an extended period of time.",
	"Method": "void setMessageId(String messageId){\r\n    this.messageId = messageId;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.ChangeMessageVisibilityBatchResult.getSuccessful",
	"Comment": "a list of changemessagevisibilitybatchresultentry items.",
	"Method": "java.util.List<ChangeMessageVisibilityBatchResultEntry> getSuccessful(){\r\n    return successful;\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.GetMLModelResult.withComputeTime",
	"Comment": "the approximate cpu time in milliseconds that amazon machine learningspent processing the mlmodel, normalized and scaled oncomputation resources. computetime is only available if themlmodel is in the completed state.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetMLModelResult withComputeTime(Long computeTime){\r\n    this.computeTime = computeTime;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignEmailMessage.setFromAddress",
	"Comment": "the email address used to send the email from. defaults to usefromaddress specified in the email channel.",
	"Method": "void setFromAddress(String fromAddress){\r\n    this.fromAddress = fromAddress;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.internal.TransferManagerUtils.determinePauseStatus",
	"Comment": "determines the pause status based on the current state of transfer.",
	"Method": "PauseStatus determinePauseStatus(TransferState transferState,boolean forceCancel){\r\n    if (forceCancel) {\r\n        if (transferState == TransferState.Waiting) {\r\n            return PauseStatus.CANCELLED_BEFORE_START;\r\n        } else if (transferState == TransferState.InProgress) {\r\n            return PauseStatus.CANCELLED;\r\n        }\r\n    }\r\n    if (transferState == TransferState.Waiting) {\r\n        return PauseStatus.NOT_STARTED;\r\n    }\r\n    return PauseStatus.NO_EFFECT;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GCMChannelResponse.withEnabled",
	"Comment": "if the channel is enabled for sending messages.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GCMChannelResponse withEnabled(Boolean enabled){\r\n    this.enabled = enabled;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.transform.AclXmlFactory.convertToXmlByteArray",
	"Comment": "converts the specified accesscontrollist object to an xml fragment thatcan be sent to amazon s3.",
	"Method": "byte[] convertToXmlByteArray(AccessControlList acl){\r\n    Owner owner = acl.getOwner();\r\n    if (owner == null) {\r\n        throw new AmazonClientException(\"Invalid AccessControlList: missing an S3Owner\");\r\n    }\r\n    XmlWriter xml = new XmlWriter();\r\n    xml.start(\"AccessControlPolicy\", \"xmlns\", Constants.XML_NAMESPACE);\r\n    xml.start(\"Owner\");\r\n    if (owner.getId() != null) {\r\n        xml.start(\"ID\").value(owner.getId()).end();\r\n    }\r\n    if (owner.getDisplayName() != null) {\r\n        xml.start(\"DisplayName\").value(owner.getDisplayName()).end();\r\n    }\r\n    xml.end();\r\n    xml.start(\"AccessControlList\");\r\n    for (Grant grant : acl.getGrants()) {\r\n        xml.start(\"Grant\");\r\n        convertToXml(grant.getGrantee(), xml);\r\n        xml.start(\"Permission\").value(grant.getPermission().toString()).end();\r\n        xml.end();\r\n    }\r\n    xml.end();\r\n    xml.end();\r\n    return xml.getBytes();\r\n}"
}, {
	"Path": "com.amazonaws.mobile.client.AWSMobileClient.fetchCognitoIdentity",
	"Comment": "fetch the cognito identity for the user.register the signprovider with permissions.resume any previously signed in auth session and fetch the cognitofederated identity for the user in order to connect toaws services.",
	"Method": "void fetchCognitoIdentity(Context context,StartupAuthResultHandler startupAuthResultHandler){\r\n    try {\r\n        Log.d(TAG, \"Fetching the Cognito Identity.\");\r\n        final IdentityManager identityManager = new IdentityManager(context, this.awsConfiguration);\r\n        IdentityManager.setDefaultIdentityManager(identityManager);\r\n        if (this.signInProviderConfig == null) {\r\n            this.registerConfigSignInProviders();\r\n        } else {\r\n            this.registerUserSignInProvidersWithPermissions();\r\n        }\r\n        this.resumeSession((Activity) context, startupAuthResultHandler);\r\n    } catch (final Exception exception) {\r\n        Log.e(TAG, \"Error occurred in fetching the Cognito Identity \" + \"and resuming the auth session\", exception);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.model.CopyResult.setDestinationBucketName",
	"Comment": "sets the destination bucket name which will contain the new, copiedobject.",
	"Method": "void setDestinationBucketName(String destinationBucketName){\r\n    this.destinationBucketName = destinationBucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.listReceiptFiltersAsync",
	"Comment": "lists the ip address filters associated with your aws account in thecurrent aws region.for information about managing ip address filters, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "Future<ListReceiptFiltersResult> listReceiptFiltersAsync(ListReceiptFiltersRequest listReceiptFiltersRequest,Future<ListReceiptFiltersResult> listReceiptFiltersAsync,ListReceiptFiltersRequest listReceiptFiltersRequest,AsyncHandler<ListReceiptFiltersRequest, ListReceiptFiltersResult> asyncHandler){\r\n    return executorService.submit(new Callable<ListReceiptFiltersResult>() {\r\n        public ListReceiptFiltersResult call() throws Exception {\r\n            ListReceiptFiltersResult result = null;\r\n            try {\r\n                result = listReceiptFilters(listReceiptFiltersRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(listReceiptFiltersRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.listReceiptFiltersAsync",
	"Comment": "lists the ip address filters associated with your aws account in thecurrent aws region.for information about managing ip address filters, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "Future<ListReceiptFiltersResult> listReceiptFiltersAsync(ListReceiptFiltersRequest listReceiptFiltersRequest,Future<ListReceiptFiltersResult> listReceiptFiltersAsync,ListReceiptFiltersRequest listReceiptFiltersRequest,AsyncHandler<ListReceiptFiltersRequest, ListReceiptFiltersResult> asyncHandler){\r\n    ListReceiptFiltersResult result = null;\r\n    try {\r\n        result = listReceiptFilters(listReceiptFiltersRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(listReceiptFiltersRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.UpdateCustomVerificationEmailTemplateRequest.getFailureRedirectionURL",
	"Comment": "the url that the recipient of the verification email is sent to if his orher address is not successfully verified.",
	"Method": "String getFailureRedirectionURL(){\r\n    return failureRedirectionURL;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Warning.withSections",
	"Comment": "sets the value of the sections property for this object.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Warning withSections(Section sections,Warning withSections,java.util.Collection<Section> sections){\r\n    setSections(sections);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.SelectResult.setNextToken",
	"Comment": "an opaque token indicating that more items thanmaxnumberofitems were matched, the response size exceeded1 megabyte, or the execution time exceeded 5 seconds.",
	"Method": "void setNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetEventStreamRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetEventStreamRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSSandboxChannelResponse.withCreationDate",
	"Comment": "when was this segment createdreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSSandboxChannelResponse withCreationDate(String creationDate){\r\n    this.creationDate = creationDate;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetSegmentExportJobsResult.withExportJobsResponse",
	"Comment": "export job list.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetSegmentExportJobsResult withExportJobsResponse(ExportJobsResponse exportJobsResponse){\r\n    this.exportJobsResponse = exportJobsResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.DetectModerationLabelsResult.setModerationLabels",
	"Comment": "array of detected moderation labels and the time, in millseconds from thestart of the video, they were detected.",
	"Method": "void setModerationLabels(java.util.Collection<ModerationLabel> moderationLabels){\r\n    if (moderationLabels == null) {\r\n        this.moderationLabels = null;\r\n        return;\r\n    }\r\n    this.moderationLabels = new java.util.ArrayList<ModerationLabel>(moderationLabels);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteEventStreamResult.withEventStream",
	"Comment": "model for an event publishing subscription export.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteEventStreamResult withEventStream(EventStream eventStream){\r\n    this.eventStream = eventStream;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentResponse.withLastModifiedDate",
	"Comment": "the date and time when the segment was last modified.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SegmentResponse withLastModifiedDate(String lastModifiedDate){\r\n    this.lastModifiedDate = lastModifiedDate;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EmailChannelResponse.getCreationDate",
	"Comment": "the date that the settings were last updated in iso 8601 format.",
	"Method": "String getCreationDate(){\r\n    return creationDate;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetBucketWebsiteConfigurationRequest.setBucketName",
	"Comment": "sets the name of the bucket whose website configuration is beingretrieved.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GCMChannelResponse.withHasCredential",
	"Comment": "not used. retained for backwards compatibility.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GCMChannelResponse withHasCredential(Boolean hasCredential){\r\n    this.hasCredential = hasCredential;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.ListLexiconsRequest.setNextToken",
	"Comment": "an opaque pagination token returned from previouslistlexicons operation. if present, indicates where tocontinue the list of lexicons.",
	"Method": "void setNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.model.ListTagsForStreamResult.setTags",
	"Comment": "a map of tag keys and values associated with the specified stream.",
	"Method": "void setTags(java.util.Map<String, String> tags){\r\n    this.tags = tags;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSMessage.getBadge",
	"Comment": "include this key when you want the system to modify the badge of your appicon. if this key is not included in the dictionary, the badge is notchanged. to remove the badge, set the value of this key to 0.",
	"Method": "Integer getBadge(){\r\n    return badge;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointDemographic.withAppVersion",
	"Comment": "the version of the application associated with the endpoint.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointDemographic withAppVersion(String appVersion){\r\n    this.appVersion = appVersion;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.PauseResult.getInfoToResume",
	"Comment": "returns the information that can be used to resume a successfully pausedoperation.",
	"Method": "T getInfoToResume(){\r\n    return infoToResume;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.AddressConfiguration.getTitleOverride",
	"Comment": "title override. if specified will override default title if applicable.",
	"Method": "String getTitleOverride(){\r\n    return titleOverride;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DefaultMessage.clearSubstitutionsEntries",
	"Comment": "removes all the entries added into substitutions.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DefaultMessage clearSubstitutionsEntries(){\r\n    this.substitutions = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.GetMLModelResult.setComputeTime",
	"Comment": "the approximate cpu time in milliseconds that amazon machine learningspent processing the mlmodel, normalized and scaled oncomputation resources. computetime is only available if themlmodel is in the completed state.",
	"Method": "void setComputeTime(Long computeTime){\r\n    this.computeTime = computeTime;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetApnsSandboxChannelResult.withAPNSSandboxChannelResponse",
	"Comment": "apple development push notification service channel definition.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetApnsSandboxChannelResult withAPNSSandboxChannelResponse(APNSSandboxChannelResponse aPNSSandboxChannelResponse){\r\n    this.aPNSSandboxChannelResponse = aPNSSandboxChannelResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.analytics.AnalyticsS3BucketDestination.withPrefix",
	"Comment": "sets the prefix to use when exporting data. the exported data begins with this prefix.the object is returned for method chaining.",
	"Method": "AnalyticsS3BucketDestination withPrefix(String prefix){\r\n    setPrefix(prefix);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointResponse.withLocation",
	"Comment": "the endpoint location attributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointResponse withLocation(EndpointLocation location){\r\n    this.location = location;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GCMChannelResponse.withCreationDate",
	"Comment": "when was this segment createdreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GCMChannelResponse withCreationDate(String creationDate){\r\n    this.creationDate = creationDate;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.QueueConfiguration.getQueueARN",
	"Comment": "returns the queue arn for this notification configuration.",
	"Method": "String getQueueARN(){\r\n    return queueARN;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transferutility.TransferTable.addVersion3Columns",
	"Comment": "adds columns that were introduced in version 3 to the database",
	"Method": "void addVersion3Columns(SQLiteDatabase database){\r\n    final String addKMSKey = \"ALTER TABLE \" + TABLE_TRANSFER + \" ADD COLUMN \" + COLUMN_SSE_KMS_KEY + \" text;\";\r\n    database.execSQL(addKMSKey);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectAclRequest.getKey",
	"Comment": "gets the key under which the object whose acl to be retrieved is stored.",
	"Method": "String getKey(){\r\n    return s3ObjectIdBuilder.getKey();\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.DeleteMessageBatchRequest.withEntries",
	"Comment": "a list of receipt handles for the messages to be deleted.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteMessageBatchRequest withEntries(DeleteMessageBatchRequestEntry entries,DeleteMessageBatchRequest withEntries,java.util.Collection<DeleteMessageBatchRequestEntry> entries){\r\n    setEntries(entries);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.AmazonMachineLearningClient.predict",
	"Comment": "generates a prediction for the observation using the specifiedml model.notenot all response parameters will be populated. whether a responseparameter is populated depends on the type of model requested.",
	"Method": "PredictResult predict(PredictRequest predictRequest){\r\n    ExecutionContext executionContext = createExecutionContext(predictRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<PredictRequest> request = null;\r\n    Response<PredictResult> response = null;\r\n    try {\r\n        awsRequestMetrics.startEvent(Field.RequestMarshallTime);\r\n        try {\r\n            request = new PredictRequestMarshaller().marshall(predictRequest);\r\n            request.setAWSRequestMetrics(awsRequestMetrics);\r\n        } finally {\r\n            awsRequestMetrics.endEvent(Field.RequestMarshallTime);\r\n        }\r\n        Unmarshaller<PredictResult, JsonUnmarshallerContext> unmarshaller = new PredictResultJsonUnmarshaller();\r\n        JsonResponseHandler<PredictResult> responseHandler = new JsonResponseHandler<PredictResult>(unmarshaller);\r\n        response = invoke(request, responseHandler, executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteObjectRequest.withKey",
	"Comment": "sets the key of the object to delete and returns this object, enablingadditional method calls to be chained together.",
	"Method": "DeleteObjectRequest withKey(String key){\r\n    setKey(key);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteObjectsRequest.setRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "void setRequesterPays(boolean isRequesterPays){\r\n    this.isRequesterPays = isRequesterPays;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SendBulkTemplatedEmailResult.withStatus",
	"Comment": "the unique message identifier returned from thesendbulktemplatedemail action.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendBulkTemplatedEmailResult withStatus(BulkEmailDestinationStatus status,SendBulkTemplatedEmailResult withStatus,java.util.Collection<BulkEmailDestinationStatus> status){\r\n    setStatus(status);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.SetPlatformApplicationAttributesRequest.setPlatformApplicationArn",
	"Comment": "platformapplicationarn for setplatformapplicationattributes action.",
	"Method": "void setPlatformApplicationArn(String platformApplicationArn){\r\n    this.platformApplicationArn = platformApplicationArn;\r\n}"
}, {
	"Path": "com.amazonaws.serverless.proxy.jersey.JerseyLambdaContainerHandler.getAwsProxyHandler",
	"Comment": "returns an initialized jerseylambdacontainerhandler that includes requestreader andresponsewriter objects for the awsproxyrequest and awsproxyresponseobjects.",
	"Method": "JerseyLambdaContainerHandler<AwsProxyRequest, AwsProxyResponse> getAwsProxyHandler(Application jaxRsApplication){\r\n    JerseyLambdaContainerHandler<AwsProxyRequest, AwsProxyResponse> newHandler = new JerseyLambdaContainerHandler(AwsProxyRequest.class, AwsProxyResponse.class, new AwsProxyHttpServletRequestReader(), new AwsProxyHttpServletResponseWriter(), new AwsProxySecurityContextWriter(), new AwsProxyExceptionHandler(), jaxRsApplication);\r\n    newHandler.initialize();\r\n    return newHandler;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Result.setPrefix",
	"Comment": "for internal use only. sets the prefix parameter originally used torequest this object listing.",
	"Method": "void setPrefix(String prefix){\r\n    this.prefix = prefix;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.GetIdentityNotificationAttributesResult.clearNotificationAttributesEntries",
	"Comment": "removes all the entries added into notificationattributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetIdentityNotificationAttributesResult clearNotificationAttributesEntries(){\r\n    this.notificationAttributes = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyPartResult.setETag",
	"Comment": "sets the etag value for the new part that was created from the associatedcopy object request.",
	"Method": "void setETag(String etag){\r\n    this.etag = etag;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.BatchResultErrorEntry.withCode",
	"Comment": "an error code representing why the action failed on this entry.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "BatchResultErrorEntry withCode(String code){\r\n    this.code = code;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointResponse.getEffectiveDate",
	"Comment": "the date and time when the endpoint was last updated, shown in iso 8601format.",
	"Method": "String getEffectiveDate(){\r\n    return effectiveDate;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GCMMessage.withSmallImageIconUrl",
	"Comment": "the url that points to an image used as the small icon for thenotification which will be used to represent the notification in thestatus bar and content viewreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GCMMessage withSmallImageIconUrl(String smallImageIconUrl){\r\n    this.smallImageIconUrl = smallImageIconUrl;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListMultipartUploadsRequest.getBucketName",
	"Comment": "returns the name of the bucket containing the uploads to list.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.UntagLogGroupRequest.getTags",
	"Comment": "the tag keys. the corresponding tags are removed from the log group.",
	"Method": "java.util.List<String> getTags(){\r\n    return tags;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.VideoMetadata.setFormat",
	"Comment": "format of the analyzed video. possible values are mp4, mov and avi.",
	"Method": "void setFormat(String format){\r\n    this.format = format;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.EncryptionInstruction.getEncryptedSymmetricKey",
	"Comment": "returns an array of bytes representing the encrypted envelope symmetrickey.",
	"Method": "byte[] getEncryptedSymmetricKey(){\r\n    return this.encryptedSymmetricKey;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.BaiduMessage.setRawContent",
	"Comment": "the raw json formatted string to be used as the payload. this valueoverrides the message.",
	"Method": "void setRawContent(String rawContent){\r\n    this.rawContent = rawContent;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GCMMessage.getImageUrl",
	"Comment": "the url that points to an image used in the push notification.",
	"Method": "String getImageUrl(){\r\n    return imageUrl;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.Message.setImageUrl",
	"Comment": "the url that points to an image used in the push notification.",
	"Method": "void setImageUrl(String imageUrl){\r\n    this.imageUrl = imageUrl;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.withNewObjectMetadata",
	"Comment": "sets the object metadata to use for the new, copied object and returnsthis object, enabling additional method calls to be chained together. bydefault, the object metadata from the source object will be copied to thedestination object, but if callers set object metadata with this method,it will be used instead.",
	"Method": "CopyObjectRequest withNewObjectMetadata(ObjectMetadata newObjectMetadata){\r\n    setNewObjectMetadata(newObjectMetadata);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListMultipartUploadsRequest.setBucketName",
	"Comment": "sets the name of the bucket containing the multipart uploads to list.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobResource.getDefineSegment",
	"Comment": "sets whether the endpoints create a segment when they are imported.",
	"Method": "Boolean getDefineSegment(){\r\n    return defineSegment;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.BaiduMessage.getRawContent",
	"Comment": "the raw json formatted string to be used as the payload. this valueoverrides the message.",
	"Method": "String getRawContent(){\r\n    return rawContent;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.SynthesizeSpeechPresignRequest.withLexiconNames",
	"Comment": "list of one or more pronunciation lexicon names you want the service toapply during synthesis. lexicons are applied only if the language of thelexicon is the same as the language of the voice. for information aboutstoring lexicons, see putlexicon.returns a reference to this object so that method calls can be chainedtogether.currently only one lexicon per request is supported by aws sdk for android.",
	"Method": "SynthesizeSpeechPresignRequest withLexiconNames(String lexiconNames,SynthesizeSpeechPresignRequest withLexiconNames,java.util.Collection<String> lexiconNames){\r\n    setLexiconNames(lexiconNames);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSClient.setEndpointAttributes",
	"Comment": "sets the attributes for an endpoint for a device on one of the supportedpush notification services, such as gcm and apns. for more information,see usingamazon sns mobile push notifications.",
	"Method": "void setEndpointAttributes(SetEndpointAttributesRequest setEndpointAttributesRequest){\r\n    ExecutionContext executionContext = createExecutionContext(setEndpointAttributesRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<SetEndpointAttributesRequest> request = null;\r\n    Response<Void> response = null;\r\n    try {\r\n        request = new SetEndpointAttributesRequestMarshaller().marshall(setEndpointAttributesRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        invoke(request, null, executionContext);\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DeleteReceiptRuleRequest.getRuleSetName",
	"Comment": "the name of the receipt rule set that contains the receipt rule todelete.",
	"Method": "String getRuleSetName(){\r\n    return ruleSetName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.BaiduChannelResponse.withId",
	"Comment": "channel id. not used, only for backwards compatibility.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "BaiduChannelResponse withId(String id){\r\n    this.id = id;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ListReceiptRuleSetsRequest.getNextToken",
	"Comment": "a token returned from a previous call to listreceiptrulesetsto indicate the position in the receipt rule set list.",
	"Method": "String getNextToken(){\r\n    return nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketMetricsConfigurationRequest.getBucketName",
	"Comment": "returns the name of the bucket for which the metrics configuration is set.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobResponse.withCreationDate",
	"Comment": "the date the import job was created in iso 8601 format.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ImportJobResponse withCreationDate(String creationDate){\r\n    this.creationDate = creationDate;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.VideoMetadata.getFormat",
	"Comment": "format of the analyzed video. possible values are mp4, mov and avi.",
	"Method": "String getFormat(){\r\n    return format;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSVoipSandboxChannelResponse.withApplicationId",
	"Comment": "application idreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSVoipSandboxChannelResponse withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.WriteEventStream.getRoleArn",
	"Comment": "the iam role that authorizes amazon pinpoint to publish events to thestream in your account.",
	"Method": "String getRoleArn(){\r\n    return roleArn;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignResponse.withAdditionalTreatments",
	"Comment": "treatments that are defined in addition to the default treatment.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CampaignResponse withAdditionalTreatments(TreatmentResource additionalTreatments,CampaignResponse withAdditionalTreatments,java.util.Collection<TreatmentResource> additionalTreatments){\r\n    setAdditionalTreatments(additionalTreatments);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.VersionListing.setPrefix",
	"Comment": "for internal use only. sets the prefix parameter originally used torequest this version listing.",
	"Method": "void setPrefix(String prefix){\r\n    this.prefix = prefix;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketLoggingConfigurationRequest.setBucketName",
	"Comment": "sets the name of the bucket whose logging configuration is being set.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ActivityResponse.setScheduledStart",
	"Comment": "the scheduled start time for the activity in iso 8601 format.",
	"Method": "void setScheduledStart(String scheduledStart){\r\n    this.scheduledStart = scheduledStart;\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateAccountAuditConfigurationRequest.clearauditNotificationTargetConfigurationsEntries",
	"Comment": "removes all the entries added into auditnotificationtargetconfigurations.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateAccountAuditConfigurationRequest clearauditNotificationTargetConfigurationsEntries(){\r\n    this.auditNotificationTargetConfigurations = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ExportJobResponse.withCompletionDate",
	"Comment": "the date the job completed in iso 8601 format.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ExportJobResponse withCompletionDate(String completionDate){\r\n    this.completionDate = completionDate;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ListVerifiedEmailAddressesResult.withVerifiedEmailAddresses",
	"Comment": "a list of email addresses that have been verified.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListVerifiedEmailAddressesResult withVerifiedEmailAddresses(String verifiedEmailAddresses,ListVerifiedEmailAddressesResult withVerifiedEmailAddresses,java.util.Collection<String> verifiedEmailAddresses){\r\n    setVerifiedEmailAddresses(verifiedEmailAddresses);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListPartsRequest.withKey",
	"Comment": "sets the key of the associated multipart upload whose parts are beinglisted, and returns this updated listpartsrequest object so thatadditional method calls can be chained together.",
	"Method": "ListPartsRequest withKey(String key){\r\n    this.key = key;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.TransferManager.uploadDirectory",
	"Comment": "uploads all files in the directory given to the bucket named, optionallyrecursing for all subdirectories.s3 will overwrite any existing objects that happen to have the same key,just as when uploading individual files, so use with caution.",
	"Method": "MultipleFileUpload uploadDirectory(String bucketName,String virtualDirectoryKeyPrefix,File directory,boolean includeSubdirectories,MultipleFileUpload uploadDirectory,String bucketName,String virtualDirectoryKeyPrefix,File directory,boolean includeSubdirectories,ObjectMetadataProvider metadataProvider){\r\n    if (directory == null || !directory.exists() || !directory.isDirectory()) {\r\n        throw new IllegalArgumentException(\"Must provide a directory to upload\");\r\n    }\r\n    final List<File> files = new LinkedList<File>();\r\n    listFiles(directory, files, includeSubdirectories);\r\n    return uploadFileList(bucketName, virtualDirectoryKeyPrefix, directory, files, metadataProvider);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketMetricsConfigurationRequest.setBucketName",
	"Comment": "sets the name of the bucket for which the metrics configuration is set.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceDetail.setEyeglasses",
	"Comment": "indicates whether or not the face is wearing eye glasses, and theconfidence level in the determination.",
	"Method": "void setEyeglasses(Eyeglasses eyeglasses){\r\n    this.eyeglasses = eyeglasses;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.ChangeMessageVisibilityBatchResultEntry.withId",
	"Comment": "represents a message whose visibility timeout has been changedsuccessfully.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ChangeMessageVisibilityBatchResultEntry withId(String id){\r\n    this.id = id;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteUserEndpointsResult.withEndpointsResponse",
	"Comment": "list of endpointsreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteUserEndpointsResult withEndpointsResponse(EndpointsResponse endpointsResponse){\r\n    this.endpointsResponse = endpointsResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.withDestinationKey",
	"Comment": "sets the destination bucket key under which the new, copied object willbe stored and returns this object, enabling additional method calls canbe chained together.",
	"Method": "CopyObjectRequest withDestinationKey(String destinationKey){\r\n    setDestinationKey(destinationKey);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSClient.getSMSAttributes",
	"Comment": "returns the settings for sending sms messages from your account.these settings are set with the setsmsattributes action.",
	"Method": "GetSMSAttributesResult getSMSAttributes(GetSMSAttributesRequest getSMSAttributesRequest){\r\n    ExecutionContext executionContext = createExecutionContext(getSMSAttributesRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<GetSMSAttributesRequest> request = null;\r\n    Response<GetSMSAttributesResult> response = null;\r\n    try {\r\n        request = new GetSMSAttributesRequestMarshaller().marshall(getSMSAttributesRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        response = invoke(request, new GetSMSAttributesResultStaxUnmarshaller(), executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.TranscriptionJob.getFailureReason",
	"Comment": "if the transcriptionjobstatus field is failed,this field contains information about why the job failed.",
	"Method": "String getFailureReason(){\r\n    return failureReason;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.BoundingBox.withLeft",
	"Comment": "left coordinate of the bounding box as a ratio of overall image width.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "BoundingBox withLeft(Float left){\r\n    this.left = left;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.model.CopyResult.setSourceKey",
	"Comment": "sets the source bucket key under which the source object to be copied isstored.",
	"Method": "void setSourceKey(String sourceKey){\r\n    this.sourceKey = sourceKey;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketLoggingConfigurationRequest.getBucketName",
	"Comment": "gets the name of the bucket whose logging configuration is being set.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ApplicationSettingsResource.setLimits",
	"Comment": "the default campaign limits for the app. these limits apply to eachcampaign for the app, unless the campaign overrides the default withlimits of its own.",
	"Method": "void setLimits(CampaignLimits limits){\r\n    this.limits = limits;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.UpdateConfigurationSetEventDestinationRequest.getConfigurationSetName",
	"Comment": "the name of the configuration set that contains the event destinationthat you want to update.",
	"Method": "String getConfigurationSetName(){\r\n    return configurationSetName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListVersionsRequest.getEncodingType",
	"Comment": "gets the optional encodingtype parameter indicating theencoding method to be applied on the response.",
	"Method": "String getEncodingType(){\r\n    return encodingType;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartFaceSearchRequest.isEnablePersonTracking",
	"Comment": "returns the value of the enablepersontracking property for this object.",
	"Method": "Boolean isEnablePersonTracking(){\r\n    return enablePersonTracking;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.MultipartUploadListing.getPrefix",
	"Comment": "returns the prefix parameter originally used to request this multipartupload listing, or null if no prefix was specified. allobjects and common prefixes included in this multipart upload listingstart with the specified prefix.",
	"Method": "String getPrefix(){\r\n    return prefix;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetSegmentsRequest.withToken",
	"Comment": "the nexttoken string returned on a previous page that you use to get thenext page of results in a paginated response.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetSegmentsRequest withToken(String token){\r\n    this.token = token;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.GetSubscriptionAttributesRequest.setSubscriptionArn",
	"Comment": "the arn of the subscription whose properties you want to get.",
	"Method": "void setSubscriptionArn(String subscriptionArn){\r\n    this.subscriptionArn = subscriptionArn;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetCampaignRequest.withCampaignId",
	"Comment": "the unique id of the campaign.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetCampaignRequest withCampaignId(String campaignId){\r\n    this.campaignId = campaignId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ReceiptRule.setActions",
	"Comment": "an ordered list of actions to perform on messages that match at least oneof the recipient email addresses or domains specified in the receiptrule.",
	"Method": "void setActions(java.util.Collection<ReceiptAction> actions){\r\n    if (actions == null) {\r\n        this.actions = null;\r\n        return;\r\n    }\r\n    this.actions = new java.util.ArrayList<ReceiptAction>(actions);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.PutRecordBatchResult.getRequestResponses",
	"Comment": "the results array. for each record, the index of the response element isthe same as the index used in the request array.",
	"Method": "java.util.List<PutRecordBatchResponseEntry> getRequestResponses(){\r\n    return requestResponses;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.SynthesizeSpeechRequest.getLexiconNames",
	"Comment": "list of one or more pronunciation lexicon names you want the service toapply during synthesis. lexicons are applied only if the language of thelexicon is the same as the language of the voice. for information aboutstoring lexicons, see putlexicon.",
	"Method": "java.util.List<String> getLexiconNames(){\r\n    return lexiconNames;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobResource.isDefineSegment",
	"Comment": "sets whether the endpoints create a segment when they are imported.",
	"Method": "Boolean isDefineSegment(){\r\n    return defineSegment;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.AmazonS3Client.calculateContentLength",
	"Comment": "calculate the content length of a mark supported input stream.",
	"Method": "long calculateContentLength(InputStream is){\r\n    long len = 0;\r\n    final byte[] buf = new byte[8 * 1024];\r\n    int read;\r\n    is.mark(-1);\r\n    try {\r\n        while ((read = is.read(buf)) != -1) {\r\n            len += read;\r\n        }\r\n        is.reset();\r\n    } catch (final IOException ioe) {\r\n        throw new AmazonClientException(\"Could not calculate content length.\", ioe);\r\n    }\r\n    return len;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CompleteMultipartUploadRequest.withKey",
	"Comment": "sets the key under which the multipart upload to complete is stored, andreturns this updated completemultipartuploadrequest object so thatadditional method calls can be chained together.",
	"Method": "CompleteMultipartUploadRequest withKey(String key){\r\n    this.key = key;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.UpdateConfigurationSetEventDestinationRequest.getEventDestination",
	"Comment": "the event destination object that you want to apply to the specifiedconfiguration set.",
	"Method": "EventDestination getEventDestination(){\r\n    return eventDestination;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.setRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "void setRequesterPays(boolean isRequesterPays){\r\n    this.isRequesterPays = isRequesterPays;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.GetKeyRotationStatusResult.withKeyRotationEnabled",
	"Comment": "a boolean value that specifies whether key rotation is enabled.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetKeyRotationStatusResult withKeyRotationEnabled(Boolean keyRotationEnabled){\r\n    this.keyRotationEnabled = keyRotationEnabled;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CreateBucketRequest.setRegion",
	"Comment": "sets the name of the amazon s3 region in which this bucket will becreated.",
	"Method": "void setRegion(String region){\r\n    this.region = region;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.DescribeSubscriptionFiltersResult.withSubscriptionFilters",
	"Comment": "the subscription filters.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DescribeSubscriptionFiltersResult withSubscriptionFilters(SubscriptionFilter subscriptionFilters,DescribeSubscriptionFiltersResult withSubscriptionFilters,java.util.Collection<SubscriptionFilter> subscriptionFilters){\r\n    setSubscriptionFilters(subscriptionFilters);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.BaiduChannelResponse.withIsArchived",
	"Comment": "is this channel archivedreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "BaiduChannelResponse withIsArchived(Boolean isArchived){\r\n    this.isArchived = isArchived;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ListConfigurationSetsResult.withNextToken",
	"Comment": "a token indicating that there are additional configuration sets availableto be listed. pass this token to successive calls oflistconfigurationsets.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListConfigurationSetsResult withNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ExportJobResponse.setTotalPieces",
	"Comment": "the total number of pieces that must be processed to finish the job. eachpiece is an approximately equal portion of the endpoints.",
	"Method": "void setTotalPieces(Integer totalPieces){\r\n    this.totalPieces = totalPieces;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobResponse.setCompletedPieces",
	"Comment": "the number of pieces that have successfully imported as of the time ofthe request.",
	"Method": "void setCompletedPieces(Integer completedPieces){\r\n    this.completedPieces = completedPieces;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ApplicationResponse.withName",
	"Comment": "the display name of the application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ApplicationResponse withName(String name){\r\n    this.name = name;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.LexiconAttributes.withSize",
	"Comment": "total size of the lexicon, in characters.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "LexiconAttributes withSize(Integer size){\r\n    this.size = size;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.BaiduMessage.withSubstitutions",
	"Comment": "default message substitutions. can be overridden by individual addresssubstitutions.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "BaiduMessage withSubstitutions(java.util.Map<String, java.util.List<String>> substitutions){\r\n    this.substitutions = substitutions;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketMetricsConfigurationsResult.withTruncated",
	"Comment": "for internal use only. sets the truncated property forthis metrics configuration listing, indicating if this is a complete listing or not andwhether the caller needs to make additional calls to s3 to get more results.",
	"Method": "ListBucketMetricsConfigurationsResult withTruncated(boolean isTruncated){\r\n    setTruncated(isTruncated);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.DescribeStreamSummaryResult.withStreamDescriptionSummary",
	"Comment": "a streamdescriptionsummary containing information about thestream.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DescribeStreamSummaryResult withStreamDescriptionSummary(StreamDescriptionSummary streamDescriptionSummary){\r\n    this.streamDescriptionSummary = streamDescriptionSummary;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListSubscriptionsByTopicRequest.withTopicArn",
	"Comment": "the arn of the topic for which you wish to find subscriptions.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListSubscriptionsByTopicRequest withTopicArn(String topicArn){\r\n    this.topicArn = topicArn;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobRequest.getDefineSegment",
	"Comment": "sets whether the endpoints create a segment when they are imported.",
	"Method": "Boolean getDefineSegment(){\r\n    return defineSegment;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.StartSpeechSynthesisTaskResult.withSynthesisTask",
	"Comment": "synthesistask object that provides information and attributes about anewly submitted speech synthesis task.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "StartSpeechSynthesisTaskResult withSynthesisTask(SynthesisTask synthesisTask){\r\n    this.synthesisTask = synthesisTask;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSAsyncClient.deleteTopicAsync",
	"Comment": "deletes a topic and all its subscriptions. deleting a topic might preventsome messages previously sent to the topic from being delivered tosubscribers. this action is idempotent, so deleting a topic that does notexist does not result in an error.",
	"Method": "Future<Void> deleteTopicAsync(DeleteTopicRequest deleteTopicRequest,Future<Void> deleteTopicAsync,DeleteTopicRequest deleteTopicRequest,AsyncHandler<DeleteTopicRequest, Void> asyncHandler){\r\n    return executorService.submit(new Callable<Void>() {\r\n        public Void call() throws Exception {\r\n            Void result = null;\r\n            try {\r\n                deleteTopic(deleteTopicRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(deleteTopicRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSAsyncClient.deleteTopicAsync",
	"Comment": "deletes a topic and all its subscriptions. deleting a topic might preventsome messages previously sent to the topic from being delivered tosubscribers. this action is idempotent, so deleting a topic that does notexist does not result in an error.",
	"Method": "Future<Void> deleteTopicAsync(DeleteTopicRequest deleteTopicRequest,Future<Void> deleteTopicAsync,DeleteTopicRequest deleteTopicRequest,AsyncHandler<DeleteTopicRequest, Void> asyncHandler){\r\n    Void result = null;\r\n    try {\r\n        deleteTopic(deleteTopicRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(deleteTopicRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentResponse.withDimensions",
	"Comment": "the segment dimensions attributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SegmentResponse withDimensions(SegmentDimensions dimensions){\r\n    this.dimensions = dimensions;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.kinesisvideo.internal.producer.jni.NativeKinesisVideoProducerJni.getStreamingToken",
	"Comment": "callback from the native code to schedule a call to get streaming token",
	"Method": "int getStreamingToken(String streamName,long callAfter,long timeout,byte[] authData,int authType,long customData){\r\n    synchronized (mCallbackSyncObject) {\r\n        try {\r\n            mServiceCallbacks.getStreamingToken(streamName, callAfter, timeout, authData, authType, customData);\r\n            return STATUS_SUCCESS;\r\n        } catch (final ProducerException e) {\r\n            return e.getStatusCode();\r\n        }\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.ListQueuesResult.withQueueUrls",
	"Comment": "a list of queue urls, up to 1000 entries.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListQueuesResult withQueueUrls(String queueUrls,ListQueuesResult withQueueUrls,java.util.Collection<String> queueUrls){\r\n    setQueueUrls(queueUrls);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CreateConfigurationSetRequest.withConfigurationSet",
	"Comment": "a data structure that contains the name of the configuration set.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreateConfigurationSetRequest withConfigurationSet(ConfigurationSet configurationSet){\r\n    this.configurationSet = configurationSet;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.TestRenderTemplateResult.withRenderedTemplate",
	"Comment": "the complete mime message rendered by applying the data in thetemplatedata parameter to the template specified in the templatenameparameter.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "TestRenderTemplateResult withRenderedTemplate(String renderedTemplate){\r\n    this.renderedTemplate = renderedTemplate;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSVoipChannelRequest.withDefaultAuthenticationMethod",
	"Comment": "the default authentication method used for apns.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSVoipChannelRequest withDefaultAuthenticationMethod(String defaultAuthenticationMethod){\r\n    this.defaultAuthenticationMethod = defaultAuthenticationMethod;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ApplicationSettingsResource.withCampaignHook",
	"Comment": "default campaign hook.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ApplicationSettingsResource withCampaignHook(CampaignHook campaignHook){\r\n    this.campaignHook = campaignHook;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobResource.setSegmentName",
	"Comment": "a custom name for the segment created by the import job. use ifdefinesegment is true.",
	"Method": "void setSegmentName(String segmentName){\r\n    this.segmentName = segmentName;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartLabelDetectionRequest.withVideo",
	"Comment": "the video in which you want to detect labels. the video must be stored inan amazon s3 bucket.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "StartLabelDetectionRequest withVideo(Video video){\r\n    this.video = video;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.GetIdentityMailFromDomainAttributesResult.withMailFromDomainAttributes",
	"Comment": "a map of identities to custom mail from attributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetIdentityMailFromDomainAttributesResult withMailFromDomainAttributes(java.util.Map<String, IdentityMailFromDomainAttributes> mailFromDomainAttributes){\r\n    this.mailFromDomainAttributes = mailFromDomainAttributes;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Point.withX",
	"Comment": "the value of the x coordinate for a point on a polygon.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Point withX(Float x){\r\n    this.x = x;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GCMMessage.getImageIconUrl",
	"Comment": "the url that points to an image used as the large icon to thenotification content view.",
	"Method": "String getImageIconUrl(){\r\n    return imageIconUrl;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Point.withY",
	"Comment": "the value of the y coordinate for a point on a polygon.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Point withY(Float y){\r\n    this.y = y;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.EncryptionUtils.getCipherBlockLowerBound",
	"Comment": "takes the position of the leftmost desired byte of a user specified rangeand returns the position of the start of the previous cipher block, orreturns 0 if the leftmost byte is in the first cipher block.",
	"Method": "long getCipherBlockLowerBound(long leftmostBytePosition){\r\n    long cipherBlockSize = JceEncryptionConstants.SYMMETRIC_CIPHER_BLOCK_SIZE;\r\n    long offset = leftmostBytePosition % cipherBlockSize;\r\n    long lowerBound = leftmostBytePosition - offset - cipherBlockSize;\r\n    if (lowerBound < 0) {\r\n        return 0;\r\n    } else {\r\n        return lowerBound;\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ListKeyPoliciesResult.setPolicyNames",
	"Comment": "a list of key policy names. currently, there is only one key policy percmk and it is always named default.",
	"Method": "void setPolicyNames(java.util.Collection<String> policyNames){\r\n    if (policyNames == null) {\r\n        this.policyNames = null;\r\n        return;\r\n    }\r\n    this.policyNames = new java.util.ArrayList<String>(policyNames);\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Mustache.withValue",
	"Comment": "boolean value that indicates whether the face has mustache or not.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Mustache withValue(Boolean value){\r\n    this.value = value;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateThingGroupRequest.withThingGroupProperties",
	"Comment": "the thing group properties.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateThingGroupRequest withThingGroupProperties(ThingGroupProperties thingGroupProperties){\r\n    this.thingGroupProperties = thingGroupProperties;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.ServiceUtils.removeQuotes",
	"Comment": "removes any surrounding quotes from the specified string and returns anew string.",
	"Method": "String removeQuotes(String s){\r\n    if (s == null) {\r\n        return null;\r\n    }\r\n    s = s.trim();\r\n    if (s.startsWith(\"\\\"\")) {\r\n        s = s.substring(1);\r\n    }\r\n    if (s.endsWith(\"\\\"\")) {\r\n        s = s.substring(0, s.length() - 1);\r\n    }\r\n    return s;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSMessage.clearSubstitutionsEntries",
	"Comment": "removes all the entries added into substitutions.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSMessage clearSubstitutionsEntries(){\r\n    this.substitutions = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketPolicyRequest.withBucketName",
	"Comment": "sets the name of the amazon s3 bucket whose policy is being set, andreturns the updated request object so that additional method calls can bechained together.",
	"Method": "SetBucketPolicyRequest withBucketName(String bucketName){\r\n    setBucketName(bucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ExportJobsResponse.withItem",
	"Comment": "a list of export jobs for the application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ExportJobsResponse withItem(ExportJobResponse item,ExportJobsResponse withItem,java.util.Collection<ExportJobResponse> item){\r\n    setItem(item);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentReference.setVersion",
	"Comment": "if specified contains a specific version of the segment included.",
	"Method": "void setVersion(Integer version){\r\n    this.version = version;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SMSMessage.getOriginationNumber",
	"Comment": "the phone number that the sms message originates from. specify one of thededicated long codes or short codes that you requested from aws supportand that is assigned to your account. if this attribute is not specified,amazon pinpoint randomly assigns a long code.",
	"Method": "String getOriginationNumber(){\r\n    return originationNumber;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateGcmChannelResult.withGCMChannelResponse",
	"Comment": "google cloud messaging channel definitionreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateGcmChannelResult withGCMChannelResponse(GCMChannelResponse gCMChannelResponse){\r\n    this.gCMChannelResponse = gCMChannelResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.Shard.getHashKeyRange",
	"Comment": "the range of possible hash key values for the shard, which is a set ofordered contiguous positive integers.",
	"Method": "HashKeyRange getHashKeyRange(){\r\n    return hashKeyRange;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.amazonmobileanalytics.monetization.CustomMonetizationEventBuilder.create",
	"Comment": "create a custommonetizationeventbuilder with the specified event client",
	"Method": "CustomMonetizationEventBuilder create(EventClient eventClient){\r\n    return new CustomMonetizationEventBuilder(eventClient);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSChannelResponse.withLastModifiedBy",
	"Comment": "the user who last updated this channel.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSChannelResponse withLastModifiedBy(String lastModifiedBy){\r\n    this.lastModifiedBy = lastModifiedBy;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMMessage.getImageIconUrl",
	"Comment": "the url that points to an image used as the large icon to thenotification content view.",
	"Method": "String getImageIconUrl(){\r\n    return imageIconUrl;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateApnsVoipSandboxChannelResult.setAPNSVoipSandboxChannelResponse",
	"Comment": "apple voip developer push notification service channel definition.",
	"Method": "void setAPNSVoipSandboxChannelResponse(APNSVoipSandboxChannelResponse aPNSVoipSandboxChannelResponse){\r\n    this.aPNSVoipSandboxChannelResponse = aPNSVoipSandboxChannelResponse;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideoarchivedmedia.model.ListFragmentsRequest.getFragmentSelector",
	"Comment": "describes the time stamp range and time stamp origin for the range offragments to return.",
	"Method": "FragmentSelector getFragmentSelector(){\r\n    return fragmentSelector;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.EncryptRequest.withGrantTokens",
	"Comment": "a list of grant tokens.for more information, see grant tokens in the aws key management service developerguide.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EncryptRequest withGrantTokens(String grantTokens,EncryptRequest withGrantTokens,java.util.Collection<String> grantTokens){\r\n    setGrantTokens(grantTokens);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSChannelResponse.isHasTokenKey",
	"Comment": "indicates whether the channel is configured with a key for apns tokenauthentication. provide a token key by setting the tokenkey attribute.",
	"Method": "Boolean isHasTokenKey(){\r\n    return hasTokenKey;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetImportJobResult.withImportJobResponse",
	"Comment": "import job response.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetImportJobResult withImportJobResponse(ImportJobResponse importJobResponse){\r\n    this.importJobResponse = importJobResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobResponse.getCompletedPieces",
	"Comment": "the number of pieces that have successfully imported as of the time ofthe request.",
	"Method": "Integer getCompletedPieces(){\r\n    return completedPieces;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.PersonMatch.setTimestamp",
	"Comment": "the time, in milliseconds from the beginning of the video, that theperson was matched in the video.",
	"Method": "void setTimestamp(Long timestamp){\r\n    this.timestamp = timestamp;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointanalytics.model.PutEventsRequest.setClientContext",
	"Comment": "the client context including the client id, app title, app version andpackage name.",
	"Method": "void setClientContext(String clientContext){\r\n    this.clientContext = clientContext;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ConfirmSubscriptionRequest.setAuthenticateOnUnsubscribe",
	"Comment": "disallows unauthenticated unsubscribes of the subscription. if the valueof this parameter is true and the request has an awssignature, then only the topic owner and the subscription owner canunsubscribe the endpoint. the unsubscribe action requires awsauthentication.",
	"Method": "void setAuthenticateOnUnsubscribe(String authenticateOnUnsubscribe){\r\n    this.authenticateOnUnsubscribe = authenticateOnUnsubscribe;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideoarchivedmedia.model.TimestampRange.setEndTimestamp",
	"Comment": "the ending time stamp in the range of time stamps for which to returnfragments.",
	"Method": "void setEndTimestamp(java.util.Date endTimestamp){\r\n    this.endTimestamp = endTimestamp;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.BaiduMessage.withIconReference",
	"Comment": "the icon image name of the asset saved in your application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "BaiduMessage withIconReference(String iconReference){\r\n    this.iconReference = iconReference;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.EnableEnhancedMonitoringResult.setCurrentShardLevelMetrics",
	"Comment": "represents the current state of the metrics that are in the enhancedstate before the operation.",
	"Method": "void setCurrentShardLevelMetrics(java.util.Collection<String> currentShardLevelMetrics){\r\n    if (currentShardLevelMetrics == null) {\r\n        this.currentShardLevelMetrics = null;\r\n        return;\r\n    }\r\n    this.currentShardLevelMetrics = new java.util.ArrayList<String>(currentShardLevelMetrics);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMMessage.withBody",
	"Comment": "the message body of the notification.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ADMMessage withBody(String body){\r\n    this.body = body;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ExportJobResponse.setFailures",
	"Comment": "provides up to 100 of the first failed entries for the job, if any exist.",
	"Method": "void setFailures(java.util.Collection<String> failures){\r\n    if (failures == null) {\r\n        this.failures = null;\r\n        return;\r\n    }\r\n    this.failures = new java.util.ArrayList<String>(failures);\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StreamProcessorOutput.setKinesisDataStream",
	"Comment": "the amazon kinesis data streams stream to which the amazon rekognitionstream processor streams the analysis results.",
	"Method": "void setKinesisDataStream(KinesisDataStream kinesisDataStream){\r\n    this.kinesisDataStream = kinesisDataStream;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.RejectedLogEventsInfo.withExpiredLogEventEndIndex",
	"Comment": "the expired log events.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "RejectedLogEventsInfo withExpiredLogEventEndIndex(Integer expiredLogEventEndIndex){\r\n    this.expiredLogEventEndIndex = expiredLogEventEndIndex;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ReplicationDestinationConfig.getBucketARN",
	"Comment": "returns the amazon s3 bucket arn where the replicas are present.",
	"Method": "String getBucketARN(){\r\n    return bucketARN;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentResponse.setSegmentGroups",
	"Comment": "a segment group, which consists of zero or more source segments, plusdimensions that are applied to those source segments.",
	"Method": "void setSegmentGroups(SegmentGroupList segmentGroups){\r\n    this.segmentGroups = segmentGroups;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.S3ObjectSummary.setBucketName",
	"Comment": "sets the name of the amazon s3 bucket in which this object is stored.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketCrossOriginConfigurationRequest.withBucketName",
	"Comment": "sets the name of the bucket whose cross origin configuration is beingset, and returns this object so that additional method calls may bechained together.",
	"Method": "SetBucketCrossOriginConfigurationRequest withBucketName(String bucketName){\r\n    setBucketName(bucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ChannelResponse.withId",
	"Comment": "channel id. not used, only for backwards compatibility.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ChannelResponse withId(String id){\r\n    this.id = id;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.ComparedSourceImageFace.withBoundingBox",
	"Comment": "bounding box of the face.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ComparedSourceImageFace withBoundingBox(BoundingBox boundingBox){\r\n    this.boundingBox = boundingBox;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.GetCustomVerificationEmailTemplateResult.getFromEmailAddress",
	"Comment": "the email address that the custom verification email is sent from.",
	"Method": "String getFromEmailAddress(){\r\n    return fromEmailAddress;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.AWSKinesisVideoClient.listStreams",
	"Comment": "returns an array of streaminfo objects. each objectdescribes a stream. to retrieve only streams that satisfy a specificcondition, you can specify a streamnamecondition.",
	"Method": "ListStreamsResult listStreams(ListStreamsRequest listStreamsRequest){\r\n    ExecutionContext executionContext = createExecutionContext(listStreamsRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<ListStreamsRequest> request = null;\r\n    Response<ListStreamsResult> response = null;\r\n    try {\r\n        awsRequestMetrics.startEvent(Field.RequestMarshallTime);\r\n        try {\r\n            request = new ListStreamsRequestMarshaller().marshall(listStreamsRequest);\r\n            request.setAWSRequestMetrics(awsRequestMetrics);\r\n        } finally {\r\n            awsRequestMetrics.endEvent(Field.RequestMarshallTime);\r\n        }\r\n        Unmarshaller<ListStreamsResult, JsonUnmarshallerContext> unmarshaller = new ListStreamsResultJsonUnmarshaller();\r\n        JsonResponseHandler<ListStreamsResult> responseHandler = new JsonResponseHandler<ListStreamsResult>(unmarshaller);\r\n        response = invoke(request, responseHandler, executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SendUsersMessageRequest.setTraceId",
	"Comment": "a unique id that you can use to trace a message. this id is visible torecipients.",
	"Method": "void setTraceId(String traceId){\r\n    this.traceId = traceId;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.BaiduChannelResponse.withPlatform",
	"Comment": "the platform type. will be baidureturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "BaiduChannelResponse withPlatform(String platform){\r\n    this.platform = platform;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.GetMLModelResult.withFinishedAt",
	"Comment": "the epoch time when amazon machine learning marked themlmodel as completed or failed.finishedat is only available when the mlmodelis in the completed or failed state.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetMLModelResult withFinishedAt(java.util.Date finishedAt){\r\n    this.finishedAt = finishedAt;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.pinpoint.targeting.notification.NotificationClientBase.createClient",
	"Comment": "creates a new notificationclientbase based on the supplied context and channel type. this methodreturns an instance based on notificationclientbase interface.",
	"Method": "NotificationClientBase createClient(PinpointContext pinpointContext,ChannelType channelType){\r\n    NotificationClientBase client = null;\r\n    switch(channelType) {\r\n        case ADM:\r\n            client = new ADMNotificationClient(pinpointContext);\r\n            break;\r\n        case GCM:\r\n            client = new GCMNotificationClient(pinpointContext);\r\n            break;\r\n        case BAIDU:\r\n            client = new BaiduNotificationClient(pinpointContext);\r\n            break;\r\n        default:\r\n            client = new GCMNotificationClient(pinpointContext);\r\n            break;\r\n    }\r\n    return client;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.CompareFacesResult.withUnmatchedFaces",
	"Comment": "an array of faces in the target image that did not match the source imageface.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CompareFacesResult withUnmatchedFaces(ComparedFace unmatchedFaces,CompareFacesResult withUnmatchedFaces,java.util.Collection<ComparedFace> unmatchedFaces){\r\n    setUnmatchedFaces(unmatchedFaces);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SendBulkTemplatedEmailRequest.withTemplateArn",
	"Comment": "the arn of the template to use when sending this email.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendBulkTemplatedEmailRequest withTemplateArn(String templateArn){\r\n    this.templateArn = templateArn;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.kinesisvideo.util.DefaultCameraConfigurationHelper.getSupportedResolution",
	"Comment": "select either 640x480 or below, if supported. otherwise select a first supported resolutionreturned by the camera api regardless of its dimensions.",
	"Method": "Size getSupportedResolution(Context context,String cameraId){\r\n    final List<Size> supportedResolutions = getSupportedResolutionsForYUV420_888(context, cameraId);\r\n    final Size under640 = select640orBelow(supportedResolutions);\r\n    return ZERO_RESOLUTION.equals(under640) ? supportedResolutions.get(0) : under640;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignSmsMessage.withSenderId",
	"Comment": "sender id of sent message.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CampaignSmsMessage withSenderId(String senderId){\r\n    this.senderId = senderId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.DeletableItem.withAttributes",
	"Comment": "sets the value of the attributes property for this object.returns a reference to this object so that method calls can be chained together.",
	"Method": "DeletableItem withAttributes(Attribute attributes,DeletableItem withAttributes,java.util.Collection<Attribute> attributes){\r\n    if (attributes == null) {\r\n        this.attributes = null;\r\n    } else {\r\n        com.amazonaws.internal.ListWithAutoConstructFlag<Attribute> attributesCopy = new com.amazonaws.internal.ListWithAutoConstructFlag<Attribute>(attributes.size());\r\n        attributesCopy.addAll(attributes);\r\n        this.attributes = attributesCopy;\r\n    }\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SendBounceRequest.withOriginalMessageId",
	"Comment": "the message id of the message to be bounced.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendBounceRequest withOriginalMessageId(String originalMessageId){\r\n    this.originalMessageId = originalMessageId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ActivityResponse.getScheduledStart",
	"Comment": "the scheduled start time for the activity in iso 8601 format.",
	"Method": "String getScheduledStart(){\r\n    return scheduledStart;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.GetAttributesRequest.withAttributeNames",
	"Comment": "the names of the attributes.returns a reference to this object so that method calls can be chained together.",
	"Method": "GetAttributesRequest withAttributeNames(String attributeNames,GetAttributesRequest withAttributeNames,java.util.Collection<String> attributeNames){\r\n    if (attributeNames == null) {\r\n        this.attributeNames = null;\r\n    } else {\r\n        com.amazonaws.internal.ListWithAutoConstructFlag<String> attributeNamesCopy = new com.amazonaws.internal.ListWithAutoConstructFlag<String>(attributeNames.size());\r\n        attributeNamesCopy.addAll(attributeNames);\r\n        this.attributeNames = attributeNamesCopy;\r\n    }\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.ListTranscriptionJobsResult.getTranscriptionJobSummaries",
	"Comment": "a list of objects containing summary information for a transcription job.",
	"Method": "java.util.List<TranscriptionJobSummary> getTranscriptionJobSummaries(){\r\n    return transcriptionJobSummaries;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.TestRenderTemplateRequest.withTemplateName",
	"Comment": "the name of the template that you want to render.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "TestRenderTemplateRequest withTemplateName(String templateName){\r\n    this.templateName = templateName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.DescribeLogStreamsRequest.isDescending",
	"Comment": "if the value is true, results are returned in descending order. if thevalue is to false, results are returned in ascending order. the defaultvalue is false.",
	"Method": "Boolean isDescending(){\r\n    return descending;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GCMChannelResponse.setId",
	"Comment": "channel id. not used. present only for backwards compatibility.",
	"Method": "void setId(String id){\r\n    this.id = id;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.TransferProgress.getPercentTransferred",
	"Comment": "returns a percentage of the number of bytes transferred out of the totalnumber of bytes to transfer.",
	"Method": "double getPercentTransferred(){\r\n    if (getBytesTransferred() < 0)\r\n        return 0;\r\n    return totalBytesToTransfer < 0 ? -1.0 : ((double) bytesTransferred / (double) totalBytesToTransfer) * 100;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectMetadataRequest.getPartNumber",
	"Comment": "returns the optional part number that indicates a part in multipart object.",
	"Method": "Integer getPartNumber(){\r\n    return partNumber;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EventItemResponse.getMessage",
	"Comment": "a custom message that is associated with the processing of an event.",
	"Method": "String getMessage(){\r\n    return message;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.CreateKeyRequest.getBypassPolicyLockoutSafetyCheck",
	"Comment": "a flag to indicate whether to bypass the key policy lockout safety check.setting this value to true increases the risk that the cmk becomesunmanageable. do not set this value to true indiscriminately.for more information, refer to the scenario in the default key policy section in the aws key management servicedeveloper guide.use this parameter only when you include a policy in the request and youintend to prevent the principal that is making the request from making asubsequent putkeypolicy request on the cmk.the default value is false.",
	"Method": "Boolean getBypassPolicyLockoutSafetyCheck(){\r\n    return bypassPolicyLockoutSafetyCheck;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectResult.setETag",
	"Comment": "sets the etag value for the new object that was created from theassociated copy object request.",
	"Method": "void setETag(String etag){\r\n    this.etag = etag;\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.StartTranscriptionJobRequest.setSettings",
	"Comment": "a settings object that provides optional settings for atranscription job.",
	"Method": "void setSettings(Settings settings){\r\n    this.settings = settings;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SetIdentityDkimEnabledRequest.setIdentity",
	"Comment": "the identity for which dkim signing should be enabled or disabled.",
	"Method": "void setIdentity(String identity){\r\n    this.identity = identity;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.BaiduMessage.setImageUrl",
	"Comment": "the url that points to an image used in the push notification.",
	"Method": "void setImageUrl(String imageUrl){\r\n    this.imageUrl = imageUrl;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointDemographic.withModel",
	"Comment": "the model name or number of the endpoint device, such as iphone.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointDemographic withModel(String model){\r\n    this.model = model;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointRequest.clearAttributesEntries",
	"Comment": "removes all the entries added into attributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointRequest clearAttributesEntries(){\r\n    this.attributes = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketLifecycleConfigurationRequest.getLifecycleConfiguration",
	"Comment": "gets the new lifecycle configuration for the specified bucket.",
	"Method": "BucketLifecycleConfiguration getLifecycleConfiguration(){\r\n    return lifecycleConfiguration;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CreateSegmentResult.withSegmentResponse",
	"Comment": "segment definition.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreateSegmentResult withSegmentResponse(SegmentResponse segmentResponse){\r\n    this.segmentResponse = segmentResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointMessageResult.setMessageId",
	"Comment": "unique message identifier associated with the message that was sent.",
	"Method": "void setMessageId(String messageId){\r\n    this.messageId = messageId;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SendUsersMessagesRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendUsersMessagesRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetSegmentExportJobsRequest.setToken",
	"Comment": "the nexttoken string returned on a previous page that you use to get thenext page of results in a paginated response.",
	"Method": "void setToken(String token){\r\n    this.token = token;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.WriteSegmentRequest.withDimensions",
	"Comment": "the segment dimensions attributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "WriteSegmentRequest withDimensions(SegmentDimensions dimensions){\r\n    this.dimensions = dimensions;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateApnsVoipSandboxChannelRequest.getAPNSVoipSandboxChannelRequest",
	"Comment": "apple voip developer push notification service channel definition.",
	"Method": "APNSVoipSandboxChannelRequest getAPNSVoipSandboxChannelRequest(){\r\n    return aPNSVoipSandboxChannelRequest;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.NumberValidateResponse.setCountryCodeNumeric",
	"Comment": "the numeric code for the country or region where the phone number wasoriginally registered.",
	"Method": "void setCountryCodeNumeric(String countryCodeNumeric){\r\n    this.countryCodeNumeric = countryCodeNumeric;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.S3Action.withBucketName",
	"Comment": "the name of the amazon s3 bucket that incoming email will be saved to.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "S3Action withBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DeleteReceiptRuleRequest.withRuleSetName",
	"Comment": "the name of the receipt rule set that contains the receipt rule todelete.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteReceiptRuleRequest withRuleSetName(String ruleSetName){\r\n    this.ruleSetName = ruleSetName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.CreateStreamProcessorRequest.getOutput",
	"Comment": "kinesis data stream stream to which amazon rekognition video puts theanalysis results. if you are using the aws cli, the parameter name isstreamprocessoroutput.",
	"Method": "StreamProcessorOutput getOutput(){\r\n    return output;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.EncryptionUtils.createInstructionDeleteObjectRequest",
	"Comment": "creates a delete request to delete an instruction file in s3.",
	"Method": "DeleteObjectRequest createInstructionDeleteObjectRequest(DeleteObjectRequest request){\r\n    return new DeleteObjectRequest(request.getBucketName(), request.getKey() + INSTRUCTION_SUFFIX);\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.DescribeMetricFiltersResult.withMetricFilters",
	"Comment": "the metric filters.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DescribeMetricFiltersResult withMetricFilters(MetricFilter metricFilters,DescribeMetricFiltersResult withMetricFilters,java.util.Collection<MetricFilter> metricFilters){\r\n    setMetricFilters(metricFilters);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteEndpointResult.withEndpointResponse",
	"Comment": "endpoint responsereturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteEndpointResult withEndpointResponse(EndpointResponse endpointResponse){\r\n    this.endpointResponse = endpointResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.InitiateMultipartUploadRequest.getObjectMetadata",
	"Comment": "returns the additional information about the new object being created,such as content type, content encoding, user metadata, etc.",
	"Method": "ObjectMetadata getObjectMetadata(){\r\n    return objectMetadata;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMChannelResponse.getEnabled",
	"Comment": "indicates whether or not the channel is enabled for sending messages.",
	"Method": "Boolean getEnabled(){\r\n    return enabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ApplicationSettingsResource.getLimits",
	"Comment": "the default campaign limits for the app. these limits apply to eachcampaign for the app, unless the campaign overrides the default withlimits of its own.",
	"Method": "CampaignLimits getLimits(){\r\n    return limits;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GCMChannelResponse.withId",
	"Comment": "channel id. not used. present only for backwards compatibility.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GCMChannelResponse withId(String id){\r\n    this.id = id;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.Event.clearAttributesEntries",
	"Comment": "removes all the entries added into attributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Event clearAttributesEntries(){\r\n    this.attributes = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Warning.withMessage",
	"Comment": "sets the value of the message property for this object.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Warning withMessage(String message){\r\n    this.message = message;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.SecuredCEK.getMaterialDescription",
	"Comment": "returns an unmodifable material description of this secured cek.",
	"Method": "Map<String, String> getMaterialDescription(){\r\n    return matdesc;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SendEmailRequest.setConfigurationSetName",
	"Comment": "the name of the configuration set to use when you send an email usingsendemail.",
	"Method": "void setConfigurationSetName(String configurationSetName){\r\n    this.configurationSetName = configurationSetName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EmailChannelResponse.withVersion",
	"Comment": "version of channelreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EmailChannelResponse withVersion(Integer version){\r\n    this.version = version;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SendDataPoint.withBounces",
	"Comment": "number of emails that have bounced.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendDataPoint withBounces(Long bounces){\r\n    this.bounces = bounces;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointDemographic.setAppVersion",
	"Comment": "the version of the application associated with the endpoint.",
	"Method": "void setAppVersion(String appVersion){\r\n    this.appVersion = appVersion;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ApplicationSettingsResource.getQuietTime",
	"Comment": "the default quiet time for the app. each campaign for this app sends nomessages during this time unless the campaign overrides the default witha quiet time of its own.",
	"Method": "QuietTime getQuietTime(){\r\n    return quietTime;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.NumberValidateResponse.getCounty",
	"Comment": "the county where the phone number was originally registered.",
	"Method": "String getCounty(){\r\n    return county;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.setProgressListener",
	"Comment": "sets the optional progress listener for receiving updates about objectupload status.",
	"Method": "void setProgressListener(com.amazonaws.services.s3.model.ProgressListener progressListener){\r\n    setGeneralProgressListener(new LegacyS3ProgressListener(progressListener));\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.analytics.StorageClassAnalysis.getDataExport",
	"Comment": "returns the container used to describe how data related to thestorage class analysis should be exported.",
	"Method": "StorageClassAnalysisDataExport getDataExport(){\r\n    return dataExport;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSChannelResponse.setHasTokenKey",
	"Comment": "indicates whether the channel is configured with a key for apns tokenauthentication. provide a token key by setting the tokenkey attribute.",
	"Method": "void setHasTokenKey(Boolean hasTokenKey){\r\n    this.hasTokenKey = hasTokenKey;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.S3ObjectSummary.getBucketName",
	"Comment": "gets the name of the amazon s3 bucket in which this object is stored.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateSecurityProfileRequest.clearalertTargetsEntries",
	"Comment": "removes all the entries added into alerttargets.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateSecurityProfileRequest clearalertTargetsEntries(){\r\n    this.alertTargets = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectRequest.getRange",
	"Comment": "gets the optional inclusive byte range within the desired objectthat will be downloaded by this request.the range is returned asa two element array, containing the start and end index of the byte range.if no byte range has been specified, the entire object is downloaded andthis method returns null.",
	"Method": "long[] getRange(){\r\n    return range == null ? null : range.clone();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexrts.model.PostContentRequest.withBotName",
	"Comment": "name of the amazon lex bot.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PostContentRequest withBotName(String botName){\r\n    this.botName = botName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentImportResource.withS3Url",
	"Comment": "the url of the s3 bucket that the segment was imported from.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SegmentImportResource withS3Url(String s3Url){\r\n    this.s3Url = s3Url;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMMessage.setSubstitutions",
	"Comment": "default message substitutions. can be overridden by individual addresssubstitutions.",
	"Method": "void setSubstitutions(java.util.Map<String, java.util.List<String>> substitutions){\r\n    this.substitutions = substitutions;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SetActiveReceiptRuleSetRequest.setRuleSetName",
	"Comment": "the name of the receipt rule set to make active. setting this value tonull disables all email receiving.",
	"Method": "void setRuleSetName(String ruleSetName){\r\n    this.ruleSetName = ruleSetName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetSegmentsRequest.getToken",
	"Comment": "the nexttoken string returned on a previous page that you use to get thenext page of results in a paginated response.",
	"Method": "String getToken(){\r\n    return token;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.IdentityVerificationAttributes.setVerificationToken",
	"Comment": "the verification token for a domain identity. null for email addressidentities.",
	"Method": "void setVerificationToken(String verificationToken){\r\n    this.verificationToken = verificationToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceDetail.withEyesOpen",
	"Comment": "indicates whether or not the eyes on the face are open, and theconfidence level in the determination.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "FaceDetail withEyesOpen(EyeOpen eyesOpen){\r\n    this.eyesOpen = eyesOpen;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SendCustomVerificationEmailRequest.getTemplateName",
	"Comment": "the name of the custom verification email template to use when sendingthe verification email.",
	"Method": "String getTemplateName(){\r\n    return templateName;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.ListStreamsResult.withStreamNames",
	"Comment": "the names of the streams that are associated with the aws account makingthe liststreams request.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListStreamsResult withStreamNames(String streamNames,ListStreamsResult withStreamNames,java.util.Collection<String> streamNames){\r\n    setStreamNames(streamNames);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.EnableEnhancedMonitoringResult.getDesiredShardLevelMetrics",
	"Comment": "represents the list of all the metrics that would be in the enhancedstate after the operation.",
	"Method": "java.util.List<String> getDesiredShardLevelMetrics(){\r\n    return desiredShardLevelMetrics;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ReceiptRule.withActions",
	"Comment": "an ordered list of actions to perform on messages that match at least oneof the recipient email addresses or domains specified in the receiptrule.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ReceiptRule withActions(ReceiptAction actions,ReceiptRule withActions,java.util.Collection<ReceiptAction> actions){\r\n    setActions(actions);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GCMMessage.withRestrictedPackageName",
	"Comment": "this parameter specifies the package name of the application where theregistration tokens must match in order to receive the message.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GCMMessage withRestrictedPackageName(String restrictedPackageName){\r\n    this.restrictedPackageName = restrictedPackageName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketAnalyticsConfigurationsRequest.setContinuationToken",
	"Comment": "sets the optional continuation token.continuation token allows a list to becontinued from a specific point. continuationtoken is provided in truncated list results.",
	"Method": "void setContinuationToken(String continuationToken){\r\n    this.continuationToken = continuationToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Result.getNextContinuationToken",
	"Comment": "gets the optional nextcontinuationtoken. nextcontinuationtoken is sentwhen istruncated is true meaning there are more keys in the bucket thatcan be listed. the next list requests to amazon s3 can be continued byproviding this nextcontinuationtoken.",
	"Method": "String getNextContinuationToken(){\r\n    return nextContinuationToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointBatchItem.setEffectiveDate",
	"Comment": "the last time the endpoint was updated. provided in iso 8601 format.",
	"Method": "void setEffectiveDate(String effectiveDate){\r\n    this.effectiveDate = effectiveDate;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.VersionListing.getPrefix",
	"Comment": "the prefix parameter originally used to request this version listing, ornull if no prefix was specified. all object keys included inthis version listing start with the specified prefix.",
	"Method": "String getPrefix(){\r\n    return prefix;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.UpdateConfigurationSetReputationMetricsEnabledRequest.withConfigurationSetName",
	"Comment": "the name of the configuration set that you want to update.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateConfigurationSetReputationMetricsEnabledRequest withConfigurationSetName(String configurationSetName){\r\n    this.configurationSetName = configurationSetName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DescribeReceiptRuleSetResult.getRules",
	"Comment": "a list of the receipt rules that belong to the specified receipt ruleset.",
	"Method": "java.util.List<ReceiptRule> getRules(){\r\n    return rules;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.WriteTreatmentResource.withSchedule",
	"Comment": "the campaign schedule.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "WriteTreatmentResource withSchedule(Schedule schedule){\r\n    this.schedule = schedule;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListMultipartUploadsRequest.withUploadIdMarker",
	"Comment": "sets the optional upload id marker indicating where in the results tobegin listing and returns this updated listmultipartuploadsrequest objectso that additional methods can be chained together.together with the key marker, specifies the multipart upload after whichlisting should begin. if no key marker is specified, the upload id markeris ignored. otherwise, any multipart uploads for a key equal to the keymarker may be included in the list only if they have an upload idlexicographically greater than the specified marker.",
	"Method": "ListMultipartUploadsRequest withUploadIdMarker(String uploadIdMarker){\r\n    this.uploadIdMarker = uploadIdMarker;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.GetMLModelResult.getLogUri",
	"Comment": "a link to the file that contains logs of the createmlmodeloperation.",
	"Method": "String getLogUri(){\r\n    return logUri;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.DescribeVoicesResult.withNextToken",
	"Comment": "the pagination token to use in the next request to continue the listingof voices. nexttoken is returned only if the response istruncated.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DescribeVoicesResult withNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetCelebrityInfoResult.setUrls",
	"Comment": "an array of urls pointing to additional celebrity information.",
	"Method": "void setUrls(java.util.Collection<String> urls){\r\n    if (urls == null) {\r\n        this.urls = null;\r\n        return;\r\n    }\r\n    this.urls = new java.util.ArrayList<String>(urls);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ResponseHeaderOverrides.getContentDisposition",
	"Comment": "returns the content disposition response header override if it has beenspecified, or null otherwise.",
	"Method": "String getContentDisposition(){\r\n    return contentDisposition;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSMessage.getSilentPush",
	"Comment": "indicates if the message should display on the users device. silentpushes can be used for remote configuration and phone home use cases.",
	"Method": "Boolean getSilentPush(){\r\n    return silentPush;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSSandboxChannelResponse.isHasTokenKey",
	"Comment": "indicates whether the channel is configured with a key for apns tokenauthentication. provide a token key by setting the tokenkey attribute.",
	"Method": "Boolean isHasTokenKey(){\r\n    return hasTokenKey;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetSegmentVersionsRequest.withPageSize",
	"Comment": "the number of entries you want on each page in the response.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetSegmentVersionsRequest withPageSize(String pageSize){\r\n    this.pageSize = pageSize;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.ComparedFace.withLandmarks",
	"Comment": "an array of facial landmarks.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ComparedFace withLandmarks(Landmark landmarks,ComparedFace withLandmarks,java.util.Collection<Landmark> landmarks){\r\n    setLandmarks(landmarks);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetApnsChannelResult.withAPNSChannelResponse",
	"Comment": "apple distribution push notification service channel definition.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetApnsChannelResult withAPNSChannelResponse(APNSChannelResponse aPNSChannelResponse){\r\n    this.aPNSChannelResponse = aPNSChannelResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateApnsVoipSandboxChannelResult.withAPNSVoipSandboxChannelResponse",
	"Comment": "apple voip developer push notification service channel definition.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateApnsVoipSandboxChannelResult withAPNSVoipSandboxChannelResponse(APNSVoipSandboxChannelResponse aPNSVoipSandboxChannelResponse){\r\n    this.aPNSVoipSandboxChannelResponse = aPNSVoipSandboxChannelResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListPartsRequest.setMaxParts",
	"Comment": "sets the optional maximum number of parts to be returned in the partlisting.",
	"Method": "void setMaxParts(int maxParts){\r\n    this.maxParts = maxParts;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.S3VersionSummary.setIsDeleteMarker",
	"Comment": "intended for internal use only in the amazon s3 client code. sets thevalue of the isdeletemarker property to record if this is adelete marker or not.",
	"Method": "void setIsDeleteMarker(boolean isDeleteMarker){\r\n    this.isDeleteMarker = isDeleteMarker;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSVoipSandboxChannelResponse.withLastModifiedDate",
	"Comment": "last date this was updatedreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSVoipSandboxChannelResponse withLastModifiedDate(String lastModifiedDate){\r\n    this.lastModifiedDate = lastModifiedDate;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.TrackingOptionsAlreadyExistsException.getConfigurationSetName",
	"Comment": "indicates that a trackingoptions object already exists in the specifiedconfiguration set.",
	"Method": "String getConfigurationSetName(){\r\n    return configurationSetName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentResponse.withVersion",
	"Comment": "the segment version number.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SegmentResponse withVersion(Integer version){\r\n    this.version = version;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetBucketAnalyticsConfigurationRequest.setBucketName",
	"Comment": "sets the name of the bucket from which an analytics configuration is to be retrieved.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.ListTagsForStreamResult.withHasMoreTags",
	"Comment": "if set to true, more tags are available. to requestadditional tags, set exclusivestarttagkey to the key of thelast tag returned.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListTagsForStreamResult withHasMoreTags(Boolean hasMoreTags){\r\n    this.hasMoreTags = hasMoreTags;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CompleteMultipartUploadRequest.getBucketName",
	"Comment": "returns the name of the bucket containing the multipart upload tocomplete.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateApnsSandboxChannelResult.setAPNSSandboxChannelResponse",
	"Comment": "apple development push notification service channel definition.",
	"Method": "void setAPNSSandboxChannelResponse(APNSSandboxChannelResponse aPNSSandboxChannelResponse){\r\n    this.aPNSSandboxChannelResponse = aPNSSandboxChannelResponse;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.DeleteMessageBatchResultEntry.withId",
	"Comment": "represents a successfully deleted message.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteMessageBatchResultEntry withId(String id){\r\n    this.id = id;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.lex.interactionkit.ui.InteractiveVoiceViewAdapter.init",
	"Comment": "initializes this adapter. this will terminate any ongoing transactions with the currentinstance of the client and creates a new client.",
	"Method": "void init(){\r\n    state = STATE_READY;\r\n    validateAppData();\r\n    createInteractionClient();\r\n    micButton.setOnClickListener(this);\r\n    shouldInitialize = false;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ListResourceTagsResult.withTruncated",
	"Comment": "a flag that indicates whether there are more items in the list. when thisvalue is true, the list in this response is truncated. to get more items,pass the value of the nextmarker element in this response tothe marker parameter in a subsequent request.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListResourceTagsResult withTruncated(Boolean truncated){\r\n    this.truncated = truncated;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.GetMLModelResult.setLogUri",
	"Comment": "a link to the file that contains logs of the createmlmodeloperation.",
	"Method": "void setLogUri(String logUri){\r\n    this.logUri = logUri;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.amazonmobileanalytics.internal.session.client.DefaultSessionClient.startSession",
	"Comment": "starts an application session used solely by amazon insights",
	"Method": "void startSession(){\r\n    state.start();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ExportJobResponse.setCompletedPieces",
	"Comment": "the number of pieces that have successfully completed as of the time ofthe request.",
	"Method": "void setCompletedPieces(Integer completedPieces){\r\n    this.completedPieces = completedPieces;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.buffered.QueueBufferConfig.setMaxBatchSizeBytes",
	"Comment": "maximum permitted size of a sendmessage or sendmessagebatch message, inbytes. this setting is also enforced on the server, and if this clientsubmits a request of a size larger than the server can support, theserver will reject the request.",
	"Method": "void setMaxBatchSizeBytes(long maxBatchSizeBytes){\r\n    if (maxBatchSizeBytes > SERVICE_MAX_BATCH_SIZE_BYTES) {\r\n        throw new IllegalArgumentException(\"Maximum Size of the message cannot be greater than the allowed limit of \" + SERVICE_MAX_BATCH_SIZE_BYTES + \" bytes\");\r\n    }\r\n    this.maxBatchSizeBytes = maxBatchSizeBytes;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.SynthesizeSpeechPresignRequest.setRequestCredentials",
	"Comment": "sets the optional credentials to use for this request, overriding thedefault credentials set at the client level.",
	"Method": "void setRequestCredentials(AWSCredentials credentials){\r\n    this.credentials = credentials;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.BoundingBox.getTop",
	"Comment": "top coordinate of the bounding box as a ratio of overall image height.",
	"Method": "Float getTop(){\r\n    return top;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EventsBatch.withEvents",
	"Comment": "eventsreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EventsBatch withEvents(java.util.Map<String, Event> events){\r\n    this.events = events;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetAppsRequest.setToken",
	"Comment": "the nexttoken string returned on a previous page that you use to get thenext page of results in a paginated response.",
	"Method": "void setToken(String token){\r\n    this.token = token;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.InitiateMultipartUploadResult.setAbortDate",
	"Comment": "date when multipart upload will become eligible for abort operation by lifecycle.",
	"Method": "void setAbortDate(Date abortDate){\r\n    this.abortDate = abortDate;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.deleteReceiptRuleAsync",
	"Comment": "deletes the specified receipt rule.for information about managing receipt rules, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "Future<DeleteReceiptRuleResult> deleteReceiptRuleAsync(DeleteReceiptRuleRequest deleteReceiptRuleRequest,Future<DeleteReceiptRuleResult> deleteReceiptRuleAsync,DeleteReceiptRuleRequest deleteReceiptRuleRequest,AsyncHandler<DeleteReceiptRuleRequest, DeleteReceiptRuleResult> asyncHandler){\r\n    return executorService.submit(new Callable<DeleteReceiptRuleResult>() {\r\n        public DeleteReceiptRuleResult call() throws Exception {\r\n            DeleteReceiptRuleResult result = null;\r\n            try {\r\n                result = deleteReceiptRule(deleteReceiptRuleRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(deleteReceiptRuleRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.deleteReceiptRuleAsync",
	"Comment": "deletes the specified receipt rule.for information about managing receipt rules, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "Future<DeleteReceiptRuleResult> deleteReceiptRuleAsync(DeleteReceiptRuleRequest deleteReceiptRuleRequest,Future<DeleteReceiptRuleResult> deleteReceiptRuleAsync,DeleteReceiptRuleRequest deleteReceiptRuleRequest,AsyncHandler<DeleteReceiptRuleRequest, DeleteReceiptRuleResult> asyncHandler){\r\n    DeleteReceiptRuleResult result = null;\r\n    try {\r\n        result = deleteReceiptRule(deleteReceiptRuleRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(deleteReceiptRuleRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CryptoConfiguration.withStorageMode",
	"Comment": "sets the storage mode to the specified mode, and returns the updatedcryptoconfiguration object.",
	"Method": "CryptoConfiguration withStorageMode(CryptoStorageMode storageMode,CryptoConfiguration withStorageMode,CryptoStorageMode storageMode){\r\n    this.storageMode = storageMode;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.BoundingBox.withTop",
	"Comment": "top coordinate of the bounding box as a ratio of overall image height.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "BoundingBox withTop(Float top){\r\n    this.top = top;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GeneratePresignedUrlRequest.getVersionId",
	"Comment": "returns the version id of the object, only present if versioning hasbeen enabled for the bucket.",
	"Method": "String getVersionId(){\r\n    return versionId;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this async client to executerequests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.mobileanalytics.model.Event.clearmetricsEntries",
	"Comment": "removes all the entries added into metrics.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Event clearmetricsEntries(){\r\n    this.metrics = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.IdentityNotificationAttributes.isHeadersInBounceNotificationsEnabled",
	"Comment": "describes whether amazon ses includes the original email headers inamazon sns notifications of type bounce. a value oftrue specifies that amazon ses will include headers inbounce notifications, and a value of false specifies thatamazon ses will not include headers in bounce notifications.",
	"Method": "Boolean isHeadersInBounceNotificationsEnabled(){\r\n    return headersInBounceNotificationsEnabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartListing.getBucketName",
	"Comment": "returns the name of the bucket containing the listed parts, as specifiedin the original request.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.Message.withBody",
	"Comment": "the message body. can include up to 140 characters.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Message withBody(String body){\r\n    this.body = body;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.CreateKeyResult.withKeyMetadata",
	"Comment": "metadata associated with the cmk.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreateKeyResult withKeyMetadata(KeyMetadata keyMetadata){\r\n    this.keyMetadata = keyMetadata;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.TreatmentResource.withMessageConfiguration",
	"Comment": "the message configuration settings.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "TreatmentResource withMessageConfiguration(MessageConfiguration messageConfiguration){\r\n    this.messageConfiguration = messageConfiguration;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.DetectFacesResult.withFaceDetails",
	"Comment": "details of each face found in the image.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DetectFacesResult withFaceDetails(FaceDetail faceDetails,DetectFacesResult withFaceDetails,java.util.Collection<FaceDetail> faceDetails){\r\n    setFaceDetails(faceDetails);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transferutility.TransferObserver.setTransferListener",
	"Comment": "sets a listener used to receive notification when state or progresschanges.note that callbacks of the listener will be invoked on the main thread.",
	"Method": "void setTransferListener(TransferListener listener){\r\n    if (listener != null) {\r\n        synchronized (this) {\r\n            cleanTransferListener();\r\n            statusListener = new TransferStatusListener();\r\n            TransferStatusUpdater.registerListener(id, statusListener);\r\n            transferListener = listener;\r\n            TransferStatusUpdater.registerListener(id, transferListener);\r\n        }\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.CipherLite.recreate",
	"Comment": "recreates a new instance of cipherlite from the current one.",
	"Method": "CipherLite recreate(){\r\n    return scheme.createCipherLite(secreteKey, cipher.getIV(), this.cipherMode, cipher.getProvider());\r\n}"
}, {
	"Path": "com.amazonaws.demo.numberguess.manager.CognitoClientManager.refresh",
	"Comment": "forces this credentials provider to refresh its credentials.",
	"Method": "void refresh(){\r\n    checkCredentialAvailability();\r\n    provider.refresh();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetCampaignResult.withCampaignResponse",
	"Comment": "campaign definitionreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetCampaignResult withCampaignResponse(CampaignResponse campaignResponse){\r\n    this.campaignResponse = campaignResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketAccelerateConfigurationRequest.setBucketName",
	"Comment": "sets the name of the bucket whose accelerate configuration is being set.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateAuthorizerRequest.withTokenSigningPublicKeys",
	"Comment": "the public keys used to verify the token signature.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateAuthorizerRequest withTokenSigningPublicKeys(java.util.Map<String, String> tokenSigningPublicKeys){\r\n    this.tokenSigningPublicKeys = tokenSigningPublicKeys;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSVoipSandboxChannelRequest.withTokenKeyId",
	"Comment": "the token key used for apns tokens.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSVoipSandboxChannelRequest withTokenKeyId(String tokenKeyId){\r\n    this.tokenKeyId = tokenKeyId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.InitiateMultipartUploadRequest.setObjectMetadata",
	"Comment": "sets the additional information about the new object being created, suchas content type, content encoding, user metadata, etc.",
	"Method": "void setObjectMetadata(ObjectMetadata objectMetadata){\r\n    this.objectMetadata = objectMetadata;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateAdmChannelResult.withADMChannelResponse",
	"Comment": "amazon device messaging channel definition.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateAdmChannelResult withADMChannelResponse(ADMChannelResponse aDMChannelResponse){\r\n    this.aDMChannelResponse = aDMChannelResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.CreatePlatformEndpointRequest.getToken",
	"Comment": "unique identifier created by the notification service for an app on adevice. the specific name for token will vary, depending on whichnotification service is being used. for example, when using apns as thenotification service, you need the device token. alternatively, whenusing gcm or adm, the device token equivalent is called the registrationid.",
	"Method": "String getToken(){\r\n    return token;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetSegmentVersionsRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetSegmentVersionsRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SMSChannelResponse.withIsArchived",
	"Comment": "is this channel archivedreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SMSChannelResponse withIsArchived(Boolean isArchived){\r\n    this.isArchived = isArchived;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.ExportTask.getDestinationPrefix",
	"Comment": "the prefix that was used as the start of amazon s3 key for every objectexported.",
	"Method": "String getDestinationPrefix(){\r\n    return destinationPrefix;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.Item.withAttributes",
	"Comment": "a list of attributes.returns a reference to this object so that method calls can be chained together.",
	"Method": "Item withAttributes(Attribute attributes,Item withAttributes,java.util.Collection<Attribute> attributes){\r\n    if (attributes == null) {\r\n        this.attributes = null;\r\n    } else {\r\n        com.amazonaws.internal.ListWithAutoConstructFlag<Attribute> attributesCopy = new com.amazonaws.internal.ListWithAutoConstructFlag<Attribute>(attributes.size());\r\n        attributesCopy.addAll(attributes);\r\n        this.attributes = attributesCopy;\r\n    }\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ApplicationsResponse.withItem",
	"Comment": "list of applications returned in this page.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ApplicationsResponse withItem(ApplicationResponse item,ApplicationsResponse withItem,java.util.Collection<ApplicationResponse> item){\r\n    setItem(item);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SendUsersMessageResponse.getResult",
	"Comment": "an object that shows the endpoints that were messaged for each user. theobject provides a list of user ids. for each user id, it provides theendpoint ids that were messaged. for each endpoint id, it provides anendpointmessageresult object.",
	"Method": "java.util.Map<String, java.util.Map<String, EndpointMessageResult>> getResult(){\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.KinesisFirehoseDestination.getDeliveryStreamARN",
	"Comment": "the arn of the amazon kinesis firehose stream that email sending eventsshould be published to.",
	"Method": "String getDeliveryStreamARN(){\r\n    return deliveryStreamARN;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSChannelResponse.withVersion",
	"Comment": "the channel version.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSChannelResponse withVersion(Integer version){\r\n    this.version = version;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.Body.getHtml",
	"Comment": "the content of the message, in html format. use this for email clientsthat can process html. you can include clickable links, formatted text,and much more in an html message.",
	"Method": "Content getHtml(){\r\n    return html;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.ListLexiconsResult.getNextToken",
	"Comment": "the pagination token to use in the next request to continue the listingof lexicons. nexttoken is returned only if the response istruncated.",
	"Method": "String getNextToken(){\r\n    return nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.DeleteAttributesRequest.setAttributes",
	"Comment": "a list of attributes. similar to columns on a spreadsheet, attributesrepresent categories of data that can be assigned to items.",
	"Method": "void setAttributes(java.util.Collection<Attribute> attributes){\r\n    if (attributes == null) {\r\n        this.attributes = null;\r\n        return;\r\n    }\r\n    com.amazonaws.internal.ListWithAutoConstructFlag<Attribute> attributesCopy = new com.amazonaws.internal.ListWithAutoConstructFlag<Attribute>(attributes.size());\r\n    attributesCopy.addAll(attributes);\r\n    this.attributes = attributesCopy;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceDetail.withBeard",
	"Comment": "indicates whether or not the face has a beard, and the confidence levelin the determination.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "FaceDetail withBeard(Beard beard){\r\n    this.beard = beard;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Result.getMaxKeys",
	"Comment": "gets the optional maxkeys parameter indicating the maximumnumber of keys to include in the response. amazon s3 might return fewerkeys than specified, but will never return more. even if the optionalparameter is not specified, amazon s3 will limit the number of results inthe response.",
	"Method": "int getMaxKeys(){\r\n    return maxKeys;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.DetectTextResult.withTextDetections",
	"Comment": "an array of text that was detected in the input image.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DetectTextResult withTextDetections(TextDetection textDetections,DetectTextResult withTextDetections,java.util.Collection<TextDetection> textDetections){\r\n    setTextDetections(textDetections);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Request.setFetchOwner",
	"Comment": "sets the optional fetch owner flag. the owner field is not present inlistobjectsv2 results by default. if this flag is set to true the ownerfield will be included.",
	"Method": "void setFetchOwner(boolean fetchOwner){\r\n    this.fetchOwner = fetchOwner;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.BaiduChannelRequest.withApiKey",
	"Comment": "platform credential api key from baidu.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "BaiduChannelRequest withApiKey(String apiKey){\r\n    this.apiKey = apiKey;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.InitiateMultipartUploadResult.setAbortRuleId",
	"Comment": "id of the lifecycle rule that makes a multipart upload eligible for abort operation.",
	"Method": "void setAbortRuleId(String abortRuleId){\r\n    this.abortRuleId = abortRuleId;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetSmsChannelRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetSmsChannelRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.setMd5Digest",
	"Comment": "sets the optional, but recommended, md5 hash of the content of this part.if specified, this value will be sent to amazon s3 to verify the dataintegrity when the data reaches amazon s3.",
	"Method": "void setMd5Digest(String md5Digest){\r\n    this.md5Digest = md5Digest;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentDemographics.withAppVersion",
	"Comment": "the app version criteria for the segment.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SegmentDemographics withAppVersion(SetDimension appVersion){\r\n    this.appVersion = appVersion;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSVoipSandboxChannelResponse.setHasTokenKey",
	"Comment": "if the channel is registered with a token key for authentication.",
	"Method": "void setHasTokenKey(Boolean hasTokenKey){\r\n    this.hasTokenKey = hasTokenKey;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.MultipartUploadListing.setPrefix",
	"Comment": "for internal use only. sets the prefix parameter originally used torequest this multipart upload listing.",
	"Method": "void setPrefix(String prefix){\r\n    this.prefix = prefix;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSVoipChannelRequest.withTokenKeyId",
	"Comment": "the token key used for apns tokens.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSVoipChannelRequest withTokenKeyId(String tokenKeyId){\r\n    this.tokenKeyId = tokenKeyId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateApnsVoipChannelRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateApnsVoipChannelRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ListTemplatesResult.getNextToken",
	"Comment": "a token indicating that there are additional email templates available tobe listed. pass this token to a subsequent call tolisttemplates to retrieve the next 50 email templates.",
	"Method": "String getNextToken(){\r\n    return nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.UpdateCustomVerificationEmailTemplateRequest.setFailureRedirectionURL",
	"Comment": "the url that the recipient of the verification email is sent to if his orher address is not successfully verified.",
	"Method": "void setFailureRedirectionURL(String failureRedirectionURL){\r\n    this.failureRedirectionURL = failureRedirectionURL;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SendRawEmailResult.setMessageId",
	"Comment": "the unique message identifier returned from the sendrawemailaction.",
	"Method": "void setMessageId(String messageId){\r\n    this.messageId = messageId;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ActivitiesResponse.withItem",
	"Comment": "list of campaign activitiesreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ActivitiesResponse withItem(ActivityResponse item,ActivitiesResponse withItem,java.util.Collection<ActivityResponse> item){\r\n    setItem(item);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSSandboxChannelRequest.withPrivateKey",
	"Comment": "the certificate private key.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSSandboxChannelRequest withPrivateKey(String privateKey){\r\n    this.privateKey = privateKey;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceDetail.getQuality",
	"Comment": "identifies image brightness and sharpness. default attribute.",
	"Method": "ImageQuality getQuality(){\r\n    return quality;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SMSChannelResponse.withId",
	"Comment": "channel id. not used, only for backwards compatibility.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SMSChannelResponse withId(String id){\r\n    this.id = id;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointanalytics.model.Session.withDuration",
	"Comment": "the duration of the session.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Session withDuration(Long duration){\r\n    this.duration = duration;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.NumberValidateResponse.setCarrier",
	"Comment": "the carrier or servive provider that the phone number is currentlyregistered with.",
	"Method": "void setCarrier(String carrier){\r\n    this.carrier = carrier;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetFaceDetectionResult.getVideoMetadata",
	"Comment": "information about a video that amazon rekognition video analyzed.videometadata is returned in every page of paginatedresponses from a amazon rekognition video operation.",
	"Method": "VideoMetadata getVideoMetadata(){\r\n    return videoMetadata;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.amazonmobileanalytics.AnalyticsConfig.getAllowEventCollection",
	"Comment": "indicates whether or not event collection is enabled for the sdk.",
	"Method": "boolean getAllowEventCollection(){\r\n    return this.allowEventCollection;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CreateCustomVerificationEmailTemplateRequest.getFailureRedirectionURL",
	"Comment": "the url that the recipient of the verification email is sent to if his orher address is not successfully verified.",
	"Method": "String getFailureRedirectionURL(){\r\n    return failureRedirectionURL;\r\n}"
}, {
	"Path": "com.amazonaws.kinesisvideo.internal.producer.jni.NativeKinesisVideoProducerJni.describeStream",
	"Comment": "callback from the native code to schedule a call to describe stream",
	"Method": "int describeStream(String streamName,long callAfter,long timeout,byte[] authData,int authType,long customData){\r\n    synchronized (mCallbackSyncObject) {\r\n        try {\r\n            mServiceCallbacks.describeStream(streamName, callAfter, timeout, authData, authType, customData);\r\n            return STATUS_SUCCESS;\r\n        } catch (final ProducerException e) {\r\n            return e.getStatusCode();\r\n        }\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSVoipSandboxChannelResponse.withDefaultAuthenticationMethod",
	"Comment": "the default authentication method used for apns.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSVoipSandboxChannelResponse withDefaultAuthenticationMethod(String defaultAuthenticationMethod){\r\n    this.defaultAuthenticationMethod = defaultAuthenticationMethod;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.AbstractPutObjectRequest.withSSEAwsKeyManagementParams",
	"Comment": "sets the aws key management system parameters used to encrypt the objecton server side.",
	"Method": "T withSSEAwsKeyManagementParams(SSEAwsKeyManagementParams sseAwsKeyManagementParams){\r\n    setSSEAwsKeyManagementParams(sseAwsKeyManagementParams);\r\n    @SuppressWarnings(\"unchecked\")\r\n    final T t = (T) this;\r\n    return t;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetApnsChannelResult.setAPNSChannelResponse",
	"Comment": "apple distribution push notification service channel definition.",
	"Method": "void setAPNSChannelResponse(APNSChannelResponse aPNSChannelResponse){\r\n    this.aPNSChannelResponse = aPNSChannelResponse;\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.GetMLModelResult.getCreatedAt",
	"Comment": "the time that the mlmodel was created. the time is expressedin epoch time.",
	"Method": "java.util.Date getCreatedAt(){\r\n    return createdAt;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSVoipChannelRequest.withTokenKey",
	"Comment": "the token key used for apns tokens.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSVoipChannelRequest withTokenKey(String tokenKey){\r\n    this.tokenKey = tokenKey;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.amazonmobileanalytics.monetization.VirtualMonetizationEventBuilder.create",
	"Comment": "create a virtualmonetizationeventbuilder with the specified event client",
	"Method": "VirtualMonetizationEventBuilder create(EventClient eventClient){\r\n    return new VirtualMonetizationEventBuilder(eventClient);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.BaiduMessage.getSubstitutions",
	"Comment": "default message substitutions. can be overridden by individual addresssubstitutions.",
	"Method": "java.util.Map<String, java.util.List<String>> getSubstitutions(){\r\n    return substitutions;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.CreateGrantRequest.getGrantTokens",
	"Comment": "a list of grant tokens.for more information, see grant tokens in the aws key management service developerguide.",
	"Method": "java.util.List<String> getGrantTokens(){\r\n    return grantTokens;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.amazonmobileanalytics.monetization.AmazonMonetizationEventBuilder.withProductId",
	"Comment": "sets the product identifier field of the item being purchased",
	"Method": "AmazonMonetizationEventBuilder withProductId(String productId){\r\n    setProductId(productId);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.AddressConfiguration.withTitleOverride",
	"Comment": "title override. if specified will override default title if applicable.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "AddressConfiguration withTitleOverride(String titleOverride){\r\n    this.titleOverride = titleOverride;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListPartsRequest.setRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "void setRequesterPays(boolean isRequesterPays){\r\n    this.isRequesterPays = isRequesterPays;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentDimensions.withAttributes",
	"Comment": "custom segment attributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SegmentDimensions withAttributes(java.util.Map<String, AttributeDimension> attributes){\r\n    this.attributes = attributes;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.describeReceiptRuleSetAsync",
	"Comment": "returns the details of the specified receipt rule set.for information about managing receipt rule sets, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "Future<DescribeReceiptRuleSetResult> describeReceiptRuleSetAsync(DescribeReceiptRuleSetRequest describeReceiptRuleSetRequest,Future<DescribeReceiptRuleSetResult> describeReceiptRuleSetAsync,DescribeReceiptRuleSetRequest describeReceiptRuleSetRequest,AsyncHandler<DescribeReceiptRuleSetRequest, DescribeReceiptRuleSetResult> asyncHandler){\r\n    return executorService.submit(new Callable<DescribeReceiptRuleSetResult>() {\r\n        public DescribeReceiptRuleSetResult call() throws Exception {\r\n            DescribeReceiptRuleSetResult result = null;\r\n            try {\r\n                result = describeReceiptRuleSet(describeReceiptRuleSetRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(describeReceiptRuleSetRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.describeReceiptRuleSetAsync",
	"Comment": "returns the details of the specified receipt rule set.for information about managing receipt rule sets, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "Future<DescribeReceiptRuleSetResult> describeReceiptRuleSetAsync(DescribeReceiptRuleSetRequest describeReceiptRuleSetRequest,Future<DescribeReceiptRuleSetResult> describeReceiptRuleSetAsync,DescribeReceiptRuleSetRequest describeReceiptRuleSetRequest,AsyncHandler<DescribeReceiptRuleSetRequest, DescribeReceiptRuleSetResult> asyncHandler){\r\n    DescribeReceiptRuleSetResult result = null;\r\n    try {\r\n        result = describeReceiptRuleSet(describeReceiptRuleSetRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(describeReceiptRuleSetRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetLabelDetectionResult.withStatusMessage",
	"Comment": "if the job fails, statusmessage provides a descriptive errormessage.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetLabelDetectionResult withStatusMessage(String statusMessage){\r\n    this.statusMessage = statusMessage;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.AbortMultipartUploadRequest.getBucketName",
	"Comment": "returns the name of the bucket containing the multipart upload to abort.",
	"Method": "String getBucketName(){\r\n    return this.bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyPartRequest.getDestinationBucketName",
	"Comment": "gets the destination bucket name which will contain the new, copiedobject.",
	"Method": "String getDestinationBucketName(){\r\n    return destinationBucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSVoipChannelResponse.withApplicationId",
	"Comment": "application idreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSVoipChannelResponse withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.BaiduChannelResponse.withHasCredential",
	"Comment": "not used. retained for backwards compatibility.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "BaiduChannelResponse withHasCredential(Boolean hasCredential){\r\n    this.hasCredential = hasCredential;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateSecurityProfileResult.clearalertTargetsEntries",
	"Comment": "removes all the entries added into alerttargets.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateSecurityProfileResult clearalertTargetsEntries(){\r\n    this.alertTargets = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSVoipSandboxChannelRequest.withCertificate",
	"Comment": "the distribution certificate from apple.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSVoipSandboxChannelRequest withCertificate(String certificate){\r\n    this.certificate = certificate;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.RestoreObjectRequest.withRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket. it returns thisupdated restoreobjectrequest object so that additional method calls can bechained together.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "RestoreObjectRequest withRequesterPays(boolean isRequesterPays){\r\n    setRequesterPays(isRequesterPays);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.PersonDetail.setIndex",
	"Comment": "identifier for the person detected person within a video. use to keeptrack of the person throughout the video. the identifier is not stored byamazon rekognition.",
	"Method": "void setIndex(Long index){\r\n    this.index = index;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.SearchFacesByImageResult.getSearchedFaceBoundingBox",
	"Comment": "the bounding box around the face in the input image that amazonrekognition used for the search.",
	"Method": "BoundingBox getSearchedFaceBoundingBox(){\r\n    return searchedFaceBoundingBox;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSVoipSandboxChannelRequest.withDefaultAuthenticationMethod",
	"Comment": "the default authentication method used for apns.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSVoipSandboxChannelRequest withDefaultAuthenticationMethod(String defaultAuthenticationMethod){\r\n    this.defaultAuthenticationMethod = defaultAuthenticationMethod;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CannotDeleteException.setName",
	"Comment": "indicates that a resource could not be deleted because no resource withthe specified name exists.",
	"Method": "void setName(String name){\r\n    this.name = name;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ActivityResponse.withTotalEndpointCount",
	"Comment": "the total number of endpoints to which the campaign attempts to delivermessages.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ActivityResponse withTotalEndpointCount(Integer totalEndpointCount){\r\n    this.totalEndpointCount = totalEndpointCount;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.AmazonRekognitionClient.startStreamProcessor",
	"Comment": "starts processing a stream processor. you create a stream processor bycalling . to tell startstreamprocessor which streamprocessor to start, use the value of the name fieldspecified in the call to createstreamprocessor.",
	"Method": "StartStreamProcessorResult startStreamProcessor(StartStreamProcessorRequest startStreamProcessorRequest){\r\n    ExecutionContext executionContext = createExecutionContext(startStreamProcessorRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<StartStreamProcessorRequest> request = null;\r\n    Response<StartStreamProcessorResult> response = null;\r\n    try {\r\n        awsRequestMetrics.startEvent(Field.RequestMarshallTime);\r\n        try {\r\n            request = new StartStreamProcessorRequestMarshaller().marshall(startStreamProcessorRequest);\r\n            request.setAWSRequestMetrics(awsRequestMetrics);\r\n        } finally {\r\n            awsRequestMetrics.endEvent(Field.RequestMarshallTime);\r\n        }\r\n        Unmarshaller<StartStreamProcessorResult, JsonUnmarshallerContext> unmarshaller = new StartStreamProcessorResultJsonUnmarshaller();\r\n        JsonResponseHandler<StartStreamProcessorResult> responseHandler = new JsonResponseHandler<StartStreamProcessorResult>(unmarshaller);\r\n        response = invoke(request, responseHandler, executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.EncryptionUtils.getCipherBlockUpperBound",
	"Comment": "takes the position of the rightmost desired byte of a user specifiedrange and returns the position of the end of the following cipher block.",
	"Method": "long getCipherBlockUpperBound(long rightmostBytePosition){\r\n    long cipherBlockSize = JceEncryptionConstants.SYMMETRIC_CIPHER_BLOCK_SIZE;\r\n    long offset = cipherBlockSize - (rightmostBytePosition % cipherBlockSize);\r\n    return rightmostBytePosition + offset + cipherBlockSize;\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.GetVocabularyResult.withFailureReason",
	"Comment": "if the vocabularystate field is failed, thisfield contains information about why the job failed.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetVocabularyResult withFailureReason(String failureReason){\r\n    this.failureReason = failureReason;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.translate.AmazonTranslateAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this async client to executerequests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.ChangeMessageVisibilityBatchResult.withFailed",
	"Comment": "a list of batchresulterrorentry items.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ChangeMessageVisibilityBatchResult withFailed(BatchResultErrorEntry failed,ChangeMessageVisibilityBatchResult withFailed,java.util.Collection<BatchResultErrorEntry> failed){\r\n    setFailed(failed);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CreateCustomVerificationEmailTemplateRequest.withTemplateContent",
	"Comment": "the content of the custom verification email. the total size of the emailmust be less than 10 mb. the message body may contain html, with somelimitations. for more information, see custom verification email frequently asked questions in theamazon ses developer guide.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreateCustomVerificationEmailTemplateRequest withTemplateContent(String templateContent){\r\n    this.templateContent = templateContent;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.InitiateMultipartUploadRequest.setKey",
	"Comment": "sets the key by which to store the new multipart upload, and hence, theeventual object created from the multipart upload.",
	"Method": "void setKey(String key){\r\n    this.key = key;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GCMMessage.withBody",
	"Comment": "the message body of the notification.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GCMMessage withBody(String body){\r\n    this.body = body;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.AmazonS3Client.addDateHeader",
	"Comment": "adds the specified date header in rfc 822 date format to the specifiedrequest. this method will not add a date header if the specified datevalue is null.",
	"Method": "void addDateHeader(Request<?> request,String header,Date value){\r\n    if (value != null) {\r\n        request.addHeader(header, ServiceUtils.formatRfc822Date(value));\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.WriteApplicationSettingsRequest.withCampaignHook",
	"Comment": "default campaign hook information.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "WriteApplicationSettingsRequest withCampaignHook(CampaignHook campaignHook){\r\n    this.campaignHook = campaignHook;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListMultipartUploadsRequest.getMaxUploads",
	"Comment": "returns the optional maximum number of uploads to return, or null if nomaximum number of uploads has been set for this request.",
	"Method": "Integer getMaxUploads(){\r\n    return maxUploads;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListEndpointsByPlatformApplicationRequest.setNextToken",
	"Comment": "nexttoken string is used when calling listendpointsbyplatformapplicationaction to retrieve additional records that are available after the firstpage results.",
	"Method": "void setNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.SynthesizeSpeechPresignRequest.setLexiconNames",
	"Comment": "list of one or more pronunciation lexicon names you want the service toapply during synthesis. lexicons are applied only if the language of thelexicon is the same as the language of the voice. for information aboutstoring lexicons, see putlexicon.currently only one lexicon per request is supported by aws sdk for android.",
	"Method": "void setLexiconNames(java.util.Collection<String> lexiconNames){\r\n    if (lexiconNames == null) {\r\n        this.lexiconNames = null;\r\n        return;\r\n    }\r\n    this.lexiconNames = new java.util.ArrayList<String>(lexiconNames);\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.KinesisFirehoseDestination.getIAMRoleARN",
	"Comment": "the arn of the iam role under which amazon ses publishes email sendingevents to the amazon kinesis firehose stream.",
	"Method": "String getIAMRoleARN(){\r\n    return iAMRoleARN;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ReplicationDestinationConfig.getStorageClass",
	"Comment": "returns the storage class associated with the replication destinationconfiguration.",
	"Method": "String getStorageClass(){\r\n    return storageClass;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.setSSEAwsKeyManagementParams",
	"Comment": "sets the aws key management system parameters used to encrypt the objecton server side.",
	"Method": "void setSSEAwsKeyManagementParams(SSEAwsKeyManagementParams params){\r\n    if (params != null && this.destinationSSECustomerKey != null) {\r\n        throw new IllegalArgumentException(\"Either SSECustomerKey or SSEAwsKeyManagementParams must not be set at the same time.\");\r\n    }\r\n    this.sseAwsKeyManagementParams = params;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.Message.withImageSmallIconUrl",
	"Comment": "the url that points to the small icon image for the push notificationicon, for example, the app icon.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Message withImageSmallIconUrl(String imageSmallIconUrl){\r\n    this.imageSmallIconUrl = imageSmallIconUrl;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.ListStreamsResult.getStreamNames",
	"Comment": "the names of the streams that are associated with the aws account makingthe liststreams request.",
	"Method": "java.util.List<String> getStreamNames(){\r\n    return streamNames;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GPSPointDimension.withCoordinates",
	"Comment": "coordinate to measure distance from.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GPSPointDimension withCoordinates(GPSCoordinates coordinates){\r\n    this.coordinates = coordinates;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.DeleteAttributesRequest.withDomainName",
	"Comment": "the name of the domain in which to perform the operation.returns a reference to this object so that method calls can be chained together.",
	"Method": "DeleteAttributesRequest withDomainName(String domainName){\r\n    this.domainName = domainName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketMetricsConfigurationsRequest.getBucketName",
	"Comment": "gets the name of the bucket containing the metrics configurations to retrieve.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.DescribeResourcePoliciesResult.withResourcePolicies",
	"Comment": "the resource policies that exist in this account.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DescribeResourcePoliciesResult withResourcePolicies(ResourcePolicy resourcePolicies,DescribeResourcePoliciesResult withResourcePolicies,java.util.Collection<ResourcePolicy> resourcePolicies){\r\n    setResourcePolicies(resourcePolicies);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointBatchItem.withDemographic",
	"Comment": "the endpoint demographic attributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointBatchItem withDemographic(EndpointDemographic demographic){\r\n    this.demographic = demographic;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DirectMessageConfiguration.setADMMessage",
	"Comment": "the message to adm channels. overrides the default push notificationmessage.",
	"Method": "void setADMMessage(ADMMessage aDMMessage){\r\n    this.aDMMessage = aDMMessage;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.TrackingOptionsDoesNotExistException.setConfigurationSetName",
	"Comment": "indicates that a trackingoptions object does not exist in the specifiedconfiguration set.",
	"Method": "void setConfigurationSetName(String configurationSetName){\r\n    this.configurationSetName = configurationSetName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.BaiduChannelResponse.withCredential",
	"Comment": "the baidu api key from baidu.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "BaiduChannelResponse withCredential(String credential){\r\n    this.credential = credential;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.GetCustomVerificationEmailTemplateResult.withFailureRedirectionURL",
	"Comment": "the url that the recipient of the verification email is sent to if his orher address is not successfully verified.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetCustomVerificationEmailTemplateResult withFailureRedirectionURL(String failureRedirectionURL){\r\n    this.failureRedirectionURL = failureRedirectionURL;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignLimits.withTotal",
	"Comment": "the maximum total number of messages that the campaign can send.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CampaignLimits withTotal(Integer total){\r\n    this.total = total;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.ReplaceableAttribute.withValue",
	"Comment": "the value of the replaceable attribute.returns a reference to this object so that method calls can be chained together.",
	"Method": "ReplaceableAttribute withValue(String value){\r\n    this.value = value;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.AmazonCloudWatchLogsClient.testMetricFilter",
	"Comment": "tests the filter pattern of a metric filter against a sample of log eventmessages. you can use this operation to validate the correctness of ametric filter pattern.",
	"Method": "TestMetricFilterResult testMetricFilter(TestMetricFilterRequest testMetricFilterRequest){\r\n    ExecutionContext executionContext = createExecutionContext(testMetricFilterRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<TestMetricFilterRequest> request = null;\r\n    Response<TestMetricFilterResult> response = null;\r\n    try {\r\n        awsRequestMetrics.startEvent(Field.RequestMarshallTime);\r\n        try {\r\n            request = new TestMetricFilterRequestMarshaller().marshall(testMetricFilterRequest);\r\n            request.setAWSRequestMetrics(awsRequestMetrics);\r\n        } finally {\r\n            awsRequestMetrics.endEvent(Field.RequestMarshallTime);\r\n        }\r\n        Unmarshaller<TestMetricFilterResult, JsonUnmarshallerContext> unmarshaller = new TestMetricFilterResultJsonUnmarshaller();\r\n        JsonResponseHandler<TestMetricFilterResult> responseHandler = new JsonResponseHandler<TestMetricFilterResult>(unmarshaller);\r\n        response = invoke(request, responseHandler, executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketLifecycleConfigurationRequest.withBucketName",
	"Comment": "sets the name of the bucket whose lifecycle configuration is being set,and returns this object so that additional method calls may be chainedtogether.",
	"Method": "SetBucketLifecycleConfigurationRequest withBucketName(String bucketName){\r\n    setBucketName(bucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartETag.setETag",
	"Comment": "sets the entity tag generated from the content of the associated part.",
	"Method": "void setETag(String eTag){\r\n    this.eTag = eTag;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.S3Action.getObjectKeyPrefix",
	"Comment": "the key prefix of the amazon s3 bucket. the key prefix is similar to adirectory name that enables you to store similar data under the samedirectory in a bucket.",
	"Method": "String getObjectKeyPrefix(){\r\n    return objectKeyPrefix;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DescribeReceiptRuleSetResult.setRules",
	"Comment": "a list of the receipt rules that belong to the specified receipt ruleset.",
	"Method": "void setRules(java.util.Collection<ReceiptRule> rules){\r\n    if (rules == null) {\r\n        this.rules = null;\r\n        return;\r\n    }\r\n    this.rules = new java.util.ArrayList<ReceiptRule>(rules);\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.RemovePermissionRequest.withLabel",
	"Comment": "the identification of the permission to remove. this is the label addedwith the addpermission action.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "RemovePermissionRequest withLabel(String label){\r\n    this.label = label;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.TagResourceRequest.withTags",
	"Comment": "one or more tags. each tag consists of a tag key and a tag value.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "TagResourceRequest withTags(Tag tags,TagResourceRequest withTags,java.util.Collection<Tag> tags){\r\n    setTags(tags);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.NumberValidateResponse.setCountry",
	"Comment": "the country or region where the phone number was originally registered.",
	"Method": "void setCountry(String country){\r\n    this.country = country;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.MessageResult.withStatusCode",
	"Comment": "downstream service status code.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "MessageResult withStatusCode(Integer statusCode){\r\n    this.statusCode = statusCode;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.iotdata.AWSIotDataClient.deleteThingShadow",
	"Comment": "deletes the thing shadow for the specified thing.for more information, see deletethingshadow in the aws iot developer guide.",
	"Method": "DeleteThingShadowResult deleteThingShadow(DeleteThingShadowRequest deleteThingShadowRequest){\r\n    ExecutionContext executionContext = createExecutionContext(deleteThingShadowRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<DeleteThingShadowRequest> request = null;\r\n    Response<DeleteThingShadowResult> response = null;\r\n    try {\r\n        awsRequestMetrics.startEvent(Field.RequestMarshallTime);\r\n        try {\r\n            request = new DeleteThingShadowRequestMarshaller().marshall(deleteThingShadowRequest);\r\n            request.setAWSRequestMetrics(awsRequestMetrics);\r\n        } finally {\r\n            awsRequestMetrics.endEvent(Field.RequestMarshallTime);\r\n        }\r\n        Unmarshaller<DeleteThingShadowResult, JsonUnmarshallerContext> unmarshaller = new DeleteThingShadowResultJsonUnmarshaller();\r\n        JsonResponseHandler<DeleteThingShadowResult> responseHandler = new JsonResponseHandler<DeleteThingShadowResult>(unmarshaller);\r\n        response = invoke(request, responseHandler, executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentDimensions.withDemographic",
	"Comment": "the segment demographics attributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SegmentDimensions withDemographic(SegmentDemographics demographic){\r\n    this.demographic = demographic;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.DisableEnhancedMonitoringResult.getCurrentShardLevelMetrics",
	"Comment": "represents the current state of the metrics that are in the enhancedstate before the operation.",
	"Method": "java.util.List<String> getCurrentShardLevelMetrics(){\r\n    return currentShardLevelMetrics;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListEndpointsByPlatformApplicationRequest.withNextToken",
	"Comment": "nexttoken string is used when calling listendpointsbyplatformapplicationaction to retrieve additional records that are available after the firstpage results.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListEndpointsByPlatformApplicationRequest withNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetBucketInventoryConfigurationRequest.getId",
	"Comment": "returns the id used to identify the inventory configuration.",
	"Method": "String getId(){\r\n    return id;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetBucketPolicyRequest.withBucketName",
	"Comment": "sets the name of the amazon s3 bucket whose policy is being retrieved,and returns the updated request object so that additional method callscan be chained together.",
	"Method": "GetBucketPolicyRequest withBucketName(String bucketName){\r\n    setBucketName(bucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.SynthesisTask.setTaskStatusReason",
	"Comment": "reason for the current status of a specific speech synthesis task,including errors if the task has failed.",
	"Method": "void setTaskStatusReason(String taskStatusReason){\r\n    this.taskStatusReason = taskStatusReason;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ReceiptRule.withRecipients",
	"Comment": "the recipient domains and email addresses that the receipt rule appliesto. if this field is not specified, this rule will match all recipientsunder all verified domains.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ReceiptRule withRecipients(String recipients,ReceiptRule withRecipients,java.util.Collection<String> recipients){\r\n    setRecipients(recipients);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.AttributesResource.withApplicationId",
	"Comment": "the unique id for the application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "AttributesResource withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.MultipartUploadListing.isTruncated",
	"Comment": "returns true if the listing is truncated, and additional requests need tobe made to get more results.",
	"Method": "boolean isTruncated(){\r\n    return isTruncated;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.CipherLite.createUsingIV",
	"Comment": "creates a new instance of cipherlite from the current one, but usingthe given iv.",
	"Method": "CipherLite createUsingIV(byte[] iv){\r\n    return scheme.createCipherLite(secreteKey, iv, this.cipherMode, cipher.getProvider());\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.StreamDescription.setHasMoreShards",
	"Comment": "if set to true, more shards in the stream are available todescribe.",
	"Method": "void setHasMoreShards(Boolean hasMoreShards){\r\n    this.hasMoreShards = hasMoreShards;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClient.getCustomVerificationEmailTemplate",
	"Comment": "returns the custom email verification template for the template name youspecify.for more information about custom verification email templates, see using custom verification email templates in the amazon sesdeveloper guide.you can execute this operation no more than once per second.",
	"Method": "GetCustomVerificationEmailTemplateResult getCustomVerificationEmailTemplate(GetCustomVerificationEmailTemplateRequest getCustomVerificationEmailTemplateRequest){\r\n    ExecutionContext executionContext = createExecutionContext(getCustomVerificationEmailTemplateRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<GetCustomVerificationEmailTemplateRequest> request = null;\r\n    Response<GetCustomVerificationEmailTemplateResult> response = null;\r\n    try {\r\n        request = new GetCustomVerificationEmailTemplateRequestMarshaller().marshall(getCustomVerificationEmailTemplateRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        response = invoke(request, new GetCustomVerificationEmailTemplateResultStaxUnmarshaller(), executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.TranscriptionJob.setSettings",
	"Comment": "optional settings for the transcription job. use these settings to turnon speaker recognition, to set the maximum number of speakers that shouldbe identified and to specify a custom vocabulary to use when processingthe transcription job.",
	"Method": "void setSettings(Settings settings){\r\n    this.settings = settings;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.DeleteFacesRequest.withFaceIds",
	"Comment": "an array of face ids to delete.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteFacesRequest withFaceIds(String faceIds,DeleteFacesRequest withFaceIds,java.util.Collection<String> faceIds){\r\n    setFaceIds(faceIds);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SMSMessage.getSubstitutions",
	"Comment": "default message substitutions. can be overridden by individual addresssubstitutions.",
	"Method": "java.util.Map<String, java.util.List<String>> getSubstitutions(){\r\n    return substitutions;\r\n}"
}, {
	"Path": "com.amazonaws.mobile.client.results.SignInResult.getParameters",
	"Comment": "used to determine the type of challenge that is being present from the service",
	"Method": "Map<String, String> getParameters(){\r\n    return parameters;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.amazonmobileanalytics.monetization.GooglePlayMonetizationEventBuilder.create",
	"Comment": "create a googleplaymonetizationeventbuilder with the specified eventclient",
	"Method": "GooglePlayMonetizationEventBuilder create(EventClient eventClient){\r\n    return new GooglePlayMonetizationEventBuilder(eventClient);\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transferutility.TransferService.onCreate",
	"Comment": "the service starts upon intents from transfer utility.it remains alive when there are active transfers.it also stays alive when network is disconnected and there aretransfers waiting.",
	"Method": "void onCreate(){\r\n    super.onCreate();\r\n    LOGGER.info(\"Starting Transfer Service to listen for network connectivity changes\");\r\n    dbUtil = new TransferDBUtil(this);\r\n    updater = TransferStatusUpdater.getInstance(this);\r\n    networkInfoReceiver = new NetworkInfoReceiver(getApplicationContext());\r\n    if (isReceiverNotRegistered) {\r\n        try {\r\n            LOGGER.info(\"Registering the network receiver\");\r\n            this.registerReceiver(this.networkInfoReceiver, new IntentFilter(ConnectivityManager.CONNECTIVITY_ACTION));\r\n        } catch (final IllegalArgumentException iae) {\r\n            LOGGER.warn(\"Ignoring the exception trying to register the receiver for connectivity change.\");\r\n        } catch (final IllegalStateException ise) {\r\n            LOGGER.warn(\"Ignoring the leak in registering the receiver.\");\r\n        } finally {\r\n            isReceiverNotRegistered = false;\r\n        }\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.DeletePlatformApplicationRequest.withPlatformApplicationArn",
	"Comment": "platformapplicationarn of platform application object to delete.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeletePlatformApplicationRequest withPlatformApplicationArn(String platformApplicationArn){\r\n    this.platformApplicationArn = platformApplicationArn;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.Record.getApproximateArrivalTimestamp",
	"Comment": "the approximate time that the record was inserted into the stream.",
	"Method": "java.util.Date getApproximateArrivalTimestamp(){\r\n    return approximateArrivalTimestamp;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.DescribeKeyResult.withKeyMetadata",
	"Comment": "metadata associated with the key.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DescribeKeyResult withKeyMetadata(KeyMetadata keyMetadata){\r\n    this.keyMetadata = keyMetadata;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointRequest.setEffectiveDate",
	"Comment": "the date and time when the endpoint was updated, shown in iso 8601format.",
	"Method": "void setEffectiveDate(String effectiveDate){\r\n    this.effectiveDate = effectiveDate;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SMSChannelRequest.withSenderId",
	"Comment": "sender identifier of your messages.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SMSChannelRequest withSenderId(String senderId){\r\n    this.senderId = senderId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.DeleteAttributesRequest.withExpected",
	"Comment": "the update condition which, if specified, determines whether thespecified attributes will be deleted or not. the update condition mustbe satisfied in order for this request to be processed and theattributes to be deleted.returns a reference to this object so that method calls can be chained together.",
	"Method": "DeleteAttributesRequest withExpected(UpdateCondition expected){\r\n    this.expected = expected;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetPersonTrackingResult.setStatusMessage",
	"Comment": "if the job fails, statusmessage provides a descriptive errormessage.",
	"Method": "void setStatusMessage(String statusMessage){\r\n    this.statusMessage = statusMessage;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.AmazonSQSAsyncClient.listQueuesAsync",
	"Comment": "returns a list of your queues. the maximum number of queues that can bereturned is 1000. if you specify a value for the optionalqueuenameprefix parameter, only queues with a name beginningwith the specified value are returned.",
	"Method": "Future<ListQueuesResult> listQueuesAsync(ListQueuesRequest listQueuesRequest,Future<ListQueuesResult> listQueuesAsync,ListQueuesRequest listQueuesRequest,AsyncHandler<ListQueuesRequest, ListQueuesResult> asyncHandler){\r\n    return executorService.submit(new Callable<ListQueuesResult>() {\r\n        public ListQueuesResult call() throws Exception {\r\n            ListQueuesResult result = null;\r\n            try {\r\n                result = listQueues(listQueuesRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(listQueuesRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.AmazonSQSAsyncClient.listQueuesAsync",
	"Comment": "returns a list of your queues. the maximum number of queues that can bereturned is 1000. if you specify a value for the optionalqueuenameprefix parameter, only queues with a name beginningwith the specified value are returned.",
	"Method": "Future<ListQueuesResult> listQueuesAsync(ListQueuesRequest listQueuesRequest,Future<ListQueuesResult> listQueuesAsync,ListQueuesRequest listQueuesRequest,AsyncHandler<ListQueuesRequest, ListQueuesResult> asyncHandler){\r\n    ListQueuesResult result = null;\r\n    try {\r\n        result = listQueues(listQueuesRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(listQueuesRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.S3CryptoModuleBase.wrapWithCipher",
	"Comment": "returns the given putobjectrequest but has the content asinput stream wrapped with a cipher, and configured with some meta dataand user metadata.",
	"Method": "R wrapWithCipher(R request,ContentCryptoMaterial cekMaterial){\r\n    ObjectMetadata metadata = request.getMetadata();\r\n    if (metadata == null) {\r\n        metadata = new ObjectMetadata();\r\n    }\r\n    if (metadata.getContentMD5() != null) {\r\n        metadata.addUserMetadata(Headers.UNENCRYPTED_CONTENT_MD5, metadata.getContentMD5());\r\n    }\r\n    metadata.setContentMD5(null);\r\n    final long plaintextLength = plaintextLength(request, metadata);\r\n    if (plaintextLength >= 0) {\r\n        metadata.addUserMetadata(Headers.UNENCRYPTED_CONTENT_LENGTH, Long.toString(plaintextLength));\r\n        metadata.setContentLength(ciphertextLength(plaintextLength));\r\n    }\r\n    request.setMetadata(metadata);\r\n    request.setInputStream(newS3CipherLiteInputStream(request, cekMaterial, plaintextLength));\r\n    request.setFile(null);\r\n    return request;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartListing.setAbortDate",
	"Comment": "date when multipart upload will become eligible for abort operation by lifecycle.",
	"Method": "void setAbortDate(Date abortDate){\r\n    this.abortDate = abortDate;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.CreatePlatformEndpointRequest.setToken",
	"Comment": "unique identifier created by the notification service for an app on adevice. the specific name for token will vary, depending on whichnotification service is being used. for example, when using apns as thenotification service, you need the device token. alternatively, whenusing gcm or adm, the device token equivalent is called the registrationid.",
	"Method": "void setToken(String token){\r\n    this.token = token;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DescribeActiveReceiptRuleSetResult.getMetadata",
	"Comment": "the metadata for the currently active receipt rule set. the metadataconsists of the rule set name and a timestamp of when the rule set wascreated.",
	"Method": "ReceiptRuleSetMetadata getMetadata(){\r\n    return metadata;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceDetail.withLandmarks",
	"Comment": "indicates the location of landmarks on the face. default attribute.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "FaceDetail withLandmarks(Landmark landmarks,FaceDetail withLandmarks,java.util.Collection<Landmark> landmarks){\r\n    setLandmarks(landmarks);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetSegmentsResult.withSegmentsResponse",
	"Comment": "segments in your account.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetSegmentsResult withSegmentsResponse(SegmentsResponse segmentsResponse){\r\n    this.segmentsResponse = segmentsResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DescribeConfigurationSetResult.setConfigurationSet",
	"Comment": "the configuration set object associated with the specified configurationset.",
	"Method": "void setConfigurationSet(ConfigurationSet configurationSet){\r\n    this.configurationSet = configurationSet;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CompleteMultipartUploadRequest.setRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "void setRequesterPays(boolean isRequesterPays){\r\n    this.isRequesterPays = isRequesterPays;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ReceiptRule.getEnabled",
	"Comment": "if true, the receipt rule is active. the default value isfalse.",
	"Method": "Boolean getEnabled(){\r\n    return enabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetExportJobsRequest.setToken",
	"Comment": "the nexttoken string returned on a previous page that you use to get thenext page of results in a paginated response.",
	"Method": "void setToken(String token){\r\n    this.token = token;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ListGrantsResult.withGrants",
	"Comment": "a list of grants.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListGrantsResult withGrants(GrantListEntry grants,ListGrantsResult withGrants,java.util.Collection<GrantListEntry> grants){\r\n    setGrants(grants);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ListIdentityPoliciesResult.setPolicyNames",
	"Comment": "a list of names of policies that apply to the specified identity.",
	"Method": "void setPolicyNames(java.util.Collection<String> policyNames){\r\n    if (policyNames == null) {\r\n        this.policyNames = null;\r\n        return;\r\n    }\r\n    this.policyNames = new java.util.ArrayList<String>(policyNames);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GCMMessage.setRestrictedPackageName",
	"Comment": "this parameter specifies the package name of the application where theregistration tokens must match in order to receive the message.",
	"Method": "void setRestrictedPackageName(String restrictedPackageName){\r\n    this.restrictedPackageName = restrictedPackageName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetSegmentVersionsResult.withSegmentsResponse",
	"Comment": "segments in your account.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetSegmentVersionsResult withSegmentsResponse(SegmentsResponse segmentsResponse){\r\n    this.segmentsResponse = segmentsResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSChannelRequest.withTeamId",
	"Comment": "the team id used for apns tokens.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSChannelRequest withTeamId(String teamId){\r\n    this.teamId = teamId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.BaiduMessage.withImageUrl",
	"Comment": "the url that points to an image used in the push notification.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "BaiduMessage withImageUrl(String imageUrl){\r\n    this.imageUrl = imageUrl;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EmailChannelRequest.withIdentity",
	"Comment": "the arn of an identity verified with ses.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EmailChannelRequest withIdentity(String identity){\r\n    this.identity = identity;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.S3Object.setBucketName",
	"Comment": "sets the name of the bucket in which this object is contained.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMChannelRequest.withEnabled",
	"Comment": "indicates whether or not the channel is enabled for sending messages.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ADMChannelRequest withEnabled(Boolean enabled){\r\n    this.enabled = enabled;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketTaggingConfigurationRequest.getTaggingConfiguration",
	"Comment": "gets the new tagging configuration for the specified bucket.",
	"Method": "BucketTaggingConfiguration getTaggingConfiguration(){\r\n    return taggingConfiguration;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ReceiptRule.withEnabled",
	"Comment": "if true, the receipt rule is active. the default value isfalse.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ReceiptRule withEnabled(Boolean enabled){\r\n    this.enabled = enabled;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartLabelDetectionRequest.getNotificationChannel",
	"Comment": "the amazon sns topic arn you want amazon rekognition video to publish thecompletion status of the label detection operation to.",
	"Method": "NotificationChannel getNotificationChannel(){\r\n    return notificationChannel;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.CreateGrantRequest.setGrantTokens",
	"Comment": "a list of grant tokens.for more information, see grant tokens in the aws key management service developerguide.",
	"Method": "void setGrantTokens(java.util.Collection<String> grantTokens){\r\n    if (grantTokens == null) {\r\n        this.grantTokens = null;\r\n        return;\r\n    }\r\n    this.grantTokens = new java.util.ArrayList<String>(grantTokens);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Request.setBucketName",
	"Comment": "sets the name of the amazon s3 bucket whose objects are to be listed.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.SendMessageBatchRequestEntry.getMessageAttributes",
	"Comment": "each message attribute consists of a name, type, and value. for moreinformation, see message attribute items in the amazon sqs developer guide.",
	"Method": "java.util.Map<String, MessageAttributeValue> getMessageAttributes(){\r\n    return messageAttributes;\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.InvokeRequest.setPayload",
	"Comment": "json that you want to provide to your lambda function as input.",
	"Method": "void setPayload(java.nio.ByteBuffer payload){\r\n    this.payload = payload;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.VersionListing.setKeyMarker",
	"Comment": "for internal use only. sets the key marker parameter originally used torequest this version listing.",
	"Method": "void setKeyMarker(String keyMarker){\r\n    this.keyMarker = keyMarker;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.KeyMetadata.isEnabled",
	"Comment": "specifies whether the cmk is enabled. when keystate isenabled this value is true, otherwise it is false.",
	"Method": "Boolean isEnabled(){\r\n    return enabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Request.getBucketName",
	"Comment": "gets the name of the amazon s3 bucket whose objects are to be listed.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMChannelResponse.setEnabled",
	"Comment": "indicates whether or not the channel is enabled for sending messages.",
	"Method": "void setEnabled(Boolean enabled){\r\n    this.enabled = enabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SetReceiptRulePositionRequest.getRuleSetName",
	"Comment": "the name of the receipt rule set that contains the receipt rule toreposition.",
	"Method": "String getRuleSetName(){\r\n    return ruleSetName;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.UpdateCondition.getValue",
	"Comment": "the value of an attribute. this value can only be specified when theexists parameter is equal to true.",
	"Method": "String getValue(){\r\n    return value;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.TrackingOptions.getCustomRedirectDomain",
	"Comment": "the custom subdomain that will be used to redirect email recipients tothe amazon ses event tracking domain.",
	"Method": "String getCustomRedirectDomain(){\r\n    return customRedirectDomain;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListEndpointsByPlatformApplicationResult.withNextToken",
	"Comment": "nexttoken string is returned when callinglistendpointsbyplatformapplication action if additional records areavailable after the first page results.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListEndpointsByPlatformApplicationResult withNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.GetIdentityPoliciesRequest.setPolicyNames",
	"Comment": "a list of the names of policies to be retrieved. you can retrieve amaximum of 20 policies at a time. if you do not know the names of thepolicies that are attached to the identity, you can uselistidentitypolicies.",
	"Method": "void setPolicyNames(java.util.Collection<String> policyNames){\r\n    if (policyNames == null) {\r\n        this.policyNames = null;\r\n        return;\r\n    }\r\n    this.policyNames = new java.util.ArrayList<String>(policyNames);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.QuietTime.withStart",
	"Comment": "the default start time for quiet time in iso 8601 format.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "QuietTime withStart(String start){\r\n    this.start = start;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.WriteApplicationSettingsRequest.getQuietTime",
	"Comment": "the default quiet time for the app. each campaign for this app sends nomessages during this time unless the campaign overrides the default witha quiet time of its own.",
	"Method": "QuietTime getQuietTime(){\r\n    return quietTime;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.listTemplatesAsync",
	"Comment": "lists the email templates present in your amazon ses account in thecurrent aws region.you can execute this operation no more than once per second.",
	"Method": "Future<ListTemplatesResult> listTemplatesAsync(ListTemplatesRequest listTemplatesRequest,Future<ListTemplatesResult> listTemplatesAsync,ListTemplatesRequest listTemplatesRequest,AsyncHandler<ListTemplatesRequest, ListTemplatesResult> asyncHandler){\r\n    return executorService.submit(new Callable<ListTemplatesResult>() {\r\n        public ListTemplatesResult call() throws Exception {\r\n            ListTemplatesResult result = null;\r\n            try {\r\n                result = listTemplates(listTemplatesRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(listTemplatesRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.listTemplatesAsync",
	"Comment": "lists the email templates present in your amazon ses account in thecurrent aws region.you can execute this operation no more than once per second.",
	"Method": "Future<ListTemplatesResult> listTemplatesAsync(ListTemplatesRequest listTemplatesRequest,Future<ListTemplatesResult> listTemplatesAsync,ListTemplatesRequest listTemplatesRequest,AsyncHandler<ListTemplatesRequest, ListTemplatesResult> asyncHandler){\r\n    ListTemplatesResult result = null;\r\n    try {\r\n        result = listTemplates(listTemplatesRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(listTemplatesRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.iotdata.model.PublishRequest.withPayload",
	"Comment": "the state information, in json format.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PublishRequest withPayload(java.nio.ByteBuffer payload){\r\n    this.payload = payload;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.SelectRequest.isConsistentRead",
	"Comment": "determines whether or not strong consistency should be enforced whendata is read from simpledb. if true, any data previouslywritten to simpledb will be returned. otherwise, results will beconsistent eventually, and the client may not see data that waswritten immediately before your read.",
	"Method": "Boolean isConsistentRead(){\r\n    return consistentRead;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DescribeConfigurationSetResult.withConfigurationSet",
	"Comment": "the configuration set object associated with the specified configurationset.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DescribeConfigurationSetResult withConfigurationSet(ConfigurationSet configurationSet){\r\n    this.configurationSet = configurationSet;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetCelebrityInfoResult.withName",
	"Comment": "the name of the celebrity.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetCelebrityInfoResult withName(String name){\r\n    this.name = name;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointItemResponse.setStatusCode",
	"Comment": "the status code to respond with for a particular endpoint id afterendpoint registration",
	"Method": "void setStatusCode(Integer statusCode){\r\n    this.statusCode = statusCode;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ExportJobResponse.getTotalPieces",
	"Comment": "the total number of pieces that must be processed to finish the job. eachpiece is an approximately equal portion of the endpoints.",
	"Method": "Integer getTotalPieces(){\r\n    return totalPieces;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.NumberValidateResponse.withCarrier",
	"Comment": "the carrier or servive provider that the phone number is currentlyregistered with.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "NumberValidateResponse withCarrier(String carrier){\r\n    this.carrier = carrier;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.RecognizeCelebritiesResult.withCelebrityFaces",
	"Comment": "details about each celebrity found in the image. amazon rekognition candetect a maximum of 15 celebrities in an image.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "RecognizeCelebritiesResult withCelebrityFaces(Celebrity celebrityFaces,RecognizeCelebritiesResult withCelebrityFaces,java.util.Collection<Celebrity> celebrityFaces){\r\n    setCelebrityFaces(celebrityFaces);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSChannelRequest.withEnabled",
	"Comment": "if the channel is enabled for sending messages.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSChannelRequest withEnabled(Boolean enabled){\r\n    this.enabled = enabled;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteBucketMetricsConfigurationRequest.withBucketName",
	"Comment": "sets the name of the bucket from which the metrics configuration is deletedand returns this object for method chaining.",
	"Method": "DeleteBucketMetricsConfigurationRequest withBucketName(String bucketName){\r\n    setBucketName(bucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateEndpointRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateEndpointRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteBucketMetricsConfigurationRequest.getBucketName",
	"Comment": "returns the name of the bucket from which the metrics configuration is deleted.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CloneReceiptRuleSetRequest.withOriginalRuleSetName",
	"Comment": "the name of the rule set to clone.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CloneReceiptRuleSetRequest withOriginalRuleSetName(String originalRuleSetName){\r\n    this.originalRuleSetName = originalRuleSetName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.MessageAttributeValue.withBinaryListValues",
	"Comment": "not implemented. reserved for future use.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "MessageAttributeValue withBinaryListValues(java.nio.ByteBuffer binaryListValues,MessageAttributeValue withBinaryListValues,java.util.Collection<java.nio.ByteBuffer> binaryListValues){\r\n    setBinaryListValues(binaryListValues);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.demo.numberguess.manager.MobileAnalyticsClientManager.init",
	"Comment": "initializes the mobileanalyticsmanager. this must be called beforecalling any methods in this class.",
	"Method": "void init(Context context){\r\n    if (analytics == null) {\r\n        AnalyticsConfig options = new AnalyticsConfig();\r\n        options.withAllowsWANDelivery(true);\r\n        analytics = MobileAnalyticsManager.getOrCreateInstance(context, Constants.MOBILE_ANALYTICS_APP_ID, Regions.US_EAST_1, CognitoClientManager.getCredentials(), options);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.ListLexiconsRequest.getNextToken",
	"Comment": "an opaque pagination token returned from previouslistlexicons operation. if present, indicates where tocontinue the list of lexicons.",
	"Method": "String getNextToken(){\r\n    return nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ActivityResponse.withCampaignId",
	"Comment": "the id of the campaign to which the activity applies.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ActivityResponse withCampaignId(String campaignId){\r\n    this.campaignId = campaignId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.util.SimpleDBUtils.encodeDate",
	"Comment": "encodes date value into string format that can be comparedlexicographically",
	"Method": "String encodeDate(Date date){\r\n    final String result = DateUtils.format(DATE_FORMAT, date);\r\n    return result.substring(0, result.length() - DATE_SPLIT_2) + \":\" + result.substring(result.length() - DATE_SPLIT_2);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.PhoneNumberValidateResult.withNumberValidateResponse",
	"Comment": "phone number information response.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PhoneNumberValidateResult withNumberValidateResponse(NumberValidateResponse numberValidateResponse){\r\n    this.numberValidateResponse = numberValidateResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetCelebrityRecognitionResult.withVideoMetadata",
	"Comment": "information about a video that amazon rekognition video analyzed.videometadata is returned in every page of paginatedresponses from a amazon rekognition video operation.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetCelebrityRecognitionResult withVideoMetadata(VideoMetadata videoMetadata){\r\n    this.videoMetadata = videoMetadata;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.Message.getImageIconUrl",
	"Comment": "the url that points to the icon image for the push notification icon, forexample, the app icon.",
	"Method": "String getImageIconUrl(){\r\n    return imageIconUrl;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSVoipChannelResponse.withPlatform",
	"Comment": "the platform type. will be apns.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSVoipChannelResponse withPlatform(String platform){\r\n    this.platform = platform;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.Schedule.withStartTime",
	"Comment": "the scheduled time that the campaign begins in iso 8601 format.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Schedule withStartTime(String startTime){\r\n    this.startTime = startTime;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.Template.withTextPart",
	"Comment": "the email body that will be visible to recipients whose email clients donot display html.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Template withTextPart(String textPart){\r\n    this.textPart = textPart;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointanalytics.model.Event.withSession",
	"Comment": "the session the event occured within.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Event withSession(Session session){\r\n    this.session = session;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ListKeyPoliciesResult.isTruncated",
	"Comment": "a flag that indicates whether there are more items in the list. when thisvalue is true, the list in this response is truncated. to get more items,pass the value of the nextmarker element in this response tothe marker parameter in a subsequent request.",
	"Method": "Boolean isTruncated(){\r\n    return truncated;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ListReceiptRuleSetsRequest.withNextToken",
	"Comment": "a token returned from a previous call to listreceiptrulesetsto indicate the position in the receipt rule set list.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListReceiptRuleSetsRequest withNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartListing.setStorageClass",
	"Comment": "sets the class of storage used for the parts in the associated multipartupload.",
	"Method": "void setStorageClass(String storageClass){\r\n    this.storageClass = storageClass;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.GetIdentityVerificationAttributesResult.getVerificationAttributes",
	"Comment": "a map of identities to identityverificationattributes objects.",
	"Method": "java.util.Map<String, IdentityVerificationAttributes> getVerificationAttributes(){\r\n    return verificationAttributes;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.CreateGrantRequest.withGrantTokens",
	"Comment": "a list of grant tokens.for more information, see grant tokens in the aws key management service developerguide.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreateGrantRequest withGrantTokens(String grantTokens,CreateGrantRequest withGrantTokens,java.util.Collection<String> grantTokens){\r\n    setGrantTokens(grantTokens);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartListing.getMaxParts",
	"Comment": "returns the optional max parts value specified in the original request tolimit how many parts are listed.",
	"Method": "Integer getMaxParts(){\r\n    return maxParts;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketVersioningConfigurationRequest.getBucketName",
	"Comment": "gets the name of the bucket whose versioning configuration is being set.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectAclRequest.getBucketName",
	"Comment": "gets the name of the bucket containing the object whose acl is to be retrieved.",
	"Method": "String getBucketName(){\r\n    return s3ObjectIdBuilder.getBucket();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.withSSEAwsKeyManagementParams",
	"Comment": "sets the aws key management system parameters used to encrypt the objecton server side.",
	"Method": "CopyObjectRequest withSSEAwsKeyManagementParams(SSEAwsKeyManagementParams sseAwsKeyManagementParams){\r\n    setSSEAwsKeyManagementParams(sseAwsKeyManagementParams);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.NumberValidateResponse.withCounty",
	"Comment": "the county where the phone number was originally registered.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "NumberValidateResponse withCounty(String county){\r\n    this.county = county;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser.parseListBucketObjectsResponse",
	"Comment": "parses a listbucket response xml document from an input stream.",
	"Method": "ListBucketHandler parseListBucketObjectsResponse(InputStream inputStream,boolean shouldSDKDecodeResponse){\r\n    final ListBucketHandler handler = new ListBucketHandler(shouldSDKDecodeResponse);\r\n    parseXmlInputStream(handler, sanitizeXmlDocument(handler, inputStream));\r\n    return handler;\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.CreateVocabularyResult.setFailureReason",
	"Comment": "if the vocabularystate field is failed, thisfield contains information about why the job failed.",
	"Method": "void setFailureReason(String failureReason){\r\n    this.failureReason = failureReason;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListPhoneNumbersOptedOutRequest.getNextToken",
	"Comment": "a nexttoken string is used when you call thelistphonenumbersoptedout action to retrieve additionalrecords that are available after the first page of results.",
	"Method": "String getNextToken(){\r\n    return nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transferutility.TransferDBUtil.generateContentValuesForSinglePartTransfer",
	"Comment": "generates a contentvalues object to insert into the database with thegiven values for a single chunk upload or download.",
	"Method": "ContentValues generateContentValuesForSinglePartTransfer(TransferType type,String bucket,String key,File file,ObjectMetadata metadata,CannedAccessControlList cannedAcl){\r\n    final ContentValues values = new ContentValues();\r\n    values.put(TransferTable.COLUMN_TYPE, type.toString());\r\n    values.put(TransferTable.COLUMN_STATE, TransferState.WAITING.toString());\r\n    values.put(TransferTable.COLUMN_BUCKET_NAME, bucket);\r\n    values.put(TransferTable.COLUMN_KEY, key);\r\n    values.put(TransferTable.COLUMN_FILE, file.getAbsolutePath());\r\n    values.put(TransferTable.COLUMN_BYTES_CURRENT, 0L);\r\n    if (type.equals(TransferType.UPLOAD)) {\r\n        values.put(TransferTable.COLUMN_BYTES_TOTAL, file == null ? 0L : file.length());\r\n    }\r\n    values.put(TransferTable.COLUMN_IS_MULTIPART, 0);\r\n    values.put(TransferTable.COLUMN_PART_NUM, 0);\r\n    values.put(TransferTable.COLUMN_IS_ENCRYPTED, 0);\r\n    values.putAll(generateContentValuesForObjectMetadata(metadata));\r\n    if (cannedAcl != null) {\r\n        values.put(TransferTable.COLUMN_CANNED_ACL, cannedAcl.toString());\r\n    }\r\n    return values;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ReplicationRule.withStatus",
	"Comment": "sets the status of this replication rule. valid values are enabled,disabled. the rule will be applied only if the status is enabled.",
	"Method": "ReplicationRule withStatus(String status,ReplicationRule withStatus,ReplicationRuleStatus status){\r\n    setStatus(status.getStatus());\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.EventDestination.getCloudWatchDestination",
	"Comment": "an object that contains the names, default values, and sources of thedimensions associated with an amazon cloudwatch event destination.",
	"Method": "CloudWatchDestination getCloudWatchDestination(){\r\n    return cloudWatchDestination;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.AttributeDimension.setValues",
	"Comment": "the criteria values for the segment dimension. endpoints with matchingattribute values are included or excluded from the segment, depending onthe setting for type.",
	"Method": "void setValues(java.util.Collection<String> values){\r\n    if (values == null) {\r\n        this.values = null;\r\n        return;\r\n    }\r\n    this.values = new java.util.ArrayList<String>(values);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMMessage.withIconReference",
	"Comment": "the icon image name of the asset saved in your application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ADMMessage withIconReference(String iconReference){\r\n    this.iconReference = iconReference;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.ChangeMessageVisibilityRequest.setReceiptHandle",
	"Comment": "the receipt handle associated with the message whose visibility timeoutshould be changed. this parameter is returned by thereceivemessage action.",
	"Method": "void setReceiptHandle(String receiptHandle){\r\n    this.receiptHandle = receiptHandle;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSChannelResponse.withLastModifiedDate",
	"Comment": "the date and time when this channel was last modified.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSChannelResponse withLastModifiedDate(String lastModifiedDate){\r\n    this.lastModifiedDate = lastModifiedDate;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ActivityResponse.getEnd",
	"Comment": "the actual time the activity was marked cancelled or completed. providedin iso 8601 format.",
	"Method": "String getEnd(){\r\n    return end;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignResponse.withId",
	"Comment": "the unique campaign id.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CampaignResponse withId(String id){\r\n    this.id = id;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateApnsSandboxChannelResult.getAPNSSandboxChannelResponse",
	"Comment": "apple development push notification service channel definition.",
	"Method": "APNSSandboxChannelResponse getAPNSSandboxChannelResponse(){\r\n    return aPNSSandboxChannelResponse;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PutObjectResult.setETag",
	"Comment": "sets the etag value for the new object that was created from theassociated putobject request.",
	"Method": "void setETag(String eTag){\r\n    this.eTag = eTag;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointItemResponse.getStatusCode",
	"Comment": "the status code to respond with for a particular endpoint id afterendpoint registration",
	"Method": "Integer getStatusCode(){\r\n    return statusCode;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteApnsSandboxChannelRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteApnsSandboxChannelRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transferutility.TransferTable.addVersion4Columns",
	"Comment": "adds columns that were introduced in version 4 to the database",
	"Method": "void addVersion4Columns(SQLiteDatabase database){\r\n    final String addCannedAcl = \"ALTER TABLE \" + TABLE_TRANSFER + \" ADD COLUMN \" + COLUMN_CANNED_ACL + \" text;\";\r\n    database.execSQL(addCannedAcl);\r\n}"
}, {
	"Path": "com.amazonaws.demo.s3transferutility.Util.getS3Client",
	"Comment": "gets an instance of a s3 client which is constructed using the givencontext.",
	"Method": "AmazonS3Client getS3Client(Context context){\r\n    if (sS3Client == null) {\r\n        sS3Client = new AmazonS3Client(getCredProvider(context));\r\n        try {\r\n            String regionString = new AWSConfiguration(context).optJsonObject(\"S3TransferUtility\").getString(\"Region\");\r\n            sS3Client.setRegion(Region.getRegion(regionString));\r\n        } catch (JSONException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n    return sS3Client;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectRequest.getKey",
	"Comment": "gets the key under which the object to be downloaded is stored.",
	"Method": "String getKey(){\r\n    return s3ObjectIdBuilder.getKey();\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListPhoneNumbersOptedOutRequest.withNextToken",
	"Comment": "a nexttoken string is used when you call thelistphonenumbersoptedout action to retrieve additionalrecords that are available after the first page of results.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListPhoneNumbersOptedOutRequest withNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.serverless.proxy.internal.servlet.FilterHolder.isFilterInitialized",
	"Comment": "checks whether the filter this holder is responsible for has been initialized. this method should be checked beforecalling a filter, if it returns false then you should call the init method.",
	"Method": "boolean isFilterInitialized(){\r\n    return filterInitialized;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.Message.setMediaUrl",
	"Comment": "the url that points to the media resource, for example a .mp4 or .giffile.",
	"Method": "void setMediaUrl(String mediaUrl){\r\n    this.mediaUrl = mediaUrl;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.VideoMetadata.withFrameRate",
	"Comment": "number of frames per second in the video.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "VideoMetadata withFrameRate(Float frameRate){\r\n    this.frameRate = frameRate;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateAccountAuditConfigurationRequest.withAuditCheckConfigurations",
	"Comment": "specifies which audit checks are enabled and disabled for this account.use describeaccountauditconfiguration to see the list of allchecks including those that are currently enabled.note that some data collection may begin immediately when certain checksare enabled. when a check is disabled, any data collected so far inrelation to the check is deleted.you cannot disable a check if it is used by any scheduled audit. you mustfirst delete the check from the scheduled audit or delete the scheduledaudit itself.on the first call to updateaccountauditconfiguration thisparameter is required and must specify at least one enabled check.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateAccountAuditConfigurationRequest withAuditCheckConfigurations(java.util.Map<String, AuditCheckConfiguration> auditCheckConfigurations){\r\n    this.auditCheckConfigurations = auditCheckConfigurations;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateCACertificateRequest.withRemoveAutoRegistration",
	"Comment": "if true, remove auto registration.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateCACertificateRequest withRemoveAutoRegistration(Boolean removeAutoRegistration){\r\n    this.removeAutoRegistration = removeAutoRegistration;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.FilterLogEventsResult.setSearchedLogStreams",
	"Comment": "indicates which log streams have been searched and whether each has beensearched completely.",
	"Method": "void setSearchedLogStreams(java.util.Collection<SearchedLogStream> searchedLogStreams){\r\n    if (searchedLogStreams == null) {\r\n        this.searchedLogStreams = null;\r\n        return;\r\n    }\r\n    this.searchedLogStreams = new java.util.ArrayList<SearchedLogStream>(searchedLogStreams);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketAnalyticsConfigurationsResult.isTruncated",
	"Comment": "gets whether or not this analytics configuration listing is complete.",
	"Method": "boolean isTruncated(){\r\n    return isTruncated;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.S3ClientOptions.isDualstackEnabled",
	"Comment": "returns whether the client is configured to use dualstack mode foraccessing s3.",
	"Method": "boolean isDualstackEnabled(){\r\n    return dualstackEnabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.listReceiptRuleSetsAsync",
	"Comment": "lists the receipt rule sets that exist under your aws account in thecurrent aws region. if there are additional receipt rule sets to beretrieved, you will receive a nexttoken that you can provideto the next call to listreceiptrulesets to retrieve theadditional entries.for information about managing receipt rule sets, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "Future<ListReceiptRuleSetsResult> listReceiptRuleSetsAsync(ListReceiptRuleSetsRequest listReceiptRuleSetsRequest,Future<ListReceiptRuleSetsResult> listReceiptRuleSetsAsync,ListReceiptRuleSetsRequest listReceiptRuleSetsRequest,AsyncHandler<ListReceiptRuleSetsRequest, ListReceiptRuleSetsResult> asyncHandler){\r\n    return executorService.submit(new Callable<ListReceiptRuleSetsResult>() {\r\n        public ListReceiptRuleSetsResult call() throws Exception {\r\n            ListReceiptRuleSetsResult result = null;\r\n            try {\r\n                result = listReceiptRuleSets(listReceiptRuleSetsRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(listReceiptRuleSetsRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.listReceiptRuleSetsAsync",
	"Comment": "lists the receipt rule sets that exist under your aws account in thecurrent aws region. if there are additional receipt rule sets to beretrieved, you will receive a nexttoken that you can provideto the next call to listreceiptrulesets to retrieve theadditional entries.for information about managing receipt rule sets, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "Future<ListReceiptRuleSetsResult> listReceiptRuleSetsAsync(ListReceiptRuleSetsRequest listReceiptRuleSetsRequest,Future<ListReceiptRuleSetsResult> listReceiptRuleSetsAsync,ListReceiptRuleSetsRequest listReceiptRuleSetsRequest,AsyncHandler<ListReceiptRuleSetsRequest, ListReceiptRuleSetsResult> asyncHandler){\r\n    ListReceiptRuleSetsResult result = null;\r\n    try {\r\n        result = listReceiptRuleSets(listReceiptRuleSetsRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(listReceiptRuleSetsRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.TransferManager.downloadDirectory",
	"Comment": "downloads all objects in the virtual directory designated by thekeyprefix given to the destination directory given. all virtualsubdirectories will be downloaded recursively.",
	"Method": "MultipleFileDownload downloadDirectory(String bucketName,String keyPrefix,File destinationDirectory){\r\n    if (keyPrefix == null) {\r\n        keyPrefix = \"\";\r\n    }\r\n    final List<S3ObjectSummary> objectSummaries = new LinkedList<S3ObjectSummary>();\r\n    final Stack<String> commonPrefixes = new Stack<String>();\r\n    commonPrefixes.add(keyPrefix);\r\n    long totalSize = 0;\r\n    do {\r\n        final String prefix = commonPrefixes.pop();\r\n        ObjectListing listObjectsResponse = null;\r\n        do {\r\n            if (listObjectsResponse == null) {\r\n                final ListObjectsRequest listObjectsRequest = new ListObjectsRequest().withBucketName(bucketName).withDelimiter(DEFAULT_DELIMITER).withPrefix(prefix);\r\n                listObjectsResponse = s3.listObjects(listObjectsRequest);\r\n            } else {\r\n                listObjectsResponse = s3.listNextBatchOfObjects(listObjectsResponse);\r\n            }\r\n            for (final S3ObjectSummary s : listObjectsResponse.getObjectSummaries()) {\r\n                if (!s.getKey().equals(prefix) && !listObjectsResponse.getCommonPrefixes().contains(s.getKey() + DEFAULT_DELIMITER)) {\r\n                    objectSummaries.add(s);\r\n                    totalSize += s.getSize();\r\n                } else {\r\n                    log.debug(\"Skipping download for object \" + s.getKey() + \" since it is also a virtual directory\");\r\n                }\r\n            }\r\n            commonPrefixes.addAll(listObjectsResponse.getCommonPrefixes());\r\n        } while (listObjectsResponse.isTruncated());\r\n    } while (!commonPrefixes.isEmpty());\r\n    final ProgressListenerChain additionalListeners = new ProgressListenerChain();\r\n    final TransferProgress transferProgress = new TransferProgress();\r\n    transferProgress.setTotalBytesToTransfer(totalSize);\r\n    final ProgressListener listener = new MultipleFileTransferProgressUpdatingListener(transferProgress, additionalListeners);\r\n    final List<DownloadImpl> downloads = new ArrayList<DownloadImpl>();\r\n    final String description = \"Downloading from \" + bucketName + \"/\" + keyPrefix;\r\n    final MultipleFileDownloadImpl multipleFileDownload = new MultipleFileDownloadImpl(description, transferProgress, additionalListeners, keyPrefix, bucketName, downloads);\r\n    multipleFileDownload.setMonitor(new MultipleFileTransferMonitor(multipleFileDownload, downloads));\r\n    final CountDownLatch latch = new CountDownLatch(1);\r\n    final MultipleFileTransferStateChangeListener transferListener = new MultipleFileTransferStateChangeListener(latch, multipleFileDownload);\r\n    for (final S3ObjectSummary summary : objectSummaries) {\r\n        final File f = new File(destinationDirectory, summary.getKey());\r\n        final File parentFile = f.getParentFile();\r\n        if (!parentFile.exists() && !parentFile.mkdirs()) {\r\n            throw new RuntimeException(\"Couldn't create parent directories for \" + f.getAbsolutePath());\r\n        }\r\n        downloads.add((DownloadImpl) doDownload(new GetObjectRequest(summary.getBucketName(), summary.getKey()).withGeneralProgressListener(listener), f, transferListener, null, false));\r\n    }\r\n    if (downloads.isEmpty()) {\r\n        multipleFileDownload.setState(TransferState.Completed);\r\n        return multipleFileDownload;\r\n    }\r\n    latch.countDown();\r\n    return multipleFileDownload;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetPersonTrackingResult.getPersons",
	"Comment": "an array of the persons detected in the video and the times they aretracked throughout the video. an array element will exist for each timethe person is tracked.",
	"Method": "java.util.List<PersonDetection> getPersons(){\r\n    return persons;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.getSendQuotaAsync",
	"Comment": "provides the sending limits for the amazon ses account.you can execute this operation no more than once per second.",
	"Method": "Future<GetSendQuotaResult> getSendQuotaAsync(GetSendQuotaRequest getSendQuotaRequest,Future<GetSendQuotaResult> getSendQuotaAsync,GetSendQuotaRequest getSendQuotaRequest,AsyncHandler<GetSendQuotaRequest, GetSendQuotaResult> asyncHandler){\r\n    return executorService.submit(new Callable<GetSendQuotaResult>() {\r\n        public GetSendQuotaResult call() throws Exception {\r\n            GetSendQuotaResult result = null;\r\n            try {\r\n                result = getSendQuota(getSendQuotaRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(getSendQuotaRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.getSendQuotaAsync",
	"Comment": "provides the sending limits for the amazon ses account.you can execute this operation no more than once per second.",
	"Method": "Future<GetSendQuotaResult> getSendQuotaAsync(GetSendQuotaRequest getSendQuotaRequest,Future<GetSendQuotaResult> getSendQuotaAsync,GetSendQuotaRequest getSendQuotaRequest,AsyncHandler<GetSendQuotaRequest, GetSendQuotaResult> asyncHandler){\r\n    GetSendQuotaResult result = null;\r\n    try {\r\n        result = getSendQuota(getSendQuotaRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(getSendQuotaRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.GetMLModelResult.setScoreThresholdLastUpdatedAt",
	"Comment": "the time of the most recent edit to the scorethreshold. thetime is expressed in epoch time.",
	"Method": "void setScoreThresholdLastUpdatedAt(java.util.Date scoreThresholdLastUpdatedAt){\r\n    this.scoreThresholdLastUpdatedAt = scoreThresholdLastUpdatedAt;\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateAccountAuditConfigurationRequest.getAuditNotificationTargetConfigurations",
	"Comment": "information about the targets to which audit notifications are sent.",
	"Method": "java.util.Map<String, AuditNotificationTarget> getAuditNotificationTargetConfigurations(){\r\n    return auditNotificationTargetConfigurations;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.pinpoint.analytics.PinpointManagerTest.setup",
	"Comment": "sets up the clients, and also tests the creation callback functionality.",
	"Method": "void setup(){\r\n    PinpointConfiguration options = createConfig(uniqueAnalyticsTag1 + (new Random()).nextInt());\r\n    analyticsClient = new PinpointManager(options);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ApplicationSettingsResource.withApplicationId",
	"Comment": "the unique id for the application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ApplicationSettingsResource withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ReEncryptRequest.setSourceEncryptionContext",
	"Comment": "encryption context used to encrypt and decrypt the data specified in theciphertextblob parameter.",
	"Method": "void setSourceEncryptionContext(java.util.Map<String, String> sourceEncryptionContext){\r\n    this.sourceEncryptionContext = sourceEncryptionContext;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.SynthesisTask.withSpeechMarkTypes",
	"Comment": "the type of speech marks returned for the input text.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SynthesisTask withSpeechMarkTypes(String speechMarkTypes,SynthesisTask withSpeechMarkTypes,java.util.Collection<String> speechMarkTypes){\r\n    setSpeechMarkTypes(speechMarkTypes);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.CipherLite.mark",
	"Comment": "marks the current position in this cipher lite. a subsequent call to thereset method repositions this cipher lite at the last markedposition so that subsequent crypto operations will be logically performedin an idempotent manner as if the cipher has been rewinded back to themarked position.the general contract of mark is that, if the methodmarksupported returns true, the cipher litesomehow remembers the internal state after the call to markand stands ready to restore to the internal state so that it would beable to produce the same output given the same input again if andwhenever the method reset is called.",
	"Method": "long mark(){\r\n    return -1;\r\n}"
}, {
	"Path": "com.amazonaws.services.lexrts.model.PostTextResult.withIntentName",
	"Comment": "the current user intent that amazon lex is aware of.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PostTextResult withIntentName(String intentName){\r\n    this.intentName = intentName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.ExportTask.withExecutionInfo",
	"Comment": "execution info about the export task.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ExportTask withExecutionInfo(ExportTaskExecutionInfo executionInfo){\r\n    this.executionInfo = executionInfo;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketNotificationConfigurationRequest.setBucketName",
	"Comment": "sets the name of the bucket whose notification configuration is beingset.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.BaiduMessage.getImageUrl",
	"Comment": "the url that points to an image used in the push notification.",
	"Method": "String getImageUrl(){\r\n    return imageUrl;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.AttributesResource.withAttributes",
	"Comment": "the attributes for the application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "AttributesResource withAttributes(String attributes,AttributesResource withAttributes,java.util.Collection<String> attributes){\r\n    setAttributes(attributes);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.DescribeVoicesRequest.withNextToken",
	"Comment": "an opaque pagination token returned from the previousdescribevoices operation. if present, this indicates whereto continue the listing.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DescribeVoicesRequest withNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSChannelRequest.withBundleId",
	"Comment": "the bundle id used for apns tokens.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSChannelRequest withBundleId(String bundleId){\r\n    this.bundleId = bundleId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.GetLexiconResult.getLexicon",
	"Comment": "lexicon object that provides name and the string content of the lexicon.",
	"Method": "Lexicon getLexicon(){\r\n    return lexicon;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSClient.optInPhoneNumber",
	"Comment": "use this request to opt in a phone number that is opted out, whichenables you to resume sending sms messages to the number.you can opt in a phone number only once every 30 days.",
	"Method": "OptInPhoneNumberResult optInPhoneNumber(OptInPhoneNumberRequest optInPhoneNumberRequest){\r\n    ExecutionContext executionContext = createExecutionContext(optInPhoneNumberRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<OptInPhoneNumberRequest> request = null;\r\n    Response<OptInPhoneNumberResult> response = null;\r\n    try {\r\n        request = new OptInPhoneNumberRequestMarshaller().marshall(optInPhoneNumberRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        response = invoke(request, new OptInPhoneNumberResultStaxUnmarshaller(), executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetFaceSearchResult.withWarnings",
	"Comment": "sets the value of the warnings property for this object.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetFaceSearchResult withWarnings(Warning warnings,GetFaceSearchResult withWarnings,java.util.Collection<Warning> warnings){\r\n    setWarnings(warnings);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignLimits.withMessagesPerSecond",
	"Comment": "the number of messages that the campaign can send per second. the minimumvalue is 50, and the maximum is 20000.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CampaignLimits withMessagesPerSecond(Integer messagesPerSecond){\r\n    this.messagesPerSecond = messagesPerSecond;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.lex.interactionkit.internal.audio.AudioRecorder.getConsumerStream",
	"Comment": "get reference to the audio stream where it could be read from.",
	"Method": "InputStream getConsumerStream(){\r\n    return null;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetUserEndpointsRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetUserEndpointsRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.GetMLModelResult.setLastUpdatedAt",
	"Comment": "the time of the most recent edit to the mlmodel. the time isexpressed in epoch time.",
	"Method": "void setLastUpdatedAt(java.util.Date lastUpdatedAt){\r\n    this.lastUpdatedAt = lastUpdatedAt;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetCampaignVersionsResult.withCampaignsResponse",
	"Comment": "list of available campaigns.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetCampaignVersionsResult withCampaignsResponse(CampaignsResponse campaignsResponse){\r\n    this.campaignsResponse = campaignsResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSSandboxChannelResponse.withHasCredential",
	"Comment": "not used. retained for backwards compatibility.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSSandboxChannelResponse withHasCredential(Boolean hasCredential){\r\n    this.hasCredential = hasCredential;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DescribeReceiptRuleSetResult.withRules",
	"Comment": "a list of the receipt rules that belong to the specified receipt ruleset.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DescribeReceiptRuleSetResult withRules(ReceiptRule rules,DescribeReceiptRuleSetResult withRules,java.util.Collection<ReceiptRule> rules){\r\n    setRules(rules);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.pinpoint.analytics.AnalyticsClient.clearCampaignAttributes",
	"Comment": "clears campaign attributesyou should not use this method as it will be called by the notificationmanager when the app is openedfrom a push notification.",
	"Method": "void clearCampaignAttributes(){\r\n    for (final String key : campaignAttributes.keySet()) {\r\n        this.removeGlobalAttribute(key);\r\n    }\r\n    campaignAttributes.clear();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.NumberValidateResponse.withCountry",
	"Comment": "the country or region where the phone number was originally registered.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "NumberValidateResponse withCountry(String country){\r\n    this.country = country;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DeleteReceiptRuleRequest.setRuleSetName",
	"Comment": "the name of the receipt rule set that contains the receipt rule todelete.",
	"Method": "void setRuleSetName(String ruleSetName){\r\n    this.ruleSetName = ruleSetName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Result.setContinuationToken",
	"Comment": "sets the optional continuation token. continuation token allows a list tobe continued from a specific point. continuationtoken is provided intruncated list results.",
	"Method": "void setContinuationToken(String continuationToken){\r\n    this.continuationToken = continuationToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetBucketAclRequest.getBucketName",
	"Comment": "returns the name of the bucket whose acl will be retrieved by thisrequest, when executed.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.Message.withReceiptHandle",
	"Comment": "an identifier associated with the act of receiving the message. a newreceipt handle is returned every time you receive a message. whendeleting a message, you provide the last received receipt handle todelete the message.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Message withReceiptHandle(String receiptHandle){\r\n    this.receiptHandle = receiptHandle;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetUserEndpointsRequest.withUserId",
	"Comment": "the unique id of the user.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetUserEndpointsRequest withUserId(String userId){\r\n    this.userId = userId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.AddressConfiguration.withBodyOverride",
	"Comment": "body override. if specified will override default body.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "AddressConfiguration withBodyOverride(String bodyOverride){\r\n    this.bodyOverride = bodyOverride;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Section.withEndTimestamp",
	"Comment": "sets the value of the endtimestamp property for this object.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Section withEndTimestamp(Long endTimestamp){\r\n    this.endTimestamp = endTimestamp;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CreateReceiptRuleRequest.setAfter",
	"Comment": "the name of an existing rule after which the new rule will be placed. ifthis parameter is null, the new rule will be inserted at the beginning ofthe rule list.",
	"Method": "void setAfter(String after){\r\n    this.after = after;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.AddPermissionRequest.getAWSAccountIds",
	"Comment": "the aws account number of the principal who will be given permission. the principal must have anaws account, but does not need to be signed up for amazon sqs. forinformation about locating the aws account identification, see your aws identifiers in the amazon sqs developer guide.",
	"Method": "java.util.List<String> getAWSAccountIds(){\r\n    return aWSAccountIds;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.EncryptionUtils.decryptObjectUsingInstruction",
	"Comment": "returns an updated object where the object content input stream containsthe decrypted contents.",
	"Method": "S3Object decryptObjectUsingInstruction(S3Object object,EncryptionInstruction instruction){\r\n    S3ObjectInputStream objectContent = object.getObjectContent();\r\n    InputStream decryptedInputStream = new RepeatableCipherInputStream(objectContent, instruction.getCipherFactory());\r\n    object.setObjectContent(new S3ObjectInputStream(decryptedInputStream, objectContent.getHttpRequest()));\r\n    return object;\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.GetMLModelResult.withLastUpdatedAt",
	"Comment": "the time of the most recent edit to the mlmodel. the time isexpressed in epoch time.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetMLModelResult withLastUpdatedAt(java.util.Date lastUpdatedAt){\r\n    this.lastUpdatedAt = lastUpdatedAt;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ReceiptRule.setEnabled",
	"Comment": "if true, the receipt rule is active. the default value isfalse.",
	"Method": "void setEnabled(Boolean enabled){\r\n    this.enabled = enabled;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.lambdainvoker.LambdaInvokerFactory.build",
	"Comment": "contexts a dynamic proxy object of the given class with a default jsondata binder.",
	"Method": "LambdaInvokerFactory build(T build,Class<T> interfaceClass,T build,Class<T> interfaceClass,LambdaDataBinder binder){\r\n    final Object proxy = Proxy.newProxyInstance(interfaceClass.getClassLoader(), new Class<?>[] { interfaceClass }, new LambdaInvocationHandler(lambda, binder, clientContext));\r\n    return interfaceClass.cast(proxy);\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.IdentityNotificationAttributes.isForwardingEnabled",
	"Comment": "describes whether amazon ses will forward bounce and complaintnotifications as email. true indicates that amazon ses willforward bounce and complaint notifications as email, whilefalse indicates that bounce and complaint notifications willbe published only to the specified bounce and complaint amazon snstopics.",
	"Method": "Boolean isForwardingEnabled(){\r\n    return forwardingEnabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteBucketAnalyticsConfigurationRequest.setBucketName",
	"Comment": "sets the name of the bucket from which an analytics configuration is deleted.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.demo.s3transferutility.Util.copyContentUriToFile",
	"Comment": "copies the data from the passed in uri, to a new file for use with thetransfer service",
	"Method": "File copyContentUriToFile(Context context,Uri uri){\r\n    InputStream is = context.getContentResolver().openInputStream(uri);\r\n    File copiedData = new File(context.getDir(\"SampleImagesDir\", Context.MODE_PRIVATE), UUID.randomUUID().toString());\r\n    copiedData.createNewFile();\r\n    FileOutputStream fos = new FileOutputStream(copiedData);\r\n    byte[] buf = new byte[2046];\r\n    int read = -1;\r\n    while ((read = is.read(buf)) != -1) {\r\n        fos.write(buf, 0, read);\r\n    }\r\n    fos.flush();\r\n    fos.close();\r\n    return copiedData;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateApplicationSettingsRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateApplicationSettingsRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.AmazonSQSClient.listDeadLetterSourceQueues",
	"Comment": "returns a list of your queues that have the redrivepolicy queue attributeconfigured with a dead letter queue.for more information about using dead letter queues, see using amazon sqs dead letter queues in the amazon sqs developerguide.",
	"Method": "ListDeadLetterSourceQueuesResult listDeadLetterSourceQueues(ListDeadLetterSourceQueuesRequest listDeadLetterSourceQueuesRequest){\r\n    ExecutionContext executionContext = createExecutionContext(listDeadLetterSourceQueuesRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<ListDeadLetterSourceQueuesRequest> request = null;\r\n    Response<ListDeadLetterSourceQueuesResult> response = null;\r\n    try {\r\n        request = new ListDeadLetterSourceQueuesRequestMarshaller().marshall(listDeadLetterSourceQueuesRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        response = invoke(request, new ListDeadLetterSourceQueuesResultStaxUnmarshaller(), executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SMSChannelRequest.withEnabled",
	"Comment": "if the channel is enabled for sending messages.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SMSChannelRequest withEnabled(Boolean enabled){\r\n    this.enabled = enabled;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.EncryptedGetObjectRequest.setExtraMaterialDescription",
	"Comment": "sets the supplemental materials description for the encryption materialsto be used with the current request.",
	"Method": "void setExtraMaterialDescription(ExtraMaterialsDescription supplemental){\r\n    this.supplemental = supplemental == null ? NONE : supplemental;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClient.updateConfigurationSetReputationMetricsEnabled",
	"Comment": "enables or disables the publishing of reputation metrics for emails sentusing a specific configuration set in a given aws region. reputationmetrics include bounce and complaint rates. these metrics are publishedto amazon cloudwatch. by using cloudwatch, you can create alarms whenbounce or complaint rates exceed certain thresholds.you can execute this operation no more than once per second.",
	"Method": "void updateConfigurationSetReputationMetricsEnabled(UpdateConfigurationSetReputationMetricsEnabledRequest updateConfigurationSetReputationMetricsEnabledRequest){\r\n    ExecutionContext executionContext = createExecutionContext(updateConfigurationSetReputationMetricsEnabledRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<UpdateConfigurationSetReputationMetricsEnabledRequest> request = null;\r\n    Response<Void> response = null;\r\n    try {\r\n        request = new UpdateConfigurationSetReputationMetricsEnabledRequestMarshaller().marshall(updateConfigurationSetReputationMetricsEnabledRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        invoke(request, null, executionContext);\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.NumberValidateResponse.getTimezone",
	"Comment": "the time zone for the location where the phone number was originallyregistered.",
	"Method": "String getTimezone(){\r\n    return timezone;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.InitiateMultipartUploadRequest.getBucketName",
	"Comment": "returns the name of the bucket in which to create the new multipartupload, and hence, the eventual object created from the multipart upload.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.NumberValidateResponse.getCarrier",
	"Comment": "the carrier or servive provider that the phone number is currentlyregistered with.",
	"Method": "String getCarrier(){\r\n    return carrier;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.DescribeStreamProcessorResult.withOutput",
	"Comment": "kinesis data stream to which amazon rekognition video puts the analysisresults.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DescribeStreamProcessorResult withOutput(StreamProcessorOutput output){\r\n    this.output = output;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.WriteCampaignRequest.setHoldoutPercent",
	"Comment": "the allocated percentage of end users who will not receive messages fromthis campaign.",
	"Method": "void setHoldoutPercent(Integer holdoutPercent){\r\n    this.holdoutPercent = holdoutPercent;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.ListDomainsRequest.withMaxNumberOfDomains",
	"Comment": "the maximum number of domain names you want returned. the range is 1to 100. the default setting is 100.returns a reference to this object so that method calls can be chained together.",
	"Method": "ListDomainsRequest withMaxNumberOfDomains(Integer maxNumberOfDomains){\r\n    this.maxNumberOfDomains = maxNumberOfDomains;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ListIdentitiesRequest.withNextToken",
	"Comment": "the token to use for pagination.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListIdentitiesRequest withNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateThingRequest.isRemoveThingType",
	"Comment": "remove a thing type association. if true, the association isremoved.",
	"Method": "Boolean isRemoveThingType(){\r\n    return removeThingType;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.EventDestination.getMatchingEventTypes",
	"Comment": "the type of email sending events to publish to the event destination.",
	"Method": "java.util.List<String> getMatchingEventTypes(){\r\n    return matchingEventTypes;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.WriteCampaignRequest.getHoldoutPercent",
	"Comment": "the allocated percentage of end users who will not receive messages fromthis campaign.",
	"Method": "Integer getHoldoutPercent(){\r\n    return holdoutPercent;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.EncryptionUtils.retrieveOriginalMaterials",
	"Comment": "retrieve the original materials corresponding to the specified materialsdescription. returns null if unable to retrieve the original materials.",
	"Method": "EncryptionMaterials retrieveOriginalMaterials(Map<String, String> materialsDescription,EncryptionMaterialsAccessor accessor){\r\n    if (accessor == null)\r\n        return null;\r\n    return accessor.getEncryptionMaterials(materialsDescription);\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.ListDomainsRequest.getMaxNumberOfDomains",
	"Comment": "the maximum number of domain names you want returned. the range is 1to 100. the default setting is 100.",
	"Method": "Integer getMaxNumberOfDomains(){\r\n    return maxNumberOfDomains;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.lex.interactionkit.internal.audio.AudioRecorder.startRecording",
	"Comment": "method to setup, start the recorder, and read data.when recorder is stopped by the user, clean up resources.",
	"Method": "void startRecording(){\r\n    startAudioRecorder();\r\n    final short[] buffer = new short[mNumSamplesPerRead];\r\n    int numSamplesRead;\r\n    final AudioSourceListener listener = getAudioSourceListener();\r\n    final AudioEncoder pcmEncoder = new L16PcmEncoder();\r\n    try {\r\n        Log.v(TAG, \"Starting record loop\");\r\n        while (isInValidStateToContinueRecording()) {\r\n            if (mRecord == null) {\r\n                Log.e(TAG, \"Recorder is null.\");\r\n                throw new AudioSourceException(\"Recorder null\");\r\n            }\r\n            synchronized (mRecord) {\r\n                numSamplesRead = mRecord.read(buffer, 0, mNumSamplesPerRead);\r\n            }\r\n            final int invalidOperation = AudioRecord.ERROR_INVALID_OPERATION;\r\n            if (invalidOperation != numSamplesRead) {\r\n                setPostRecordingFields();\r\n                if (numSamplesRead > 0) {\r\n                    final byte[] callbackBuffer = pcmEncoder.encode(buffer, numSamplesRead);\r\n                    listener.onBufferReceived(callbackBuffer);\r\n                    updateSumSamplesForRMSCalculations(numSamplesRead, buffer);\r\n                }\r\n                postAudioRecordingProcessing(numSamplesRead, buffer, listener);\r\n            } else {\r\n                Log.v(TAG, \"AudioRecord - Invalid Operation\");\r\n                throw new AudioSourceException(\"AudioRecord - Invalid Operation\");\r\n            }\r\n        }\r\n        Log.v(TAG, \"Finished record loop\");\r\n    } finally {\r\n        cleanUpAfterRecording();\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.Attribute.withValue",
	"Comment": "the value of the attribute.returns a reference to this object so that method calls can be chained together.",
	"Method": "Attribute withValue(String value){\r\n    this.value = value;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.lexrts.model.ResponseCard.withVersion",
	"Comment": "the version of the response card format.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ResponseCard withVersion(String version){\r\n    this.version = version;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.lex.interactionkit.InteractionClient.setAudioPlaybackListener",
	"Comment": "assign a audio playback listener to this interaction client. this will be invoked duringaudio playback events only when audio playback is enabled.",
	"Method": "void setAudioPlaybackListener(AudioPlaybackListener audioPlaybackListener){\r\n    this.audioPlaybackListener = audioPlaybackListener;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.BaiduMessage.withImageIconUrl",
	"Comment": "the url that points to an image used as the large icon to thenotification content view.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "BaiduMessage withImageIconUrl(String imageIconUrl){\r\n    this.imageIconUrl = imageIconUrl;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ListCustomVerificationEmailTemplatesResult.getCustomVerificationEmailTemplates",
	"Comment": "a list of the custom verification email templates that exist in youraccount.",
	"Method": "java.util.List<CustomVerificationEmailTemplate> getCustomVerificationEmailTemplates(){\r\n    return customVerificationEmailTemplates;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketPolicyRequest.getBucketName",
	"Comment": "returns the name of the amazon s3 bucket whose policy is being set.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.buffered.QueueBufferConfig.getMaxBatchSize",
	"Comment": "specifies the maximum number of entries the bufferinc client will put ina single batch request.",
	"Method": "int getMaxBatchSize(){\r\n    return maxBatchSize;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DirectMessageConfiguration.withADMMessage",
	"Comment": "the message to adm channels. overrides the default push notificationmessage.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DirectMessageConfiguration withADMMessage(ADMMessage aDMMessage){\r\n    this.aDMMessage = aDMMessage;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ListTemplatesRequest.setNextToken",
	"Comment": "a token returned from a previous call to listtemplates toindicate the position in the list of email templates.",
	"Method": "void setNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.GetTranscriptionJobResult.getTranscriptionJob",
	"Comment": "an object that contains the results of the transcription job.",
	"Method": "TranscriptionJob getTranscriptionJob(){\r\n    return transcriptionJob;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.DescribeCollectionResult.withFaceModelVersion",
	"Comment": "sets the value of the facemodelversion property for this object.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DescribeCollectionResult withFaceModelVersion(String faceModelVersion){\r\n    this.faceModelVersion = faceModelVersion;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.serverless.proxy.model.ContainerConfig.getCustomDomainNames",
	"Comment": "returns the list of custom domain names enabled for the application",
	"Method": "List<String> getCustomDomainNames(){\r\n    return customDomainNames;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.S3CryptoModuleBase.updateInstructionPutRequest",
	"Comment": "updates put request to store the specified instruction object in s3.",
	"Method": "PutObjectRequest updateInstructionPutRequest(PutObjectRequest req,ContentCryptoMaterial cekMaterial){\r\n    final byte[] bytes = cekMaterial.toJsonString(cryptoConfig.getCryptoMode()).getBytes(UTF8);\r\n    ObjectMetadata metadata = req.getMetadata();\r\n    if (metadata == null) {\r\n        metadata = new ObjectMetadata();\r\n        req.setMetadata(metadata);\r\n    }\r\n    metadata.setContentLength(bytes.length);\r\n    metadata.addUserMetadata(Headers.CRYPTO_INSTRUCTION_FILE, \"\");\r\n    req.setMetadata(metadata);\r\n    req.setInputStream(new ByteArrayInputStream(bytes));\r\n    return req;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.SearchedLogStream.setSearchedCompletely",
	"Comment": "indicates whether all the events in this log stream were searched.",
	"Method": "void setSearchedCompletely(Boolean searchedCompletely){\r\n    this.searchedCompletely = searchedCompletely;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSSandboxChannelResponse.withApplicationId",
	"Comment": "the id of the application to which the channel applies.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSSandboxChannelResponse withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.pinpoint.targeting.endpointProfile.EndpointProfile.getAttribute",
	"Comment": "returns the array of values of the custom attribute with the specified name.",
	"Method": "List<String> getAttribute(String name){\r\n    if (name == null) {\r\n        return null;\r\n    }\r\n    return attributes.get(name);\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SetReceiptRulePositionRequest.withRuleSetName",
	"Comment": "the name of the receipt rule set that contains the receipt rule toreposition.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SetReceiptRulePositionRequest withRuleSetName(String ruleSetName){\r\n    this.ruleSetName = ruleSetName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.BaiduMessage.withSilentPush",
	"Comment": "indicates if the message should display on the users device. silentpushes can be used for remote configuration and phone home use cases.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "BaiduMessage withSilentPush(Boolean silentPush){\r\n    this.silentPush = silentPush;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.CreateStreamProcessorRequest.withInput",
	"Comment": "kinesis video stream stream that provides the source streaming video. ifyou are using the aws cli, the parameter name isstreamprocessorinput.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreateStreamProcessorRequest withInput(StreamProcessorInput input){\r\n    this.input = input;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectRequest.setUnmodifiedSinceConstraint",
	"Comment": "sets the optional unmodified constraint that restricts this requestto executing only if the object has not been modified afterthe specified date.note that amazon s3 will ignore any dates occurring in the future.",
	"Method": "void setUnmodifiedSinceConstraint(Date date){\r\n    this.unmodifiedSinceConstraint = date;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteSegmentResult.withSegmentResponse",
	"Comment": "segment definition.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteSegmentResult withSegmentResponse(SegmentResponse segmentResponse){\r\n    this.segmentResponse = segmentResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SetReceiptRulePositionRequest.withAfter",
	"Comment": "the name of the receipt rule after which to place the specified receiptrule.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SetReceiptRulePositionRequest withAfter(String after){\r\n    this.after = after;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ListAliasesResult.isTruncated",
	"Comment": "a flag that indicates whether there are more items in the list. when thisvalue is true, the list in this response is truncated. to get more items,pass the value of the nextmarker element in this response tothe marker parameter in a subsequent request.",
	"Method": "Boolean isTruncated(){\r\n    return truncated;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobResponse.setFailedPieces",
	"Comment": "the number of pieces that have failed to import as of the time of therequest.",
	"Method": "void setFailedPieces(Integer failedPieces){\r\n    this.failedPieces = failedPieces;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.lex.interactionkit.continuations.LexServiceContinuation.continueWithTextInForAudioOut",
	"Comment": "use this method to respond with text and expect service response with audio.",
	"Method": "void continueWithTextInForAudioOut(String text){\r\n    interactionClient.textInForAudioOut(text, sessionAttributes);\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceDetail.withGender",
	"Comment": "gender of the face and the confidence level in the determination.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "FaceDetail withGender(Gender gender){\r\n    this.gender = gender;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListSubscriptionsResult.withNextToken",
	"Comment": "token to pass along to the next listsubscriptions request.this element is returned if there are more subscriptions to retrieve.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListSubscriptionsResult withNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointSendConfiguration.setRawContent",
	"Comment": "the raw json formatted string to be used as the payload. this valueoverrides the message.",
	"Method": "void setRawContent(String rawContent){\r\n    this.rawContent = rawContent;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.ReplaceableItem.withAttributes",
	"Comment": "the list of attributes for a replaceable item.returns a reference to this object so that method calls can be chained together.",
	"Method": "ReplaceableItem withAttributes(ReplaceableAttribute attributes,ReplaceableItem withAttributes,java.util.Collection<ReplaceableAttribute> attributes){\r\n    if (attributes == null) {\r\n        this.attributes = null;\r\n    } else {\r\n        com.amazonaws.internal.ListWithAutoConstructFlag<ReplaceableAttribute> attributesCopy = new com.amazonaws.internal.ListWithAutoConstructFlag<ReplaceableAttribute>(attributes.size());\r\n        attributesCopy.addAll(attributes);\r\n        this.attributes = attributesCopy;\r\n    }\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateBaiduChannelRequest.withBaiduChannelRequest",
	"Comment": "baidu cloud push credentialsreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateBaiduChannelRequest withBaiduChannelRequest(BaiduChannelRequest baiduChannelRequest){\r\n    this.baiduChannelRequest = baiduChannelRequest;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.AddPermissionRequest.getTopicArn",
	"Comment": "the arn of the topic whose access control policy you wish to modify.",
	"Method": "String getTopicArn(){\r\n    return topicArn;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSAsyncClient.getPlatformApplicationAttributesAsync",
	"Comment": "retrieves the attributes of the platform application object for thesupported push notification services, such as apns and gcm. for moreinformation, see usingamazon sns mobile push notifications.",
	"Method": "Future<GetPlatformApplicationAttributesResult> getPlatformApplicationAttributesAsync(GetPlatformApplicationAttributesRequest getPlatformApplicationAttributesRequest,Future<GetPlatformApplicationAttributesResult> getPlatformApplicationAttributesAsync,GetPlatformApplicationAttributesRequest getPlatformApplicationAttributesRequest,AsyncHandler<GetPlatformApplicationAttributesRequest, GetPlatformApplicationAttributesResult> asyncHandler){\r\n    return executorService.submit(new Callable<GetPlatformApplicationAttributesResult>() {\r\n        public GetPlatformApplicationAttributesResult call() throws Exception {\r\n            GetPlatformApplicationAttributesResult result = null;\r\n            try {\r\n                result = getPlatformApplicationAttributes(getPlatformApplicationAttributesRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(getPlatformApplicationAttributesRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSAsyncClient.getPlatformApplicationAttributesAsync",
	"Comment": "retrieves the attributes of the platform application object for thesupported push notification services, such as apns and gcm. for moreinformation, see usingamazon sns mobile push notifications.",
	"Method": "Future<GetPlatformApplicationAttributesResult> getPlatformApplicationAttributesAsync(GetPlatformApplicationAttributesRequest getPlatformApplicationAttributesRequest,Future<GetPlatformApplicationAttributesResult> getPlatformApplicationAttributesAsync,GetPlatformApplicationAttributesRequest getPlatformApplicationAttributesRequest,AsyncHandler<GetPlatformApplicationAttributesRequest, GetPlatformApplicationAttributesResult> asyncHandler){\r\n    GetPlatformApplicationAttributesResult result = null;\r\n    try {\r\n        result = getPlatformApplicationAttributes(getPlatformApplicationAttributesRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(getPlatformApplicationAttributesRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetSegmentImportJobsRequest.withSegmentId",
	"Comment": "the unique id of the segment.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetSegmentImportJobsRequest withSegmentId(String segmentId){\r\n    this.segmentId = segmentId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.UpdateCustomVerificationEmailTemplateRequest.withTemplateContent",
	"Comment": "the content of the custom verification email. the total size of the emailmust be less than 10 mb. the message body may contain html, with somelimitations. for more information, see custom verification email frequently asked questions in theamazon ses developer guide.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateCustomVerificationEmailTemplateRequest withTemplateContent(String templateContent){\r\n    this.templateContent = templateContent;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.IdentityNotificationAttributes.isHeadersInComplaintNotificationsEnabled",
	"Comment": "describes whether amazon ses includes the original email headers inamazon sns notifications of type complaint. a value oftrue specifies that amazon ses will include headers incomplaint notifications, and a value of false specifies thatamazon ses will not include headers in complaint notifications.",
	"Method": "Boolean isHeadersInComplaintNotificationsEnabled(){\r\n    return headersInComplaintNotificationsEnabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartFaceSearchRequest.setNotificationChannel",
	"Comment": "the arn of the amazon sns topic to which you want amazon rekognitionvideo to publish the completion status of the search.",
	"Method": "void setNotificationChannel(NotificationChannel notificationChannel){\r\n    this.notificationChannel = notificationChannel;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentDimensions.withBehavior",
	"Comment": "the segment behaviors attributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SegmentDimensions withBehavior(SegmentBehaviors behavior){\r\n    this.behavior = behavior;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Eyeglasses.withValue",
	"Comment": "boolean value that indicates whether the face is wearing eye glasses ornot.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Eyeglasses withValue(Boolean value){\r\n    this.value = value;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectRequest.setModifiedSinceConstraint",
	"Comment": "sets the optional modified constraint that restricts this requestto executing only if the object has been modified after thespecified date.note that amazon s3 will ignore any dates occurring in the future.",
	"Method": "void setModifiedSinceConstraint(Date date){\r\n    this.modifiedSinceConstraint = date;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.PersonMatch.getTimestamp",
	"Comment": "the time, in milliseconds from the beginning of the video, that theperson was matched in the video.",
	"Method": "Long getTimestamp(){\r\n    return timestamp;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetBaiduChannelResult.withBaiduChannelResponse",
	"Comment": "baidu cloud messaging channel definitionreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetBaiduChannelResult withBaiduChannelResponse(BaiduChannelResponse baiduChannelResponse){\r\n    this.baiduChannelResponse = baiduChannelResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.setLastPart",
	"Comment": "marks this part as the last part being uploaded in a multipart upload.",
	"Method": "void setLastPart(boolean isLastPart){\r\n    this.isLastPart = isLastPart;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSClient.listEndpointsByPlatformApplication",
	"Comment": "lists the endpoints and endpoint attributes for devices in a supportedpush notification service, such as gcm and apns. the results forlistendpointsbyplatformapplication are paginated and returna limited list of endpoints, up to 100. if additional records areavailable after the first page results, then a nexttoken string will bereturned. to receive the next page, you calllistendpointsbyplatformapplication again using the nexttokenstring received from the previous call. when there are no more records toreturn, nexttoken will be null. for more information, see usingamazon sns mobile push notifications.",
	"Method": "ListEndpointsByPlatformApplicationResult listEndpointsByPlatformApplication(ListEndpointsByPlatformApplicationRequest listEndpointsByPlatformApplicationRequest){\r\n    ExecutionContext executionContext = createExecutionContext(listEndpointsByPlatformApplicationRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<ListEndpointsByPlatformApplicationRequest> request = null;\r\n    Response<ListEndpointsByPlatformApplicationResult> response = null;\r\n    try {\r\n        request = new ListEndpointsByPlatformApplicationRequestMarshaller().marshall(listEndpointsByPlatformApplicationRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        response = invoke(request, new ListEndpointsByPlatformApplicationResultStaxUnmarshaller(), executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.kinesis.kinesisrecorder.AbstractKinesisRecorder.getKinesisRecorderConfig",
	"Comment": "returns the kinesisrecorderconfig this kinesis recorder is using. this iseither the config passed into the constructor or the default one if onewas not specified.",
	"Method": "KinesisRecorderConfig getKinesisRecorderConfig(){\r\n    return config;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateSegmentRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateSegmentRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListMultipartUploadsRequest.getEncodingType",
	"Comment": "gets the optional encodingtype parameter indicating theencoding method to be applied on the response.",
	"Method": "String getEncodingType(){\r\n    return encodingType;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.VersionListing.getVersionIdMarker",
	"Comment": "gets the value of the version id marker parameter used to request thisversion listing. returns null if no version id marker wasotherwise specified.",
	"Method": "String getVersionIdMarker(){\r\n    return versionIdMarker;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.lex.interactionkit.config.InteractionConfig.WithEnableAudioPlayback",
	"Comment": "set this to true if the audio response from amazon lex service should beplayed back by the sdk.",
	"Method": "InteractionConfig WithEnableAudioPlayback(boolean enableAudioPlayback){\r\n    this.enableAudioPlayback = enableAudioPlayback;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.SynthesisTask.withLexiconNames",
	"Comment": "list of one or more pronunciation lexicon names you want the service toapply during synthesis. lexicons are applied only if the language of thelexicon is the same as the language of the voice.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SynthesisTask withLexiconNames(String lexiconNames,SynthesisTask withLexiconNames,java.util.Collection<String> lexiconNames){\r\n    setLexiconNames(lexiconNames);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.InitiateMultipartUploadRequest.getAccessControlList",
	"Comment": "returns the optional access control list for the new upload. ifspecified, cannedacl will be ignored.",
	"Method": "AccessControlList getAccessControlList(){\r\n    return accessControlList;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ListIdentityPoliciesResult.getPolicyNames",
	"Comment": "a list of names of policies that apply to the specified identity.",
	"Method": "java.util.List<String> getPolicyNames(){\r\n    return policyNames;\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.StartTranscriptionJobRequest.getSettings",
	"Comment": "a settings object that provides optional settings for atranscription job.",
	"Method": "Settings getSettings(){\r\n    return settings;\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.TranscriptionJob.withMedia",
	"Comment": "an object that describes the input media for the transcription job.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "TranscriptionJob withMedia(Media media){\r\n    this.media = media;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ItemResponse.withEndpointItemResponse",
	"Comment": "endpoint item response after endpoint registrationreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ItemResponse withEndpointItemResponse(EndpointItemResponse endpointItemResponse){\r\n    this.endpointItemResponse = endpointItemResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.demo.s3transferutility.UploadActivity.initData",
	"Comment": "gets all relevant transfers from the transfer service for populating theui",
	"Method": "void initData(){\r\n    transferRecordMaps.clear();\r\n    observers = transferUtility.getTransfersWithType(TransferType.UPLOAD);\r\n    TransferListener listener = new UploadListener();\r\n    for (TransferObserver observer : observers) {\r\n        observer.refresh();\r\n        HashMap<String, Object> map = new HashMap<String, Object>();\r\n        util.fillMap(map, observer, false);\r\n        transferRecordMaps.add(map);\r\n        if (TransferState.WAITING.equals(observer.getState()) || TransferState.WAITING_FOR_NETWORK.equals(observer.getState()) || TransferState.IN_PROGRESS.equals(observer.getState())) {\r\n            observer.setTransferListener(listener);\r\n        }\r\n    }\r\n    simpleAdapter.notifyDataSetChanged();\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CreateCustomVerificationEmailTemplateRequest.withSuccessRedirectionURL",
	"Comment": "the url that the recipient of the verification email is sent to if his orher address is successfully verified.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreateCustomVerificationEmailTemplateRequest withSuccessRedirectionURL(String successRedirectionURL){\r\n    this.successRedirectionURL = successRedirectionURL;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.NumberValidateResponse.withOriginalPhoneNumber",
	"Comment": "the phone number that you included in the request body.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "NumberValidateResponse withOriginalPhoneNumber(String originalPhoneNumber){\r\n    this.originalPhoneNumber = originalPhoneNumber;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.BoundingBox.getLeft",
	"Comment": "left coordinate of the bounding box as a ratio of overall image width.",
	"Method": "Float getLeft(){\r\n    return left;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CreateImportJobRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreateImportJobRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Celebrity.withUrls",
	"Comment": "an array of urls pointing to additional information about the celebrity.if there is no additional information about the celebrity, this list isempty.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Celebrity withUrls(String urls,Celebrity withUrls,java.util.Collection<String> urls){\r\n    setUrls(urls);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignResponse.isIsPaused",
	"Comment": "indicates whether the campaign is paused. a paused campaign does not sendmessages unless you resume it by setting ispaused to false.",
	"Method": "Boolean isIsPaused(){\r\n    return isPaused;\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.GetMLModelResult.withLogUri",
	"Comment": "a link to the file that contains logs of the createmlmodeloperation.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetMLModelResult withLogUri(String logUri){\r\n    this.logUri = logUri;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateSmsChannelRequest.withSMSChannelRequest",
	"Comment": "sms channel requestreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateSmsChannelRequest withSMSChannelRequest(SMSChannelRequest sMSChannelRequest){\r\n    this.sMSChannelRequest = sMSChannelRequest;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.Template.getTemplateName",
	"Comment": "the name of the template. you will refer to this name when you send emailusing the sendtemplatedemail orsendbulktemplatedemail operations.",
	"Method": "String getTemplateName(){\r\n    return templateName;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transferutility.TransferDBUtil.updateTransferRecord",
	"Comment": "writes transfer status including transfer state, current transferredbytes and total bytes into database.",
	"Method": "int updateTransferRecord(TransferRecord transfer){\r\n    final ContentValues cv = new ContentValues();\r\n    cv.put(TransferTable.COLUMN_ID, transfer.id);\r\n    cv.put(TransferTable.COLUMN_STATE, transfer.state.toString());\r\n    cv.put(TransferTable.COLUMN_BYTES_TOTAL, transfer.bytesTotal);\r\n    cv.put(TransferTable.COLUMN_BYTES_CURRENT, transfer.bytesCurrent);\r\n    return transferDBBase.update(getRecordUri(transfer.id), cv, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.internal.UploadImpl.pause",
	"Comment": "tries to pause and return the information required to resume the uploadoperation.",
	"Method": "PersistableUpload pause(PauseResult<PersistableUpload> pause,boolean forceCancelTransfers){\r\n    UploadMonitor uploadMonitor = (UploadMonitor) monitor;\r\n    return uploadMonitor.pause(forceCancelTransfers);\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.BouncedRecipientInfo.withRecipient",
	"Comment": "the email address of the recipient of the bounced email.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "BouncedRecipientInfo withRecipient(String recipient){\r\n    this.recipient = recipient;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SendUsersMessageResponse.setResult",
	"Comment": "an object that shows the endpoints that were messaged for each user. theobject provides a list of user ids. for each user id, it provides theendpoint ids that were messaged. for each endpoint id, it provides anendpointmessageresult object.",
	"Method": "void setResult(java.util.Map<String, java.util.Map<String, EndpointMessageResult>> result){\r\n    this.result = result;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.IdentityNotificationAttributes.withHeadersInComplaintNotificationsEnabled",
	"Comment": "describes whether amazon ses includes the original email headers inamazon sns notifications of type complaint. a value oftrue specifies that amazon ses will include headers incomplaint notifications, and a value of false specifies thatamazon ses will not include headers in complaint notifications.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "IdentityNotificationAttributes withHeadersInComplaintNotificationsEnabled(Boolean headersInComplaintNotificationsEnabled){\r\n    this.headersInComplaintNotificationsEnabled = headersInComplaintNotificationsEnabled;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Result.setEncodingType",
	"Comment": "for internal use only. sets the encoding type used by amazon s3 to encodeobject key names in the xml response.",
	"Method": "void setEncodingType(String encodingType){\r\n    this.encodingType = encodingType;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.PersonDetail.withBoundingBox",
	"Comment": "bounding box around the detected person.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PersonDetail withBoundingBox(BoundingBox boundingBox){\r\n    this.boundingBox = boundingBox;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketReplicationConfigurationRequest.setBucketName",
	"Comment": "sets the name of amazon s3 bucket for replication configuration.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.lex.interactionkit.ui.InteractiveVoiceView.animateNone",
	"Comment": "stop current, if any, animation and change the button state to normal state.",
	"Method": "void animateNone(){\r\n    reset();\r\n    state = NORMAL;\r\n    invalidate();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetPersonTrackingResult.withWarnings",
	"Comment": "sets the value of the warnings property for this object.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetPersonTrackingResult withWarnings(Warning warnings,GetPersonTrackingResult withWarnings,java.util.Collection<Warning> warnings){\r\n    setWarnings(warnings);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.AmazonSQSClient.listQueues",
	"Comment": "returns a list of your queues. the maximum number of queues that can bereturned is 1000. if you specify a value for the optionalqueuenameprefix parameter, only queues with a name beginningwith the specified value are returned.",
	"Method": "ListQueuesResult listQueues(ListQueuesRequest listQueuesRequest,ListQueuesResult listQueues,ListQueuesResult listQueues,String queueNamePrefix){\r\n    ListQueuesRequest listQueuesRequest = new ListQueuesRequest();\r\n    listQueuesRequest.setQueueNamePrefix(queueNamePrefix);\r\n    return listQueues(listQueuesRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetGcmChannelResult.withGCMChannelResponse",
	"Comment": "google cloud messaging channel definitionreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetGcmChannelResult withGCMChannelResponse(GCMChannelResponse gCMChannelResponse){\r\n    this.gCMChannelResponse = gCMChannelResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetSegmentVersionResult.withSegmentResponse",
	"Comment": "segment definition.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetSegmentVersionResult withSegmentResponse(SegmentResponse segmentResponse){\r\n    this.segmentResponse = segmentResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.TransferManager.uploadFileList",
	"Comment": "uploads all specified files to the bucket named, constructing relativekeys depending on the commonparentdirectory given.s3 will overwrite any existing objects that happen to have the same key,just as when uploading individual files, so use with caution.",
	"Method": "MultipleFileUpload uploadFileList(String bucketName,String virtualDirectoryKeyPrefix,File directory,List<File> files,MultipleFileUpload uploadFileList,String bucketName,String virtualDirectoryKeyPrefix,File directory,List<File> files,ObjectMetadataProvider metadataProvider){\r\n    if (directory == null || !directory.exists() || !directory.isDirectory()) {\r\n        throw new IllegalArgumentException(\"Must provide a common base directory for uploaded files\");\r\n    }\r\n    if (virtualDirectoryKeyPrefix == null || virtualDirectoryKeyPrefix.length() == 0) {\r\n        virtualDirectoryKeyPrefix = \"\";\r\n    } else if (!virtualDirectoryKeyPrefix.endsWith(\"/\")) {\r\n        virtualDirectoryKeyPrefix = virtualDirectoryKeyPrefix + \"/\";\r\n    }\r\n    final ProgressListenerChain additionalListeners = new ProgressListenerChain();\r\n    final TransferProgress progress = new TransferProgress();\r\n    final ProgressListener listener = new MultipleFileTransferProgressUpdatingListener(progress, additionalListeners);\r\n    final List<UploadImpl> uploads = new LinkedList<UploadImpl>();\r\n    final MultipleFileUploadImpl multipleFileUpload = new MultipleFileUploadImpl(\"Uploading etc\", progress, additionalListeners, virtualDirectoryKeyPrefix, bucketName, uploads);\r\n    multipleFileUpload.setMonitor(new MultipleFileTransferMonitor(multipleFileUpload, uploads));\r\n    final CountDownLatch latch = new CountDownLatch(1);\r\n    final MultipleFileTransferStateChangeListener transferListener = new MultipleFileTransferStateChangeListener(latch, multipleFileUpload);\r\n    if (files == null || files.isEmpty()) {\r\n        multipleFileUpload.setState(TransferState.Completed);\r\n    } else {\r\n        int startingPosition = directory.getAbsolutePath().length();\r\n        if (!(directory.getAbsolutePath().endsWith(File.separator))) {\r\n            startingPosition++;\r\n        }\r\n        long totalSize = 0;\r\n        for (final File f : files) {\r\n            if (f.isFile()) {\r\n                totalSize += f.length();\r\n                final String key = f.getAbsolutePath().substring(startingPosition).replaceAll(\"\\\\\\\\\", \"/\");\r\n                final ObjectMetadata metadata = new ObjectMetadata();\r\n                if (metadataProvider != null) {\r\n                    metadataProvider.provideObjectMetadata(f, metadata);\r\n                }\r\n                uploads.add((UploadImpl) doUpload((PutObjectRequest) new PutObjectRequest(bucketName, virtualDirectoryKeyPrefix + key, f).withMetadata(metadata).withGeneralProgressListener(listener), transferListener, null, null));\r\n            }\r\n        }\r\n        progress.setTotalBytesToTransfer(totalSize);\r\n    }\r\n    latch.countDown();\r\n    return multipleFileUpload;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetAppsRequest.getToken",
	"Comment": "the nexttoken string returned on a previous page that you use to get thenext page of results in a paginated response.",
	"Method": "String getToken(){\r\n    return token;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.CreatePlatformEndpointResult.withEndpointArn",
	"Comment": "endpointarn returned from createendpoint action.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreatePlatformEndpointResult withEndpointArn(String endpointArn){\r\n    this.endpointArn = endpointArn;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CompleteMultipartUploadRequest.getPartETags",
	"Comment": "returns the list of part numbers and etags that identify the individualparts of the multipart upload to complete.",
	"Method": "List<PartETag> getPartETags(){\r\n    return partETags;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointDemographic.getMake",
	"Comment": "the manufacturer of the endpoint device, such as apple or samsung.",
	"Method": "String getMake(){\r\n    return make;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SetIdentityDkimEnabledRequest.withIdentity",
	"Comment": "the identity for which dkim signing should be enabled or disabled.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SetIdentityDkimEnabledRequest withIdentity(String identity){\r\n    this.identity = identity;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.Schedule.getStartTime",
	"Comment": "the scheduled time that the campaign begins in iso 8601 format.",
	"Method": "String getStartTime(){\r\n    return startTime;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.VersionListing.setVersionIdMarker",
	"Comment": "for internal use only. sets the version id marker parameter originallyused to request this version listing.",
	"Method": "void setVersionIdMarker(String versionIdMarker){\r\n    this.versionIdMarker = versionIdMarker;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentResponse.withApplicationId",
	"Comment": "the id of the application that the segment applies to.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SegmentResponse withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.SelectResult.getNextToken",
	"Comment": "an opaque token indicating that more items thanmaxnumberofitems were matched, the response size exceeded1 megabyte, or the execution time exceeded 5 seconds.",
	"Method": "String getNextToken(){\r\n    return nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.mobileanalytics.model.Session.withDuration",
	"Comment": "the duration of the session.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Session withDuration(Long duration){\r\n    this.duration = duration;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartETag.withPartNumber",
	"Comment": "sets the part number of the associated part, and returns this updatedpartetag object so that additional method calls can be chained together.",
	"Method": "PartETag withPartNumber(int partNumber){\r\n    this.partNumber = partNumber;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ReEncryptRequest.withSourceEncryptionContext",
	"Comment": "encryption context used to encrypt and decrypt the data specified in theciphertextblob parameter.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ReEncryptRequest withSourceEncryptionContext(java.util.Map<String, String> sourceEncryptionContext){\r\n    this.sourceEncryptionContext = sourceEncryptionContext;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.mobileanalytics.model.Event.clearattributesEntries",
	"Comment": "removes all the entries added into attributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Event clearattributesEntries(){\r\n    this.attributes = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.withRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket. it returns thisupdated uploadpartrequest object so that additional method calls can bechained together.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "UploadPartRequest withRequesterPays(boolean isRequesterPays){\r\n    setRequesterPays(isRequesterPays);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.PutEventsRequest.getApplicationId",
	"Comment": "returns the value of the applicationid property for this object.",
	"Method": "String getApplicationId(){\r\n    return applicationId;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateAttributesRequest.withBlacklist",
	"Comment": "the glob wildcard for removing the attributes in the applicationreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateAttributesRequest withBlacklist(String blacklist,UpdateAttributesRequest withBlacklist,java.util.Collection<String> blacklist){\r\n    setBlacklist(blacklist);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateEventConfigurationsRequest.withEventConfigurations",
	"Comment": "the new event configuration values.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateEventConfigurationsRequest withEventConfigurations(java.util.Map<String, Configuration> eventConfigurations){\r\n    this.eventConfigurations = eventConfigurations;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.DescribeLogGroupsResult.withLogGroups",
	"Comment": "the log groups.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DescribeLogGroupsResult withLogGroups(LogGroup logGroups,DescribeLogGroupsResult withLogGroups,java.util.Collection<LogGroup> logGroups){\r\n    setLogGroups(logGroups);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.analytics.AnalyticsConfiguration.setFilter",
	"Comment": "sets the filter used to describe a set of objects for analysis.if no filter is provided, all objects will be considered in any analysis.",
	"Method": "void setFilter(AnalyticsFilter filter){\r\n    this.filter = filter;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.RestUtilsTest.testCanonicalStringIncludingAllParameters",
	"Comment": "tests that the canonicalized request includes all the query parameterswhen signallqueryparams is set to true.",
	"Method": "void testCanonicalStringIncludingAllParameters(){\r\n    final DefaultRequest<Void> request = new DefaultRequest<Void>(\"service\");\r\n    request.addParameter(\"x-amz-foo\", \"bar\");\r\n    request.addParameter(\"logging\", \"true\");\r\n    request.addParameter(\"fake\", \"fake\");\r\n    String canonicalString = RestUtils.makeS3CanonicalString(\"GET\", \"resource\", request, null, Arrays.asList(\"fake\"));\r\n    assertTrue(canonicalString.contains(\"x-amz-foo:bar\"));\r\n    assertTrue(canonicalString.contains(\"logging=true\"));\r\n    assertTrue(canonicalString.contains(\"fake=\"));\r\n    canonicalString = RestUtils.makeS3CanonicalString(\"GET\", \"resource\", request, null, Arrays.asList(\"non-existent-param\"));\r\n    assertTrue(canonicalString.contains(\"x-amz-foo:bar\"));\r\n    assertTrue(canonicalString.contains(\"logging=true\"));\r\n    assertFalse(canonicalString.contains(\"fake=\"));\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.CreateStreamProcessorRequest.setOutput",
	"Comment": "kinesis data stream stream to which amazon rekognition video puts theanalysis results. if you are using the aws cli, the parameter name isstreamprocessoroutput.",
	"Method": "void setOutput(StreamProcessorOutput output){\r\n    this.output = output;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.withSourceKey",
	"Comment": "sets the key in the source bucket under which the source object to becopied is stored and returns this object, enabling additional methodcalls to be chained together.",
	"Method": "CopyObjectRequest withSourceKey(String sourceKey){\r\n    setSourceKey(sourceKey);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentsResponse.withItem",
	"Comment": "the list of segments.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SegmentsResponse withItem(SegmentResponse item,SegmentsResponse withItem,java.util.Collection<SegmentResponse> item){\r\n    setItem(item);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketInventoryConfigurationsRequest.withContinuationToken",
	"Comment": "sets the optional continuation token.continuation token allows a list to becontinued from a specific point. continuationtoken is provided in truncated list results.",
	"Method": "ListBucketInventoryConfigurationsRequest withContinuationToken(String continuationToken){\r\n    setContinuationToken(continuationToken);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ListKeysResult.setTruncated",
	"Comment": "a flag that indicates whether there are more items in the list. when thisvalue is true, the list in this response is truncated. to get more items,pass the value of the nextmarker element in this response tothe marker parameter in a subsequent request.",
	"Method": "void setTruncated(Boolean truncated){\r\n    this.truncated = truncated;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.AmazonRekognitionClient.deleteStreamProcessor",
	"Comment": "deletes the stream processor identified by name. you assignthe value for name when you create the stream processor with. you might not be able to use the same name for a stream processor for afew seconds after calling deletestreamprocessor.",
	"Method": "DeleteStreamProcessorResult deleteStreamProcessor(DeleteStreamProcessorRequest deleteStreamProcessorRequest){\r\n    ExecutionContext executionContext = createExecutionContext(deleteStreamProcessorRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<DeleteStreamProcessorRequest> request = null;\r\n    Response<DeleteStreamProcessorResult> response = null;\r\n    try {\r\n        awsRequestMetrics.startEvent(Field.RequestMarshallTime);\r\n        try {\r\n            request = new DeleteStreamProcessorRequestMarshaller().marshall(deleteStreamProcessorRequest);\r\n            request.setAWSRequestMetrics(awsRequestMetrics);\r\n        } finally {\r\n            awsRequestMetrics.endEvent(Field.RequestMarshallTime);\r\n        }\r\n        Unmarshaller<DeleteStreamProcessorResult, JsonUnmarshallerContext> unmarshaller = new DeleteStreamProcessorResultJsonUnmarshaller();\r\n        JsonResponseHandler<DeleteStreamProcessorResult> responseHandler = new JsonResponseHandler<DeleteStreamProcessorResult>(unmarshaller);\r\n        response = invoke(request, responseHandler, executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideoarchivedmedia.model.HLSTimestampRange.getStartTimestamp",
	"Comment": "the start of the time stamp range for the requested media.if the hlstimestamprange value is specified, thestarttimestamp value is required.this value is inclusive. fragments that start before thestartingtimestamp and continue past it are included in thesession.",
	"Method": "java.util.Date getStartTimestamp(){\r\n    return startTimestamp;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ActivityResponse.withSuccessfulEndpointCount",
	"Comment": "the total number of endpoints to which the campaign successfullydelivered messages.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ActivityResponse withSuccessfulEndpointCount(Integer successfulEndpointCount){\r\n    this.successfulEndpointCount = successfulEndpointCount;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListPlatformApplicationsResult.withNextToken",
	"Comment": "nexttoken string is returned when calling listplatformapplications actionif additional records are available after the first page results.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListPlatformApplicationsResult withNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Request.getPrefix",
	"Comment": "gets the optional prefix parameter and restricts the response to keysthat begin with the specified prefix. use prefixes to separate a bucketinto different sets of keys, similar to how a file system organizes filesinto directories.",
	"Method": "String getPrefix(){\r\n    return prefix;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.SendMessageBatchRequestEntry.getId",
	"Comment": "an identifier for the message in this batch. this is used to communicatethe result. note that the ids of a batch request need to beunique within the request.",
	"Method": "String getId(){\r\n    return id;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.ChangeMessageVisibilityBatchRequestEntry.setId",
	"Comment": "an identifier for this particular receipt handle. this is used tocommunicate the result. note that the ids of a batch requestneed to be unique within the request.",
	"Method": "void setId(String id){\r\n    this.id = id;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketPolicyRequest.withPolicyText",
	"Comment": "sets the policy to apply to the specified bucket, and returns the updatedrequest object so that additional method calls can be chained together.",
	"Method": "SetBucketPolicyRequest withPolicyText(String policyText){\r\n    setPolicyText(policyText);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.GetIdentityMailFromDomainAttributesResult.clearMailFromDomainAttributesEntries",
	"Comment": "removes all the entries added into mailfromdomainattributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetIdentityMailFromDomainAttributesResult clearMailFromDomainAttributesEntries(){\r\n    this.mailFromDomainAttributes = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateThingGroupRequest.setExpectedVersion",
	"Comment": "the expected version of the thing group. if this does not match theversion of the thing group being updated, the update will fail.",
	"Method": "void setExpectedVersion(Long expectedVersion){\r\n    this.expectedVersion = expectedVersion;\r\n}"
}, {
	"Path": "org.bouncycastle.asn1.ASN1Object.hasEncodedTagValue",
	"Comment": "return true if obj is a byte array and represents an object with the given tag value.",
	"Method": "boolean hasEncodedTagValue(Object obj,int tagValue){\r\n    return (obj instanceof byte[]) && ((byte[]) obj)[0] == tagValue;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteBucketAnalyticsConfigurationRequest.getId",
	"Comment": "returns the identifier used to represent an analytics configuration.",
	"Method": "String getId(){\r\n    return id;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.ChangeMessageVisibilityBatchResultEntry.getId",
	"Comment": "represents a message whose visibility timeout has been changedsuccessfully.",
	"Method": "String getId(){\r\n    return id;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.model.UntagStreamRequest.withTagKeyList",
	"Comment": "a list of the keys of the tags that you want to remove.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UntagStreamRequest withTagKeyList(String tagKeyList,UntagStreamRequest withTagKeyList,java.util.Collection<String> tagKeyList){\r\n    setTagKeyList(tagKeyList);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CustomVerificationEmailTemplate.getFromEmailAddress",
	"Comment": "the email address that the custom verification email is sent from.",
	"Method": "String getFromEmailAddress(){\r\n    return fromEmailAddress;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.GetAttributesRequest.withItemName",
	"Comment": "the name of the item.returns a reference to this object so that method calls can be chained together.",
	"Method": "GetAttributesRequest withItemName(String itemName){\r\n    this.itemName = itemName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.Filter.getS3KeyFilter",
	"Comment": "filter criteria that limits the objects that can trigger event notifications based on theirs3 key name",
	"Method": "S3KeyFilter getS3KeyFilter(){\r\n    return s3KeyFilter;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.MessageConfiguration.withDefaultMessage",
	"Comment": "the default message for all channels.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "MessageConfiguration withDefaultMessage(Message defaultMessage){\r\n    this.defaultMessage = defaultMessage;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.lexrts.model.PostTextRequest.withBotAlias",
	"Comment": "the alias of the amazon lex bot.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PostTextRequest withBotAlias(String botAlias){\r\n    this.botAlias = botAlias;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobResponse.withCompletedPieces",
	"Comment": "the number of pieces that have successfully imported as of the time ofthe request.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ImportJobResponse withCompletedPieces(Integer completedPieces){\r\n    this.completedPieces = completedPieces;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSAsyncClient.setTopicAttributesAsync",
	"Comment": "allows a topic owner to set an attribute of the topic to a new value.",
	"Method": "Future<Void> setTopicAttributesAsync(SetTopicAttributesRequest setTopicAttributesRequest,Future<Void> setTopicAttributesAsync,SetTopicAttributesRequest setTopicAttributesRequest,AsyncHandler<SetTopicAttributesRequest, Void> asyncHandler){\r\n    return executorService.submit(new Callable<Void>() {\r\n        public Void call() throws Exception {\r\n            Void result = null;\r\n            try {\r\n                setTopicAttributes(setTopicAttributesRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(setTopicAttributesRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSAsyncClient.setTopicAttributesAsync",
	"Comment": "allows a topic owner to set an attribute of the topic to a new value.",
	"Method": "Future<Void> setTopicAttributesAsync(SetTopicAttributesRequest setTopicAttributesRequest,Future<Void> setTopicAttributesAsync,SetTopicAttributesRequest setTopicAttributesRequest,AsyncHandler<SetTopicAttributesRequest, Void> asyncHandler){\r\n    Void result = null;\r\n    try {\r\n        setTopicAttributes(setTopicAttributesRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(setTopicAttributesRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.SendMessageBatchRequestEntry.withId",
	"Comment": "an identifier for the message in this batch. this is used to communicatethe result. note that the ids of a batch request need to beunique within the request.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendMessageBatchRequestEntry withId(String id){\r\n    this.id = id;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobRequest.setSegmentId",
	"Comment": "the id of the segment to update if the import job is meant to update anexisting segment.",
	"Method": "void setSegmentId(String segmentId){\r\n    this.segmentId = segmentId;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CompleteMultipartUploadRequest.withUploadId",
	"Comment": "sets the id of the multipart upload to complete, and returns this updatedcompletemultipartuploadrequest object so that additional method calls canbe chained together.",
	"Method": "CompleteMultipartUploadRequest withUploadId(String uploadId){\r\n    this.uploadId = uploadId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.setInputStream",
	"Comment": "sets the stream containing the data to upload for the new part.",
	"Method": "void setInputStream(InputStream inputStream){\r\n    this.inputStream = inputStream;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SendRawEmailResult.getMessageId",
	"Comment": "the unique message identifier returned from the sendrawemailaction.",
	"Method": "String getMessageId(){\r\n    return messageId;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListEndpointsByPlatformApplicationResult.setEndpoints",
	"Comment": "endpoints returned for listendpointsbyplatformapplication action.",
	"Method": "void setEndpoints(java.util.Collection<Endpoint> endpoints){\r\n    if (endpoints == null) {\r\n        this.endpoints = null;\r\n        return;\r\n    }\r\n    this.endpoints = new java.util.ArrayList<Endpoint>(endpoints);\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.GetLogEventsRequest.getStartFromHead",
	"Comment": "if the value is true, the earliest log events are returned first. if thevalue is false, the latest log events are returned first. the defaultvalue is false.",
	"Method": "Boolean getStartFromHead(){\r\n    return startFromHead;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetContentModerationResult.withWarnings",
	"Comment": "sets the value of the warnings property for this object.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetContentModerationResult withWarnings(Warning warnings,GetContentModerationResult withWarnings,java.util.Collection<Warning> warnings){\r\n    setWarnings(warnings);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartFaceSearchRequest.withEnablePersonTracking",
	"Comment": "sets the value of the enablepersontracking property for this object.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "StartFaceSearchRequest withEnablePersonTracking(Boolean enablePersonTracking){\r\n    this.enablePersonTracking = enablePersonTracking;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.BulkEmailDestinationStatus.getError",
	"Comment": "a description of an error that prevented a message being sent using thesendbulktemplatedemail operation.",
	"Method": "String getError(){\r\n    return error;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.DecryptRequest.getEncryptionContext",
	"Comment": "the encryption context. if this was specified in the encryptfunction, it must be specified here or the decryption operation willfail. for more information, see encryption context.",
	"Method": "java.util.Map<String, String> getEncryptionContext(){\r\n    return encryptionContext;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideoarchivedmedia.model.ListFragmentsRequest.withFragmentSelector",
	"Comment": "describes the time stamp range and time stamp origin for the range offragments to return.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListFragmentsRequest withFragmentSelector(FragmentSelector fragmentSelector){\r\n    this.fragmentSelector = fragmentSelector;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ExportJobResource.setSegmentId",
	"Comment": "the id of the segment to export endpoints from. if not present, amazonpinpoint exports all of the endpoints that belong to the application.",
	"Method": "void setSegmentId(String segmentId){\r\n    this.segmentId = segmentId;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketReplicationConfigurationRequest.withBucketName",
	"Comment": "sets the name of amazon s3 bucket for replication configuration. returnsthe updated object. .",
	"Method": "SetBucketReplicationConfigurationRequest withBucketName(String bucketName){\r\n    setBucketName(bucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DescribeReceiptRuleSetResult.getMetadata",
	"Comment": "the metadata for the receipt rule set, which consists of the rule setname and the timestamp of when the rule set was created.",
	"Method": "ReceiptRuleSetMetadata getMetadata(){\r\n    return metadata;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.GetIdentityPoliciesResult.withPolicies",
	"Comment": "a map of policy names to policies.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetIdentityPoliciesResult withPolicies(java.util.Map<String, String> policies){\r\n    this.policies = policies;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.kinesis.kinesisrecorder.JSONRecordAdapter.getData",
	"Comment": "returns data from json object which was made via translatefromrecord.",
	"Method": "ByteBuffer getData(JSONObject jsonObject){\r\n    return ByteBuffer.wrap(Base64.decode(jsonObject.getString(DATA_FIELD_KEY), Base64.DEFAULT));\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SendTemplatedEmailRequest.getConfigurationSetName",
	"Comment": "the name of the configuration set to use when you send an email usingsendtemplatedemail.",
	"Method": "String getConfigurationSetName(){\r\n    return configurationSetName;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.GetLexiconResult.withLexicon",
	"Comment": "lexicon object that provides name and the string content of the lexicon.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetLexiconResult withLexicon(Lexicon lexicon){\r\n    this.lexicon = lexicon;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSVoipSandboxChannelRequest.withTokenKey",
	"Comment": "the token key used for apns tokens.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSVoipSandboxChannelRequest withTokenKey(String tokenKey){\r\n    this.tokenKey = tokenKey;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.GrantListEntry.withCreationDate",
	"Comment": "the date and time when the grant was created.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GrantListEntry withCreationDate(java.util.Date creationDate){\r\n    this.creationDate = creationDate;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.ListStreamsResult.setStreamNames",
	"Comment": "the names of the streams that are associated with the aws account makingthe liststreams request.",
	"Method": "void setStreamNames(java.util.Collection<String> streamNames){\r\n    if (streamNames == null) {\r\n        this.streamNames = null;\r\n        return;\r\n    }\r\n    this.streamNames = new java.util.ArrayList<String>(streamNames);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSSandboxChannelRequest.withDefaultAuthenticationMethod",
	"Comment": "the default authentication method used for apns.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSSandboxChannelRequest withDefaultAuthenticationMethod(String defaultAuthenticationMethod){\r\n    this.defaultAuthenticationMethod = defaultAuthenticationMethod;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SendCustomVerificationEmailRequest.withConfigurationSetName",
	"Comment": "name of a configuration set to use when sending the verification email.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendCustomVerificationEmailRequest withConfigurationSetName(String configurationSetName){\r\n    this.configurationSetName = configurationSetName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StreamProcessorSettings.withFaceSearch",
	"Comment": "face search settings to use on a streaming video.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "StreamProcessorSettings withFaceSearch(FaceSearchSettings faceSearch){\r\n    this.faceSearch = faceSearch;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GeneratePresignedUrlRequest.withBucketName",
	"Comment": "sets the name of the bucket involved in this request, and returns thisrequest object to enable additional method calls to be chained together.",
	"Method": "GeneratePresignedUrlRequest withBucketName(String bucketName){\r\n    setBucketName(bucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.getMd5Digest",
	"Comment": "returns the optional, but recommended, md5 hash of the content of thispart. if specified, this value will be sent to amazon s3 to verify thedata integrity when the data reaches amazon s3.",
	"Method": "String getMd5Digest(){\r\n    return md5Digest;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EmailChannelResponse.withCreationDate",
	"Comment": "the date that the settings were last updated in iso 8601 format.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EmailChannelResponse withCreationDate(String creationDate){\r\n    this.creationDate = creationDate;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSMessage.setSilentPush",
	"Comment": "indicates if the message should display on the users device. silentpushes can be used for remote configuration and phone home use cases.",
	"Method": "void setSilentPush(Boolean silentPush){\r\n    this.silentPush = silentPush;\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateStreamRequest.withFiles",
	"Comment": "the files associated with the stream.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateStreamRequest withFiles(StreamFile files,UpdateStreamRequest withFiles,java.util.Collection<StreamFile> files){\r\n    setFiles(files);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.mobileanalytics.model.PutEventsRequest.withClientContext",
	"Comment": "the client context including the client id, app title, app version andpackage name.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PutEventsRequest withClientContext(String clientContext){\r\n    this.clientContext = clientContext;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CreateCampaignResult.withCampaignResponse",
	"Comment": "campaign definitionreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreateCampaignResult withCampaignResponse(CampaignResponse campaignResponse){\r\n    this.campaignResponse = campaignResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DeleteReceiptFilterRequest.withFilterName",
	"Comment": "the name of the ip address filter to delete.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteReceiptFilterRequest withFilterName(String filterName){\r\n    this.filterName = filterName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointItemResponse.withMessage",
	"Comment": "a custom message associated with the registration of an endpoint whenissuing a response.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointItemResponse withMessage(String message){\r\n    this.message = message;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.RemoveTagsFromStreamRequest.setTagKeys",
	"Comment": "a list of tag keys. each corresponding tag is removed from the stream.",
	"Method": "void setTagKeys(java.util.Collection<String> tagKeys){\r\n    if (tagKeys == null) {\r\n        this.tagKeys = null;\r\n        return;\r\n    }\r\n    this.tagKeys = new java.util.ArrayList<String>(tagKeys);\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSAsyncClient.setSMSAttributesAsync",
	"Comment": "use this request to set the default settings for sending sms messages andreceiving daily sms usage reports.you can override some of these settings for a single message when you usethe publish action with themessageattributes.entry.n parameter. for more information,see sending an sms message in the amazon sns developer guide.",
	"Method": "Future<SetSMSAttributesResult> setSMSAttributesAsync(SetSMSAttributesRequest setSMSAttributesRequest,Future<SetSMSAttributesResult> setSMSAttributesAsync,SetSMSAttributesRequest setSMSAttributesRequest,AsyncHandler<SetSMSAttributesRequest, SetSMSAttributesResult> asyncHandler){\r\n    return executorService.submit(new Callable<SetSMSAttributesResult>() {\r\n        public SetSMSAttributesResult call() throws Exception {\r\n            SetSMSAttributesResult result = null;\r\n            try {\r\n                result = setSMSAttributes(setSMSAttributesRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(setSMSAttributesRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSAsyncClient.setSMSAttributesAsync",
	"Comment": "use this request to set the default settings for sending sms messages andreceiving daily sms usage reports.you can override some of these settings for a single message when you usethe publish action with themessageattributes.entry.n parameter. for more information,see sending an sms message in the amazon sns developer guide.",
	"Method": "Future<SetSMSAttributesResult> setSMSAttributesAsync(SetSMSAttributesRequest setSMSAttributesRequest,Future<SetSMSAttributesResult> setSMSAttributesAsync,SetSMSAttributesRequest setSMSAttributesRequest,AsyncHandler<SetSMSAttributesRequest, SetSMSAttributesResult> asyncHandler){\r\n    SetSMSAttributesResult result = null;\r\n    try {\r\n        result = setSMSAttributes(setSMSAttributesRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(setSMSAttributesRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.MessageAttributeValue.setBinaryValue",
	"Comment": "binary type attributes can store any binary data, for example, compresseddata, encrypted data, or images.",
	"Method": "void setBinaryValue(java.nio.ByteBuffer binaryValue){\r\n    this.binaryValue = binaryValue;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.PutRecordBatchResult.withRequestResponses",
	"Comment": "the results array. for each record, the index of the response element isthe same as the index used in the request array.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PutRecordBatchResult withRequestResponses(PutRecordBatchResponseEntry requestResponses,PutRecordBatchResult withRequestResponses,java.util.Collection<PutRecordBatchResponseEntry> requestResponses){\r\n    setRequestResponses(requestResponses);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClient.createReceiptRule",
	"Comment": "creates a receipt rule.for information about setting up receipt rules, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "CreateReceiptRuleResult createReceiptRule(CreateReceiptRuleRequest createReceiptRuleRequest){\r\n    ExecutionContext executionContext = createExecutionContext(createReceiptRuleRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<CreateReceiptRuleRequest> request = null;\r\n    Response<CreateReceiptRuleResult> response = null;\r\n    try {\r\n        request = new CreateReceiptRuleRequestMarshaller().marshall(createReceiptRuleRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        response = invoke(request, new CreateReceiptRuleResultStaxUnmarshaller(), executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.SynthesizeSpeechResult.withAudioStream",
	"Comment": "stream containing the synthesized speech.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SynthesizeSpeechResult withAudioStream(java.io.InputStream audioStream){\r\n    this.audioStream = audioStream;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateApnsSandboxChannelRequest.getAPNSSandboxChannelRequest",
	"Comment": "apple development push notification service channel definition.",
	"Method": "APNSSandboxChannelRequest getAPNSSandboxChannelRequest(){\r\n    return aPNSSandboxChannelRequest;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointMessageResult.getMessageId",
	"Comment": "unique message identifier associated with the message that was sent.",
	"Method": "String getMessageId(){\r\n    return messageId;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ListKeysResult.getTruncated",
	"Comment": "a flag that indicates whether there are more items in the list. when thisvalue is true, the list in this response is truncated. to get more items,pass the value of the nextmarker element in this response tothe marker parameter in a subsequent request.",
	"Method": "Boolean getTruncated(){\r\n    return truncated;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.RoutingRule.setCondition",
	"Comment": "set the condition that must be met for the specified redirect to apply.",
	"Method": "void setCondition(RoutingRuleCondition condition){\r\n    this.condition = condition;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetApplicationSettingsRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetApplicationSettingsRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.analytics.StorageClassAnalysis.setDataExport",
	"Comment": "sets the container used to describe how data related to thestorage class analysis should be exported.",
	"Method": "void setDataExport(StorageClassAnalysisDataExport dataExport){\r\n    this.dataExport = dataExport;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ExportJobResponse.getFailedPieces",
	"Comment": "the number of pieces that failed to be processed as of the time of therequest.",
	"Method": "Integer getFailedPieces(){\r\n    return failedPieces;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentDimensions.clearMetricsEntries",
	"Comment": "removes all the entries added into metrics.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SegmentDimensions clearMetricsEntries(){\r\n    this.metrics = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.InitiateMultipartUploadRequest.setSSEAwsKeyManagementParams",
	"Comment": "sets the aws key management system parameters used to encrypt the objecton server side.",
	"Method": "void setSSEAwsKeyManagementParams(SSEAwsKeyManagementParams params){\r\n    if (params != null && this.sseCustomerKey != null) {\r\n        throw new IllegalArgumentException(\"Either SSECustomerKey or SSEAwsKeyManagementParams must not be set at the same time.\");\r\n    }\r\n    this.sseAwsKeyManagementParams = params;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetEndpointResult.withEndpointResponse",
	"Comment": "endpoint responsereturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetEndpointResult withEndpointResponse(EndpointResponse endpointResponse){\r\n    this.endpointResponse = endpointResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ReEncryptRequest.clearDestinationEncryptionContextEntries",
	"Comment": "removes all the entries added into destinationencryptioncontext.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ReEncryptRequest clearDestinationEncryptionContextEntries(){\r\n    this.destinationEncryptionContext = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMMessage.setSmallImageIconUrl",
	"Comment": "the url that points to an image used as the small icon for thenotification which will be used to represent the notification in thestatus bar and content view",
	"Method": "void setSmallImageIconUrl(String smallImageIconUrl){\r\n    this.smallImageIconUrl = smallImageIconUrl;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.ContentModerationDetection.withModerationLabel",
	"Comment": "the moderation label detected by in the stored video.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ContentModerationDetection withModerationLabel(ModerationLabel moderationLabel){\r\n    this.moderationLabel = moderationLabel;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetCampaignsRequest.setToken",
	"Comment": "the nexttoken string returned on a previous page that you use to get thenext page of results in a paginated response.",
	"Method": "void setToken(String token){\r\n    this.token = token;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointanalytics.model.PutEventsRequest.withClientContext",
	"Comment": "the client context including the client id, app title, app version andpackage name.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PutEventsRequest withClientContext(String clientContext){\r\n    this.clientContext = clientContext;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.kinesisvideo.util.CameraUtils.getSupportedCameraConfigrations",
	"Comment": "tries to find a supported configuration for each camera on the device",
	"Method": "List<MediaSourceConfiguration.Builder<? extends MediaSourceConfiguration>> getSupportedCameraConfigrations(Context context){\r\n    final List<MediaSourceConfiguration.Builder<? extends MediaSourceConfiguration>> cameraConfigurations = new ArrayList<MediaSourceConfiguration.Builder<? extends MediaSourceConfiguration>>();\r\n    for (final String cameraId : getCameraIds(context)) {\r\n        cameraConfigurations.add(getSupportedCameraConfiguration(context, cameraId));\r\n    }\r\n    return cameraConfigurations;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateCampaignRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateCampaignRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyPartRequest.setSourceKey",
	"Comment": "sets the source bucket key under which the source object to be copied isstored.",
	"Method": "void setSourceKey(String sourceKey){\r\n    this.sourceKey = sourceKey;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SendUsersMessageResponse.setApplicationId",
	"Comment": "the unique id of the amazon pinpoint project used to send the message.",
	"Method": "void setApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.AmazonPinpointClient.getUserEndpoints",
	"Comment": "returns information about the endpoints that are associated with a userid.",
	"Method": "GetUserEndpointsResult getUserEndpoints(GetUserEndpointsRequest getUserEndpointsRequest){\r\n    ExecutionContext executionContext = createExecutionContext(getUserEndpointsRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<GetUserEndpointsRequest> request = null;\r\n    Response<GetUserEndpointsResult> response = null;\r\n    try {\r\n        awsRequestMetrics.startEvent(Field.RequestMarshallTime);\r\n        try {\r\n            request = new GetUserEndpointsRequestMarshaller().marshall(getUserEndpointsRequest);\r\n            request.setAWSRequestMetrics(awsRequestMetrics);\r\n        } finally {\r\n            awsRequestMetrics.endEvent(Field.RequestMarshallTime);\r\n        }\r\n        Unmarshaller<GetUserEndpointsResult, JsonUnmarshallerContext> unmarshaller = new GetUserEndpointsResultJsonUnmarshaller();\r\n        JsonResponseHandler<GetUserEndpointsResult> responseHandler = new JsonResponseHandler<GetUserEndpointsResult>(unmarshaller);\r\n        response = invoke(request, responseHandler, executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteObjectRequest.withBucketName",
	"Comment": "sets the name of the amazon s3 bucket containing the object to deleteand returns this object, enabling additional method calls to be chainedtogether.",
	"Method": "DeleteObjectRequest withBucketName(String bucketName){\r\n    setBucketName(bucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.GetIdentityNotificationAttributesResult.withNotificationAttributes",
	"Comment": "a map of identity to identitynotificationattributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetIdentityNotificationAttributesResult withNotificationAttributes(java.util.Map<String, IdentityNotificationAttributes> notificationAttributes){\r\n    this.notificationAttributes = notificationAttributes;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.MessageConfiguration.getADMMessage",
	"Comment": "the message that the campaign delivers to adm channels. overrides thedefault message.",
	"Method": "Message getADMMessage(){\r\n    return aDMMessage;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ListGrantsResult.withTruncated",
	"Comment": "a flag that indicates whether there are more items in the list. when thisvalue is true, the list in this response is truncated. to get more items,pass the value of the nextmarker element in this response tothe marker parameter in a subsequent request.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListGrantsResult withTruncated(Boolean truncated){\r\n    this.truncated = truncated;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.AmazonCloudWatchLogsClient.cancelExportTask",
	"Comment": "cancels the specified export task.the task must be in the pending or runningstate.",
	"Method": "void cancelExportTask(CancelExportTaskRequest cancelExportTaskRequest){\r\n    ExecutionContext executionContext = createExecutionContext(cancelExportTaskRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<CancelExportTaskRequest> request = null;\r\n    Response<Void> response = null;\r\n    try {\r\n        awsRequestMetrics.startEvent(Field.RequestMarshallTime);\r\n        try {\r\n            request = new CancelExportTaskRequestMarshaller().marshall(cancelExportTaskRequest);\r\n            request.setAWSRequestMetrics(awsRequestMetrics);\r\n        } finally {\r\n            awsRequestMetrics.endEvent(Field.RequestMarshallTime);\r\n        }\r\n        JsonResponseHandler<Void> responseHandler = new JsonResponseHandler<Void>(null);\r\n        invoke(request, responseHandler, executionContext);\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CreateReceiptRuleRequest.setRuleSetName",
	"Comment": "the name of the rule set that the receipt rule will be added to.",
	"Method": "void setRuleSetName(String ruleSetName){\r\n    this.ruleSetName = ruleSetName;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.ListStreamProcessorsResult.withStreamProcessors",
	"Comment": "list of stream processors that you have created.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListStreamProcessorsResult withStreamProcessors(StreamProcessor streamProcessors,ListStreamProcessorsResult withStreamProcessors,java.util.Collection<StreamProcessor> streamProcessors){\r\n    setStreamProcessors(streamProcessors);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.describeReceiptRuleAsync",
	"Comment": "returns the details of the specified receipt rule.for information about setting up receipt rules, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "Future<DescribeReceiptRuleResult> describeReceiptRuleAsync(DescribeReceiptRuleRequest describeReceiptRuleRequest,Future<DescribeReceiptRuleResult> describeReceiptRuleAsync,DescribeReceiptRuleRequest describeReceiptRuleRequest,AsyncHandler<DescribeReceiptRuleRequest, DescribeReceiptRuleResult> asyncHandler){\r\n    return executorService.submit(new Callable<DescribeReceiptRuleResult>() {\r\n        public DescribeReceiptRuleResult call() throws Exception {\r\n            DescribeReceiptRuleResult result = null;\r\n            try {\r\n                result = describeReceiptRule(describeReceiptRuleRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(describeReceiptRuleRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.describeReceiptRuleAsync",
	"Comment": "returns the details of the specified receipt rule.for information about setting up receipt rules, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "Future<DescribeReceiptRuleResult> describeReceiptRuleAsync(DescribeReceiptRuleRequest describeReceiptRuleRequest,Future<DescribeReceiptRuleResult> describeReceiptRuleAsync,DescribeReceiptRuleRequest describeReceiptRuleRequest,AsyncHandler<DescribeReceiptRuleRequest, DescribeReceiptRuleResult> asyncHandler){\r\n    DescribeReceiptRuleResult result = null;\r\n    try {\r\n        result = describeReceiptRule(describeReceiptRuleRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(describeReceiptRuleRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartListing.setBucketName",
	"Comment": "sets the name of the bucket containing the listed parts, as specified inthe original request.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.ListDomainsRequest.withNextToken",
	"Comment": "a string informing amazon simpledb where to start the next list ofdomain names.returns a reference to this object so that method calls can be chained together.",
	"Method": "ListDomainsRequest withNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.demo.s3transferutility.DownloadActivity.updateList",
	"Comment": "updates the listview according to observers, by making transferrecordmapreflect the current data in observers.",
	"Method": "void updateList(){\r\n    TransferObserver observer = null;\r\n    HashMap<String, Object> map = null;\r\n    for (int i = 0; i < observers.size(); i++) {\r\n        observer = observers.get(i);\r\n        observer.setTransferListener(new DownloadListener());\r\n        map = transferRecordMaps.get(i);\r\n        util.fillMap(map, observer, i == checkedIndex);\r\n    }\r\n    simpleAdapter.notifyDataSetChanged();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectRequest.withGeneralProgressListener",
	"Comment": "sets the optional progress listener for receiving updates about objectdownload status, and returns this updated object so that additionalmethod calls can be chained together.",
	"Method": "GetObjectRequest withGeneralProgressListener(ProgressListener progressListener){\r\n    setGeneralProgressListener(progressListener);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListVersionsRequest.setKeyMarker",
	"Comment": "sets the optional keymarker parameter indicating where inthe sorted list of all versions in the specified bucket to beginreturning results.",
	"Method": "void setKeyMarker(String keyMarker){\r\n    this.keyMarker = keyMarker;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Request.withContinuationToken",
	"Comment": "sets the optional continuation token. continuation token allows a list tobe continued from a specific point. continuationtoken is provided intruncated list results.",
	"Method": "ListObjectsV2Request withContinuationToken(String continuationToken){\r\n    setContinuationToken(continuationToken);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.AWSKinesisVideoClient.describeStream",
	"Comment": "returns the most current information about the specified stream. you mustspecify either the streamname or the streamarn.",
	"Method": "DescribeStreamResult describeStream(DescribeStreamRequest describeStreamRequest){\r\n    ExecutionContext executionContext = createExecutionContext(describeStreamRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<DescribeStreamRequest> request = null;\r\n    Response<DescribeStreamResult> response = null;\r\n    try {\r\n        awsRequestMetrics.startEvent(Field.RequestMarshallTime);\r\n        try {\r\n            request = new DescribeStreamRequestMarshaller().marshall(describeStreamRequest);\r\n            request.setAWSRequestMetrics(awsRequestMetrics);\r\n        } finally {\r\n            awsRequestMetrics.endEvent(Field.RequestMarshallTime);\r\n        }\r\n        Unmarshaller<DescribeStreamResult, JsonUnmarshallerContext> unmarshaller = new DescribeStreamResultJsonUnmarshaller();\r\n        JsonResponseHandler<DescribeStreamResult> responseHandler = new JsonResponseHandler<DescribeStreamResult>(unmarshaller);\r\n        response = invoke(request, responseHandler, executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetFaceDetectionResult.withVideoMetadata",
	"Comment": "information about a video that amazon rekognition video analyzed.videometadata is returned in every page of paginatedresponses from a amazon rekognition video operation.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetFaceDetectionResult withVideoMetadata(VideoMetadata videoMetadata){\r\n    this.videoMetadata = videoMetadata;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteSmsChannelResult.withSMSChannelResponse",
	"Comment": "sms channel response.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteSmsChannelResult withSMSChannelResponse(SMSChannelResponse sMSChannelResponse){\r\n    this.sMSChannelResponse = sMSChannelResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.withMD5Digest",
	"Comment": "sets the optional, but recommended, md5 hash of the content of this part.if specified, this value will be sent to amazon s3 to verify the dataintegrity when the data reaches amazon s3.returns this updated uploadpartrequest object so that additional methodcalls can be chained together.",
	"Method": "UploadPartRequest withMD5Digest(String md5Digest){\r\n    this.md5Digest = md5Digest;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.lexrts.model.PostContentResult.getContentType",
	"Comment": "content type as specified in the accept http header in therequest.",
	"Method": "String getContentType(){\r\n    return contentType;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignEmailMessage.withBody",
	"Comment": "the email text body.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CampaignEmailMessage withBody(String body){\r\n    this.body = body;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.lex.interactionkit.ui.InteractiveVoiceView.setDefaultColorButtonBoundary",
	"Comment": "sets the color of the circle representing the button boundary.",
	"Method": "void setDefaultColorButtonBoundary(String color){\r\n    mPaintButtonBoundary.setColor(getColor(color));\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.DescribeStreamProcessorResult.setInput",
	"Comment": "kinesis video stream that provides the source streaming video.",
	"Method": "void setInput(StreamProcessorInput input){\r\n    this.input = input;\r\n}"
}, {
	"Path": "com.amazonaws.kinesisvideo.internal.producer.jni.NativeLibraryLoader.loadNativeLibrary",
	"Comment": "attempts to load the native library by trying a library file first and if it fails then trying the library name",
	"Method": "boolean loadNativeLibrary(String fullPath,String libraryName){\r\n    Preconditions.checkState(!((fullPath == null || fullPath.isEmpty()) && (libraryName == null || libraryName.isEmpty())), \"Both the full path and library name can't be null at the same time\");\r\n    final String soLibraryFileName = \"lib\" + libraryName + \".so\";\r\n    final String dylibLibraryFileName = \"lib\" + libraryName + \".dylib\";\r\n    final String dllLibraryFileName = \"lib\" + libraryName + \".dll\";\r\n    return loadNativeLibraryDirect(fullPath) || loadNativeLibraryDirect(fullPath + \".so\") || loadNativeLibraryDirect(fullPath + \".dylib\") || loadNativeLibraryDirect(fullPath + \".dll\") || loadNativeLibraryDirect(soLibraryFileName) || loadNativeLibraryDirect(dylibLibraryFileName) || loadNativeLibraryDirect(dllLibraryFileName) || loadNativeLibraryIndirect(libraryName);\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.GetAttributesResult.withAttributes",
	"Comment": "the list of attributes returned by the operation.returns a reference to this object so that method calls can be chained together.",
	"Method": "GetAttributesResult withAttributes(Attribute attributes,GetAttributesResult withAttributes,java.util.Collection<Attribute> attributes){\r\n    if (attributes == null) {\r\n        this.attributes = null;\r\n    } else {\r\n        com.amazonaws.internal.ListWithAutoConstructFlag<Attribute> attributesCopy = new com.amazonaws.internal.ListWithAutoConstructFlag<Attribute>(attributes.size());\r\n        attributesCopy.addAll(attributes);\r\n        this.attributes = attributesCopy;\r\n    }\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateScheduledAuditResult.withScheduledAuditArn",
	"Comment": "the arn of the scheduled audit.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateScheduledAuditResult withScheduledAuditArn(String scheduledAuditArn){\r\n    this.scheduledAuditArn = scheduledAuditArn;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SendUsersMessagesResult.withSendUsersMessageResponse",
	"Comment": "user send message response.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendUsersMessagesResult withSendUsersMessageResponse(SendUsersMessageResponse sendUsersMessageResponse){\r\n    this.sendUsersMessageResponse = sendUsersMessageResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMChannelRequest.withClientSecret",
	"Comment": "the client secret that you obtained from the amazon app distributionportal.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ADMChannelRequest withClientSecret(String clientSecret){\r\n    this.clientSecret = clientSecret;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CreateBucketRequest.getRegion",
	"Comment": "gets the name of the amazon s3 region in which this bucket will becreated.",
	"Method": "String getRegion(){\r\n    return region;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.EventDestination.setCloudWatchDestination",
	"Comment": "an object that contains the names, default values, and sources of thedimensions associated with an amazon cloudwatch event destination.",
	"Method": "void setCloudWatchDestination(CloudWatchDestination cloudWatchDestination){\r\n    this.cloudWatchDestination = cloudWatchDestination;\r\n}"
}, {
	"Path": "org.bouncycastle.asn1.ASN1BitString.getOctets",
	"Comment": "return the octets contained in this bit string, checking that this bit string reallydoes represent an octet aligned string. only use this method when the standard you arefollowing dictates that the bit string will be octet aligned.",
	"Method": "byte[] getOctets(){\r\n    if (padBits != 0) {\r\n        throw new IllegalStateException(\"attempt to get non-octet aligned data from BIT STRING\");\r\n    }\r\n    return Arrays.clone(data);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteApnsVoipSandboxChannelRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteApnsVoipSandboxChannelRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSMessage.setSubstitutions",
	"Comment": "default message substitutions. can be overridden by individual addresssubstitutions.",
	"Method": "void setSubstitutions(java.util.Map<String, java.util.List<String>> substitutions){\r\n    this.substitutions = substitutions;\r\n}"
}, {
	"Path": "com.amazonaws.services.iotdata.model.DeleteThingShadowResult.withPayload",
	"Comment": "the state information, in json format.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteThingShadowResult withPayload(java.nio.ByteBuffer payload){\r\n    this.payload = payload;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.GetSpeechSynthesisTaskResult.getSynthesisTask",
	"Comment": "synthesistask object that provides information from the requested task,including output format, creation time, task status, and so on.",
	"Method": "SynthesisTask getSynthesisTask(){\r\n    return synthesisTask;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetSegmentsRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetSegmentsRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceDetail.getEyeglasses",
	"Comment": "indicates whether or not the face is wearing eye glasses, and theconfidence level in the determination.",
	"Method": "Eyeglasses getEyeglasses(){\r\n    return eyeglasses;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartListing.getAbortDate",
	"Comment": "date when multipart upload will become eligible for abort operation by lifecycle.",
	"Method": "Date getAbortDate(){\r\n    return abortDate;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetAdmChannelResult.withADMChannelResponse",
	"Comment": "amazon device messaging channel definition.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetAdmChannelResult withADMChannelResponse(ADMChannelResponse aDMChannelResponse){\r\n    this.aDMChannelResponse = aDMChannelResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ActivityResponse.setSuccessfulEndpointCount",
	"Comment": "the total number of endpoints to which the campaign successfullydelivered messages.",
	"Method": "void setSuccessfulEndpointCount(Integer successfulEndpointCount){\r\n    this.successfulEndpointCount = successfulEndpointCount;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.internal.TransferManagerUtils.isUploadParallelizable",
	"Comment": "returns true if the specified upload request can use parallel partuploads for increased performance.",
	"Method": "boolean isUploadParallelizable(PutObjectRequest putObjectRequest,boolean isUsingEncryption){\r\n    if (isUsingEncryption)\r\n        return false;\r\n    return (getRequestFile(putObjectRequest) != null);\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.S3Action.setBucketName",
	"Comment": "the name of the amazon s3 bucket that incoming email will be saved to.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignResponse.withSegmentVersion",
	"Comment": "the version of the segment to which the campaign sends messages.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CampaignResponse withSegmentVersion(Integer segmentVersion){\r\n    this.segmentVersion = segmentVersion;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.pinpoint.analytics.monetization.GooglePlayMonetizationEventBuilder.create",
	"Comment": "create a googleplaymonetizationeventbuilder with the specified eventclient",
	"Method": "GooglePlayMonetizationEventBuilder create(AnalyticsClient analyticsClient){\r\n    return new GooglePlayMonetizationEventBuilder(analyticsClient);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CompleteMultipartUploadRequest.setBucketName",
	"Comment": "sets the name of the bucket containing the multipart upload to complete.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.buffered.ReceiveQueueBuffer.fillFuture",
	"Comment": "fills the future with whatever results were received by the full batchcurrently at the head of the completed batch queue. those results may beretrieved messages, or an exception. this method assumes that you areholding the finished tasks lock locks when invoking it. violate thisassumption at your own peril",
	"Method": "void fillFuture(ReceiveMessageFuture f){\r\n    ReceiveMessageResult r = new ReceiveMessageResult();\r\n    LinkedList<Message> messages = new LinkedList<Message>();\r\n    r.setMessages(messages);\r\n    Exception exception = null;\r\n    if (!finishedTasks.isEmpty()) {\r\n        ReceiveMessageBatchTask t = finishedTasks.getFirst();\r\n        exception = t.getException();\r\n        int retrieved = 0;\r\n        boolean batchDone = false;\r\n        while (retrieved < f.getRequestedSize()) {\r\n            Message m = t.removeMessage();\r\n            if (null != m) {\r\n                messages.add(m);\r\n                ++retrieved;\r\n            } else {\r\n                batchDone = true;\r\n                break;\r\n            }\r\n        }\r\n        batchDone = batchDone || t.isEmpty() || (exception != null);\r\n        if (batchDone) {\r\n            finishedTasks.removeFirst();\r\n        }\r\n        r.setMessages(messages);\r\n    }\r\n    if (exception != null)\r\n        f.setFailure(exception);\r\n    else\r\n        f.setSuccess(r);\r\n    while (!finishedTasks.isEmpty()) {\r\n        ReceiveMessageBatchTask t = finishedTasks.getFirst();\r\n        if ((!t.isEmpty()) || (t.getException() != null)) {\r\n            break;\r\n        }\r\n        finishedTasks.removeFirst();\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.GetMLModelResult.setFinishedAt",
	"Comment": "the epoch time when amazon machine learning marked themlmodel as completed or failed.finishedat is only available when the mlmodelis in the completed or failed state.",
	"Method": "void setFinishedAt(java.util.Date finishedAt){\r\n    this.finishedAt = finishedAt;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketMetricsConfigurationsRequest.getContinuationToken",
	"Comment": "gets the optional continuation token.continuation token allows a list to becontinued from a specific point. continuationtoken is provided in truncated list results.",
	"Method": "String getContinuationToken(){\r\n    return continuationToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMChannelResponse.withApplicationId",
	"Comment": "the id of the application to which the channel applies.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ADMChannelResponse withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideoarchivedmedia.model.HLSTimestampRange.setStartTimestamp",
	"Comment": "the start of the time stamp range for the requested media.if the hlstimestamprange value is specified, thestarttimestamp value is required.this value is inclusive. fragments that start before thestartingtimestamp and continue past it are included in thesession.",
	"Method": "void setStartTimestamp(java.util.Date startTimestamp){\r\n    this.startTimestamp = startTimestamp;\r\n}"
}, {
	"Path": "com.amazonaws.services.lexrts.model.GenericAttachment.withButtons",
	"Comment": "the list of options to show to the user.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GenericAttachment withButtons(Button buttons,GenericAttachment withButtons,java.util.Collection<Button> buttons){\r\n    setButtons(buttons);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.BoundingBox.getHeight",
	"Comment": "height of the bounding box as a ratio of the overall image height.",
	"Method": "Float getHeight(){\r\n    return height;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CustomVerificationEmailTemplateDoesNotExistException.getCustomVerificationEmailTemplateName",
	"Comment": "indicates that the provided custom verification email template does notexist.",
	"Method": "String getCustomVerificationEmailTemplateName(){\r\n    return customVerificationEmailTemplateName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetObjectAclRequest.withRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket. it returns thisupdated setobjectaclrequest object so that additional method calls can bechained together.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "SetObjectAclRequest withRequesterPays(boolean isRequesterPays){\r\n    setRequesterPays(isRequesterPays);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointUser.clearUserAttributesEntries",
	"Comment": "removes all the entries added into userattributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointUser clearUserAttributesEntries(){\r\n    this.userAttributes = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.WriteEventStream.setRoleArn",
	"Comment": "the iam role that authorizes amazon pinpoint to publish events to thestream in your account.",
	"Method": "void setRoleArn(String roleArn){\r\n    this.roleArn = roleArn;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartCelebrityRecognitionRequest.setVideo",
	"Comment": "the video in which you want to recognize celebrities. the video must bestored in an amazon s3 bucket.",
	"Method": "void setVideo(Video video){\r\n    this.video = video;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectMetadataRequest.setKey",
	"Comment": "sets the key of the object whose metadata is being retrieved.",
	"Method": "void setKey(String key){\r\n    this.key = key;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.MetricFilterMatchRecord.withEventNumber",
	"Comment": "the event number.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "MetricFilterMatchRecord withEventNumber(Long eventNumber){\r\n    this.eventNumber = eventNumber;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.WriteCampaignRequest.setIsPaused",
	"Comment": "indicates whether the campaign is paused. a paused campaign does not sendmessages unless you resume it by setting ispaused to false.",
	"Method": "void setIsPaused(Boolean isPaused){\r\n    this.isPaused = isPaused;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.DescribeVoicesResult.getNextToken",
	"Comment": "the pagination token to use in the next request to continue the listingof voices. nexttoken is returned only if the response istruncated.",
	"Method": "String getNextToken(){\r\n    return nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EmailChannelResponse.withEnabled",
	"Comment": "if the channel is enabled for sending messages.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EmailChannelResponse withEnabled(Boolean enabled){\r\n    this.enabled = enabled;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.AbortMultipartUploadRequest.setBucketName",
	"Comment": "sets the name of the bucket containing the multipart upload to abort.",
	"Method": "void setBucketName(String value){\r\n    this.bucketName = value;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SMSChannelResponse.withPromotionalMessagesPerSecond",
	"Comment": "promotional messages per second that can be sentreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SMSChannelResponse withPromotionalMessagesPerSecond(Integer promotionalMessagesPerSecond){\r\n    this.promotionalMessagesPerSecond = promotionalMessagesPerSecond;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceDetail.withEmotions",
	"Comment": "the emotions detected on the face, and the confidence level in thedetermination. for example, happy, sad, and angry.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "FaceDetail withEmotions(Emotion emotions,FaceDetail withEmotions,java.util.Collection<Emotion> emotions){\r\n    setEmotions(emotions);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ListReceiptRuleSetsResult.withRuleSets",
	"Comment": "the metadata for the currently active receipt rule set. the metadataconsists of the rule set name and the timestamp of when the rule set wascreated.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListReceiptRuleSetsResult withRuleSets(ReceiptRuleSetMetadata ruleSets,ListReceiptRuleSetsResult withRuleSets,java.util.Collection<ReceiptRuleSetMetadata> ruleSets){\r\n    setRuleSets(ruleSets);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartListing.getStorageClass",
	"Comment": "returns the class of storage used for the parts in the associatedmultipart upload.",
	"Method": "String getStorageClass(){\r\n    return storageClass;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.FromEmailAddressNotVerifiedException.getFromEmailAddress",
	"Comment": "indicates that the from email address associated with the customverification email template is not verified.",
	"Method": "String getFromEmailAddress(){\r\n    return fromEmailAddress;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListSubscriptionsByTopicRequest.getNextToken",
	"Comment": "token returned by the previous listsubscriptionsbytopicrequest.",
	"Method": "String getNextToken(){\r\n    return nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DescribeReceiptRuleRequest.withRuleSetName",
	"Comment": "the name of the receipt rule set that the receipt rule belongs to.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DescribeReceiptRuleRequest withRuleSetName(String ruleSetName){\r\n    this.ruleSetName = ruleSetName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.MessageConfiguration.withBaiduMessage",
	"Comment": "the message that the campaign delivers to baidu channels. overrides thedefault message.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "MessageConfiguration withBaiduMessage(Message baiduMessage){\r\n    this.baiduMessage = baiduMessage;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SSEAwsKeyManagementParams.getAwsKmsKeyId",
	"Comment": "returns the aws key management system key id used for encryption. returnsnull if default key id is used.",
	"Method": "String getAwsKmsKeyId(){\r\n    return awsKmsKeyId;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSVoipChannelResponse.withCreationDate",
	"Comment": "when was this segment createdreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSVoipChannelResponse withCreationDate(String creationDate){\r\n    this.creationDate = creationDate;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobResource.withSegmentName",
	"Comment": "a custom name for the segment created by the import job. use ifdefinesegment is true.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ImportJobResource withSegmentName(String segmentName){\r\n    this.segmentName = segmentName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketNotificationConfigurationRequest.withBucketName",
	"Comment": "sets the name of the bucket whose notification configuration is beingset, and returns this object so that additional method calls may bechained together.",
	"Method": "SetBucketNotificationConfigurationRequest withBucketName(String bucketName){\r\n    setBucketName(bucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.PutAttributesRequest.withDomainName",
	"Comment": "the name of the domain in which to perform the operation.returns a reference to this object so that method calls can be chained together.",
	"Method": "PutAttributesRequest withDomainName(String domainName){\r\n    this.domainName = domainName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.StartSpeechSynthesisTaskRequest.withLexiconNames",
	"Comment": "list of one or more pronunciation lexicon names you want the service toapply during synthesis. lexicons are applied only if the language of thelexicon is the same as the language of the voice.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "StartSpeechSynthesisTaskRequest withLexiconNames(String lexiconNames,StartSpeechSynthesisTaskRequest withLexiconNames,java.util.Collection<String> lexiconNames){\r\n    setLexiconNames(lexiconNames);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ListRetirableGrantsResult.withGrants",
	"Comment": "a list of grants.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListRetirableGrantsResult withGrants(GrantListEntry grants,ListRetirableGrantsResult withGrants,java.util.Collection<GrantListEntry> grants){\r\n    setGrants(grants);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSMessage.getRawContent",
	"Comment": "the raw json formatted string to be used as the payload. this valueoverrides the message.",
	"Method": "String getRawContent(){\r\n    return rawContent;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetCampaignsRequest.withPageSize",
	"Comment": "the number of entries you want on each page in the response.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetCampaignsRequest withPageSize(String pageSize){\r\n    this.pageSize = pageSize;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSChannelResponse.getHasTokenKey",
	"Comment": "indicates whether the channel is configured with a key for apns tokenauthentication. provide a token key by setting the tokenkey attribute.",
	"Method": "Boolean getHasTokenKey(){\r\n    return hasTokenKey;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteSmsChannelRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteSmsChannelRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.isLastPart",
	"Comment": "returns true if the creator of this request has indicated this part isthe last part being uploaded in a multipart upload.",
	"Method": "boolean isLastPart(){\r\n    return isLastPart;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.ListDomainsRequest.setNextToken",
	"Comment": "a string informing amazon simpledb where to start the next list ofdomain names.",
	"Method": "void setNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.lex.interactionkit.ui.InteractiveVoiceView.setAnimateOnImageSwitching",
	"Comment": "set the animation flag for switching image between microphone and bot.by default, the flag is false.",
	"Method": "void setAnimateOnImageSwitching(boolean animate){\r\n    animateOnImageSwitching = animate;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.listVerifiedEmailAddressesAsync",
	"Comment": "deprecated. use the listidentities operation to list theemail addresses and domains associated with your account.",
	"Method": "Future<ListVerifiedEmailAddressesResult> listVerifiedEmailAddressesAsync(ListVerifiedEmailAddressesRequest listVerifiedEmailAddressesRequest,Future<ListVerifiedEmailAddressesResult> listVerifiedEmailAddressesAsync,ListVerifiedEmailAddressesRequest listVerifiedEmailAddressesRequest,AsyncHandler<ListVerifiedEmailAddressesRequest, ListVerifiedEmailAddressesResult> asyncHandler){\r\n    return executorService.submit(new Callable<ListVerifiedEmailAddressesResult>() {\r\n        public ListVerifiedEmailAddressesResult call() throws Exception {\r\n            ListVerifiedEmailAddressesResult result = null;\r\n            try {\r\n                result = listVerifiedEmailAddresses(listVerifiedEmailAddressesRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(listVerifiedEmailAddressesRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.listVerifiedEmailAddressesAsync",
	"Comment": "deprecated. use the listidentities operation to list theemail addresses and domains associated with your account.",
	"Method": "Future<ListVerifiedEmailAddressesResult> listVerifiedEmailAddressesAsync(ListVerifiedEmailAddressesRequest listVerifiedEmailAddressesRequest,Future<ListVerifiedEmailAddressesResult> listVerifiedEmailAddressesAsync,ListVerifiedEmailAddressesRequest listVerifiedEmailAddressesRequest,AsyncHandler<ListVerifiedEmailAddressesRequest, ListVerifiedEmailAddressesResult> asyncHandler){\r\n    ListVerifiedEmailAddressesResult result = null;\r\n    try {\r\n        result = listVerifiedEmailAddresses(listVerifiedEmailAddressesRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(listVerifiedEmailAddressesRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.model.CopyResult.getDestinationBucketName",
	"Comment": "gets the destination bucket name which will contain the new, copiedobject.",
	"Method": "String getDestinationBucketName(){\r\n    return destinationBucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.Message.setImageSmallIconUrl",
	"Comment": "the url that points to the small icon image for the push notificationicon, for example, the app icon.",
	"Method": "void setImageSmallIconUrl(String imageSmallIconUrl){\r\n    this.imageSmallIconUrl = imageSmallIconUrl;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.DeleteAttributesRequest.getAttributes",
	"Comment": "a list of attributes. similar to columns on a spreadsheet, attributesrepresent categories of data that can be assigned to items.",
	"Method": "java.util.List<Attribute> getAttributes(){\r\n    if (attributes == null) {\r\n        attributes = new com.amazonaws.internal.ListWithAutoConstructFlag<Attribute>();\r\n        attributes.setAutoConstruct(true);\r\n    }\r\n    return attributes;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketWebsiteConfigurationRequest.withConfiguration",
	"Comment": "sets the website configuration to send as part of this request, andreturns this updated request object so that additional method calls canbe chained together.",
	"Method": "SetBucketWebsiteConfigurationRequest withConfiguration(BucketWebsiteConfiguration configuration){\r\n    setConfiguration(configuration);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.GetLexiconResult.getLexiconAttributes",
	"Comment": "metadata of the lexicon, including phonetic alphabetic used, languagecode, lexicon arn, number of lexemes defined in the lexicon, and size oflexicon in bytes.",
	"Method": "LexiconAttributes getLexiconAttributes(){\r\n    return lexiconAttributes;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.GetPlatformApplicationAttributesResult.clearAttributesEntries",
	"Comment": "removes all the entries added into attributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetPlatformApplicationAttributesResult clearAttributesEntries(){\r\n    this.attributes = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignEmailMessage.getFromAddress",
	"Comment": "the email address used to send the email from. defaults to usefromaddress specified in the email channel.",
	"Method": "String getFromAddress(){\r\n    return fromAddress;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CustomVerificationEmailTemplateAlreadyExistsException.getCustomVerificationEmailTemplateName",
	"Comment": "indicates that the provided custom verification email template with thespecified template name already exists.",
	"Method": "String getCustomVerificationEmailTemplateName(){\r\n    return customVerificationEmailTemplateName;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.Attribute.withName",
	"Comment": "the name of the attribute.returns a reference to this object so that method calls can be chained together.",
	"Method": "Attribute withName(String name){\r\n    this.name = name;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CreateCustomVerificationEmailTemplateRequest.setFailureRedirectionURL",
	"Comment": "the url that the recipient of the verification email is sent to if his orher address is not successfully verified.",
	"Method": "void setFailureRedirectionURL(String failureRedirectionURL){\r\n    this.failureRedirectionURL = failureRedirectionURL;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateEndpointRequest.withEndpointId",
	"Comment": "the unique id of the endpoint.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateEndpointRequest withEndpointId(String endpointId){\r\n    this.endpointId = endpointId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateSmsChannelRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateSmsChannelRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.EncryptionUtils.decryptObjectUsingMetadata",
	"Comment": "returns an updated object where the object content input stream containsthe decrypted contents.",
	"Method": "S3Object decryptObjectUsingMetadata(S3Object object,EncryptionMaterials materials,Provider cryptoProvider){\r\n    EncryptionInstruction instruction = EncryptionUtils.buildInstructionFromObjectMetadata(object, materials, cryptoProvider);\r\n    return EncryptionUtils.decryptObjectUsingInstruction(object, instruction);\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ListRetirableGrantsResult.getTruncated",
	"Comment": "a flag that indicates whether there are more items in the list. when thisvalue is true, the list in this response is truncated. to get more items,pass the value of the nextmarker element in this response tothe marker parameter in a subsequent request.",
	"Method": "Boolean getTruncated(){\r\n    return truncated;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SetReceiptRulePositionRequest.withRuleName",
	"Comment": "the name of the receipt rule to reposition.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SetReceiptRulePositionRequest withRuleName(String ruleName){\r\n    this.ruleName = ruleName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EmailChannelResponse.withIdentity",
	"Comment": "the arn of an identity verified with ses.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EmailChannelResponse withIdentity(String identity){\r\n    this.identity = identity;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketReplicationConfigurationRequest.setReplicationConfiguration",
	"Comment": "sets the replication configuration for an amazon s3 bucket.",
	"Method": "void setReplicationConfiguration(BucketReplicationConfiguration replicationConfiguration){\r\n    this.replicationConfiguration = replicationConfiguration;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListPlatformApplicationsResult.getPlatformApplications",
	"Comment": "platform applications returned when calling listplatformapplicationsaction.",
	"Method": "java.util.List<PlatformApplication> getPlatformApplications(){\r\n    return platformApplications;\r\n}"
}, {
	"Path": "com.amazonaws.services.lexrts.model.PostTextResult.setSlotToElicit",
	"Comment": "if the dialogstate value is elicitslot, returnsthe name of the slot for which amazon lex is eliciting a value.",
	"Method": "void setSlotToElicit(String slotToElicit){\r\n    this.slotToElicit = slotToElicit;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteApnsVoipSandboxChannelResult.setAPNSVoipSandboxChannelResponse",
	"Comment": "apple voip developer push notification service channel definition.",
	"Method": "void setAPNSVoipSandboxChannelResponse(APNSVoipSandboxChannelResponse aPNSVoipSandboxChannelResponse){\r\n    this.aPNSVoipSandboxChannelResponse = aPNSVoipSandboxChannelResponse;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteObjectsRequest.setKeys",
	"Comment": "sets the list of keys to delete from this bucket, clearing any existinglist of keys.",
	"Method": "void setKeys(List<KeyVersion> keys){\r\n    this.keys.clear();\r\n    this.keys.addAll(keys);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ResponseHeaderOverrides.getCacheControl",
	"Comment": "returns the cache control response header override if it has beenspecified, or null otherwise.",
	"Method": "String getCacheControl(){\r\n    return cacheControl;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.SendMessageBatchResult.setFailed",
	"Comment": "a list of batchresulterrorentry items with the error detail abouteach message that could not be enqueued.",
	"Method": "void setFailed(java.util.Collection<BatchResultErrorEntry> failed){\r\n    if (failed == null) {\r\n        this.failed = null;\r\n        return;\r\n    }\r\n    this.failed = new java.util.ArrayList<BatchResultErrorEntry>(failed);\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ListResourceTagsResult.setTruncated",
	"Comment": "a flag that indicates whether there are more items in the list. when thisvalue is true, the list in this response is truncated. to get more items,pass the value of the nextmarker element in this response tothe marker parameter in a subsequent request.",
	"Method": "void setTruncated(Boolean truncated){\r\n    this.truncated = truncated;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.GetCustomVerificationEmailTemplateRequest.withTemplateName",
	"Comment": "the name of the custom verification email template that you want toretrieve.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetCustomVerificationEmailTemplateRequest withTemplateName(String templateName){\r\n    this.templateName = templateName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketAnalyticsConfigurationsResult.withTruncated",
	"Comment": "for internal use only. sets the truncated property forthis analytics configuration listing, indicating if this is a complete listing or not andwhether the caller needs to make additional calls to s3 to get more results.",
	"Method": "ListBucketAnalyticsConfigurationsResult withTruncated(boolean isTruncated){\r\n    setTruncated(isTruncated);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.buffered.ReceiveQueueBuffer.reportBatchFinished",
	"Comment": "this method is called by the batches after they have finished retrievingthe messages.",
	"Method": "void reportBatchFinished(ReceiveMessageBatchTask batch){\r\n    synchronized (finishedTasks) {\r\n        finishedTasks.addLast(batch);\r\n        if (log.isTraceEnabled()) {\r\n            log.info(\"Queue \" + qUrl + \" now has \" + finishedTasks.size() + \" receive results cached \");\r\n        }\r\n    }\r\n    synchronized (taskSpawnSyncPoint) {\r\n        --inflightReceiveMessageBatches;\r\n    }\r\n    satisfyFuturesFromBuffer();\r\n    spawnMoreReceiveTasks();\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.buffered.ReceiveQueueBuffer.receiveMessageAsync",
	"Comment": "submits the request for retrieval of messages from the queue and returnsa future that will be signalled when the request is satisfied. the futuremay already be signalled by the time it is returned.",
	"Method": "QueueBufferFuture<ReceiveMessageRequest, ReceiveMessageResult> receiveMessageAsync(ReceiveMessageRequest rq,QueueBufferCallback<ReceiveMessageRequest, ReceiveMessageResult> callback){\r\n    if (shutDown) {\r\n        throw new AmazonClientException(\"The client has been shut down.\");\r\n    }\r\n    int numMessages = 10;\r\n    if (rq.getMaxNumberOfMessages() != null) {\r\n        numMessages = rq.getMaxNumberOfMessages();\r\n    }\r\n    QueueBufferFuture<ReceiveMessageRequest, ReceiveMessageResult> toReturn = issueFuture(numMessages, callback);\r\n    satisfyFuturesFromBuffer();\r\n    spawnMoreReceiveTasks();\r\n    return toReturn;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.model.CopyResult.setVersionId",
	"Comment": "sets the version id of the new object, only present if versioning hasbeen enabled for the bucket.",
	"Method": "void setVersionId(String versionId){\r\n    this.versionId = versionId;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSVoipSandboxChannelResponse.withEnabled",
	"Comment": "if the channel is enabled for sending messages.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSVoipSandboxChannelResponse withEnabled(Boolean enabled){\r\n    this.enabled = enabled;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SendRawEmailRequest.setConfigurationSetName",
	"Comment": "the name of the configuration set to use when you send an email usingsendrawemail.",
	"Method": "void setConfigurationSetName(String configurationSetName){\r\n    this.configurationSetName = configurationSetName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetBucketWebsiteConfigurationRequest.getBucketName",
	"Comment": "returns the name of the bucket whose website configuration is beingretrieved.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ExportJobResponse.setFailedPieces",
	"Comment": "the number of pieces that failed to be processed as of the time of therequest.",
	"Method": "void setFailedPieces(Integer failedPieces){\r\n    this.failedPieces = failedPieces;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartCelebrityRecognitionRequest.getNotificationChannel",
	"Comment": "the amazon sns topic arn that you want amazon rekognition video topublish the completion status of the celebrity recognition analysis to.",
	"Method": "NotificationChannel getNotificationChannel(){\r\n    return notificationChannel;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CreateCustomVerificationEmailTemplateRequest.getTemplateContent",
	"Comment": "the content of the custom verification email. the total size of the emailmust be less than 10 mb. the message body may contain html, with somelimitations. for more information, see custom verification email frequently asked questions in theamazon ses developer guide.",
	"Method": "String getTemplateContent(){\r\n    return templateContent;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SendUsersMessageRequest.getUsers",
	"Comment": "a map that associates user ids with endpointsendconfiguration objects.within an endpointsendconfiguration object, you can tailor the messagefor a user by specifying message overrides or substitutions.",
	"Method": "java.util.Map<String, EndpointSendConfiguration> getUsers(){\r\n    return users;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceDetail.setGender",
	"Comment": "gender of the face and the confidence level in the determination.",
	"Method": "void setGender(Gender gender){\r\n    this.gender = gender;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.InitiateMultipartUploadResult.getAbortDate",
	"Comment": "date when multipart upload will become eligible for abort operation by lifecycle.",
	"Method": "Date getAbortDate(){\r\n    return abortDate;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GenericBucketRequest.withBucketName",
	"Comment": "sets the name of the target bucket, and returns this updated requestobject so that additional method calls can be chained together.",
	"Method": "GenericBucketRequest withBucketName(String bucketName){\r\n    setBucketName(bucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Result.setNextContinuationToken",
	"Comment": "sets the optional nextcontinuationtoken. nextcontinuationtoken is sentwhen istruncated is true meaning there are more keys in the bucket thatcan be listed. the next list requests to amazon s3 can be continued byproviding this nextcontinuationtoken.",
	"Method": "void setNextContinuationToken(String nextContinuationToken){\r\n    this.nextContinuationToken = nextContinuationToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ObjectListing.getMarker",
	"Comment": "gets the marker parameter originally used to request this object listing,or null if no marker was specified. if specified, allobjects and common prefixes included in this object listing will occuralphabetically after the specified marker.",
	"Method": "String getMarker(){\r\n    return marker;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetCelebrityRecognitionResult.withStatusMessage",
	"Comment": "if the job fails, statusmessage provides a descriptive errormessage.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetCelebrityRecognitionResult withStatusMessage(String statusMessage){\r\n    this.statusMessage = statusMessage;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.KinesisFirehoseDestination.setIAMRoleARN",
	"Comment": "the arn of the iam role under which amazon ses publishes email sendingevents to the amazon kinesis firehose stream.",
	"Method": "void setIAMRoleARN(String iAMRoleARN){\r\n    this.iAMRoleARN = iAMRoleARN;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.UpdateCustomVerificationEmailTemplateRequest.setTemplateName",
	"Comment": "the name of the custom verification email template that you want toupdate.",
	"Method": "void setTemplateName(String templateName){\r\n    this.templateName = templateName;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.BatchPutAttributesRequest.getDomainName",
	"Comment": "the name of the domain in which the attributes are being stored.",
	"Method": "String getDomainName(){\r\n    return domainName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GCMMessage.withImageIconUrl",
	"Comment": "the url that points to an image used as the large icon to thenotification content view.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GCMMessage withImageIconUrl(String imageIconUrl){\r\n    this.imageIconUrl = imageIconUrl;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetPersonTrackingResult.setPersons",
	"Comment": "an array of the persons detected in the video and the times they aretracked throughout the video. an array element will exist for each timethe person is tracked.",
	"Method": "void setPersons(java.util.Collection<PersonDetection> persons){\r\n    if (persons == null) {\r\n        this.persons = null;\r\n        return;\r\n    }\r\n    this.persons = new java.util.ArrayList<PersonDetection>(persons);\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.ChangeMessageVisibilityBatchResult.setSuccessful",
	"Comment": "a list of changemessagevisibilitybatchresultentry items.",
	"Method": "void setSuccessful(java.util.Collection<ChangeMessageVisibilityBatchResultEntry> successful){\r\n    if (successful == null) {\r\n        this.successful = null;\r\n        return;\r\n    }\r\n    this.successful = new java.util.ArrayList<ChangeMessageVisibilityBatchResultEntry>(successful);\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.GetCustomVerificationEmailTemplateResult.setSuccessRedirectionURL",
	"Comment": "the url that the recipient of the verification email is sent to if his orher address is successfully verified.",
	"Method": "void setSuccessRedirectionURL(String successRedirectionURL){\r\n    this.successRedirectionURL = successRedirectionURL;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.buffered.QueueBuffer.waitForFuture",
	"Comment": "this method carefully waits for futures. if waiting throws, it convertsthe exceptions to the exceptions that sqs clients expect. this is what weuse to turn asynchronous calls into synchronous ones",
	"Method": "ResultType waitForFuture(Future<ResultType> future){\r\n    ResultType toReturn = null;\r\n    try {\r\n        toReturn = future.get();\r\n    } catch (InterruptedException ie) {\r\n        Thread.currentThread().interrupt();\r\n        AmazonClientException ce = new AmazonClientException(\"Thread interrupted while waiting for execution result\");\r\n        ce.initCause(ie);\r\n        throw ce;\r\n    } catch (ExecutionException ee) {\r\n        Throwable cause = ee.getCause();\r\n        if (cause instanceof AmazonClientException) {\r\n            throw (AmazonClientException) cause;\r\n        }\r\n        AmazonClientException ce = new AmazonClientException(\"Caught an exception while waiting for request to complete...\");\r\n        ce.initCause(ee);\r\n        throw ce;\r\n    }\r\n    return toReturn;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListEndpointsByPlatformApplicationRequest.getNextToken",
	"Comment": "nexttoken string is used when calling listendpointsbyplatformapplicationaction to retrieve additional records that are available after the firstpage results.",
	"Method": "String getNextToken(){\r\n    return nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ListKeyPoliciesResult.getPolicyNames",
	"Comment": "a list of key policy names. currently, there is only one key policy percmk and it is always named default.",
	"Method": "java.util.List<String> getPolicyNames(){\r\n    return policyNames;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSSandboxChannelResponse.withLastModifiedBy",
	"Comment": "who last updated this entryreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSSandboxChannelResponse withLastModifiedBy(String lastModifiedBy){\r\n    this.lastModifiedBy = lastModifiedBy;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMChannelResponse.withHasCredential",
	"Comment": "not used. retained for backwards compatibility.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ADMChannelResponse withHasCredential(Boolean hasCredential){\r\n    this.hasCredential = hasCredential;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.WriteCampaignRequest.withMessageConfiguration",
	"Comment": "the message configuration settings.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "WriteCampaignRequest withMessageConfiguration(MessageConfiguration messageConfiguration){\r\n    this.messageConfiguration = messageConfiguration;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.EncryptionUtils.isEncryptionInfoInInstructionFile",
	"Comment": "returns true if the specified s3object is an instruction file containingencryption info, false otherwise.",
	"Method": "boolean isEncryptionInfoInInstructionFile(S3Object instructionFile){\r\n    if (instructionFile == null) {\r\n        return false;\r\n    }\r\n    Map<String, String> metadata = instructionFile.getObjectMetadata().getUserMetadata();\r\n    if (metadata == null) {\r\n        return false;\r\n    }\r\n    return metadata.containsKey(Headers.CRYPTO_INSTRUCTION_FILE);\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.amazonmobileanalytics.internal.core.util.StringUtil.trimOrPadString",
	"Comment": "trims string to its last x characters. if string is too short, is paddedat the front with given char",
	"Method": "String trimOrPadString(String str,int len,char pad){\r\n    if (len < 0) {\r\n        len = 0;\r\n    }\r\n    if (str == null) {\r\n        str = \"\";\r\n    }\r\n    StringBuffer s = new StringBuffer();\r\n    if (str.length() > len - 1) {\r\n        s.append(str.substring(str.length() - len));\r\n    } else {\r\n        for (int i = 0; i < len - str.length(); i++) {\r\n            s.append(pad);\r\n        }\r\n        s.append(str);\r\n    }\r\n    return s.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ApplicationSettingsResource.withQuietTime",
	"Comment": "the default quiet time for the app. each campaign for this app sends nomessages during this time unless the campaign overrides the default witha quiet time of its own.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ApplicationSettingsResource withQuietTime(QuietTime quietTime){\r\n    this.quietTime = quietTime;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transferutility.TransferDBUtil.insertSingleTransferRecord",
	"Comment": "inserts a transfer record into database with the given values.",
	"Method": "Uri insertSingleTransferRecord(TransferType type,String bucket,String key,File file,ObjectMetadata metadata,Uri insertSingleTransferRecord,TransferType type,String bucket,String key,File file,ObjectMetadata metadata,CannedAccessControlList cannedAcl,Uri insertSingleTransferRecord,TransferType type,String bucket,String key,File file){\r\n    return insertSingleTransferRecord(type, bucket, key, file, new ObjectMetadata());\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.createTemplateAsync",
	"Comment": "creates an email template. email templates enable you to sendpersonalized email to one or more destinations in a single api operation.for more information, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "Future<CreateTemplateResult> createTemplateAsync(CreateTemplateRequest createTemplateRequest,Future<CreateTemplateResult> createTemplateAsync,CreateTemplateRequest createTemplateRequest,AsyncHandler<CreateTemplateRequest, CreateTemplateResult> asyncHandler){\r\n    return executorService.submit(new Callable<CreateTemplateResult>() {\r\n        public CreateTemplateResult call() throws Exception {\r\n            CreateTemplateResult result = null;\r\n            try {\r\n                result = createTemplate(createTemplateRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(createTemplateRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.createTemplateAsync",
	"Comment": "creates an email template. email templates enable you to sendpersonalized email to one or more destinations in a single api operation.for more information, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "Future<CreateTemplateResult> createTemplateAsync(CreateTemplateRequest createTemplateRequest,Future<CreateTemplateResult> createTemplateAsync,CreateTemplateRequest createTemplateRequest,AsyncHandler<CreateTemplateRequest, CreateTemplateResult> asyncHandler){\r\n    CreateTemplateResult result = null;\r\n    try {\r\n        result = createTemplate(createTemplateRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(createTemplateRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.WriteApplicationSettingsRequest.withCloudWatchMetricsEnabled",
	"Comment": "the cloudwatchmetrics settings for the app.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "WriteApplicationSettingsRequest withCloudWatchMetricsEnabled(Boolean cloudWatchMetricsEnabled){\r\n    this.cloudWatchMetricsEnabled = cloudWatchMetricsEnabled;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CreateCustomVerificationEmailTemplateRequest.setTemplateContent",
	"Comment": "the content of the custom verification email. the total size of the emailmust be less than 10 mb. the message body may contain html, with somelimitations. for more information, see custom verification email frequently asked questions in theamazon ses developer guide.",
	"Method": "void setTemplateContent(String templateContent){\r\n    this.templateContent = templateContent;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ConfigurationSetSendingPausedException.getConfigurationSetName",
	"Comment": "the name of the configuration set for which email sending is disabled.",
	"Method": "String getConfigurationSetName(){\r\n    return configurationSetName;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DeleteReceiptRuleRequest.withRuleName",
	"Comment": "the name of the receipt rule to delete.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteReceiptRuleRequest withRuleName(String ruleName){\r\n    this.ruleName = ruleName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.kinesisvideo.internal.producer.jni.NativeKinesisVideoProducerJni.stopStreams",
	"Comment": "stops all kinesis video streams. this is an async operation and the buffers will continue draining.",
	"Method": "void stopStreams(){\r\n    if (!isInitialized()) {\r\n        return;\r\n    }\r\n    synchronized (mSyncObject) {\r\n        stopKinesisVideoStreams(mClientHandle);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.PutAttributesRequest.setExpected",
	"Comment": "the update condition which, if specified, determines whether thespecified attributes will be updated or not. the update condition mustbe satisfied in order for this request to be processed and theattributes to be updated.",
	"Method": "void setExpected(UpdateCondition expected){\r\n    this.expected = expected;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceDetail.withMustache",
	"Comment": "indicates whether or not the face has a mustache, and the confidencelevel in the determination.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "FaceDetail withMustache(Mustache mustache){\r\n    this.mustache = mustache;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.iotdata.model.GetThingShadowResult.withPayload",
	"Comment": "the state information, in json format.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetThingShadowResult withPayload(java.nio.ByteBuffer payload){\r\n    this.payload = payload;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.CreateVocabularyRequest.withPhrases",
	"Comment": "an array of strings that contains the vocabulary entries.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreateVocabularyRequest withPhrases(String phrases,CreateVocabularyRequest withPhrases,java.util.Collection<String> phrases){\r\n    setPhrases(phrases);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointBatchItem.clearAttributesEntries",
	"Comment": "removes all the entries added into attributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointBatchItem clearAttributesEntries(){\r\n    this.attributes = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyPartRequest.withUnmodifiedSinceConstraint",
	"Comment": "sets the optional unmodified constraint that restricts this request toexecuting only if the source object has not been modified afterthe specified date. returns this object, enabling additional method callsto be chained together.the unmodified constraint may be used with matching etag constraints, butnot with any other type of constraint.note that amazon s3 will ignore any dates occurring in the future.",
	"Method": "CopyPartRequest withUnmodifiedSinceConstraint(Date date){\r\n    setUnmodifiedSinceConstraint(date);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateEndpointsBatchResult.withMessageBody",
	"Comment": "simple message object.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateEndpointsBatchResult withMessageBody(MessageBody messageBody){\r\n    this.messageBody = messageBody;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetCampaignVersionRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetCampaignVersionRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser.parseLoggingStatusResponse",
	"Comment": "parses a loggingstatus response xml document for a bucket from an inputstream.",
	"Method": "BucketLoggingConfigurationHandler parseLoggingStatusResponse(InputStream inputStream){\r\n    final BucketLoggingConfigurationHandler handler = new BucketLoggingConfigurationHandler();\r\n    parseXmlInputStream(handler, inputStream);\r\n    return handler;\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.TranscriptionJob.getSettings",
	"Comment": "optional settings for the transcription job. use these settings to turnon speaker recognition, to set the maximum number of speakers that shouldbe identified and to specify a custom vocabulary to use when processingthe transcription job.",
	"Method": "Settings getSettings(){\r\n    return settings;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketAnalyticsConfigurationsRequest.setBucketName",
	"Comment": "sets the name of the amazon s3 bucket whose analytics configurations are to be listed.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentResponse.withCreationDate",
	"Comment": "the date and time when the segment was created.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SegmentResponse withCreationDate(String creationDate){\r\n    this.creationDate = creationDate;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceDetail.getBeard",
	"Comment": "indicates whether or not the face has a beard, and the confidence levelin the determination.",
	"Method": "Beard getBeard(){\r\n    return beard;\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.GetMLModelResult.withScoreThreshold",
	"Comment": "the scoring threshold is used in binary classificationmlmodel models. it marks theboundary between a positive prediction and a negative prediction.output values greater than or equal to the threshold receive a positiveresult from the mlmodel, such as true. output values lessthan the threshold receive a negative response from the mlmodel, such asfalse.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetMLModelResult withScoreThreshold(Float scoreThreshold){\r\n    this.scoreThreshold = scoreThreshold;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteUserEndpointsRequest.withUserId",
	"Comment": "the unique id of the user.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteUserEndpointsRequest withUserId(String userId){\r\n    this.userId = userId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.iotdata.model.UpdateThingShadowResult.withPayload",
	"Comment": "the state information, in json format.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateThingShadowResult withPayload(java.nio.ByteBuffer payload){\r\n    this.payload = payload;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartContentModerationRequest.withVideo",
	"Comment": "the video in which you want to moderate content. the video must be storedin an amazon s3 bucket.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "StartContentModerationRequest withVideo(Video video){\r\n    this.video = video;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.kinesis.kinesisrecorder.AbstractKinesisRecorder.getDiskBytesUsed",
	"Comment": "returns the number of bytes kinesisrecorder currently has stored in thedirectory passed in the constructor.",
	"Method": "long getDiskBytesUsed(){\r\n    return recordStore.getFileSize();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.iterable.S3Versions.forKey",
	"Comment": "constructs an iterable that covers the versions of a single amazon s3object.",
	"Method": "S3Versions forKey(AmazonS3 s3,String bucketName,String key){\r\n    S3Versions versions = new S3Versions(s3, bucketName);\r\n    versions.key = key;\r\n    return versions;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Result.getPrefix",
	"Comment": "gets the prefix parameter originally used to request this object listing,or null if no prefix was specified. all objects and commonprefixes included in this object listing start with the specified prefix.",
	"Method": "String getPrefix(){\r\n    return prefix;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointRequest.getRequestId",
	"Comment": "the unique id for the most recent request to update the endpoint.",
	"Method": "String getRequestId(){\r\n    return requestId;\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateEventConfigurationsRequest.cleareventConfigurationsEntries",
	"Comment": "removes all the entries added into eventconfigurations.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateEventConfigurationsRequest cleareventConfigurationsEntries(){\r\n    this.eventConfigurations = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceRecord.withFace",
	"Comment": "describes the face properties such as the bounding box, face id, image idof the input image, and external image id that you assigned.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "FaceRecord withFace(Face face){\r\n    this.face = face;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.SearchFacesByImageResult.setFaceMatches",
	"Comment": "an array of faces that match the input face, along with the confidence inthe match.",
	"Method": "void setFaceMatches(java.util.Collection<FaceMatch> faceMatches){\r\n    if (faceMatches == null) {\r\n        this.faceMatches = null;\r\n        return;\r\n    }\r\n    this.faceMatches = new java.util.ArrayList<FaceMatch>(faceMatches);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EventStream.setLastModifiedDate",
	"Comment": "the date the event stream was last updated in iso 8601 format.",
	"Method": "void setLastModifiedDate(String lastModifiedDate){\r\n    this.lastModifiedDate = lastModifiedDate;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.RemoveTagsFromStreamRequest.withTagKeys",
	"Comment": "a list of tag keys. each corresponding tag is removed from the stream.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "RemoveTagsFromStreamRequest withTagKeys(String tagKeys,RemoveTagsFromStreamRequest withTagKeys,java.util.Collection<String> tagKeys){\r\n    setTagKeys(tagKeys);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.TemplateDoesNotExistException.getTemplateName",
	"Comment": "returns the value of the templatename property for this object.",
	"Method": "String getTemplateName(){\r\n    return templateName;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CreateCustomVerificationEmailTemplateRequest.withTemplateSubject",
	"Comment": "the subject line of the custom verification email.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreateCustomVerificationEmailTemplateRequest withTemplateSubject(String templateSubject){\r\n    this.templateSubject = templateSubject;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteBucketInventoryConfigurationRequest.getBucketName",
	"Comment": "returns the name of the bucket containing the inventory configuration to delete.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.pinpoint.targeting.notification.NotificationClient.handleGCMCampaignPush",
	"Comment": "handles pinpoint gcm push messages by posting a local notification whenthe app is in the background, or sending a local broadcast if the app isin the foreground. also on api level 19 devices and above, if localnotifications have been disabled and the app is in the background, alocal broadcast is sent.",
	"Method": "CampaignPushResult handleGCMCampaignPush(String from,Bundle data,Class<? extends Service> serviceClass){\r\n    NotificationDetails.NotificationDetailsBuilder notificationDetailsBuilder = NotificationDetails.builder().from(from).bundle(data).serviceClass(serviceClass).intentAction(GCM_INTENT_ACTION);\r\n    return notificationClientBase.handleCampaignPush(notificationDetailsBuilder.build());\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSMessage.withMediaUrl",
	"Comment": "the url that points to a video used in the push notification.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSMessage withMediaUrl(String mediaUrl){\r\n    this.mediaUrl = mediaUrl;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Beard.isValue",
	"Comment": "boolean value that indicates whether the face has beard or not.",
	"Method": "Boolean isValue(){\r\n    return value;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteBucketInventoryConfigurationRequest.setBucketName",
	"Comment": "sets the name of the bucket containing the inventory configuration to delete.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ReceiptAction.withStopAction",
	"Comment": "terminates the evaluation of the receipt rule set and optionallypublishes a notification to amazon sns.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ReceiptAction withStopAction(StopAction stopAction){\r\n    this.stopAction = stopAction;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobRequest.isDefineSegment",
	"Comment": "sets whether the endpoints create a segment when they are imported.",
	"Method": "Boolean isDefineSegment(){\r\n    return defineSegment;\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ValidateSecurityProfileBehaviorsResult.withValidationErrors",
	"Comment": "the list of any errors found in the behaviors.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ValidateSecurityProfileBehaviorsResult withValidationErrors(ValidationError validationErrors,ValidateSecurityProfileBehaviorsResult withValidationErrors,java.util.Collection<ValidationError> validationErrors){\r\n    setValidationErrors(validationErrors);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ViolationEvent.withViolationEventTime",
	"Comment": "the time the violation event occurred.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ViolationEvent withViolationEventTime(java.util.Date violationEventTime){\r\n    this.violationEventTime = violationEventTime;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.mobileanalytics.model.PutEventsRequest.withEvents",
	"Comment": "an array of event json objectsreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PutEventsRequest withEvents(Event events,PutEventsRequest withEvents,java.util.Collection<Event> events){\r\n    setEvents(events);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetApnsChannelRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetApnsChannelRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.auth.AwsChunkedEncodingInputStream.setUpNextChunk",
	"Comment": "read in the next chunk of data, and create the necessary chunkextensions.",
	"Method": "boolean setUpNextChunk(){\r\n    byte[] chunkData = new byte[DEFAULT_CHUNK_SIZE];\r\n    int chunkSizeInBytes = 0;\r\n    while (chunkSizeInBytes < DEFAULT_CHUNK_SIZE) {\r\n        if (null != decodedStreamBuffer && decodedStreamBuffer.hasNext()) {\r\n            chunkData[chunkSizeInBytes++] = decodedStreamBuffer.next();\r\n        } else {\r\n            final int bytesToRead = DEFAULT_CHUNK_SIZE - chunkSizeInBytes;\r\n            final int count = is.read(chunkData, chunkSizeInBytes, bytesToRead);\r\n            if (count != -1) {\r\n                if (null != decodedStreamBuffer) {\r\n                    decodedStreamBuffer.buffer(chunkData, chunkSizeInBytes, count);\r\n                }\r\n                chunkSizeInBytes += count;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    if (chunkSizeInBytes == 0) {\r\n        final byte[] signedFinalChunk = createSignedChunk(FINAL_CHUNK);\r\n        currentChunkIterator = new ChunkContentIterator(signedFinalChunk);\r\n        return true;\r\n    } else {\r\n        if (chunkSizeInBytes < chunkData.length) {\r\n            final byte[] temp = new byte[chunkSizeInBytes];\r\n            System.arraycopy(chunkData, 0, temp, 0, chunkSizeInBytes);\r\n            chunkData = temp;\r\n        }\r\n        final byte[] signedChunkContent = createSignedChunk(chunkData);\r\n        currentChunkIterator = new ChunkContentIterator(signedChunkContent);\r\n        return false;\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointRequest.withRequestId",
	"Comment": "the unique id for the most recent request to update the endpoint.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointRequest withRequestId(String requestId){\r\n    this.requestId = requestId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Sunglasses.getValue",
	"Comment": "boolean value that indicates whether the face is wearing sunglasses ornot.",
	"Method": "Boolean getValue(){\r\n    return value;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListSubscriptionsRequest.withNextToken",
	"Comment": "token returned by the previous listsubscriptions request.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListSubscriptionsRequest withNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetEndpointRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetEndpointRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.internal.MultipleFileDownloadImpl.getBucketName",
	"Comment": "returns the name of the bucket from which files are downloaded.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateEmailChannelResult.withEmailChannelResponse",
	"Comment": "email channel response.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateEmailChannelResult withEmailChannelResponse(EmailChannelResponse emailChannelResponse){\r\n    this.emailChannelResponse = emailChannelResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Image.withS3Object",
	"Comment": "identifies an s3 object as the image source.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Image withS3Object(S3Object s3Object){\r\n    this.s3Object = s3Object;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ReplicationRule.withDestinationConfig",
	"Comment": "sets the destination configuration for the replication rule.returns theupdated object.",
	"Method": "ReplicationRule withDestinationConfig(ReplicationDestinationConfig destinationConfig){\r\n    setDestinationConfig(destinationConfig);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.FilterLogEventsRequest.setInterleaved",
	"Comment": "if the value is true, the operation makes a best effort to provideresponses that contain events from multiple log streams within the loggroup, interleaved in a single response. if the value is false, all thematched log events in the first log stream are searched first, then thosein the next log stream, and so on. the default is false.",
	"Method": "void setInterleaved(Boolean interleaved){\r\n    this.interleaved = interleaved;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.AmazonS3EncryptionClient.newAWSKMSClient",
	"Comment": "creates and returns a new instance of aws kms client in the case whenan explicit aws kms client is not specified.",
	"Method": "AWSKMSClient newAWSKMSClient(AWSCredentialsProvider credentialsProvider,ClientConfiguration clientConfig,CryptoConfiguration cryptoConfig,RequestMetricCollector requestMetricCollector){\r\n    final AWSKMSClient kmsClient = new AWSKMSClient(credentialsProvider, clientConfig, requestMetricCollector);\r\n    final Region kmsRegion = cryptoConfig.getAwsKmsRegion();\r\n    if (kmsRegion != null)\r\n        kmsClient.setRegion(kmsRegion);\r\n    return kmsClient;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SMSMessage.withKeyword",
	"Comment": "the sms program name that you provided to aws support when you requestedyour dedicated number.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SMSMessage withKeyword(String keyword){\r\n    this.keyword = keyword;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.lex.interactionkit.continuations.LexServiceContinuation.continueWithCurrentMode",
	"Comment": "use this method to continue with the current input and output mode.",
	"Method": "void continueWithCurrentMode(){\r\n    Log.d(\"SDK\", \" -- responseMode: \" + responseMode + \"; requestMode: \" + requestMode);\r\n    if (ResponseType.AUDIO_MPEG.equals(responseMode) && ResponseType.AUDIO_MPEG.equals(requestMode)) {\r\n        continueWithAudioInForAudioOut();\r\n    } else {\r\n        throw new InvalidParameterException(\"Cannot continue with current mode, if request and response are not audio\");\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartCelebrityRecognitionRequest.setNotificationChannel",
	"Comment": "the amazon sns topic arn that you want amazon rekognition video topublish the completion status of the celebrity recognition analysis to.",
	"Method": "void setNotificationChannel(NotificationChannel notificationChannel){\r\n    this.notificationChannel = notificationChannel;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.lex.interactionkit.InteractionClient.sendAudioRequest",
	"Comment": "this method will be invoked when speech frames are detected in the audioinput over the microphone.",
	"Method": "void sendAudioRequest(Handler handler,PostContentRequest request,InteractionClient client,ResponseType mode){\r\n    new Thread(new Runnable() {\r\n        @Override\r\n        public void run() {\r\n            try {\r\n                final PostContentResult result = amazonlex.postContent(request);\r\n                processResponseAudioPlayback(handler, result, client, mode, ResponseType.AUDIO_MPEG);\r\n            } catch (final Exception e) {\r\n                final Runnable returnCallBack = new Runnable() {\r\n                    @Override\r\n                    public void run() {\r\n                        interactionListener.onInteractionError(null, e);\r\n                    }\r\n                };\r\n                handler.post(returnCallBack);\r\n            } finally {\r\n                setBusyState(NOT_BUSY);\r\n            }\r\n        }\r\n    }).start();\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.lex.interactionkit.InteractionClient.sendAudioRequest",
	"Comment": "this method will be invoked when speech frames are detected in the audioinput over the microphone.",
	"Method": "void sendAudioRequest(Handler handler,PostContentRequest request,InteractionClient client,ResponseType mode){\r\n    try {\r\n        final PostContentResult result = amazonlex.postContent(request);\r\n        processResponseAudioPlayback(handler, result, client, mode, ResponseType.AUDIO_MPEG);\r\n    } catch (final Exception e) {\r\n        final Runnable returnCallBack = new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                interactionListener.onInteractionError(null, e);\r\n            }\r\n        };\r\n        handler.post(returnCallBack);\r\n    } finally {\r\n        setBusyState(NOT_BUSY);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.lex.interactionkit.InteractionClient.sendAudioRequest",
	"Comment": "this method will be invoked when speech frames are detected in the audioinput over the microphone.",
	"Method": "void sendAudioRequest(Handler handler,PostContentRequest request,InteractionClient client,ResponseType mode){\r\n    interactionListener.onInteractionError(null, e);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketNotificationConfigurationRequest.withNotificationConfiguration",
	"Comment": "sets the new notification configuration for the specified bucket andreturns this object, enabling additional method calls to be chainedtogether.",
	"Method": "SetBucketNotificationConfigurationRequest withNotificationConfiguration(BucketNotificationConfiguration notificationConfiguration){\r\n    setNotificationConfiguration(notificationConfiguration);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.GetCustomVerificationEmailTemplateResult.withTemplateSubject",
	"Comment": "the subject line of the custom verification email.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetCustomVerificationEmailTemplateResult withTemplateSubject(String templateSubject){\r\n    this.templateSubject = templateSubject;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.TranscriptionJobSummary.withCompletionTime",
	"Comment": "a timestamp that shows when the job was completed.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "TranscriptionJobSummary withCompletionTime(java.util.Date completionTime){\r\n    this.completionTime = completionTime;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.DescribeLogStreamsRequest.getDescending",
	"Comment": "if the value is true, results are returned in descending order. if thevalue is to false, results are returned in ascending order. the defaultvalue is false.",
	"Method": "Boolean getDescending(){\r\n    return descending;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CORSRule.getAllowedOrigins",
	"Comment": "returns the allowed origins of this rule and returns a reference to thisobject for method chaining.",
	"Method": "List<String> getAllowedOrigins(){\r\n    return allowedOrigins;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DefaultPushNotificationMessage.setSilentPush",
	"Comment": "indicates if the message should display on the users device. silentpushes can be used for remote configuration and phone home use cases.",
	"Method": "void setSilentPush(Boolean silentPush){\r\n    this.silentPush = silentPush;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketInventoryConfigurationsResult.withTruncated",
	"Comment": "for internal use only. sets the truncated property forthis inventory configuration listing, indicating if this is a complete listing or not andwhether the caller needs to make additional calls to s3 to get more results.",
	"Method": "ListBucketInventoryConfigurationsResult withTruncated(boolean isTruncated){\r\n    setTruncated(isTruncated);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.GetMLModelResult.getLastUpdatedAt",
	"Comment": "the time of the most recent edit to the mlmodel. the time isexpressed in epoch time.",
	"Method": "java.util.Date getLastUpdatedAt(){\r\n    return lastUpdatedAt;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ObjectListing.setEncodingType",
	"Comment": "for internal use only. sets the encoding type used by amazon s3 to encodeobject key names in the xml response.",
	"Method": "void setEncodingType(String encodingType){\r\n    this.encodingType = encodingType;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ListCustomVerificationEmailTemplatesResult.setCustomVerificationEmailTemplates",
	"Comment": "a list of the custom verification email templates that exist in youraccount.",
	"Method": "void setCustomVerificationEmailTemplates(java.util.Collection<CustomVerificationEmailTemplate> customVerificationEmailTemplates){\r\n    if (customVerificationEmailTemplates == null) {\r\n        this.customVerificationEmailTemplates = null;\r\n        return;\r\n    }\r\n    this.customVerificationEmailTemplates = new java.util.ArrayList<CustomVerificationEmailTemplate>(customVerificationEmailTemplates);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.NumberValidateResponse.withPhoneType",
	"Comment": "a description of the phone type. possible values are mobile, landline,voip, invalid, prepaid, and other.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "NumberValidateResponse withPhoneType(String phoneType){\r\n    this.phoneType = phoneType;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.AmazonPollyClient.putLexicon",
	"Comment": "stores a pronunciation lexicon in an aws region. if a lexicon with thesame name already exists in the region, it is overwritten by the newlexicon. lexicon operations have eventual consistency, therefore, itmight take some time before the lexicon is available to thesynthesizespeech operation.for more information, see managing lexicons.",
	"Method": "PutLexiconResult putLexicon(PutLexiconRequest putLexiconRequest){\r\n    ExecutionContext executionContext = createExecutionContext(putLexiconRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<PutLexiconRequest> request = null;\r\n    Response<PutLexiconResult> response = null;\r\n    try {\r\n        awsRequestMetrics.startEvent(Field.RequestMarshallTime);\r\n        try {\r\n            request = new PutLexiconRequestMarshaller().marshall(putLexiconRequest);\r\n            request.setAWSRequestMetrics(awsRequestMetrics);\r\n        } finally {\r\n            awsRequestMetrics.endEvent(Field.RequestMarshallTime);\r\n        }\r\n        Unmarshaller<PutLexiconResult, JsonUnmarshallerContext> unmarshaller = new PutLexiconResultJsonUnmarshaller();\r\n        JsonResponseHandler<PutLexiconResult> responseHandler = new JsonResponseHandler<PutLexiconResult>(unmarshaller);\r\n        response = invoke(request, responseHandler, executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.internal.AmazonPollyCustomPresigner.encodeParameters",
	"Comment": "original copy from com.amazonaws.util.httputilscreates an encoded query string from all the parameters in the specifiedrequest.",
	"Method": "String encodeParameters(Request<?> request){\r\n    AmazonPollyCustomRequest<?> customRequest = (AmazonPollyCustomRequest<?>) request;\r\n    final Map<String, List<String>> parametersWithList = customRequest.getParametersWithList();\r\n    if (parametersWithList.isEmpty()) {\r\n        return null;\r\n    }\r\n    final StringBuilder sb = new StringBuilder();\r\n    String parameterSeparator = \"\";\r\n    try {\r\n        for (final Entry<String, List<String>> entry : parametersWithList.entrySet()) {\r\n            final String encodedName = URLEncoder.encode(entry.getKey(), DEFAULT_ENCODING);\r\n            final List<String> values = entry.getValue();\r\n            if (values == null) {\r\n                continue;\r\n            }\r\n            sb.append(parameterSeparator);\r\n            parameterSeparator = \"&\";\r\n            String valueSeparator = \"\";\r\n            for (String value : values) {\r\n                sb.append(valueSeparator);\r\n                valueSeparator = \"&\";\r\n                final String encodedValue = URLEncoder.encode(value, DEFAULT_ENCODING);\r\n                sb.append(encodedName).append(\"=\").append(encodedValue);\r\n            }\r\n        }\r\n    } catch (final UnsupportedEncodingException e) {\r\n        throw new IllegalArgumentException(e);\r\n    }\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignResponse.getSegmentVersion",
	"Comment": "the version of the segment to which the campaign sends messages.",
	"Method": "Integer getSegmentVersion(){\r\n    return segmentVersion;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceDetail.getEyesOpen",
	"Comment": "indicates whether or not the eyes on the face are open, and theconfidence level in the determination.",
	"Method": "EyeOpen getEyesOpen(){\r\n    return eyesOpen;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.MultipartUploadListing.getUploadIdMarker",
	"Comment": "returns the optional upload id marker specified in the original requestto specify where in the results to begin listing multipart uploads.",
	"Method": "String getUploadIdMarker(){\r\n    return uploadIdMarker;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.pinpoint.analytics.monetization.AmazonMonetizationEventBuilder.create",
	"Comment": "create a amazonmonetizationeventbuilder with the specified event client",
	"Method": "AmazonMonetizationEventBuilder create(AnalyticsClient analyticsClient){\r\n    return new AmazonMonetizationEventBuilder(analyticsClient);\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ListIdentityPoliciesResult.withPolicyNames",
	"Comment": "a list of names of policies that apply to the specified identity.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListIdentityPoliciesResult withPolicyNames(String policyNames,ListIdentityPoliciesResult withPolicyNames,java.util.Collection<String> policyNames){\r\n    setPolicyNames(policyNames);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CompleteMultipartUploadRequest.withPartETags",
	"Comment": "sets the list of part numbers and etags that identify the individualparts of the multipart upload to complete based on the specified resultsfrom part uploads.",
	"Method": "CompleteMultipartUploadRequest withPartETags(List<PartETag> partETags,CompleteMultipartUploadRequest withPartETags,UploadPartResult uploadPartResults,CompleteMultipartUploadRequest withPartETags,Collection<UploadPartResult> uploadPartResultsCollection){\r\n    for (final UploadPartResult result : uploadPartResultsCollection) {\r\n        this.partETags.add(new PartETag(result.getPartNumber(), result.getETag()));\r\n    }\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DeleteConfigurationSetTrackingOptionsRequest.setConfigurationSetName",
	"Comment": "the name of the configuration set from which you want to delete thetracking options.",
	"Method": "void setConfigurationSetName(String configurationSetName){\r\n    this.configurationSetName = configurationSetName;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.CreateLogGroupRequest.cleartagsEntries",
	"Comment": "removes all the entries added into tags.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreateLogGroupRequest cleartagsEntries(){\r\n    this.tags = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.GetSendQuotaResult.withSentLast24Hours",
	"Comment": "the number of emails sent during the previous 24 hours.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetSendQuotaResult withSentLast24Hours(Double sentLast24Hours){\r\n    this.sentLast24Hours = sentLast24Hours;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateApnsSandboxChannelRequest.withAPNSSandboxChannelRequest",
	"Comment": "apple development push notification service channel definition.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateApnsSandboxChannelRequest withAPNSSandboxChannelRequest(APNSSandboxChannelRequest aPNSSandboxChannelRequest){\r\n    this.aPNSSandboxChannelRequest = aPNSSandboxChannelRequest;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.internal.CopyCallable.getOptimalPartSize",
	"Comment": "computes and returns the optimal part size for the copy operation.",
	"Method": "long getOptimalPartSize(long contentLengthOfSource){\r\n    long optimalPartSize = TransferManagerUtils.calculateOptimalPartSizeForCopy(copyObjectRequest, configuration, contentLengthOfSource);\r\n    log.debug(\"Calculated optimal part size: \" + optimalPartSize);\r\n    return optimalPartSize;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.RemovePermissionRequest.setLabel",
	"Comment": "the identification of the permission to remove. this is the label addedwith the addpermission action.",
	"Method": "void setLabel(String label){\r\n    this.label = label;\r\n}"
}, {
	"Path": "com.amazonaws.services.lexrts.model.PostContentResult.setContentType",
	"Comment": "content type as specified in the accept http header in therequest.",
	"Method": "void setContentType(String contentType){\r\n    this.contentType = contentType;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignResponse.withMessageConfiguration",
	"Comment": "the message configuration settings.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CampaignResponse withMessageConfiguration(MessageConfiguration messageConfiguration){\r\n    this.messageConfiguration = messageConfiguration;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.DescribeStreamProcessorResult.withSettings",
	"Comment": "face recognition input parameters that are being used by the streamprocessor. includes the collection to use for face recognition and theface attributes to detect.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DescribeStreamProcessorResult withSettings(StreamProcessorSettings settings){\r\n    this.settings = settings;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.AWSKinesisVideoClient.listTagsForStream",
	"Comment": "returns a list of tags associated with the specified stream.in the request, you must specify either the streamname orthe streamarn.",
	"Method": "ListTagsForStreamResult listTagsForStream(ListTagsForStreamRequest listTagsForStreamRequest){\r\n    ExecutionContext executionContext = createExecutionContext(listTagsForStreamRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<ListTagsForStreamRequest> request = null;\r\n    Response<ListTagsForStreamResult> response = null;\r\n    try {\r\n        awsRequestMetrics.startEvent(Field.RequestMarshallTime);\r\n        try {\r\n            request = new ListTagsForStreamRequestMarshaller().marshall(listTagsForStreamRequest);\r\n            request.setAWSRequestMetrics(awsRequestMetrics);\r\n        } finally {\r\n            awsRequestMetrics.endEvent(Field.RequestMarshallTime);\r\n        }\r\n        Unmarshaller<ListTagsForStreamResult, JsonUnmarshallerContext> unmarshaller = new ListTagsForStreamResultJsonUnmarshaller();\r\n        JsonResponseHandler<ListTagsForStreamResult> responseHandler = new JsonResponseHandler<ListTagsForStreamResult>(unmarshaller);\r\n        response = invoke(request, responseHandler, executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectRequest.setProgressListener",
	"Comment": "sets the optional progress listener for receiving updates about objectdownload status.",
	"Method": "void setProgressListener(com.amazonaws.services.s3.model.ProgressListener progressListener){\r\n    setGeneralProgressListener(new LegacyS3ProgressListener(progressListener));\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SendRawEmailRequest.withConfigurationSetName",
	"Comment": "the name of the configuration set to use when you send an email usingsendrawemail.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendRawEmailRequest withConfigurationSetName(String configurationSetName){\r\n    this.configurationSetName = configurationSetName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.ListSpeechSynthesisTasksResult.getSynthesisTasks",
	"Comment": "list of synthesistask objects that provides information from thespecified task in the list request, including output format, creationtime, task status, and so on.",
	"Method": "java.util.List<SynthesisTask> getSynthesisTasks(){\r\n    return synthesisTasks;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.Message.clearAttributesEntries",
	"Comment": "removes all the entries added into attributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Message clearAttributesEntries(){\r\n    this.attributes = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ActivityResponse.withId",
	"Comment": "the unique activity id.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ActivityResponse withId(String id){\r\n    this.id = id;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateApnsChannelResult.setAPNSChannelResponse",
	"Comment": "apple distribution push notification service channel definition.",
	"Method": "void setAPNSChannelResponse(APNSChannelResponse aPNSChannelResponse){\r\n    this.aPNSChannelResponse = aPNSChannelResponse;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.cloneReceiptRuleSetAsync",
	"Comment": "creates a receipt rule set by cloning an existing one. all receipt rulesand configurations are copied to the new receipt rule set and arecompletely independent of the source rule set.for information about setting up rule sets, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "Future<CloneReceiptRuleSetResult> cloneReceiptRuleSetAsync(CloneReceiptRuleSetRequest cloneReceiptRuleSetRequest,Future<CloneReceiptRuleSetResult> cloneReceiptRuleSetAsync,CloneReceiptRuleSetRequest cloneReceiptRuleSetRequest,AsyncHandler<CloneReceiptRuleSetRequest, CloneReceiptRuleSetResult> asyncHandler){\r\n    return executorService.submit(new Callable<CloneReceiptRuleSetResult>() {\r\n        public CloneReceiptRuleSetResult call() throws Exception {\r\n            CloneReceiptRuleSetResult result = null;\r\n            try {\r\n                result = cloneReceiptRuleSet(cloneReceiptRuleSetRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(cloneReceiptRuleSetRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.cloneReceiptRuleSetAsync",
	"Comment": "creates a receipt rule set by cloning an existing one. all receipt rulesand configurations are copied to the new receipt rule set and arecompletely independent of the source rule set.for information about setting up rule sets, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "Future<CloneReceiptRuleSetResult> cloneReceiptRuleSetAsync(CloneReceiptRuleSetRequest cloneReceiptRuleSetRequest,Future<CloneReceiptRuleSetResult> cloneReceiptRuleSetAsync,CloneReceiptRuleSetRequest cloneReceiptRuleSetRequest,AsyncHandler<CloneReceiptRuleSetRequest, CloneReceiptRuleSetResult> asyncHandler){\r\n    CloneReceiptRuleSetResult result = null;\r\n    try {\r\n        result = cloneReceiptRuleSet(cloneReceiptRuleSetRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(cloneReceiptRuleSetRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetChannelsResult.withChannelsResponse",
	"Comment": "get channels definitionreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetChannelsResult withChannelsResponse(ChannelsResponse channelsResponse){\r\n    this.channelsResponse = channelsResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.MultipartUpload.setStorageClass",
	"Comment": "sets the storage class indicating how the data in this multipart uploadwill be stored.",
	"Method": "void setStorageClass(String storageClass){\r\n    this.storageClass = storageClass;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.NumberValidateResponse.setCleansedPhoneNumberNational",
	"Comment": "the cleansed phone number, shown in the local phone number format.",
	"Method": "void setCleansedPhoneNumberNational(String cleansedPhoneNumberNational){\r\n    this.cleansedPhoneNumberNational = cleansedPhoneNumberNational;\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateSecurityProfileResult.withVersion",
	"Comment": "the updated version of the security profile.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateSecurityProfileResult withVersion(Long version){\r\n    this.version = version;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transferutility.TransferUtility.cancel",
	"Comment": "sets a transfer to be canceled. note the transferstate must betransferstate.canceled before the transfer is guaranteed to have stopped,and can be safely deleted",
	"Method": "boolean cancel(int id){\r\n    submitTransferJob(TRANSFER_CANCEL, id);\r\n    return true;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.DeleteAttributesRequest.getExpected",
	"Comment": "the update condition which, if specified, determines whether thespecified attributes will be deleted or not. the update condition mustbe satisfied in order for this request to be processed and theattributes to be deleted.",
	"Method": "UpdateCondition getExpected(){\r\n    return expected;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteVersionRequest.setVersionId",
	"Comment": "sets the version id uniquely identifying which version of the object todelete.",
	"Method": "void setVersionId(String versionId){\r\n    this.versionId = versionId;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceDetail.getSmile",
	"Comment": "indicates whether or not the face is smiling, and the confidence level inthe determination.",
	"Method": "Smile getSmile(){\r\n    return smile;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.MessageRequest.clearContextEntries",
	"Comment": "removes all the entries added into context.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "MessageRequest clearContextEntries(){\r\n    this.context = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ResponseHeaderOverrides.getContentType",
	"Comment": "returns the content type response header override if it has beenspecified, or null otherwise.",
	"Method": "String getContentType(){\r\n    return contentType;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteAdmChannelResult.withADMChannelResponse",
	"Comment": "amazon device messaging channel definition.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteAdmChannelResult withADMChannelResponse(ADMChannelResponse aDMChannelResponse){\r\n    this.aDMChannelResponse = aDMChannelResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListNextBatchOfObjectsRequest.withPreviousObjectListing",
	"Comment": "sets the previous object listing and returns the updated request object so that additionalmethod calls can be chained together.",
	"Method": "ListNextBatchOfObjectsRequest withPreviousObjectListing(ObjectListing previousObjectListing){\r\n    setPreviousObjectListing(previousObjectListing);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.GetLogEventsResult.withEvents",
	"Comment": "the events.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetLogEventsResult withEvents(OutputLogEvent events,GetLogEventsResult withEvents,java.util.Collection<OutputLogEvent> events){\r\n    setEvents(events);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ResponseHeaderOverrides.getExpires",
	"Comment": "returns the expires response header override if it has been specified, ornull otherwise.",
	"Method": "String getExpires(){\r\n    return expires;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClient.updateTemplate",
	"Comment": "updates an email template. email templates enable you to sendpersonalized email to one or more destinations in a single api operation.for more information, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "UpdateTemplateResult updateTemplate(UpdateTemplateRequest updateTemplateRequest){\r\n    ExecutionContext executionContext = createExecutionContext(updateTemplateRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<UpdateTemplateRequest> request = null;\r\n    Response<UpdateTemplateResult> response = null;\r\n    try {\r\n        request = new UpdateTemplateRequestMarshaller().marshall(updateTemplateRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        response = invoke(request, new UpdateTemplateResultStaxUnmarshaller(), executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DeleteConfigurationSetEventDestinationRequest.withConfigurationSetName",
	"Comment": "the name of the configuration set from which to delete the eventdestination.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteConfigurationSetEventDestinationRequest withConfigurationSetName(String configurationSetName){\r\n    this.configurationSetName = configurationSetName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateApnsSandboxChannelRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateApnsSandboxChannelRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.lambdainvoker.LambdaInvokerFactory.getClientContext",
	"Comment": "gets the client context associated with this factory. changes to theclient context will affect all proxy objects created by this factory,including those were created.",
	"Method": "ClientContext getClientContext(){\r\n    return clientContext;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.MultiObjectDeleteException.getErrors",
	"Comment": "returns the list of errors from the attempted delete operation.",
	"Method": "List<DeleteError> getErrors(){\r\n    return errors;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.UntagResourceRequest.setTagKeys",
	"Comment": "one or more tag keys. specify only the tag keys, not the tag values.",
	"Method": "void setTagKeys(java.util.Collection<String> tagKeys){\r\n    if (tagKeys == null) {\r\n        this.tagKeys = null;\r\n        return;\r\n    }\r\n    this.tagKeys = new java.util.ArrayList<String>(tagKeys);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ExportJobResponse.withFailedPieces",
	"Comment": "the number of pieces that failed to be processed as of the time of therequest.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ExportJobResponse withFailedPieces(Integer failedPieces){\r\n    this.failedPieces = failedPieces;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.ListSpeechSynthesisTasksResult.getNextToken",
	"Comment": "an opaque pagination token returned from the previous list operation inthis request. if present, this indicates where to continue the listing.",
	"Method": "String getNextToken(){\r\n    return nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSSandboxChannelRequest.withBundleId",
	"Comment": "the bundle id used for apns tokens.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSSandboxChannelRequest withBundleId(String bundleId){\r\n    this.bundleId = bundleId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentGroup.withDimensions",
	"Comment": "list of dimensions to include or exclude.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SegmentGroup withDimensions(SegmentDimensions dimensions,SegmentGroup withDimensions,java.util.Collection<SegmentDimensions> dimensions){\r\n    setDimensions(dimensions);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CompleteMultipartUploadRequest.setPartETags",
	"Comment": "sets the list of part numbers and etags that identify the individualparts of the multipart upload to complete.",
	"Method": "void setPartETags(List<PartETag> partETags){\r\n    this.partETags = partETags;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SendUsersMessageRequest.setUsers",
	"Comment": "a map that associates user ids with endpointsendconfiguration objects.within an endpointsendconfiguration object, you can tailor the messagefor a user by specifying message overrides or substitutions.",
	"Method": "void setUsers(java.util.Map<String, EndpointSendConfiguration> users){\r\n    this.users = users;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.IdentityNotificationAttributes.setHeadersInBounceNotificationsEnabled",
	"Comment": "describes whether amazon ses includes the original email headers inamazon sns notifications of type bounce. a value oftrue specifies that amazon ses will include headers inbounce notifications, and a value of false specifies thatamazon ses will not include headers in bounce notifications.",
	"Method": "void setHeadersInBounceNotificationsEnabled(Boolean headersInBounceNotificationsEnabled){\r\n    this.headersInBounceNotificationsEnabled = headersInBounceNotificationsEnabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobRequest.withDefineSegment",
	"Comment": "sets whether the endpoints create a segment when they are imported.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ImportJobRequest withDefineSegment(Boolean defineSegment){\r\n    this.defineSegment = defineSegment;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceDetail.getMouthOpen",
	"Comment": "indicates whether or not the mouth on the face is open, and theconfidence level in the determination.",
	"Method": "MouthOpen getMouthOpen(){\r\n    return mouthOpen;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListPartsRequest.getPartNumberMarker",
	"Comment": "returns the optional part number marker indicating where in the resultsto being listing parts.",
	"Method": "Integer getPartNumberMarker(){\r\n    return partNumberMarker;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetFaceSearchResult.getStatusMessage",
	"Comment": "if the job fails, statusmessage provides a descriptive errormessage.",
	"Method": "String getStatusMessage(){\r\n    return statusMessage;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial.fromInstructionFile",
	"Comment": "factory method to return the content crypto material from the s3instruction file, using the specified key encrypting key materialaccessor and an optional security provider.",
	"Method": "ContentCryptoMaterial fromInstructionFile(Map<String, String> instFile,EncryptionMaterialsAccessor kekMaterialAccessor,Provider securityProvider,boolean keyWrapExpected,AWSKMSClient kms,ContentCryptoMaterial fromInstructionFile,Map<String, String> instFile,EncryptionMaterialsAccessor kekMaterialAccessor,Provider securityProvider,long[] range,ExtraMaterialsDescription extra,boolean keyWrapExpected,AWSKMSClient kms){\r\n    return fromInstructionFile0(instFile, kekMaterialAccessor, securityProvider, range, extra, keyWrapExpected, kms);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetSegmentExportJobsRequest.withSegmentId",
	"Comment": "the unique id of the segment.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetSegmentExportJobsRequest withSegmentId(String segmentId){\r\n    this.segmentId = segmentId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSSandboxChannelRequest.withTokenKey",
	"Comment": "the token key used for apns tokens.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSSandboxChannelRequest withTokenKey(String tokenKey){\r\n    this.tokenKey = tokenKey;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.MultiFileOutputStream.fos",
	"Comment": "returns the file output stream to be used for writing, blocking ifnecessary if running out of disk space.",
	"Method": "FileOutputStream fos(){\r\n    if (closed) {\r\n        throw new IOException(\"Output stream is already closed\");\r\n    }\r\n    if (os == null || currFileBytesWritten >= partSize) {\r\n        if (os != null) {\r\n            os.close();\r\n            observer.onPartCreate(new PartCreationEvent(getFile(filesCreated), filesCreated, false, this));\r\n        }\r\n        currFileBytesWritten = 0;\r\n        filesCreated++;\r\n        blockIfNecessary();\r\n        final File file = getFile(filesCreated);\r\n        file.deleteOnExit();\r\n        os = new FileOutputStream(file);\r\n    }\r\n    return os;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ListKeyPoliciesResult.withPolicyNames",
	"Comment": "a list of key policy names. currently, there is only one key policy percmk and it is always named default.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListKeyPoliciesResult withPolicyNames(String policyNames,ListKeyPoliciesResult withPolicyNames,java.util.Collection<String> policyNames){\r\n    setPolicyNames(policyNames);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.Prediction.withDetails",
	"Comment": "provides any additional details regarding the prediction.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Prediction withDetails(java.util.Map<String, String> details){\r\n    this.details = details;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClient.createConfigurationSet",
	"Comment": "creates a configuration set.configuration sets enable you to publish email sending events. forinformation about using configuration sets, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "CreateConfigurationSetResult createConfigurationSet(CreateConfigurationSetRequest createConfigurationSetRequest){\r\n    ExecutionContext executionContext = createExecutionContext(createConfigurationSetRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<CreateConfigurationSetRequest> request = null;\r\n    Response<CreateConfigurationSetResult> response = null;\r\n    try {\r\n        request = new CreateConfigurationSetRequestMarshaller().marshall(createConfigurationSetRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        response = invoke(request, new CreateConfigurationSetResultStaxUnmarshaller(), executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.SendMessageRequest.getMessageAttributes",
	"Comment": "each message attribute consists of a name, type, and value. for moreinformation, see message attribute items in the amazon sqs developer guide.",
	"Method": "java.util.Map<String, MessageAttributeValue> getMessageAttributes(){\r\n    return messageAttributes;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.MissingRenderingAttributeException.getTemplateName",
	"Comment": "returns the value of the templatename property for this object.",
	"Method": "String getTemplateName(){\r\n    return templateName;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.describeActiveReceiptRuleSetAsync",
	"Comment": "returns the metadata and receipt rules for the receipt rule set that iscurrently active.for information about setting up receipt rule sets, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "Future<DescribeActiveReceiptRuleSetResult> describeActiveReceiptRuleSetAsync(DescribeActiveReceiptRuleSetRequest describeActiveReceiptRuleSetRequest,Future<DescribeActiveReceiptRuleSetResult> describeActiveReceiptRuleSetAsync,DescribeActiveReceiptRuleSetRequest describeActiveReceiptRuleSetRequest,AsyncHandler<DescribeActiveReceiptRuleSetRequest, DescribeActiveReceiptRuleSetResult> asyncHandler){\r\n    return executorService.submit(new Callable<DescribeActiveReceiptRuleSetResult>() {\r\n        public DescribeActiveReceiptRuleSetResult call() throws Exception {\r\n            DescribeActiveReceiptRuleSetResult result = null;\r\n            try {\r\n                result = describeActiveReceiptRuleSet(describeActiveReceiptRuleSetRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(describeActiveReceiptRuleSetRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.describeActiveReceiptRuleSetAsync",
	"Comment": "returns the metadata and receipt rules for the receipt rule set that iscurrently active.for information about setting up receipt rule sets, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "Future<DescribeActiveReceiptRuleSetResult> describeActiveReceiptRuleSetAsync(DescribeActiveReceiptRuleSetRequest describeActiveReceiptRuleSetRequest,Future<DescribeActiveReceiptRuleSetResult> describeActiveReceiptRuleSetAsync,DescribeActiveReceiptRuleSetRequest describeActiveReceiptRuleSetRequest,AsyncHandler<DescribeActiveReceiptRuleSetRequest, DescribeActiveReceiptRuleSetResult> asyncHandler){\r\n    DescribeActiveReceiptRuleSetResult result = null;\r\n    try {\r\n        result = describeActiveReceiptRuleSet(describeActiveReceiptRuleSetRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(describeActiveReceiptRuleSetRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.pinpoint.targeting.TargetingClient.removeMetric",
	"Comment": "removes the specified metric from the current endpoint profile generated by this client.",
	"Method": "void removeMetric(String metricName){\r\n    if (metricName == null) {\r\n        log.warn(\"Null metric name provided to removeGlobalMetric.\");\r\n        return;\r\n    }\r\n    this.endpointProfile.addMetric(metricName, null);\r\n    globalMetrics.remove(metricName);\r\n    saveMetrics();\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.GetQueueAttributesResult.clearAttributesEntries",
	"Comment": "removes all the entries added into attributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetQueueAttributesResult clearAttributesEntries(){\r\n    this.attributes = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GCMMessage.setRawContent",
	"Comment": "the raw json formatted string to be used as the payload. this valueoverrides the message.",
	"Method": "void setRawContent(String rawContent){\r\n    this.rawContent = rawContent;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.CreateStreamProcessorRequest.withOutput",
	"Comment": "kinesis data stream stream to which amazon rekognition video puts theanalysis results. if you are using the aws cli, the parameter name isstreamprocessoroutput.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreateStreamProcessorRequest withOutput(StreamProcessorOutput output){\r\n    this.output = output;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.GetIdentityPoliciesResult.clearPoliciesEntries",
	"Comment": "removes all the entries added into policies.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetIdentityPoliciesResult clearPoliciesEntries(){\r\n    this.policies = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetImportJobsRequest.setToken",
	"Comment": "the nexttoken string returned on a previous page that you use to get thenext page of results in a paginated response.",
	"Method": "void setToken(String token){\r\n    this.token = token;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.WriteCampaignRequest.withSchedule",
	"Comment": "the campaign schedule.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "WriteCampaignRequest withSchedule(Schedule schedule){\r\n    this.schedule = schedule;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartFaceDetectionRequest.setVideo",
	"Comment": "the video in which you want to detect faces. the video must be stored inan amazon s3 bucket.",
	"Method": "void setVideo(Video video){\r\n    this.video = video;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ListTemplatesResult.getTemplatesMetadata",
	"Comment": "an array the contains the name and creation time stamp for each templatein your amazon ses account.",
	"Method": "java.util.List<TemplateMetadata> getTemplatesMetadata(){\r\n    return templatesMetadata;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSClient.listPhoneNumbersOptedOut",
	"Comment": "returns a list of phone numbers that are opted out, meaning you cannotsend sms messages to them.the results for listphonenumbersoptedout are paginated, andeach page returns up to 100 phone numbers. if additional phone numbersare available after the first page of results, then anexttoken string will be returned. to receive the next page,you call listphonenumbersoptedout again using thenexttoken string received from the previous call. when thereare no more records to return, nexttoken will be null.",
	"Method": "ListPhoneNumbersOptedOutResult listPhoneNumbersOptedOut(ListPhoneNumbersOptedOutRequest listPhoneNumbersOptedOutRequest){\r\n    ExecutionContext executionContext = createExecutionContext(listPhoneNumbersOptedOutRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<ListPhoneNumbersOptedOutRequest> request = null;\r\n    Response<ListPhoneNumbersOptedOutResult> response = null;\r\n    try {\r\n        request = new ListPhoneNumbersOptedOutRequestMarshaller().marshall(listPhoneNumbersOptedOutRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        response = invoke(request, new ListPhoneNumbersOptedOutResultStaxUnmarshaller(), executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EventStream.getLastModifiedDate",
	"Comment": "the date the event stream was last updated in iso 8601 format.",
	"Method": "String getLastModifiedDate(){\r\n    return lastModifiedDate;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SMSChannelResponse.withShortCode",
	"Comment": "the short code registered with the phone provider.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SMSChannelResponse withShortCode(String shortCode){\r\n    this.shortCode = shortCode;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointResponse.withEndpointStatus",
	"Comment": "unused.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointResponse withEndpointStatus(String endpointStatus){\r\n    this.endpointStatus = endpointStatus;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketWebsiteConfiguration.setErrorDocument",
	"Comment": "sets the complete path to the document to serve for 4xx errors.",
	"Method": "void setErrorDocument(String errorDocument){\r\n    this.errorDocument = errorDocument;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PutInstructionFileRequest.getAccessControlList",
	"Comment": "returns the optional access control list for the new object. ifspecified, cannedacl will be ignored.",
	"Method": "AccessControlList getAccessControlList(){\r\n    return accessControlList;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GCMMessage.getRawContent",
	"Comment": "the raw json formatted string to be used as the payload. this valueoverrides the message.",
	"Method": "String getRawContent(){\r\n    return rawContent;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EventsBatch.clearEventsEntries",
	"Comment": "removes all the entries added into events.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EventsBatch clearEventsEntries(){\r\n    this.events = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetApnsSandboxChannelRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetApnsSandboxChannelRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ApplicationsResponse.withNextToken",
	"Comment": "the string that you use in a subsequent request to get the next page ofresults in a paginated response.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ApplicationsResponse withNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.internal.AbstractTransfer.removeStateChangeListener",
	"Comment": "removes the given state change listener from the collection of listeners.",
	"Method": "void removeStateChangeListener(TransferStateChangeListener listener){\r\n    if (listener != null)\r\n        stateChangeListeners.remove(listener);\r\n}"
}, {
	"Path": "com.amazonaws.serverless.proxy.model.ContainerConfig.setUriEncoding",
	"Comment": "sets the charset used to urlencode and decode request paths.",
	"Method": "void setUriEncoding(String uriEncoding){\r\n    this.uriEncoding = uriEncoding;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transferutility.TransferDBUtil.checkWaitingForNetworkPartRequestsFromDB",
	"Comment": "queries waiting for network partupload tasks of a multipart upload and returnstrue if one such partupload tasks",
	"Method": "boolean checkWaitingForNetworkPartRequestsFromDB(int mainUploadId){\r\n    boolean isNetworkInterrupted = false;\r\n    Cursor c = null;\r\n    try {\r\n        c = transferDBBase.query(getPartUri(mainUploadId), null, TransferTable.COLUMN_STATE + \"=?\", new String[] { TransferState.WAITING_FOR_NETWORK.toString() }, null);\r\n        while (c.moveToNext()) {\r\n            isNetworkInterrupted = true;\r\n            break;\r\n        }\r\n    } finally {\r\n        if (c != null) {\r\n            c.close();\r\n        }\r\n    }\r\n    return isNetworkInterrupted;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.AmazonPollyClient.listLexicons",
	"Comment": "returns a list of pronunciation lexicons stored in an aws region. formore information, see managing lexicons.",
	"Method": "ListLexiconsResult listLexicons(ListLexiconsRequest listLexiconsRequest){\r\n    ExecutionContext executionContext = createExecutionContext(listLexiconsRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<ListLexiconsRequest> request = null;\r\n    Response<ListLexiconsResult> response = null;\r\n    try {\r\n        awsRequestMetrics.startEvent(Field.RequestMarshallTime);\r\n        try {\r\n            request = new ListLexiconsRequestMarshaller().marshall(listLexiconsRequest);\r\n            request.setAWSRequestMetrics(awsRequestMetrics);\r\n        } finally {\r\n            awsRequestMetrics.endEvent(Field.RequestMarshallTime);\r\n        }\r\n        Unmarshaller<ListLexiconsResult, JsonUnmarshallerContext> unmarshaller = new ListLexiconsResultJsonUnmarshaller();\r\n        JsonResponseHandler<ListLexiconsResult> responseHandler = new JsonResponseHandler<ListLexiconsResult>(unmarshaller);\r\n        response = invoke(request, responseHandler, executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.pinpoint.PinpointConfiguration.withExecutor",
	"Comment": "custom executor to use for handlers in the targetingclient.",
	"Method": "PinpointConfiguration withExecutor(ExecutorService executorService){\r\n    this.executor = executorService;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.MessageConfiguration.setAPNSMessage",
	"Comment": "the message that the campaign delivers to apns channels. overrides thedefault message.",
	"Method": "void setAPNSMessage(Message aPNSMessage){\r\n    this.aPNSMessage = aPNSMessage;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transferutility.TransferUtility.getTransferIdsWithTypeAndStates",
	"Comment": "gets a list of transferobserver instances which are observing recordswith the given type.",
	"Method": "List<Integer> getTransferIdsWithTypeAndStates(TransferType type,TransferState[] states){\r\n    List<Integer> transferIds = new ArrayList<Integer>();\r\n    Cursor c = null;\r\n    try {\r\n        c = dbUtil.queryTransfersWithTypeAndStates(type, states);\r\n        while (c.moveToNext()) {\r\n            final int partNum = c.getInt(c.getColumnIndexOrThrow(TransferTable.COLUMN_PART_NUM));\r\n            if (partNum != 0) {\r\n                continue;\r\n            }\r\n            final int id = c.getInt(c.getColumnIndexOrThrow(TransferTable.COLUMN_ID));\r\n            transferIds.add(id);\r\n        }\r\n    } finally {\r\n        if (c != null) {\r\n            c.close();\r\n        }\r\n    }\r\n    return transferIds;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.amazonmobileanalytics.MobileAnalyticsManagerTest.setup",
	"Comment": "sets up the clients, and also tests the creation callback functionality.",
	"Method": "void setup(){\r\n    provider = new StaticCredentialsProvider(new AnonymousAWSCredentials());\r\n    AnalyticsConfig options = new AnalyticsConfig();\r\n    options.withAllowsWANDelivery(true);\r\n    analyticsClient = MobileAnalyticsManager.getOrCreateInstance(new ContextWithPermissions(new Activity().getApplicationContext()), uniqueAnalyticsTag1 + (new Random()).nextInt(), Regions.US_EAST_1, provider, options);\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CreateConfigurationSetEventDestinationRequest.withConfigurationSetName",
	"Comment": "the name of the configuration set that the event destination should beassociated with.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreateConfigurationSetEventDestinationRequest withConfigurationSetName(String configurationSetName){\r\n    this.configurationSetName = configurationSetName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceDetail.withBoundingBox",
	"Comment": "bounding box of the face. default attribute.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "FaceDetail withBoundingBox(BoundingBox boundingBox){\r\n    this.boundingBox = boundingBox;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SetReceiptRulePositionRequest.setRuleSetName",
	"Comment": "the name of the receipt rule set that contains the receipt rule toreposition.",
	"Method": "void setRuleSetName(String ruleSetName){\r\n    this.ruleSetName = ruleSetName;\r\n}"
}, {
	"Path": "com.amazonaws.serverless.proxy.internal.servlet.AwsFilterChainManager.getFilterHolders",
	"Comment": "returns the filter holders stored in the awsservletcontext object",
	"Method": "Map<String, FilterHolder> getFilterHolders(){\r\n    return servletContext.getFilterHolders();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentDemographics.withModel",
	"Comment": "the device model criteria for the segment.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SegmentDemographics withModel(SetDimension model){\r\n    this.model = model;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListSubscriptionsByTopicRequest.getTopicArn",
	"Comment": "the arn of the topic for which you wish to find subscriptions.",
	"Method": "String getTopicArn(){\r\n    return topicArn;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PutObjectRequest.withRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket. it returns thisupdated putobjectrequest object so that additional method calls can bechained together.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "PutObjectRequest withRequesterPays(boolean isRequesterPays){\r\n    setRequesterPays(isRequesterPays);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ListConfigurationSetsRequest.setNextToken",
	"Comment": "a token returned from a previous call tolistconfigurationsets to indicate the position of theconfiguration set in the configuration set list.",
	"Method": "void setNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SendBulkTemplatedEmailRequest.setConfigurationSetName",
	"Comment": "the name of the configuration set to use when you send an email usingsendbulktemplatedemail.",
	"Method": "void setConfigurationSetName(String configurationSetName){\r\n    this.configurationSetName = configurationSetName;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.ListDomainsResult.getNextToken",
	"Comment": "an opaque token indicating that there are more domains than thespecified maxnumberofdomains still available.",
	"Method": "String getNextToken(){\r\n    return nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SendCustomVerificationEmailResult.setMessageId",
	"Comment": "the unique message identifier returned from thesendcustomverificationemail operation.",
	"Method": "void setMessageId(String messageId){\r\n    this.messageId = messageId;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.SelectRequest.getNextToken",
	"Comment": "a string informing amazon simpledb where to start the next list ofitemnames.",
	"Method": "String getNextToken(){\r\n    return nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetPersonTrackingResult.getVideoMetadata",
	"Comment": "information about a video that amazon rekognition video analyzed.videometadata is returned in every page of paginatedresponses from a amazon rekognition video operation.",
	"Method": "VideoMetadata getVideoMetadata(){\r\n    return videoMetadata;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetApnsVoipSandboxChannelRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetApnsVoipSandboxChannelRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteBucketPolicyRequest.setBucketName",
	"Comment": "sets the name of the amazon s3 bucket whose policy is being deleted.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.Message.setSilentPush",
	"Comment": "indicates if the message should display on the users device. silentpushes can be used for remote configuration and phone home use cases.",
	"Method": "void setSilentPush(Boolean silentPush){\r\n    this.silentPush = silentPush;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ExportJobRequest.setSegmentId",
	"Comment": "the id of the segment to export endpoints from. if not present, amazonpinpoint exports all of the endpoints that belong to the application.",
	"Method": "void setSegmentId(String segmentId){\r\n    this.segmentId = segmentId;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.SetSubscriptionAttributesRequest.withSubscriptionArn",
	"Comment": "the arn of the subscription to modify.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SetSubscriptionAttributesRequest withSubscriptionArn(String subscriptionArn){\r\n    this.subscriptionArn = subscriptionArn;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetImportJobsResult.withImportJobsResponse",
	"Comment": "import job list.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetImportJobsResult withImportJobsResponse(ImportJobsResponse importJobsResponse){\r\n    this.importJobsResponse = importJobsResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.EncryptionUtils.isEncryptionInfoInMetadata",
	"Comment": "returns true if the specified s3object contains encryption info in itsmetadata, false otherwise.",
	"Method": "boolean isEncryptionInfoInMetadata(S3Object retrievedObject){\r\n    Map<String, String> metadata = retrievedObject.getObjectMetadata().getUserMetadata();\r\n    return metadata != null && metadata.containsKey(Headers.CRYPTO_IV) && metadata.containsKey(Headers.CRYPTO_KEY);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.RemoveAttributesResult.withAttributesResource",
	"Comment": "attributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "RemoveAttributesResult withAttributesResource(AttributesResource attributesResource){\r\n    this.attributesResource = attributesResource;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.Message.getSilentPush",
	"Comment": "indicates if the message should display on the users device. silentpushes can be used for remote configuration and phone home use cases.",
	"Method": "Boolean getSilentPush(){\r\n    return silentPush;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentReference.getVersion",
	"Comment": "if specified contains a specific version of the segment included.",
	"Method": "Integer getVersion(){\r\n    return version;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.WriteCampaignRequest.withSegmentVersion",
	"Comment": "the version of the segment to which the campaign sends messages.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "WriteCampaignRequest withSegmentVersion(Integer segmentVersion){\r\n    this.segmentVersion = segmentVersion;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.serverless.proxy.model.ContainerConfig.setQueryStringCaseSensitive",
	"Comment": "sets whether query string parameter names should be treated as case sensitive. the defaultvalue of this option is false for backward compatibility.",
	"Method": "void setQueryStringCaseSensitive(boolean queryStringCaseSensitive){\r\n    this.queryStringCaseSensitive = queryStringCaseSensitive;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.Lexicon.setContent",
	"Comment": "lexicon content in string format. the content of a lexicon must be in plsformat.",
	"Method": "void setContent(String content){\r\n    this.content = content;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.UpdateCustomVerificationEmailTemplateRequest.getTemplateName",
	"Comment": "the name of the custom verification email template that you want toupdate.",
	"Method": "String getTemplateName(){\r\n    return templateName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetSegmentVersionsRequest.getToken",
	"Comment": "the nexttoken string returned on a previous page that you use to get thenext page of results in a paginated response.",
	"Method": "String getToken(){\r\n    return token;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.metrics.S3ServiceMetric.metricName",
	"Comment": "returns a metric name by concatenating the service name prefix with thegiven suffix.",
	"Method": "String metricName(String suffix){\r\n    return SERVICE_NAME_PREFIX + suffix;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.SendMessageRequest.clearMessageAttributesEntries",
	"Comment": "removes all the entries added into messageattributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendMessageRequest clearMessageAttributesEntries(){\r\n    this.messageAttributes = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSMessage.withRawContent",
	"Comment": "the raw json formatted string to be used as the payload. this valueoverrides the message.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSMessage withRawContent(String rawContent){\r\n    this.rawContent = rawContent;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.BaiduMessage.setSubstitutions",
	"Comment": "default message substitutions. can be overridden by individual addresssubstitutions.",
	"Method": "void setSubstitutions(java.util.Map<String, java.util.List<String>> substitutions){\r\n    this.substitutions = substitutions;\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.TooManyRequestsException.setRetryAfterSeconds",
	"Comment": "the number of seconds the caller should wait before retrying.",
	"Method": "void setRetryAfterSeconds(String retryAfterSeconds){\r\n    this.retryAfterSeconds = retryAfterSeconds;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ApplicationsResponse.getNextToken",
	"Comment": "the string that you use in a subsequent request to get the next page ofresults in a paginated response.",
	"Method": "String getNextToken(){\r\n    return nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartPersonTrackingRequest.withVideo",
	"Comment": "the video in which you want to detect people. the video must be stored inan amazon s3 bucket.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "StartPersonTrackingRequest withVideo(Video video){\r\n    this.video = video;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.PutRecordBatchRequest.withRecords",
	"Comment": "one or more records.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PutRecordBatchRequest withRecords(Record records,PutRecordBatchRequest withRecords,java.util.Collection<Record> records){\r\n    setRecords(records);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.CreatePlatformApplicationRequest.withName",
	"Comment": "application names must be made up of only uppercase and lowercase asciiletters, numbers, underscores, hyphens, and periods, and must be between1 and 256 characters long.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreatePlatformApplicationRequest withName(String name){\r\n    this.name = name;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SetDimension.getValues",
	"Comment": "the criteria values for the segment dimension. endpoints with matchingattribute values are included or excluded from the segment, depending onthe setting for type.",
	"Method": "java.util.List<String> getValues(){\r\n    return values;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.DisableEnhancedMonitoringResult.getDesiredShardLevelMetrics",
	"Comment": "represents the list of all the metrics that would be in the enhancedstate after the operation.",
	"Method": "java.util.List<String> getDesiredShardLevelMetrics(){\r\n    return desiredShardLevelMetrics;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetApnsVoipSandboxChannelResult.getAPNSVoipSandboxChannelResponse",
	"Comment": "apple voip developer push notification service channel definition.",
	"Method": "APNSVoipSandboxChannelResponse getAPNSVoipSandboxChannelResponse(){\r\n    return aPNSVoipSandboxChannelResponse;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetPersonTrackingResult.withPersons",
	"Comment": "an array of the persons detected in the video and the times they aretracked throughout the video. an array element will exist for each timethe person is tracked.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetPersonTrackingResult withPersons(PersonDetection persons,GetPersonTrackingResult withPersons,java.util.Collection<PersonDetection> persons){\r\n    setPersons(persons);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.VersionListing.getMaxKeys",
	"Comment": "gets the value of the maxkeys parameter used to request thisversion listing. returns the default maxkeys value providedby amazon s3 if no parameter value was otherwise specified.the maxkeys parameter limits the number of versions includedin this version listing. a version listing will never contain moreversions than indicated by maxkeys , but can contain less.",
	"Method": "int getMaxKeys(){\r\n    return maxKeys;\r\n}"
}, {
	"Path": "com.amazonaws.kinesisvideo.internal.client.AbstractKinesisVideoClient.registerMediaSource",
	"Comment": "register a media source. the media source will be binding to kinesis video producer streamto send out data from media source.",
	"Method": "void registerMediaSource(MediaSource mediaSource){\r\n    mMediaSources.add(mediaSource);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobResponse.withFailedPieces",
	"Comment": "the number of pieces that have failed to import as of the time of therequest.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ImportJobResponse withFailedPieces(Integer failedPieces){\r\n    this.failedPieces = failedPieces;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.GetSMSAttributesResult.withAttributes",
	"Comment": "the sms attribute names and their values.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetSMSAttributesResult withAttributes(java.util.Map<String, String> attributes){\r\n    this.attributes = attributes;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketLifecycleConfiguration.getRules",
	"Comment": "returns the list of rules that comprise this configuration.",
	"Method": "List<Rule> getRules(){\r\n    return rules;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignResponse.withSegmentId",
	"Comment": "the id of the segment to which the campaign sends messages.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CampaignResponse withSegmentId(String segmentId){\r\n    this.segmentId = segmentId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.ListFacesResult.withNextToken",
	"Comment": "if the response is truncated, amazon rekognition returns this token thatyou can use in the subsequent request to retrieve the next set of faces.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListFacesResult withNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListVersionsRequest.setBucketName",
	"Comment": "sets the name of the amazon s3 bucket whose versions are to be listed.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.MultipartUploadListing.setDelimiter",
	"Comment": "for internal use only. sets the delimiter parameter originally used torequest this multipart upload listing.",
	"Method": "void setDelimiter(String delimiter){\r\n    this.delimiter = delimiter;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.GetKeyRotationStatusResult.isKeyRotationEnabled",
	"Comment": "a boolean value that specifies whether key rotation is enabled.",
	"Method": "Boolean isKeyRotationEnabled(){\r\n    return keyRotationEnabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideoarchivedmedia.model.HLSFragmentSelector.setTimestampRange",
	"Comment": "the start and end of the time stamp range for the requested media.this value should not be present if playbacktype islive.",
	"Method": "void setTimestampRange(HLSTimestampRange timestampRange){\r\n    this.timestampRange = timestampRange;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.util.SimpleDBUtils.quoteValues",
	"Comment": "quotes and escapes a list of values so that they can be used in asimpledb query.",
	"Method": "String quoteValues(Collection<String> values){\r\n    final StringBuilder sb = new StringBuilder();\r\n    boolean first = true;\r\n    for (final String s : values) {\r\n        if (!first) {\r\n            sb.append(\",\");\r\n        }\r\n        first = false;\r\n        sb.append(quoteValue(s));\r\n    }\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ReputationOptions.getReputationMetricsEnabled",
	"Comment": "describes whether or not amazon ses publishes reputation metrics for theconfiguration set, such as bounce and complaint rates, to amazoncloudwatch.if the value is true, reputation metrics are published. ifthe value is false, reputation metrics are not published.the default value is false.",
	"Method": "Boolean getReputationMetricsEnabled(){\r\n    return reputationMetricsEnabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.SearchedLogStream.isSearchedCompletely",
	"Comment": "indicates whether all the events in this log stream were searched.",
	"Method": "Boolean isSearchedCompletely(){\r\n    return searchedCompletely;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.InitiateMultipartUploadRequest.withBucketName",
	"Comment": "sets the name of the bucket in which to create the new multipart upload,and hence, the eventual object created from the multipart upload.returns this updated initiatemultipartuploadrequest object so thatadditional method calls can be chained together.",
	"Method": "InitiateMultipartUploadRequest withBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ActivitiesResponse.setNextToken",
	"Comment": "the string that you use in a subsequent request to get the next page ofresults in a paginated response.",
	"Method": "void setNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DefaultPushNotificationMessage.withSubstitutions",
	"Comment": "default message substitutions. can be overridden by individual addresssubstitutions.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DefaultPushNotificationMessage withSubstitutions(java.util.Map<String, java.util.List<String>> substitutions){\r\n    this.substitutions = substitutions;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.kinesisvideo.util.CameraUtils.getCameras",
	"Comment": "lists only cameras by getting known media sources known to the kinesisvideoclient",
	"Method": "List<CameraMediaSourceConfiguration> getCameras(KinesisVideoClient kinesisVideoClient){\r\n    final List<CameraMediaSourceConfiguration> cameras = new ArrayList<CameraMediaSourceConfiguration>();\r\n    for (final MediaSourceConfiguration.Builder mediaSourceConfiguration : kinesisVideoClient.listSupportedConfigurations()) {\r\n        if (!(mediaSourceConfiguration instanceof CameraMediaSourceConfiguration.Builder)) {\r\n            continue;\r\n        }\r\n        final CameraMediaSourceConfiguration configuration = ((CameraMediaSourceConfiguration.Builder) mediaSourceConfiguration).build();\r\n        cameras.add(configuration);\r\n    }\r\n    return cameras;\r\n}"
}, {
	"Path": "com.amazonaws.demo.numberguess.manager.DynamoDBManager.saveRecord",
	"Comment": "saves the object given into dynamodb, using the default configuration.",
	"Method": "void saveRecord(String userId,int score,String userName){\r\n    Log.d(TAG, \"Insert record called\");\r\n    checkDynamoDBClientAvailability();\r\n    DynamoDBMapper mapper = new DynamoDBMapper(ddb);\r\n    try {\r\n        GameRecord r = new GameRecord();\r\n        r.setUserId(userId);\r\n        r.setScore(score);\r\n        r.setUserName(userName);\r\n        r.setGameId(Constants.GAME_ID);\r\n        Log.d(TAG, \"Inserting record\");\r\n        mapper.save(r);\r\n        Log.d(TAG, \"record inserted\");\r\n    } catch (AmazonServiceException ex) {\r\n        throw new IllegalStateException(\"Error inserting record\", ex);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSVoipSandboxChannelResponse.withIsArchived",
	"Comment": "is this channel archivedreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSVoipSandboxChannelResponse withIsArchived(Boolean isArchived){\r\n    this.isArchived = isArchived;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectRequest.getPartNumber",
	"Comment": "returns the optional part number that indicates the part to be downloaded in a multipart object.",
	"Method": "Integer getPartNumber(){\r\n    return partNumber;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.PutResourcePolicyResult.withResourcePolicy",
	"Comment": "the new policy.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PutResourcePolicyResult withResourcePolicy(ResourcePolicy resourcePolicy){\r\n    this.resourcePolicy = resourcePolicy;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateGcmChannelRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateGcmChannelRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.updateConfigurationSetReputationMetricsEnabledAsync",
	"Comment": "enables or disables the publishing of reputation metrics for emails sentusing a specific configuration set in a given aws region. reputationmetrics include bounce and complaint rates. these metrics are publishedto amazon cloudwatch. by using cloudwatch, you can create alarms whenbounce or complaint rates exceed certain thresholds.you can execute this operation no more than once per second.",
	"Method": "Future<Void> updateConfigurationSetReputationMetricsEnabledAsync(UpdateConfigurationSetReputationMetricsEnabledRequest updateConfigurationSetReputationMetricsEnabledRequest,Future<Void> updateConfigurationSetReputationMetricsEnabledAsync,UpdateConfigurationSetReputationMetricsEnabledRequest updateConfigurationSetReputationMetricsEnabledRequest,AsyncHandler<UpdateConfigurationSetReputationMetricsEnabledRequest, Void> asyncHandler){\r\n    return executorService.submit(new Callable<Void>() {\r\n        public Void call() throws Exception {\r\n            Void result = null;\r\n            try {\r\n                updateConfigurationSetReputationMetricsEnabled(updateConfigurationSetReputationMetricsEnabledRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(updateConfigurationSetReputationMetricsEnabledRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.updateConfigurationSetReputationMetricsEnabledAsync",
	"Comment": "enables or disables the publishing of reputation metrics for emails sentusing a specific configuration set in a given aws region. reputationmetrics include bounce and complaint rates. these metrics are publishedto amazon cloudwatch. by using cloudwatch, you can create alarms whenbounce or complaint rates exceed certain thresholds.you can execute this operation no more than once per second.",
	"Method": "Future<Void> updateConfigurationSetReputationMetricsEnabledAsync(UpdateConfigurationSetReputationMetricsEnabledRequest updateConfigurationSetReputationMetricsEnabledRequest,Future<Void> updateConfigurationSetReputationMetricsEnabledAsync,UpdateConfigurationSetReputationMetricsEnabledRequest updateConfigurationSetReputationMetricsEnabledRequest,AsyncHandler<UpdateConfigurationSetReputationMetricsEnabledRequest, Void> asyncHandler){\r\n    Void result = null;\r\n    try {\r\n        updateConfigurationSetReputationMetricsEnabled(updateConfigurationSetReputationMetricsEnabledRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(updateConfigurationSetReputationMetricsEnabledRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SetDimension.setValues",
	"Comment": "the criteria values for the segment dimension. endpoints with matchingattribute values are included or excluded from the segment, depending onthe setting for type.",
	"Method": "void setValues(java.util.Collection<String> values){\r\n    if (values == null) {\r\n        this.values = null;\r\n        return;\r\n    }\r\n    this.values = new java.util.ArrayList<String>(values);\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transferutility.TransferTable.addVersion5Columns",
	"Comment": "adds columns that were introduced in version 5 to the database",
	"Method": "void addVersion5Columns(SQLiteDatabase database){\r\n    final String addStorageClass = \"ALTER TABLE \" + TABLE_TRANSFER + \" ADD COLUMN \" + COLUMN_HEADER_STORAGE_CLASS + \" text;\";\r\n    database.execSQL(addStorageClass);\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CreateConfigurationSetTrackingOptionsRequest.getConfigurationSetName",
	"Comment": "the name of the configuration set that the tracking options should beassociated with.",
	"Method": "String getConfigurationSetName(){\r\n    return configurationSetName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CreateAppResult.withApplicationResponse",
	"Comment": "application response.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreateAppResult withApplicationResponse(ApplicationResponse applicationResponse){\r\n    this.applicationResponse = applicationResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.PersistableTransfer.deserializeFrom",
	"Comment": "returns the deserialized transfer state of the given serializedrepresentation.",
	"Method": "T deserializeFrom(InputStream in,T deserializeFrom,String serialized){\r\n    if (serialized == null)\r\n        return null;\r\n    ByteArrayInputStream byteStream = new ByteArrayInputStream(serialized.getBytes(UTF8));\r\n    try {\r\n        return deserializeFrom(byteStream);\r\n    } finally {\r\n        try {\r\n            byteStream.close();\r\n        } catch (IOException ioe) {\r\n        }\r\n        ;\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketTaggingConfigurationRequest.withBucketName",
	"Comment": "sets the name of the bucket whose tagging configuration is being set, andreturns this object so that additional method calls may be chainedtogether.",
	"Method": "SetBucketTaggingConfigurationRequest withBucketName(String bucketName){\r\n    setBucketName(bucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.DisableEnhancedMonitoringResult.withCurrentShardLevelMetrics",
	"Comment": "represents the current state of the metrics that are in the enhancedstate before the operation.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DisableEnhancedMonitoringResult withCurrentShardLevelMetrics(String currentShardLevelMetrics,DisableEnhancedMonitoringResult withCurrentShardLevelMetrics,java.util.Collection<String> currentShardLevelMetrics){\r\n    setCurrentShardLevelMetrics(currentShardLevelMetrics);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.AddPermissionRequest.withLabel",
	"Comment": "a unique identifier for the new policy statement.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "AddPermissionRequest withLabel(String label){\r\n    this.label = label;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideoarchivedmedia.model.FragmentSelector.withTimestampRange",
	"Comment": "the range of time stamps to return.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "FragmentSelector withTimestampRange(TimestampRange timestampRange){\r\n    this.timestampRange = timestampRange;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.amazonmobileanalytics.monetization.GooglePlayMonetizationEventBuilder.withProductId",
	"Comment": "sets the product identifier field of the item being purchased.",
	"Method": "GooglePlayMonetizationEventBuilder withProductId(String productId){\r\n    setProductId(productId);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.SynthesizeSpeechPresignRequest.withSpeechMarkTypes",
	"Comment": "sets the value of the speechmarktypes property for this object.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SynthesizeSpeechPresignRequest withSpeechMarkTypes(String speechMarkTypes,SynthesizeSpeechPresignRequest withSpeechMarkTypes,java.util.Collection<String> speechMarkTypes){\r\n    setSpeechMarkTypes(speechMarkTypes);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.DescribeCollectionResult.withCreationTimestamp",
	"Comment": "sets the value of the creationtimestamp property for this object.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DescribeCollectionResult withCreationTimestamp(java.util.Date creationTimestamp){\r\n    this.creationTimestamp = creationTimestamp;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.SelectResult.withItems",
	"Comment": "a list of items that match the select expression.returns a reference to this object so that method calls can be chained together.",
	"Method": "SelectResult withItems(Item items,SelectResult withItems,java.util.Collection<Item> items){\r\n    if (items == null) {\r\n        this.items = null;\r\n    } else {\r\n        com.amazonaws.internal.ListWithAutoConstructFlag<Item> itemsCopy = new com.amazonaws.internal.ListWithAutoConstructFlag<Item>(items.size());\r\n        itemsCopy.addAll(items);\r\n        this.items = itemsCopy;\r\n    }\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.DescribeLogStreamsRequest.setDescending",
	"Comment": "if the value is true, results are returned in descending order. if thevalue is to false, results are returned in ascending order. the defaultvalue is false.",
	"Method": "void setDescending(Boolean descending){\r\n    this.descending = descending;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transferutility.TransferUtility.getTransfersWithTypeAndState",
	"Comment": "gets a list of transferobserver instances which are observing recordswith the given type.",
	"Method": "List<TransferObserver> getTransfersWithTypeAndState(TransferType type,TransferState state){\r\n    return getTransfersWithTypeAndStates(type, new TransferState[] { state });\r\n}"
}, {
	"Path": "com.amazonaws.mobile.client.AWSMobileClient.getClient",
	"Comment": "get the awsconfigurable client if exists, else create one andadd it to the clientmap and return.",
	"Method": "AWSConfigurable getClient(Context context,Class<? extends AWSConfigurable> clientClass){\r\n    Log.d(TAG, \"Retrieving the client instance for class: \" + clientClass);\r\n    AWSConfigurable client = clientMap.get(clientClass);\r\n    try {\r\n        if (client == null) {\r\n            client = clientClass.newInstance().initialize(context.getApplicationContext(), this.awsConfiguration);\r\n            clientMap.put(clientClass, client);\r\n            Log.d(TAG, \"Created the new client: \" + client.toString());\r\n        }\r\n    } catch (final Exception exception) {\r\n        Log.e(TAG, \"Error occurred in creating and initializing client. \" + \"Check the context and the clientClass passed in: \" + clientClass, exception);\r\n    }\r\n    return client;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.AmazonSimpleDBAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this async client to executerequests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignResponse.withCreationDate",
	"Comment": "the date the campaign was created in iso 8601 format.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CampaignResponse withCreationDate(String creationDate){\r\n    this.creationDate = creationDate;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointItemResponse.getMessage",
	"Comment": "a custom message associated with the registration of an endpoint whenissuing a response.",
	"Method": "String getMessage(){\r\n    return message;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.ListLexiconsResult.withNextToken",
	"Comment": "the pagination token to use in the next request to continue the listingof lexicons. nexttoken is returned only if the response istruncated.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListLexiconsResult withNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketInventoryConfigurationsRequest.setContinuationToken",
	"Comment": "sets the optional continuation token.continuation token allows a list to becontinued from a specific point. continuationtoken is provided in truncated list results.",
	"Method": "void setContinuationToken(String continuationToken){\r\n    this.continuationToken = continuationToken;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.amazonmobileanalytics.internal.core.util.DateUtil.createLocaleIndependentDateFormatter",
	"Comment": "creates a dateformat object using the specified format string that isindependent of locale",
	"Method": "DateFormat createLocaleIndependentDateFormatter(String dateFormatString){\r\n    return new SimpleDateFormat(dateFormatString, Locale.US);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobResource.withDefineSegment",
	"Comment": "sets whether the endpoints create a segment when they are imported.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ImportJobResource withDefineSegment(Boolean defineSegment){\r\n    this.defineSegment = defineSegment;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DefaultPushNotificationMessage.isSilentPush",
	"Comment": "indicates if the message should display on the users device. silentpushes can be used for remote configuration and phone home use cases.",
	"Method": "Boolean isSilentPush(){\r\n    return silentPush;\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.EC2UnexpectedException.getEC2ErrorCode",
	"Comment": "returns the value of the ec2errorcode property for this object.",
	"Method": "String getEC2ErrorCode(){\r\n    return eC2ErrorCode;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceDetail.withQuality",
	"Comment": "identifies image brightness and sharpness. default attribute.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "FaceDetail withQuality(ImageQuality quality){\r\n    this.quality = quality;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListPhoneNumbersOptedOutResult.getPhoneNumbers",
	"Comment": "a list of phone numbers that are opted out of receiving sms messages. thelist is paginated, and each page can contain up to 100 phone numbers.",
	"Method": "java.util.List<String> getPhoneNumbers(){\r\n    return phoneNumbers;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.PutEventsRequest.withBatchItem",
	"Comment": "batch events to submitreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PutEventsRequest withBatchItem(java.util.Map<String, EventsBatch> batchItem){\r\n    this.batchItem = batchItem;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListPartsRequest.setPartNumberMarker",
	"Comment": "sets the optional part number marker indicating where in the results tobeing listing parts.",
	"Method": "void setPartNumberMarker(Integer partNumberMarker){\r\n    this.partNumberMarker = partNumberMarker;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMMessage.setExpiresAfter",
	"Comment": "optional. number of seconds adm should retain the message if the deviceis offline",
	"Method": "void setExpiresAfter(String expiresAfter){\r\n    this.expiresAfter = expiresAfter;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.SendMessageBatchResultEntry.withId",
	"Comment": "an identifier for the message in this batch.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendMessageBatchResultEntry withId(String id){\r\n    this.id = id;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.SynthesizeSpeechPresignRequest.getLexiconNames",
	"Comment": "list of one or more pronunciation lexicon names you want the service toapply during synthesis. lexicons are applied only if the language of thelexicon is the same as the language of the voice. for information aboutstoring lexicons, see putlexicon.",
	"Method": "java.util.List<String> getLexiconNames(){\r\n    return lexiconNames;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SendTemplatedEmailResult.withMessageId",
	"Comment": "the unique message identifier returned from thesendtemplatedemail action.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendTemplatedEmailResult withMessageId(String messageId){\r\n    this.messageId = messageId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transferutility.TransferRecord.updateFromDB",
	"Comment": "updates all the fields from database using the given cursor.",
	"Method": "void updateFromDB(Cursor c){\r\n    this.id = c.getInt(c.getColumnIndexOrThrow(TransferTable.COLUMN_ID));\r\n    this.mainUploadId = c.getInt(c.getColumnIndexOrThrow(TransferTable.COLUMN_MAIN_UPLOAD_ID));\r\n    this.type = TransferType.getType(c.getString(c.getColumnIndexOrThrow(TransferTable.COLUMN_TYPE)));\r\n    this.state = TransferState.getState(c.getString(c.getColumnIndexOrThrow(TransferTable.COLUMN_STATE)));\r\n    this.bucketName = c.getString(c.getColumnIndexOrThrow(TransferTable.COLUMN_BUCKET_NAME));\r\n    this.key = c.getString(c.getColumnIndexOrThrow(TransferTable.COLUMN_KEY));\r\n    this.versionId = c.getString(c.getColumnIndexOrThrow(TransferTable.COLUMN_VERSION_ID));\r\n    this.bytesTotal = c.getLong(c.getColumnIndexOrThrow(TransferTable.COLUMN_BYTES_TOTAL));\r\n    this.bytesCurrent = c.getLong(c.getColumnIndexOrThrow(TransferTable.COLUMN_BYTES_CURRENT));\r\n    this.speed = c.getLong(c.getColumnIndexOrThrow(TransferTable.COLUMN_SPEED));\r\n    this.isRequesterPays = c.getInt(c.getColumnIndexOrThrow(TransferTable.COLUMN_IS_REQUESTER_PAYS));\r\n    this.isMultipart = c.getInt(c.getColumnIndexOrThrow(TransferTable.COLUMN_IS_MULTIPART));\r\n    this.isLastPart = c.getInt(c.getColumnIndexOrThrow(TransferTable.COLUMN_IS_LAST_PART));\r\n    this.isEncrypted = c.getInt(c.getColumnIndexOrThrow(TransferTable.COLUMN_IS_ENCRYPTED));\r\n    this.partNumber = c.getInt(c.getColumnIndexOrThrow(TransferTable.COLUMN_PART_NUM));\r\n    this.eTag = c.getString(c.getColumnIndexOrThrow(TransferTable.COLUMN_ETAG));\r\n    this.file = c.getString(c.getColumnIndexOrThrow(TransferTable.COLUMN_FILE));\r\n    this.multipartId = c.getString(c.getColumnIndexOrThrow(TransferTable.COLUMN_MULTIPART_ID));\r\n    this.rangeStart = c.getLong(c.getColumnIndexOrThrow(TransferTable.COLUMN_DATA_RANGE_START));\r\n    this.rangeLast = c.getLong(c.getColumnIndexOrThrow(TransferTable.COLUMN_DATA_RANGE_LAST));\r\n    this.fileOffset = c.getLong(c.getColumnIndexOrThrow(TransferTable.COLUMN_FILE_OFFSET));\r\n    this.headerContentType = c.getString(c.getColumnIndexOrThrow(TransferTable.COLUMN_HEADER_CONTENT_TYPE));\r\n    this.headerContentLanguage = c.getString(c.getColumnIndexOrThrow(TransferTable.COLUMN_HEADER_CONTENT_LANGUAGE));\r\n    this.headerContentDisposition = c.getString(c.getColumnIndexOrThrow(TransferTable.COLUMN_HEADER_CONTENT_DISPOSITION));\r\n    this.headerContentEncoding = c.getString(c.getColumnIndexOrThrow(TransferTable.COLUMN_HEADER_CONTENT_ENCODING));\r\n    this.headerCacheControl = c.getString(c.getColumnIndexOrThrow(TransferTable.COLUMN_HEADER_CACHE_CONTROL));\r\n    this.headerExpire = c.getString(c.getColumnIndexOrThrow(TransferTable.COLUMN_HEADER_EXPIRE));\r\n    this.userMetadata = JsonUtils.jsonToMap(c.getString(c.getColumnIndexOrThrow(TransferTable.COLUMN_USER_METADATA)));\r\n    this.expirationTimeRuleId = c.getString(c.getColumnIndexOrThrow(TransferTable.COLUMN_EXPIRATION_TIME_RULE_ID));\r\n    this.httpExpires = c.getString(c.getColumnIndexOrThrow(TransferTable.COLUMN_HTTP_EXPIRES_DATE));\r\n    this.sseAlgorithm = c.getString(c.getColumnIndexOrThrow(TransferTable.COLUMN_SSE_ALGORITHM));\r\n    this.sseKMSKey = c.getString(c.getColumnIndexOrThrow(TransferTable.COLUMN_SSE_KMS_KEY));\r\n    this.md5 = c.getString(c.getColumnIndexOrThrow(TransferTable.COLUMN_CONTENT_MD5));\r\n    this.cannedAcl = c.getString(c.getColumnIndexOrThrow(TransferTable.COLUMN_CANNED_ACL));\r\n    this.headerStorageClass = c.getString(c.getColumnIndexOrThrow(TransferTable.COLUMN_HEADER_STORAGE_CLASS));\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.ChangeMessageVisibilityBatchResult.withSuccessful",
	"Comment": "a list of changemessagevisibilitybatchresultentry items.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ChangeMessageVisibilityBatchResult withSuccessful(ChangeMessageVisibilityBatchResultEntry successful,ChangeMessageVisibilityBatchResult withSuccessful,java.util.Collection<ChangeMessageVisibilityBatchResultEntry> successful){\r\n    setSuccessful(successful);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointSendConfiguration.withTitleOverride",
	"Comment": "title override. if specified will override default title if applicable.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointSendConfiguration withTitleOverride(String titleOverride){\r\n    this.titleOverride = titleOverride;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.kinesisvideo.common.logging.Log.addHexString",
	"Comment": "converts a byte array to hex string representation and appends it to the stringbuilder.",
	"Method": "void addHexString(byte[] bytes){\r\n    for (int i = 0; i < bytes.length; i++) {\r\n        final int unsignedByte = bytes[i] & 0xff;\r\n        if (unsignedByte < 16) {\r\n            mStringBuilder.append('0');\r\n        }\r\n        mStringBuilder.append(Integer.toHexString(unsignedByte));\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.StartTranscriptionJobResult.withTranscriptionJob",
	"Comment": "an object containing details of the asynchronous transcription job.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "StartTranscriptionJobResult withTranscriptionJob(TranscriptionJob transcriptionJob){\r\n    this.transcriptionJob = transcriptionJob;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.KinesisFirehoseDestination.withDeliveryStreamARN",
	"Comment": "the arn of the amazon kinesis firehose stream that email sending eventsshould be published to.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "KinesisFirehoseDestination withDeliveryStreamARN(String deliveryStreamARN){\r\n    this.deliveryStreamARN = deliveryStreamARN;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.MouthOpen.setValue",
	"Comment": "boolean value that indicates whether the mouth on the face is open ornot.",
	"Method": "void setValue(Boolean value){\r\n    this.value = value;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.pinpoint.analytics.monetization.CustomMonetizationEventBuilder.create",
	"Comment": "create a custommonetizationeventbuilder with the specified event client",
	"Method": "CustomMonetizationEventBuilder create(AnalyticsClient analyticsClient){\r\n    return new CustomMonetizationEventBuilder(analyticsClient);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CreateApplicationRequest.getName",
	"Comment": "the display name of the application. used in the amazon pinpoint console.",
	"Method": "String getName(){\r\n    return name;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.DescribeCollectionResult.getFaceModelVersion",
	"Comment": "returns the value of the facemodelversion property for this object.",
	"Method": "String getFaceModelVersion(){\r\n    return faceModelVersion;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SendBounceResult.withMessageId",
	"Comment": "the message id of the bounce message.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendBounceResult withMessageId(String messageId){\r\n    this.messageId = messageId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointMessageResult.withStatusCode",
	"Comment": "downstream service status code.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointMessageResult withStatusCode(Integer statusCode){\r\n    this.statusCode = statusCode;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.CipherFactory.createCipher",
	"Comment": "creates a new cipher instance based on the crypto parameters specified inthe constructor. each cipher instance is identical to any other cipherproduced by this cipherfactory.",
	"Method": "Cipher createCipher(){\r\n    Cipher cipher = EncryptionUtils.createSymmetricCipher(symmetricKey, cipherMode, cryptoProvider, initVectorBytes);\r\n    if (initVectorBytes == null)\r\n        initVectorBytes = cipher.getIV();\r\n    return cipher;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.util.Mimetypes.loadAndReplaceMimetypes",
	"Comment": "reads and stores the mime type setting corresponding to a file extension,by reading text from an inputstream. if a mime type setting alreadyexists when this method is run, the mime type value is replaced with thenewer one.",
	"Method": "void loadAndReplaceMimetypes(InputStream is){\r\n    BufferedReader br = new BufferedReader(new InputStreamReader(is, StringUtils.UTF8));\r\n    String line = null;\r\n    while ((line = br.readLine()) != null) {\r\n        line = line.trim();\r\n        if (line.startsWith(\"#\") || line.length() == 0) {\r\n            log.debug(\"Ignoring comments and empty lines.\");\r\n        } else {\r\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\r\n            if (st.countTokens() > 1) {\r\n                String mimetype = st.nextToken();\r\n                while (st.hasMoreTokens()) {\r\n                    String extension = st.nextToken();\r\n                    extensionToMimetypeMap.put(StringUtils.lowerCase(extension), mimetype);\r\n                    if (log.isDebugEnabled()) {\r\n                        log.debug(\"Setting mime type for extension '\" + StringUtils.lowerCase(extension) + \"' to '\" + mimetype + \"'\");\r\n                    }\r\n                }\r\n            } else {\r\n                if (log.isDebugEnabled()) {\r\n                    log.debug(\"Ignoring mimetype with no associated file extensions: '\" + line + \"'\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CloudWatchDestination.setDimensionConfigurations",
	"Comment": "a list of dimensions upon which to categorize your emails when youpublish email sending events to amazon cloudwatch.",
	"Method": "void setDimensionConfigurations(java.util.Collection<CloudWatchDimensionConfiguration> dimensionConfigurations){\r\n    if (dimensionConfigurations == null) {\r\n        this.dimensionConfigurations = null;\r\n        return;\r\n    }\r\n    this.dimensionConfigurations = new java.util.ArrayList<CloudWatchDimensionConfiguration>(dimensionConfigurations);\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.listConfigurationSetsAsync",
	"Comment": "provides a list of the configuration sets associated with your amazon sesaccount in the current aws region. for information about usingconfiguration sets, see monitoring your amazon ses sending activity in the amazon sesdeveloper guide.you can execute this operation no more than once per second. thisoperation will return up to 1,000 configuration sets each time it is run.if your amazon ses account has more than 1,000 configuration sets, thisoperation will also return a nexttoken element. you can then execute thelistconfigurationsets operation again, passing thenexttoken parameter and the value of the nexttoken elementto retrieve additional results.",
	"Method": "Future<ListConfigurationSetsResult> listConfigurationSetsAsync(ListConfigurationSetsRequest listConfigurationSetsRequest,Future<ListConfigurationSetsResult> listConfigurationSetsAsync,ListConfigurationSetsRequest listConfigurationSetsRequest,AsyncHandler<ListConfigurationSetsRequest, ListConfigurationSetsResult> asyncHandler){\r\n    return executorService.submit(new Callable<ListConfigurationSetsResult>() {\r\n        public ListConfigurationSetsResult call() throws Exception {\r\n            ListConfigurationSetsResult result = null;\r\n            try {\r\n                result = listConfigurationSets(listConfigurationSetsRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(listConfigurationSetsRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.listConfigurationSetsAsync",
	"Comment": "provides a list of the configuration sets associated with your amazon sesaccount in the current aws region. for information about usingconfiguration sets, see monitoring your amazon ses sending activity in the amazon sesdeveloper guide.you can execute this operation no more than once per second. thisoperation will return up to 1,000 configuration sets each time it is run.if your amazon ses account has more than 1,000 configuration sets, thisoperation will also return a nexttoken element. you can then execute thelistconfigurationsets operation again, passing thenexttoken parameter and the value of the nexttoken elementto retrieve additional results.",
	"Method": "Future<ListConfigurationSetsResult> listConfigurationSetsAsync(ListConfigurationSetsRequest listConfigurationSetsRequest,Future<ListConfigurationSetsResult> listConfigurationSetsAsync,ListConfigurationSetsRequest listConfigurationSetsRequest,AsyncHandler<ListConfigurationSetsRequest, ListConfigurationSetsResult> asyncHandler){\r\n    ListConfigurationSetsResult result = null;\r\n    try {\r\n        result = listConfigurationSets(listConfigurationSetsRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(listConfigurationSetsRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.CompareFacesResult.setFaceMatches",
	"Comment": "an array of faces in the target image that match the source image face.each comparefacesmatch object provides the bounding box, theconfidence level that the bounding box contains a face, and thesimilarity score for the face in the bounding box and the face in thesource image.",
	"Method": "void setFaceMatches(java.util.Collection<CompareFacesMatch> faceMatches){\r\n    if (faceMatches == null) {\r\n        this.faceMatches = null;\r\n        return;\r\n    }\r\n    this.faceMatches = new java.util.ArrayList<CompareFacesMatch>(faceMatches);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ItemResponse.setEventsItemResponse",
	"Comment": "events item response is a multipart response object per event id, witheventid as the key and eventitemresponse object as the value",
	"Method": "void setEventsItemResponse(java.util.Map<String, EventItemResponse> eventsItemResponse){\r\n    this.eventsItemResponse = eventsItemResponse;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketCrossOriginConfiguration.withRules",
	"Comment": "sets the rules that comprise this configuration and returns a referenceto this object for easy method chaining.",
	"Method": "BucketCrossOriginConfiguration withRules(List<CORSRule> rules,BucketCrossOriginConfiguration withRules,CORSRule rules){\r\n    setRules(Arrays.asList(rules));\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ChannelResponse.withHasCredential",
	"Comment": "not used. retained for backwards compatibility.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ChannelResponse withHasCredential(Boolean hasCredential){\r\n    this.hasCredential = hasCredential;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSChannelRequest.withPrivateKey",
	"Comment": "the certificate private key.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSChannelRequest withPrivateKey(String privateKey){\r\n    this.privateKey = privateKey;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetSegmentImportJobsRequest.setToken",
	"Comment": "the nexttoken string returned on a previous page that you use to get thenext page of results in a paginated response.",
	"Method": "void setToken(String token){\r\n    this.token = token;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketAclRequest.getAcl",
	"Comment": "returns the custom acl to be applied to the specified bucket when thisrequest is executed. a request can use either a custom acl or a cannedacl, but not both.",
	"Method": "AccessControlList getAcl(){\r\n    return acl;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.SendMessageResult.getMessageId",
	"Comment": "an element containing the message id of the message sent to the queue.for more information, see queue and message identifiers in the amazon sqs developerguide.",
	"Method": "String getMessageId(){\r\n    return messageId;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.MessageConfiguration.getAPNSMessage",
	"Comment": "the message that the campaign delivers to apns channels. overrides thedefault message.",
	"Method": "Message getAPNSMessage(){\r\n    return aPNSMessage;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ListReceiptFiltersResult.withFilters",
	"Comment": "a list of ip address filter data structures, which each consist of aname, an ip address range, and whether to allow or block mail from it.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListReceiptFiltersResult withFilters(ReceiptFilter filters,ListReceiptFiltersResult withFilters,java.util.Collection<ReceiptFilter> filters){\r\n    setFilters(filters);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetContentModerationResult.withErrorCode",
	"Comment": "sets the value of the errorcode property for this object.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetContentModerationResult withErrorCode(String errorCode){\r\n    this.errorCode = errorCode;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.AmazonTranscribeClient.deleteTranscriptionJob",
	"Comment": "deletes a previously submitted transcription job as well as any othergenerated results such as the transcription, models, and so on.",
	"Method": "void deleteTranscriptionJob(DeleteTranscriptionJobRequest deleteTranscriptionJobRequest){\r\n    ExecutionContext executionContext = createExecutionContext(deleteTranscriptionJobRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<DeleteTranscriptionJobRequest> request = null;\r\n    Response<Void> response = null;\r\n    try {\r\n        awsRequestMetrics.startEvent(Field.RequestMarshallTime);\r\n        try {\r\n            request = new DeleteTranscriptionJobRequestMarshaller().marshall(deleteTranscriptionJobRequest);\r\n            request.setAWSRequestMetrics(awsRequestMetrics);\r\n        } finally {\r\n            awsRequestMetrics.endEvent(Field.RequestMarshallTime);\r\n        }\r\n        JsonResponseHandler<Void> responseHandler = new JsonResponseHandler<Void>(null);\r\n        invoke(request, responseHandler, executionContext);\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointDemographic.getModel",
	"Comment": "the model name or number of the endpoint device, such as iphone.",
	"Method": "String getModel(){\r\n    return model;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.DescribeStreamProcessorResult.setSettings",
	"Comment": "face recognition input parameters that are being used by the streamprocessor. includes the collection to use for face recognition and theface attributes to detect.",
	"Method": "void setSettings(StreamProcessorSettings settings){\r\n    this.settings = settings;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.Message.withMessageId",
	"Comment": "a unique identifier for the message. message ids are considered uniqueacross all aws accounts for an extended period of time.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Message withMessageId(String messageId){\r\n    this.messageId = messageId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Section.getEndTimestamp",
	"Comment": "returns the value of the endtimestamp property for this object.",
	"Method": "Long getEndTimestamp(){\r\n    return endTimestamp;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointResponse.setCreationDate",
	"Comment": "the date and time when the endpoint was created, shown in iso 8601format.",
	"Method": "void setCreationDate(String creationDate){\r\n    this.creationDate = creationDate;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointDemographic.setModel",
	"Comment": "the model name or number of the endpoint device, such as iphone.",
	"Method": "void setModel(String model){\r\n    this.model = model;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.EventDestination.getKinesisFirehoseDestination",
	"Comment": "an object that contains the delivery stream arn and the iam role arnassociated with an amazon kinesis firehose event destination.",
	"Method": "KinesisFirehoseDestination getKinesisFirehoseDestination(){\r\n    return kinesisFirehoseDestination;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CORSRule.withAllowedHeaders",
	"Comment": "sets the allowed headers of this rule and returns a reference to thisobject for method chaining.",
	"Method": "CORSRule withAllowedHeaders(List<String> allowedHeaders){\r\n    this.allowedHeaders = allowedHeaders;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.BoundingBox.getWidth",
	"Comment": "width of the bounding box as a ratio of the overall image width.",
	"Method": "Float getWidth(){\r\n    return width;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartPersonTrackingRequest.getNotificationChannel",
	"Comment": "the amazon sns topic arn you want amazon rekognition video to publish thecompletion status of the people detection operation to.",
	"Method": "NotificationChannel getNotificationChannel(){\r\n    return notificationChannel;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetCelebrityRecognitionResult.getErrorCode",
	"Comment": "returns the value of the errorcode property for this object.",
	"Method": "String getErrorCode(){\r\n    return errorCode;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.CreatePlatformEndpointRequest.getPlatformApplicationArn",
	"Comment": "platformapplicationarn returned from createplatformapplication is used tocreate a an endpoint.",
	"Method": "String getPlatformApplicationArn(){\r\n    return platformApplicationArn;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.DeleteEndpointRequest.withEndpointArn",
	"Comment": "endpointarn of endpoint to delete.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteEndpointRequest withEndpointArn(String endpointArn){\r\n    this.endpointArn = endpointArn;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.amazonmobileanalytics.monetization.MonetizationEventBuilder.setQuantity",
	"Comment": "sets the quantity that will be used to build the monetization event",
	"Method": "void setQuantity(Double quantity){\r\n    this.quantity = quantity;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ListCustomVerificationEmailTemplatesRequest.withNextToken",
	"Comment": "an array the contains the name and creation time stamp for each templatein your amazon ses account.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListCustomVerificationEmailTemplatesRequest withNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.Message.setReceiptHandle",
	"Comment": "an identifier associated with the act of receiving the message. a newreceipt handle is returned every time you receive a message. whendeleting a message, you provide the last received receipt handle todelete the message.",
	"Method": "void setReceiptHandle(String receiptHandle){\r\n    this.receiptHandle = receiptHandle;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.RemoveAttributesRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "RemoveAttributesRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobResponse.getFailedPieces",
	"Comment": "the number of pieces that have failed to import as of the time of therequest.",
	"Method": "Integer getFailedPieces(){\r\n    return failedPieces;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.MessageResult.getMessageId",
	"Comment": "unique message identifier associated with the message that was sent.",
	"Method": "String getMessageId(){\r\n    return messageId;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetSegmentImportJobsRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetSegmentImportJobsRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.CreateCollectionResult.withFaceModelVersion",
	"Comment": "version number of the face detection model associated with the collectionyou are creating.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreateCollectionResult withFaceModelVersion(String faceModelVersion){\r\n    this.faceModelVersion = faceModelVersion;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EmailChannelResponse.withApplicationId",
	"Comment": "the unique id of the application to which the email channel belongs.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EmailChannelResponse withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transferutility.TransferUtility.getTransferById",
	"Comment": "gets a transferobserver instance to track the record with the given id.",
	"Method": "TransferObserver getTransferById(int id){\r\n    Cursor c = null;\r\n    try {\r\n        c = dbUtil.queryTransferById(id);\r\n        if (c.moveToNext()) {\r\n            final TransferObserver to = new TransferObserver(id, dbUtil);\r\n            to.updateFromDB(c);\r\n            return to;\r\n        }\r\n    } finally {\r\n        if (c != null) {\r\n            c.close();\r\n        }\r\n    }\r\n    return null;\r\n}"
}, {
	"Path": "com.amazonaws.services.lexrts.model.PostContentRequest.withBotAlias",
	"Comment": "alias of the amazon lex bot.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PostContentRequest withBotAlias(String botAlias){\r\n    this.botAlias = botAlias;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteObjectsRequest.getQuiet",
	"Comment": "returns the quiet element for this request. when true, only errors willbe returned in the service response.",
	"Method": "boolean getQuiet(){\r\n    return quiet;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.EncryptRequest.getGrantTokens",
	"Comment": "a list of grant tokens.for more information, see grant tokens in the aws key management service developerguide.",
	"Method": "java.util.List<String> getGrantTokens(){\r\n    return grantTokens;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.SynthesisTask.withRequestCharacters",
	"Comment": "number of billable characters synthesized.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SynthesisTask withRequestCharacters(Integer requestCharacters){\r\n    this.requestCharacters = requestCharacters;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.EncryptedPutObjectRequest.withMaterialsDescription",
	"Comment": "sets the materials description for the encryption materials to be usedwith the current putobjectrequest.",
	"Method": "EncryptedPutObjectRequest withMaterialsDescription(Map<String, String> materialsDescription){\r\n    setMaterialsDescription(materialsDescription);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideoarchivedmedia.model.TimestampRange.withEndTimestamp",
	"Comment": "the ending time stamp in the range of time stamps for which to returnfragments.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "TimestampRange withEndTimestamp(java.util.Date endTimestamp){\r\n    this.endTimestamp = endTimestamp;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EmailChannelResponse.withId",
	"Comment": "channel id. not used, only for backwards compatibility.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EmailChannelResponse withId(String id){\r\n    this.id = id;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.RoutingRuleCondition.getKeyPrefixEquals",
	"Comment": "return the object key name prefix when the redirect is applied.",
	"Method": "String getKeyPrefixEquals(){\r\n    return keyPrefixEquals;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GCMChannelResponse.getId",
	"Comment": "channel id. not used. present only for backwards compatibility.",
	"Method": "String getId(){\r\n    return id;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Result.setTruncated",
	"Comment": "for internal use only. sets the truncated property for this objectlisting, indicating if this is a complete listing or not and whether thecaller needs to make additional calls to s3 to get more object summaries.",
	"Method": "void setTruncated(boolean isTruncated){\r\n    this.isTruncated = isTruncated;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketLoggingConfigurationRequest.withLoggingConfiguration",
	"Comment": "sets the logging configuration for the specified bucket and returns theupdated object, enabling additional method calls to be chained together.",
	"Method": "SetBucketLoggingConfigurationRequest withLoggingConfiguration(BucketLoggingConfiguration loggingConfiguration){\r\n    setLoggingConfiguration(loggingConfiguration);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.pinpoint.PinpointConfiguration.getEnableEvents",
	"Comment": "indicates whether or not event collection is enabled for the sdk.",
	"Method": "boolean getEnableEvents(){\r\n    return this.enableEvents;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.internal.DownloadImpl.getBucketName",
	"Comment": "the name of the bucket where the object is being downloaded from.",
	"Method": "String getBucketName(){\r\n    return s3Object.getBucketName();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.BaiduMessage.getImageIconUrl",
	"Comment": "the url that points to an image used as the large icon to thenotification content view.",
	"Method": "String getImageIconUrl(){\r\n    return imageIconUrl;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointSendConfiguration.withBodyOverride",
	"Comment": "body override. if specified will override default body.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointSendConfiguration withBodyOverride(String bodyOverride){\r\n    this.bodyOverride = bodyOverride;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.UntagLogGroupRequest.withTags",
	"Comment": "the tag keys. the corresponding tags are removed from the log group.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UntagLogGroupRequest withTags(String tags,UntagLogGroupRequest withTags,java.util.Collection<String> tags){\r\n    setTags(tags);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.GetVocabularyResult.setFailureReason",
	"Comment": "if the vocabularystate field is failed, thisfield contains information about why the job failed.",
	"Method": "void setFailureReason(String failureReason){\r\n    this.failureReason = failureReason;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsRequest.getEncodingType",
	"Comment": "gets the optional encodingtype parameter indicating theencoding method to be applied on the response.",
	"Method": "String getEncodingType(){\r\n    return encodingType;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CreateImportJobResult.withImportJobResponse",
	"Comment": "import job response.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreateImportJobResult withImportJobResponse(ImportJobResponse importJobResponse){\r\n    this.importJobResponse = importJobResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketInventoryConfigurationsResult.setTruncated",
	"Comment": "for internal use only. sets the truncated property forthis inventory configuration listing, indicating if this is a complete listing or not andwhether the caller needs to make additional calls to s3 to get more results.",
	"Method": "void setTruncated(boolean isTruncated){\r\n    this.isTruncated = isTruncated;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.AddressConfiguration.setRawContent",
	"Comment": "the raw json formatted string to be used as the payload. this valueoverrides the message.",
	"Method": "void setRawContent(String rawContent){\r\n    this.rawContent = rawContent;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.UpdateConfigurationSetSendingEnabledRequest.withEnabled",
	"Comment": "describes whether email sending is enabled or disabled for theconfiguration set.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateConfigurationSetSendingEnabledRequest withEnabled(Boolean enabled){\r\n    this.enabled = enabled;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.ListShardsRequest.getStreamCreationTimestamp",
	"Comment": "specify this input parameter to distinguish data streams that have thesame name. for example, if you create a data stream and then delete it,and you later create another data stream with the same name, you can usethis input parameter to specify which of the two streams you want to listthe shards for.you cannot specify this parameter if you specify thenexttoken parameter.",
	"Method": "java.util.Date getStreamCreationTimestamp(){\r\n    return streamCreationTimestamp;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.DeleteResourcePolicyRequest.setPolicyName",
	"Comment": "the name of the policy to be revoked. this parameter is required.",
	"Method": "void setPolicyName(String policyName){\r\n    this.policyName = policyName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSVoipChannelResponse.withHasCredential",
	"Comment": "not used. retained for backwards compatibility.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSVoipChannelResponse withHasCredential(Boolean hasCredential){\r\n    this.hasCredential = hasCredential;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.LabelDetection.withLabel",
	"Comment": "details about the detected label.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "LabelDetection withLabel(Label label){\r\n    this.label = label;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.InvokeResult.withPayload",
	"Comment": "it is the json representation of the object returned by the lambdafunction. this is present only if the invocation type isrequestresponse.in the event of a function error this field contains a message describingthe error. for the handled errors the lambda function willreport this message. for unhandled errors aws lambda reportsthe message.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "InvokeResult withPayload(java.nio.ByteBuffer payload){\r\n    this.payload = payload;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetObjectAclRequest.getBucketName",
	"Comment": "returns the name of the bucket containing the object whose acl is beingset.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.DeleteMessageBatchResult.withFailed",
	"Comment": "a list of batchresulterrorentry items.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteMessageBatchResult withFailed(BatchResultErrorEntry failed,DeleteMessageBatchResult withFailed,java.util.Collection<BatchResultErrorEntry> failed){\r\n    setFailed(failed);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.AmazonS3Client.getBucketRequestPayment",
	"Comment": "retrieves the request payment configuration for a given amazon s3 bucket.when the request payment configuration for a amazon s3 bucket isrequester, the requester instead of the bucket owner paysthe cost of the request and the data download from the bucket. the bucketowner always pays the cost of storing data.",
	"Method": "RequestPaymentConfiguration getBucketRequestPayment(GetRequestPaymentConfigurationRequest getRequestPaymentConfigurationRequest){\r\n    final String bucketName = getRequestPaymentConfigurationRequest.getBucketName();\r\n    assertParameterNotNull(bucketName, \"The bucket name parameter must be specified while getting the Request Payment Configuration.\");\r\n    final Request<GetRequestPaymentConfigurationRequest> request = createRequest(bucketName, null, getRequestPaymentConfigurationRequest, HttpMethodName.GET);\r\n    request.addParameter(\"requestPayment\", null);\r\n    request.addHeader(\"Content-Type\", \"application/xml\");\r\n    return invoke(request, new Unmarshallers.RequestPaymentConfigurationUnmarshaller(), bucketName, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.SendMessageRequest.withMessageAttributes",
	"Comment": "each message attribute consists of a name, type, and value. for moreinformation, see message attribute items in the amazon sqs developer guide.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendMessageRequest withMessageAttributes(java.util.Map<String, MessageAttributeValue> messageAttributes){\r\n    this.messageAttributes = messageAttributes;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSMessage.withBody",
	"Comment": "the message body of the notification.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSMessage withBody(String body){\r\n    this.body = body;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.MessageResponse.getEndpointResult",
	"Comment": "a map containing a multi part response for each address, with theendpointid as the key and the result as the value.",
	"Method": "java.util.Map<String, EndpointMessageResult> getEndpointResult(){\r\n    return endpointResult;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.RoutingRule.getCondition",
	"Comment": "return the condition that must be met for the specified redirect toapply.",
	"Method": "RoutingRuleCondition getCondition(){\r\n    return condition;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.NumberValidateResponse.withTimezone",
	"Comment": "the time zone for the location where the phone number was originallyregistered.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "NumberValidateResponse withTimezone(String timezone){\r\n    this.timezone = timezone;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GCMMessage.getSubstitutions",
	"Comment": "default message substitutions. can be overridden by individual addresssubstitutions.",
	"Method": "java.util.Map<String, java.util.List<String>> getSubstitutions(){\r\n    return substitutions;\r\n}"
}, {
	"Path": "com.amazonaws.serverless.proxy.internal.servlet.FilterChainHolder.getFilter",
	"Comment": "get the filterholder object from the chain at the given index.",
	"Method": "FilterHolder getFilter(int idx){\r\n    if (filters == null) {\r\n        return null;\r\n    } else {\r\n        return filters.get(idx);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentResponse.getSegmentGroups",
	"Comment": "a segment group, which consists of zero or more source segments, plusdimensions that are applied to those source segments.",
	"Method": "SegmentGroupList getSegmentGroups(){\r\n    return segmentGroups;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.UpdateConfigurationSetTrackingOptionsRequest.getConfigurationSetName",
	"Comment": "the name of the configuration set for which you want to update the customtracking domain.",
	"Method": "String getConfigurationSetName(){\r\n    return configurationSetName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetCampaignVersionsRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetCampaignVersionsRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.BaiduChannelResponse.withApplicationId",
	"Comment": "application idreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "BaiduChannelResponse withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.ListTagsForStreamResult.setTags",
	"Comment": "a list of tags associated with streamname, starting with thefirst tag after exclusivestarttagkey and up to the specifiedlimit.",
	"Method": "void setTags(java.util.Collection<Tag> tags){\r\n    if (tags == null) {\r\n        this.tags = null;\r\n        return;\r\n    }\r\n    this.tags = new java.util.ArrayList<Tag>(tags);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EmailChannelResponse.withFromAddress",
	"Comment": "the email address used to send emails from.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EmailChannelResponse withFromAddress(String fromAddress){\r\n    this.fromAddress = fromAddress;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.MessageConfiguration.setADMMessage",
	"Comment": "the message that the campaign delivers to adm channels. overrides thedefault message.",
	"Method": "void setADMMessage(Message aDMMessage){\r\n    this.aDMMessage = aDMMessage;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignResponse.withLastModifiedDate",
	"Comment": "the date the campaign was last updated in iso 8601 format.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CampaignResponse withLastModifiedDate(String lastModifiedDate){\r\n    this.lastModifiedDate = lastModifiedDate;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointDemographic.withPlatformVersion",
	"Comment": "the platform version of the endpoint device.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointDemographic withPlatformVersion(String platformVersion){\r\n    this.platformVersion = platformVersion;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketTaggingConfigurationRequest.setTaggingConfiguration",
	"Comment": "sets the new tagging configuration for the specified bucket.",
	"Method": "void setTaggingConfiguration(BucketTaggingConfiguration taggingConfiguration){\r\n    this.taggingConfiguration = taggingConfiguration;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointDemographic.withModelVersion",
	"Comment": "the model version of the endpoint device.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointDemographic withModelVersion(String modelVersion){\r\n    this.modelVersion = modelVersion;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.AmazonKinesisClient.listTagsForStream",
	"Comment": "lists the tags for the specified kinesis data stream. this operation hasa limit of five transactions per second per account.",
	"Method": "ListTagsForStreamResult listTagsForStream(ListTagsForStreamRequest listTagsForStreamRequest){\r\n    ExecutionContext executionContext = createExecutionContext(listTagsForStreamRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<ListTagsForStreamRequest> request = null;\r\n    Response<ListTagsForStreamResult> response = null;\r\n    try {\r\n        awsRequestMetrics.startEvent(Field.RequestMarshallTime);\r\n        try {\r\n            request = new ListTagsForStreamRequestMarshaller().marshall(listTagsForStreamRequest);\r\n            request.setAWSRequestMetrics(awsRequestMetrics);\r\n        } finally {\r\n            awsRequestMetrics.endEvent(Field.RequestMarshallTime);\r\n        }\r\n        Unmarshaller<ListTagsForStreamResult, JsonUnmarshallerContext> unmarshaller = new ListTagsForStreamResultJsonUnmarshaller();\r\n        JsonResponseHandler<ListTagsForStreamResult> responseHandler = new JsonResponseHandler<ListTagsForStreamResult>(unmarshaller);\r\n        response = invoke(request, responseHandler, executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteObjectsRequest.setQuiet",
	"Comment": "sets the quiet element for this request. when true, only errors will bereturned in the service response.",
	"Method": "void setQuiet(boolean quiet){\r\n    this.quiet = quiet;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GCMMessage.setImageUrl",
	"Comment": "the url that points to an image used in the push notification.",
	"Method": "void setImageUrl(String imageUrl){\r\n    this.imageUrl = imageUrl;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.AmazonS3Client.convertToVirtualHostEndpoint",
	"Comment": "converts the current endpoint set for this client into virtual addressingstyle, by placing the name of the specified bucket before the s3 serviceendpoint.",
	"Method": "URI convertToVirtualHostEndpoint(URI endpoint,String bucketName){\r\n    try {\r\n        return new URI(endpoint.getScheme() + \"://\" + bucketName + \".\" + endpoint.getAuthority());\r\n    } catch (final URISyntaxException e) {\r\n        throw new IllegalArgumentException(\"Invalid bucket name: \" + bucketName, e);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClient.sendBounce",
	"Comment": "generates and sends a bounce message to the sender of an email youreceived through amazon ses. you can only use this api on an email up to24 hours after you receive it.you cannot use this api to send generic bounces for mail that was notreceived by amazon ses.for information about receiving email through amazon ses, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "SendBounceResult sendBounce(SendBounceRequest sendBounceRequest){\r\n    ExecutionContext executionContext = createExecutionContext(sendBounceRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<SendBounceRequest> request = null;\r\n    Response<SendBounceResult> response = null;\r\n    try {\r\n        request = new SendBounceRequestMarshaller().marshall(sendBounceRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        response = invoke(request, new SendBounceResultStaxUnmarshaller(), executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSChannelRequest.withCertificate",
	"Comment": "the distribution certificate from apple.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSChannelRequest withCertificate(String certificate){\r\n    this.certificate = certificate;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.analytics.AnalyticsS3BucketDestination.withBucketAccountId",
	"Comment": "sets the account id that owns the destination bucket and returns this object for method chaining.if no account id is provided, the owner will not be validated prior to exporting data.",
	"Method": "AnalyticsS3BucketDestination withBucketAccountId(String bucketAccountId){\r\n    setBucketAccountId(bucketAccountId);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.DescribeStreamSummaryResult.getStreamDescriptionSummary",
	"Comment": "a streamdescriptionsummary containing information about thestream.",
	"Method": "StreamDescriptionSummary getStreamDescriptionSummary(){\r\n    return streamDescriptionSummary;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyPartRequest.setDestinationKey",
	"Comment": "sets the destination bucket key under which the new, copied object willbe stored.",
	"Method": "void setDestinationKey(String destinationKey){\r\n    this.destinationKey = destinationKey;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.SetTopicAttributesRequest.withAttributeValue",
	"Comment": "the new value for the attribute.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SetTopicAttributesRequest withAttributeValue(String attributeValue){\r\n    this.attributeValue = attributeValue;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.CreateCollectionResult.setFaceModelVersion",
	"Comment": "version number of the face detection model associated with the collectionyou are creating.",
	"Method": "void setFaceModelVersion(String faceModelVersion){\r\n    this.faceModelVersion = faceModelVersion;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartListing.setInitiator",
	"Comment": "sets the user who initiated the associated multipart upload.",
	"Method": "void setInitiator(Owner initiator){\r\n    this.initiator = initiator;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetApnsVoipChannelRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetApnsVoipChannelRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.InvokeResult.setStatusCode",
	"Comment": "the http status code will be in the 200 range for successful request. forthe requestresponse invocation type this status code will be200. for the event invocation type this status code will be202. for the dryrun invocation type the status code will be204.",
	"Method": "void setStatusCode(Integer statusCode){\r\n    this.statusCode = statusCode;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.S3Action.getBucketName",
	"Comment": "the name of the amazon s3 bucket that incoming email will be saved to.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.ServiceUtils.convertRequestToUrl",
	"Comment": "converts the specified request object into a url, containing all thespecified parameters, the specified request endpoint, etc.",
	"Method": "URL convertRequestToUrl(Request<?> request,URL convertRequestToUrl,Request<?> request,boolean removeLeadingSlashInResourcePath){\r\n    String resourcePath = S3HttpUtils.urlEncode(request.getResourcePath(), true);\r\n    if (removeLeadingSlashInResourcePath && resourcePath.startsWith(\"/\")) {\r\n        resourcePath = resourcePath.substring(1);\r\n    }\r\n    String urlPath = \"/\" + resourcePath;\r\n    urlPath = urlPath.replaceAll(\"(?<=/)/\", \"/\");\r\n    String urlString = request.getEndpoint() + urlPath;\r\n    boolean firstParam = true;\r\n    for (final String param : request.getParameters().keySet()) {\r\n        if (firstParam) {\r\n            urlString += \"?\";\r\n            firstParam = false;\r\n        } else {\r\n            urlString += \"&\";\r\n        }\r\n        final String value = request.getParameters().get(param);\r\n        urlString += param + \"=\" + S3HttpUtils.urlEncode(value, false);\r\n    }\r\n    try {\r\n        return new URL(urlString);\r\n    } catch (final MalformedURLException e) {\r\n        throw new AmazonClientException(\"Unable to convert request to well formed URL: \" + e.getMessage(), e);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.getAccountSendingEnabledAsync",
	"Comment": "returns the email sending status of the amazon ses account for thecurrent region.you can execute this operation no more than once per second.",
	"Method": "Future<GetAccountSendingEnabledResult> getAccountSendingEnabledAsync(GetAccountSendingEnabledRequest getAccountSendingEnabledRequest,Future<GetAccountSendingEnabledResult> getAccountSendingEnabledAsync,GetAccountSendingEnabledRequest getAccountSendingEnabledRequest,AsyncHandler<GetAccountSendingEnabledRequest, GetAccountSendingEnabledResult> asyncHandler){\r\n    return executorService.submit(new Callable<GetAccountSendingEnabledResult>() {\r\n        public GetAccountSendingEnabledResult call() throws Exception {\r\n            GetAccountSendingEnabledResult result = null;\r\n            try {\r\n                result = getAccountSendingEnabled(getAccountSendingEnabledRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(getAccountSendingEnabledRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.getAccountSendingEnabledAsync",
	"Comment": "returns the email sending status of the amazon ses account for thecurrent region.you can execute this operation no more than once per second.",
	"Method": "Future<GetAccountSendingEnabledResult> getAccountSendingEnabledAsync(GetAccountSendingEnabledRequest getAccountSendingEnabledRequest,Future<GetAccountSendingEnabledResult> getAccountSendingEnabledAsync,GetAccountSendingEnabledRequest getAccountSendingEnabledRequest,AsyncHandler<GetAccountSendingEnabledRequest, GetAccountSendingEnabledResult> asyncHandler){\r\n    GetAccountSendingEnabledResult result = null;\r\n    try {\r\n        result = getAccountSendingEnabled(getAccountSendingEnabledRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(getAccountSendingEnabledRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMMessage.getSubstitutions",
	"Comment": "default message substitutions. can be overridden by individual addresssubstitutions.",
	"Method": "java.util.Map<String, java.util.List<String>> getSubstitutions(){\r\n    return substitutions;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.deleteConfigurationSetAsync",
	"Comment": "deletes a configuration set. configuration sets enable you to publishemail sending events. for information about using configuration sets, seethe amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "Future<DeleteConfigurationSetResult> deleteConfigurationSetAsync(DeleteConfigurationSetRequest deleteConfigurationSetRequest,Future<DeleteConfigurationSetResult> deleteConfigurationSetAsync,DeleteConfigurationSetRequest deleteConfigurationSetRequest,AsyncHandler<DeleteConfigurationSetRequest, DeleteConfigurationSetResult> asyncHandler){\r\n    return executorService.submit(new Callable<DeleteConfigurationSetResult>() {\r\n        public DeleteConfigurationSetResult call() throws Exception {\r\n            DeleteConfigurationSetResult result = null;\r\n            try {\r\n                result = deleteConfigurationSet(deleteConfigurationSetRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(deleteConfigurationSetRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.deleteConfigurationSetAsync",
	"Comment": "deletes a configuration set. configuration sets enable you to publishemail sending events. for information about using configuration sets, seethe amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "Future<DeleteConfigurationSetResult> deleteConfigurationSetAsync(DeleteConfigurationSetRequest deleteConfigurationSetRequest,Future<DeleteConfigurationSetResult> deleteConfigurationSetAsync,DeleteConfigurationSetRequest deleteConfigurationSetRequest,AsyncHandler<DeleteConfigurationSetRequest, DeleteConfigurationSetResult> asyncHandler){\r\n    DeleteConfigurationSetResult result = null;\r\n    try {\r\n        result = deleteConfigurationSet(deleteConfigurationSetRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(deleteConfigurationSetRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetSegmentImportJobsRequest.getToken",
	"Comment": "the nexttoken string returned on a previous page that you use to get thenext page of results in a paginated response.",
	"Method": "String getToken(){\r\n    return token;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.sendCustomVerificationEmailAsync",
	"Comment": "adds an email address to the list of identities for your amazon sesaccount in the current aws region and attempts to verify it. as a resultof executing this operation, a customized verification email is sent tothe specified address.to use this operation, you must first create a custom verification emailtemplate. for more information about creating and using customverification email templates, see using custom verification email templates in the amazon sesdeveloper guide.you can execute this operation no more than once per second.",
	"Method": "Future<SendCustomVerificationEmailResult> sendCustomVerificationEmailAsync(SendCustomVerificationEmailRequest sendCustomVerificationEmailRequest,Future<SendCustomVerificationEmailResult> sendCustomVerificationEmailAsync,SendCustomVerificationEmailRequest sendCustomVerificationEmailRequest,AsyncHandler<SendCustomVerificationEmailRequest, SendCustomVerificationEmailResult> asyncHandler){\r\n    return executorService.submit(new Callable<SendCustomVerificationEmailResult>() {\r\n        public SendCustomVerificationEmailResult call() throws Exception {\r\n            SendCustomVerificationEmailResult result = null;\r\n            try {\r\n                result = sendCustomVerificationEmail(sendCustomVerificationEmailRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(sendCustomVerificationEmailRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.sendCustomVerificationEmailAsync",
	"Comment": "adds an email address to the list of identities for your amazon sesaccount in the current aws region and attempts to verify it. as a resultof executing this operation, a customized verification email is sent tothe specified address.to use this operation, you must first create a custom verification emailtemplate. for more information about creating and using customverification email templates, see using custom verification email templates in the amazon sesdeveloper guide.you can execute this operation no more than once per second.",
	"Method": "Future<SendCustomVerificationEmailResult> sendCustomVerificationEmailAsync(SendCustomVerificationEmailRequest sendCustomVerificationEmailRequest,Future<SendCustomVerificationEmailResult> sendCustomVerificationEmailAsync,SendCustomVerificationEmailRequest sendCustomVerificationEmailRequest,AsyncHandler<SendCustomVerificationEmailRequest, SendCustomVerificationEmailResult> asyncHandler){\r\n    SendCustomVerificationEmailResult result = null;\r\n    try {\r\n        result = sendCustomVerificationEmail(sendCustomVerificationEmailRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(sendCustomVerificationEmailRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetBucketLocationRequest.getBucketName",
	"Comment": "returns the name of the bucket whose location is being requested.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSClient.deletePlatformApplication",
	"Comment": "deletes a platform application object for one of the supported pushnotification services, such as apns and gcm. for more information, see usingamazon sns mobile push notifications.",
	"Method": "void deletePlatformApplication(DeletePlatformApplicationRequest deletePlatformApplicationRequest){\r\n    ExecutionContext executionContext = createExecutionContext(deletePlatformApplicationRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<DeletePlatformApplicationRequest> request = null;\r\n    Response<Void> response = null;\r\n    try {\r\n        request = new DeletePlatformApplicationRequestMarshaller().marshall(deletePlatformApplicationRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        invoke(request, null, executionContext);\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.GetTranscriptionJobResult.withTranscriptionJob",
	"Comment": "an object that contains the results of the transcription job.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetTranscriptionJobResult withTranscriptionJob(TranscriptionJob transcriptionJob){\r\n    this.transcriptionJob = transcriptionJob;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.kinesisvideo.internal.producer.jni.NativeKinesisVideoProducerStream.resetConnection",
	"Comment": "create a new connection to continue sending data in current buffer",
	"Method": "void resetConnection(){\r\n    mLog.debug(\"Current connection of stream %s is being reset\", mStreamInfo.getName());\r\n    streamTerminated(ReadResult.INVALID_UPLOAD_HANDLE_VALUE, SERVICE_CALL_RESULT_OK);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyPartRequest.withDestinationKey",
	"Comment": "sets the destination bucket key under which the new, copied object willbe stored and returns this object, enabling additional method calls canbe chained together.",
	"Method": "CopyPartRequest withDestinationKey(String destinationKey){\r\n    setDestinationKey(destinationKey);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteBucketInventoryConfigurationRequest.getId",
	"Comment": "returns the id used to identify the inventory configuration.",
	"Method": "String getId(){\r\n    return id;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ListReceiptRuleSetsResult.setNextToken",
	"Comment": "a token indicating that there are additional receipt rule sets availableto be listed. pass this token to successive calls oflistreceiptrulesets to retrieve up to 100 receipt rule setsat a time.",
	"Method": "void setNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.MD5DigestCalculatingInputStream.reset",
	"Comment": "resets the wrapped input stream and the in progress message digest.",
	"Method": "void reset(){\r\n    if (markSupported()) {\r\n        super.reset();\r\n        digest = (digestLastMarked == null) ? newMD5() : cloneFrom(digestLastMarked);\r\n    } else {\r\n        throw new IOException(\"mark/reset not supported\");\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.ComparedFace.getPose",
	"Comment": "indicates the pose of the face as determined by its pitch, roll, and yaw.",
	"Method": "Pose getPose(){\r\n    return pose;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StreamProcessorOutput.withKinesisDataStream",
	"Comment": "the amazon kinesis data streams stream to which the amazon rekognitionstream processor streams the analysis results.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "StreamProcessorOutput withKinesisDataStream(KinesisDataStream kinesisDataStream){\r\n    this.kinesisDataStream = kinesisDataStream;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectRequest.getGeneralProgressListener",
	"Comment": "returns the optional progress listener for receiving updates about objectdownload status.",
	"Method": "ProgressListener getGeneralProgressListener(){\r\n    return generalProgressListener;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial.parseInstructionFile",
	"Comment": "parses instruction data retrieved from s3 and returns a json stringrepresenting the instruction. made for testing purposes.",
	"Method": "String parseInstructionFile(S3Object instructionFile){\r\n    try {\r\n        return convertStreamToString(instructionFile.getObjectContent());\r\n    } catch (final Exception e) {\r\n        throw new AmazonClientException(\"Error parsing JSON instruction file\", e);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.Session.withStartTimestamp",
	"Comment": "the date and time when the session began.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Session withStartTimestamp(String startTimestamp){\r\n    this.startTimestamp = startTimestamp;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SendDataPoint.withRejects",
	"Comment": "number of emails rejected by amazon ses.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendDataPoint withRejects(Long rejects){\r\n    this.rejects = rejects;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.EncryptionUtils.createInstructionPutRequest",
	"Comment": "creates a put request to store the specified instruction object in s3.",
	"Method": "PutObjectRequest createInstructionPutRequest(PutObjectRequest request,EncryptionInstruction instruction,PutObjectRequest createInstructionPutRequest,String bucketName,String key,EncryptionInstruction instruction){\r\n    Map<String, String> instructionJSON = convertInstructionToJSONObject(instruction);\r\n    byte[] instructionBytes = JsonUtils.mapToString(instructionJSON).getBytes(StringUtils.UTF8);\r\n    InputStream instructionInputStream = new ByteArrayInputStream(instructionBytes);\r\n    ObjectMetadata metadata = new ObjectMetadata();\r\n    metadata.setContentLength(instructionBytes.length);\r\n    metadata.addUserMetadata(Headers.CRYPTO_INSTRUCTION_FILE, \"\");\r\n    return new PutObjectRequest(bucketName, key + INSTRUCTION_SUFFIX, instructionInputStream, metadata);\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.UpdateConfigurationSetSendingEnabledRequest.getEnabled",
	"Comment": "describes whether email sending is enabled or disabled for theconfiguration set.",
	"Method": "Boolean getEnabled(){\r\n    return enabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceMatch.withFace",
	"Comment": "describes the face properties such as the bounding box, face id, image idof the source image, and external image id that you assigned.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "FaceMatch withFace(Face face){\r\n    this.face = face;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentImportResource.getSize",
	"Comment": "the number of endpoints that were successfully imported to create thissegment.",
	"Method": "Integer getSize(){\r\n    return size;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListEndpointsByPlatformApplicationRequest.getPlatformApplicationArn",
	"Comment": "platformapplicationarn for listendpointsbyplatformapplicationinputaction.",
	"Method": "String getPlatformApplicationArn(){\r\n    return platformApplicationArn;\r\n}"
}, {
	"Path": "org.bouncycastle.asn1.ASN1ApplicationSpecific.isConstructed",
	"Comment": "return true if the object is marked as constructed, false otherwise.",
	"Method": "boolean isConstructed(){\r\n    return isConstructed;\r\n}"
}, {
	"Path": "com.amazonaws.services.lexrts.model.PostTextResult.withSlotToElicit",
	"Comment": "if the dialogstate value is elicitslot, returnsthe name of the slot for which amazon lex is eliciting a value.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PostTextResult withSlotToElicit(String slotToElicit){\r\n    this.slotToElicit = slotToElicit;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateSegmentRequest.withSegmentId",
	"Comment": "the unique id of the segment.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateSegmentRequest withSegmentId(String segmentId){\r\n    this.segmentId = segmentId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSAsyncClient.setSubscriptionAttributesAsync",
	"Comment": "allows a subscription owner to set an attribute of the topic to a newvalue.",
	"Method": "Future<Void> setSubscriptionAttributesAsync(SetSubscriptionAttributesRequest setSubscriptionAttributesRequest,Future<Void> setSubscriptionAttributesAsync,SetSubscriptionAttributesRequest setSubscriptionAttributesRequest,AsyncHandler<SetSubscriptionAttributesRequest, Void> asyncHandler){\r\n    return executorService.submit(new Callable<Void>() {\r\n        public Void call() throws Exception {\r\n            Void result = null;\r\n            try {\r\n                setSubscriptionAttributes(setSubscriptionAttributesRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(setSubscriptionAttributesRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSAsyncClient.setSubscriptionAttributesAsync",
	"Comment": "allows a subscription owner to set an attribute of the topic to a newvalue.",
	"Method": "Future<Void> setSubscriptionAttributesAsync(SetSubscriptionAttributesRequest setSubscriptionAttributesRequest,Future<Void> setSubscriptionAttributesAsync,SetSubscriptionAttributesRequest setSubscriptionAttributesRequest,AsyncHandler<SetSubscriptionAttributesRequest, Void> asyncHandler){\r\n    Void result = null;\r\n    try {\r\n        setSubscriptionAttributes(setSubscriptionAttributesRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(setSubscriptionAttributesRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceDetail.withAgeRange",
	"Comment": "the estimated age range, in years, for the face. low represents thelowest estimated age and high represents the highest estimated age.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "FaceDetail withAgeRange(AgeRange ageRange){\r\n    this.ageRange = ageRange;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateRoleAliasResult.withRoleAliasArn",
	"Comment": "the role alias arn.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateRoleAliasResult withRoleAliasArn(String roleAliasArn){\r\n    this.roleAliasArn = roleAliasArn;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListPartsRequest.withUploadId",
	"Comment": "sets the id of the multipart upload whose parts are being listed, andreturns this updated listpartsrequest object so that additional methodcalls can be chained together.",
	"Method": "ListPartsRequest withUploadId(String uploadId){\r\n    this.uploadId = uploadId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideoarchivedmedia.model.TimestampRange.withStartTimestamp",
	"Comment": "the starting time stamp in the range of time stamps for which to returnfragments.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "TimestampRange withStartTimestamp(java.util.Date startTimestamp){\r\n    this.startTimestamp = startTimestamp;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.TestMetricFilterRequest.withLogEventMessages",
	"Comment": "the log event messages to test.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "TestMetricFilterRequest withLogEventMessages(String logEventMessages,TestMetricFilterRequest withLogEventMessages,java.util.Collection<String> logEventMessages){\r\n    setLogEventMessages(logEventMessages);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.transform.RequestXmlFactory.convertToXmlByteArray",
	"Comment": "converts the restoreobjectrequest to an xml fragment that can be sent tothe restoreobject operation of amazon s3.",
	"Method": "byte[] convertToXmlByteArray(List<PartETag> partETags,byte[] convertToXmlByteArray,RestoreObjectRequest restoreObjectRequest){\r\n    XmlWriter xml = new XmlWriter();\r\n    xml.start(\"RestoreRequest\");\r\n    xml.start(\"Days\").value(Integer.toString(restoreObjectRequest.getExpirationInDays())).end();\r\n    xml.end();\r\n    return xml.getBytes();\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SendCustomVerificationEmailRequest.setConfigurationSetName",
	"Comment": "name of a configuration set to use when sending the verification email.",
	"Method": "void setConfigurationSetName(String configurationSetName){\r\n    this.configurationSetName = configurationSetName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketVersioningConfigurationRequest.withBucketName",
	"Comment": "sets the name of the bucket whose versioning configuration is being set,and returns this object so that additional method calls may be chainedtogether.",
	"Method": "SetBucketVersioningConfigurationRequest withBucketName(String bucketName){\r\n    setBucketName(bucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteApnsVoipChannelRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteApnsVoipChannelRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateAdmChannelRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateAdmChannelRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignResponse.getAdditionalTreatments",
	"Comment": "treatments that are defined in addition to the default treatment.",
	"Method": "java.util.List<TreatmentResource> getAdditionalTreatments(){\r\n    return additionalTreatments;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.WriteCampaignRequest.withSegmentId",
	"Comment": "the id of the segment to which the campaign sends messages.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "WriteCampaignRequest withSegmentId(String segmentId){\r\n    this.segmentId = segmentId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSSandboxChannelResponse.withLastModifiedDate",
	"Comment": "last date this was updatedreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSSandboxChannelResponse withLastModifiedDate(String lastModifiedDate){\r\n    this.lastModifiedDate = lastModifiedDate;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSAsyncClient.getTopicAttributesAsync",
	"Comment": "returns all of the properties of a topic. topic properties returned mightdiffer based on the authorization of the user.",
	"Method": "Future<GetTopicAttributesResult> getTopicAttributesAsync(GetTopicAttributesRequest getTopicAttributesRequest,Future<GetTopicAttributesResult> getTopicAttributesAsync,GetTopicAttributesRequest getTopicAttributesRequest,AsyncHandler<GetTopicAttributesRequest, GetTopicAttributesResult> asyncHandler){\r\n    return executorService.submit(new Callable<GetTopicAttributesResult>() {\r\n        public GetTopicAttributesResult call() throws Exception {\r\n            GetTopicAttributesResult result = null;\r\n            try {\r\n                result = getTopicAttributes(getTopicAttributesRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(getTopicAttributesRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSAsyncClient.getTopicAttributesAsync",
	"Comment": "returns all of the properties of a topic. topic properties returned mightdiffer based on the authorization of the user.",
	"Method": "Future<GetTopicAttributesResult> getTopicAttributesAsync(GetTopicAttributesRequest getTopicAttributesRequest,Future<GetTopicAttributesResult> getTopicAttributesAsync,GetTopicAttributesRequest getTopicAttributesRequest,AsyncHandler<GetTopicAttributesRequest, GetTopicAttributesResult> asyncHandler){\r\n    GetTopicAttributesResult result = null;\r\n    try {\r\n        result = getTopicAttributes(getTopicAttributesRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(getTopicAttributesRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ExportJobRequest.getSegmentId",
	"Comment": "the id of the segment to export endpoints from. if not present, amazonpinpoint exports all of the endpoints that belong to the application.",
	"Method": "String getSegmentId(){\r\n    return segmentId;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CreateBucketRequest.withCannedAcl",
	"Comment": "sets the optional canned acl to set for the new bucket, and returns thisupdated object so that additional method calls can be chained together.",
	"Method": "CreateBucketRequest withCannedAcl(CannedAccessControlList cannedAcl){\r\n    setCannedAcl(cannedAcl);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetEmailChannelResult.withEmailChannelResponse",
	"Comment": "email channel response.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetEmailChannelResult withEmailChannelResponse(EmailChannelResponse emailChannelResponse){\r\n    this.emailChannelResponse = emailChannelResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSChannelResponse.withHasTokenKey",
	"Comment": "indicates whether the channel is configured with a key for apns tokenauthentication. provide a token key by setting the tokenkey attribute.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSChannelResponse withHasTokenKey(Boolean hasTokenKey){\r\n    this.hasTokenKey = hasTokenKey;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.FilterLogEventsRequest.withLogStreamNames",
	"Comment": "filters the results to only logs from the log streams in this list.if you specify a value for both logstreamnameprefix andlogstreamnames, but the value forlogstreamnameprefix does not match any log stream namesspecified in logstreamnames, the action returns aninvalidparameterexception error.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "FilterLogEventsRequest withLogStreamNames(String logStreamNames,FilterLogEventsRequest withLogStreamNames,java.util.Collection<String> logStreamNames){\r\n    setLogStreamNames(logStreamNames);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.IdentityNotificationAttributes.getForwardingEnabled",
	"Comment": "describes whether amazon ses will forward bounce and complaintnotifications as email. true indicates that amazon ses willforward bounce and complaint notifications as email, whilefalse indicates that bounce and complaint notifications willbe published only to the specified bounce and complaint amazon snstopics.",
	"Method": "Boolean getForwardingEnabled(){\r\n    return forwardingEnabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.RemoveAttributesRequest.withUpdateAttributesRequest",
	"Comment": "update attributes requestreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "RemoveAttributesRequest withUpdateAttributesRequest(UpdateAttributesRequest updateAttributesRequest){\r\n    this.updateAttributesRequest = updateAttributesRequest;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.UpdateReceiptRuleRequest.withRuleSetName",
	"Comment": "the name of the receipt rule set that the receipt rule belongs to.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateReceiptRuleRequest withRuleSetName(String ruleSetName){\r\n    this.ruleSetName = ruleSetName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMChannelRequest.setClientSecret",
	"Comment": "the client secret that you obtained from the amazon app distributionportal.",
	"Method": "void setClientSecret(String clientSecret){\r\n    this.clientSecret = clientSecret;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceDetail.withPose",
	"Comment": "indicates the pose of the face as determined by its pitch, roll, and yaw.default attribute.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "FaceDetail withPose(Pose pose){\r\n    this.pose = pose;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ItemResponse.getEventsItemResponse",
	"Comment": "events item response is a multipart response object per event id, witheventid as the key and eventitemresponse object as the value",
	"Method": "java.util.Map<String, EventItemResponse> getEventsItemResponse(){\r\n    return eventsItemResponse;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMMessage.setRawContent",
	"Comment": "the raw json formatted string to be used as the payload. this valueoverrides the message.",
	"Method": "void setRawContent(String rawContent){\r\n    this.rawContent = rawContent;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateEmailChannelRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateEmailChannelRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.GetCustomVerificationEmailTemplateRequest.getTemplateName",
	"Comment": "the name of the custom verification email template that you want toretrieve.",
	"Method": "String getTemplateName(){\r\n    return templateName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.Schedule.withQuietTime",
	"Comment": "the time during which the campaign sends no messages.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Schedule withQuietTime(QuietTime quietTime){\r\n    this.quietTime = quietTime;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.SetEndpointAttributesRequest.withEndpointArn",
	"Comment": "endpointarn used for setendpointattributes action.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SetEndpointAttributesRequest withEndpointArn(String endpointArn){\r\n    this.endpointArn = endpointArn;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSVoipChannelResponse.withEnabled",
	"Comment": "if the channel is enabled for sending messages.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSVoipChannelResponse withEnabled(Boolean enabled){\r\n    this.enabled = enabled;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteApnsChannelResult.setAPNSChannelResponse",
	"Comment": "apple distribution push notification service channel definition.",
	"Method": "void setAPNSChannelResponse(APNSChannelResponse aPNSChannelResponse){\r\n    this.aPNSChannelResponse = aPNSChannelResponse;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetCampaignActivitiesRequest.getToken",
	"Comment": "the nexttoken string returned on a previous page that you use to get thenext page of results in a paginated response.",
	"Method": "String getToken(){\r\n    return token;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.S3VersionSummary.getBucketName",
	"Comment": "gets the name of the amazon s3 bucket in which this version is stored.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSClient.listSubscriptionsByTopic",
	"Comment": "returns a list of the subscriptions to a specific topic. each callreturns a limited list of subscriptions, up to 100. if there are moresubscriptions, a nexttoken is also returned. use thenexttoken parameter in a newlistsubscriptionsbytopic call to get further results.",
	"Method": "ListSubscriptionsByTopicResult listSubscriptionsByTopic(ListSubscriptionsByTopicRequest listSubscriptionsByTopicRequest,ListSubscriptionsByTopicResult listSubscriptionsByTopic,String topicArn,ListSubscriptionsByTopicResult listSubscriptionsByTopic,String topicArn,String nextToken){\r\n    ListSubscriptionsByTopicRequest listSubscriptionsByTopicRequest = new ListSubscriptionsByTopicRequest();\r\n    listSubscriptionsByTopicRequest.setTopicArn(topicArn);\r\n    listSubscriptionsByTopicRequest.setNextToken(nextToken);\r\n    return listSubscriptionsByTopic(listSubscriptionsByTopicRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Beard.withValue",
	"Comment": "boolean value that indicates whether the face has beard or not.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Beard withValue(Boolean value){\r\n    this.value = value;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketMetricsConfigurationsResult.isTruncated",
	"Comment": "gets whether or not this metrics configuration listing is complete.",
	"Method": "boolean isTruncated(){\r\n    return isTruncated;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.kinesis.kinesisrecorder.JSONRecordAdapter.getPartitionKey",
	"Comment": "returns partition key from json object which was made viatranslatefromrecord.",
	"Method": "String getPartitionKey(JSONObject jsonObject){\r\n    return jsonObject.getString(PARTITION_KEY_FIELD);\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetPersonTrackingResult.withStatusMessage",
	"Comment": "if the job fails, statusmessage provides a descriptive errormessage.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetPersonTrackingResult withStatusMessage(String statusMessage){\r\n    this.statusMessage = statusMessage;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.Prediction.getDetails",
	"Comment": "provides any additional details regarding the prediction.",
	"Method": "java.util.Map<String, String> getDetails(){\r\n    return details;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectMetadataRequest.getVersionId",
	"Comment": "gets the optional version id of the object version whose metadata isbeing retrieved. if not specified, the latest version will be used.",
	"Method": "String getVersionId(){\r\n    return versionId;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.SendMessageBatchRequestEntry.setId",
	"Comment": "an identifier for the message in this batch. this is used to communicatethe result. note that the ids of a batch request need to beunique within the request.",
	"Method": "void setId(String id){\r\n    this.id = id;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.Message.withSilentPush",
	"Comment": "indicates if the message should display on the users device. silentpushes can be used for remote configuration and phone home use cases.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Message withSilentPush(Boolean silentPush){\r\n    this.silentPush = silentPush;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.CelebrityDetail.getUrls",
	"Comment": "an array of urls pointing to additional celebrity information.",
	"Method": "java.util.List<String> getUrls(){\r\n    return urls;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.GenerateDataKeyRequest.getGrantTokens",
	"Comment": "a list of grant tokens.for more information, see grant tokens in the aws key management service developerguide.",
	"Method": "java.util.List<String> getGrantTokens(){\r\n    return grantTokens;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ObjectListing.setTruncated",
	"Comment": "for internal use only. sets the truncated property for this objectlisting, indicating if this is a complete listing or not and whether thecaller needs to make additional calls to s3 to get more object summaries.",
	"Method": "void setTruncated(boolean isTruncated){\r\n    this.isTruncated = isTruncated;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CreateConfigurationSetEventDestinationRequest.setEventDestination",
	"Comment": "an object that describes the aws service that email sending eventinformation will be published to.",
	"Method": "void setEventDestination(EventDestination eventDestination){\r\n    this.eventDestination = eventDestination;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetLabelDetectionResult.withWarnings",
	"Comment": "sets the value of the warnings property for this object.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetLabelDetectionResult withWarnings(Warning warnings,GetLabelDetectionResult withWarnings,java.util.Collection<Warning> warnings){\r\n    setWarnings(warnings);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketWebsiteConfiguration.getErrorDocument",
	"Comment": "returns the complete path to the document to serve for 4xx errors, ornull if no error document has been configured.",
	"Method": "String getErrorDocument(){\r\n    return errorDocument;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.pinpoint.analytics.monetization.MonetizationEventBuilder.setTransactionId",
	"Comment": "sets the transaction id to use when building the monetization event",
	"Method": "void setTransactionId(String transactionId){\r\n    this.transactionId = transactionId;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.StartSpeechSynthesisTaskRequest.getLexiconNames",
	"Comment": "list of one or more pronunciation lexicon names you want the service toapply during synthesis. lexicons are applied only if the language of thelexicon is the same as the language of the voice.",
	"Method": "java.util.List<String> getLexiconNames(){\r\n    return lexiconNames;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSVoipChannelResponse.withDefaultAuthenticationMethod",
	"Comment": "the default authentication method used for apns.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSVoipChannelResponse withDefaultAuthenticationMethod(String defaultAuthenticationMethod){\r\n    this.defaultAuthenticationMethod = defaultAuthenticationMethod;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.PutKeyPolicyRequest.setBypassPolicyLockoutSafetyCheck",
	"Comment": "a flag to indicate whether to bypass the key policy lockout safety check.setting this value to true increases the risk that the cmk becomesunmanageable. do not set this value to true indiscriminately.for more information, refer to the scenario in the default key policy section in the aws key management servicedeveloper guide.use this parameter only when you intend to prevent the principal that ismaking the request from making a subsequent putkeypolicyrequest on the cmk.the default value is false.",
	"Method": "void setBypassPolicyLockoutSafetyCheck(Boolean bypassPolicyLockoutSafetyCheck){\r\n    this.bypassPolicyLockoutSafetyCheck = bypassPolicyLockoutSafetyCheck;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListPlatformApplicationsRequest.getNextToken",
	"Comment": "nexttoken string is used when calling listplatformapplications action toretrieve additional records that are available after the first pageresults.",
	"Method": "String getNextToken(){\r\n    return nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideoarchivedmedia.model.TimestampRange.getEndTimestamp",
	"Comment": "the ending time stamp in the range of time stamps for which to returnfragments.",
	"Method": "java.util.Date getEndTimestamp(){\r\n    return endTimestamp;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.analytics.AnalyticsS3BucketDestination.withFormat",
	"Comment": "sets the file format used when exporting data to amazon s3.returns this object for method chaining.",
	"Method": "AnalyticsS3BucketDestination withFormat(AnalyticsS3ExportFileFormat format,AnalyticsS3BucketDestination withFormat,String format){\r\n    setFormat(format);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ReceiptRule.getActions",
	"Comment": "an ordered list of actions to perform on messages that match at least oneof the recipient email addresses or domains specified in the receiptrule.",
	"Method": "java.util.List<ReceiptAction> getActions(){\r\n    return actions;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteApnsVoipSandboxChannelResult.withAPNSVoipSandboxChannelResponse",
	"Comment": "apple voip developer push notification service channel definition.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteApnsVoipSandboxChannelResult withAPNSVoipSandboxChannelResponse(APNSVoipSandboxChannelResponse aPNSVoipSandboxChannelResponse){\r\n    this.aPNSVoipSandboxChannelResponse = aPNSVoipSandboxChannelResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.WriteSegmentRequest.getSegmentGroups",
	"Comment": "a segment group, which consists of zero or more source segments, plusdimensions that are applied to those source segments. your request canonly include one segment group. your request can include either asegmentgroups object or a dimensions object, but not both.",
	"Method": "SegmentGroupList getSegmentGroups(){\r\n    return segmentGroups;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSVoipChannelResponse.withLastModifiedDate",
	"Comment": "last date this was updatedreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSVoipChannelResponse withLastModifiedDate(String lastModifiedDate){\r\n    this.lastModifiedDate = lastModifiedDate;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.WriteApplicationSettingsRequest.getLimits",
	"Comment": "the default campaign limits for the app. these limits apply to eachcampaign for the app, unless the campaign overrides the default withlimits of its own.",
	"Method": "CampaignLimits getLimits(){\r\n    return limits;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentGroupList.withGroups",
	"Comment": "a set of segment criteria to evaluate.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SegmentGroupList withGroups(SegmentGroup groups,SegmentGroupList withGroups,java.util.Collection<SegmentGroup> groups){\r\n    setGroups(groups);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.AmazonPollyClient.getLexicon",
	"Comment": "returns the content of the specified pronunciation lexicon stored in anaws region. for more information, see managing lexicons.",
	"Method": "GetLexiconResult getLexicon(GetLexiconRequest getLexiconRequest){\r\n    ExecutionContext executionContext = createExecutionContext(getLexiconRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<GetLexiconRequest> request = null;\r\n    Response<GetLexiconResult> response = null;\r\n    try {\r\n        awsRequestMetrics.startEvent(Field.RequestMarshallTime);\r\n        try {\r\n            request = new GetLexiconRequestMarshaller().marshall(getLexiconRequest);\r\n            request.setAWSRequestMetrics(awsRequestMetrics);\r\n        } finally {\r\n            awsRequestMetrics.endEvent(Field.RequestMarshallTime);\r\n        }\r\n        Unmarshaller<GetLexiconResult, JsonUnmarshallerContext> unmarshaller = new GetLexiconResultJsonUnmarshaller();\r\n        JsonResponseHandler<GetLexiconResult> responseHandler = new JsonResponseHandler<GetLexiconResult>(unmarshaller);\r\n        response = invoke(request, responseHandler, executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadObjectRequest.getUploadPartMetadata",
	"Comment": "gets the optional metadata to be included in each uploadpart request.",
	"Method": "ObjectMetadata getUploadPartMetadata(){\r\n    return uploadPartMetadata;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.Endpoint.clearAttributesEntries",
	"Comment": "removes all the entries added into attributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Endpoint clearAttributesEntries(){\r\n    this.attributes = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DeleteConfigurationSetEventDestinationRequest.getConfigurationSetName",
	"Comment": "the name of the configuration set from which to delete the eventdestination.",
	"Method": "String getConfigurationSetName(){\r\n    return configurationSetName;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.Message.setMessageAttributes",
	"Comment": "each message attribute consists of a name, type, and value. for moreinformation, see message attribute items in the amazon sqs developer guide.",
	"Method": "void setMessageAttributes(java.util.Map<String, MessageAttributeValue> messageAttributes){\r\n    this.messageAttributes = messageAttributes;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.AmazonKinesisClient.describeLimits",
	"Comment": "describes the shard limits and usage for the account.if you update your account limits, the old limits might be returned for afew minutes.this operation has a limit of one transaction per second per account.",
	"Method": "DescribeLimitsResult describeLimits(DescribeLimitsRequest describeLimitsRequest){\r\n    ExecutionContext executionContext = createExecutionContext(describeLimitsRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<DescribeLimitsRequest> request = null;\r\n    Response<DescribeLimitsResult> response = null;\r\n    try {\r\n        awsRequestMetrics.startEvent(Field.RequestMarshallTime);\r\n        try {\r\n            request = new DescribeLimitsRequestMarshaller().marshall(describeLimitsRequest);\r\n            request.setAWSRequestMetrics(awsRequestMetrics);\r\n        } finally {\r\n            awsRequestMetrics.endEvent(Field.RequestMarshallTime);\r\n        }\r\n        Unmarshaller<DescribeLimitsResult, JsonUnmarshallerContext> unmarshaller = new DescribeLimitsResultJsonUnmarshaller();\r\n        JsonResponseHandler<DescribeLimitsResult> responseHandler = new JsonResponseHandler<DescribeLimitsResult>(unmarshaller);\r\n        response = invoke(request, responseHandler, executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.MessageBody.withRequestID",
	"Comment": "the unique message body id.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "MessageBody withRequestID(String requestID){\r\n    this.requestID = requestID;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DeleteTemplateRequest.withTemplateName",
	"Comment": "the name of the template to be deleted.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteTemplateRequest withTemplateName(String templateName){\r\n    this.templateName = templateName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.kinesisvideo.internal.producer.jni.NativeLibraryLoader.loadNativeLibraryDirect",
	"Comment": "attempts to load the native library directly given the path.",
	"Method": "boolean loadNativeLibraryDirect(String libraryFullPath){\r\n    if (libraryFullPath != null && !libraryFullPath.isEmpty()) {\r\n        try {\r\n            System.load(libraryFullPath);\r\n            mLog.verbose(\"Success! Directly loaded native library %s.\", libraryFullPath);\r\n            return true;\r\n        } catch (final UnsatisfiedLinkError e) {\r\n            mLog.warn(\"Unsatisfied link error. Directly loading native library %s.\", libraryFullPath);\r\n        } catch (final SecurityException e) {\r\n            mLog.warn(\"Security exception. Directly loading native library %s.\", libraryFullPath);\r\n        }\r\n    }\r\n    return false;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.InitiateMultipartUploadRequest.withKey",
	"Comment": "sets the key by which to store the new multipart upload, and hence, theeventual object created from the multipart upload.returns this updated initiatemultipartuploadrequest object so thatadditional method calls can be chained together.",
	"Method": "InitiateMultipartUploadRequest withKey(String key){\r\n    this.key = key;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignResponse.setIsPaused",
	"Comment": "indicates whether the campaign is paused. a paused campaign does not sendmessages unless you resume it by setting ispaused to false.",
	"Method": "void setIsPaused(Boolean isPaused){\r\n    this.isPaused = isPaused;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SendEmailResult.setMessageId",
	"Comment": "the unique message identifier returned from the sendemailaction.",
	"Method": "void setMessageId(String messageId){\r\n    this.messageId = messageId;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.StreamDescriptionSummary.withEnhancedMonitoring",
	"Comment": "represents the current enhanced monitoring settings of the stream.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "StreamDescriptionSummary withEnhancedMonitoring(EnhancedMetrics enhancedMonitoring,StreamDescriptionSummary withEnhancedMonitoring,java.util.Collection<EnhancedMetrics> enhancedMonitoring){\r\n    setEnhancedMonitoring(enhancedMonitoring);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.MultipartUploadListing.setEncodingType",
	"Comment": "for internal use only. sets the encoding type used by amazon s3 to encodeobject key names in the xml response.",
	"Method": "void setEncodingType(String encodingType){\r\n    this.encodingType = encodingType;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideoarchivedmedia.model.Fragment.setProducerTimestamp",
	"Comment": "the time stamp from the producer corresponding to the fragment.",
	"Method": "void setProducerTimestamp(java.util.Date producerTimestamp){\r\n    this.producerTimestamp = producerTimestamp;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.model.CopyResult.getDestinationKey",
	"Comment": "gets the destination bucket key under which the new, copied object willbe stored.",
	"Method": "String getDestinationKey(){\r\n    return destinationKey;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetContentModerationResult.withStatusMessage",
	"Comment": "if the job fails, statusmessage provides a descriptive errormessage.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetContentModerationResult withStatusMessage(String statusMessage){\r\n    this.statusMessage = statusMessage;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointSendConfiguration.clearContextEntries",
	"Comment": "removes all the entries added into context.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointSendConfiguration clearContextEntries(){\r\n    this.context = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ResponseHeaderOverrides.getContentLanguage",
	"Comment": "returns the content language response header override if it has beenspecified, or null otherwise.",
	"Method": "String getContentLanguage(){\r\n    return contentLanguage;\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateAccountAuditConfigurationRequest.withAuditNotificationTargetConfigurations",
	"Comment": "information about the targets to which audit notifications are sent.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateAccountAuditConfigurationRequest withAuditNotificationTargetConfigurations(java.util.Map<String, AuditNotificationTarget> auditNotificationTargetConfigurations){\r\n    this.auditNotificationTargetConfigurations = auditNotificationTargetConfigurations;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.DescribeStreamProcessorResult.withCreationTimestamp",
	"Comment": "date and time the stream processor was createdreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DescribeStreamProcessorResult withCreationTimestamp(java.util.Date creationTimestamp){\r\n    this.creationTimestamp = creationTimestamp;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.pinpoint.targeting.notification.NotificationClient.getChannelType",
	"Comment": "the pinpoint channel type for the device associated withthis notification client.",
	"Method": "String getChannelType(){\r\n    return notificationClientBase.getChannelType();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListVersionsRequest.setVersionIdMarker",
	"Comment": "sets the optional versionidmarker parameter indicating wherein the sorted list of all versions in the specified bucket to beginreturning results.",
	"Method": "void setVersionIdMarker(String versionIdMarker){\r\n    this.versionIdMarker = versionIdMarker;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.CreateKeyRequest.setBypassPolicyLockoutSafetyCheck",
	"Comment": "a flag to indicate whether to bypass the key policy lockout safety check.setting this value to true increases the risk that the cmk becomesunmanageable. do not set this value to true indiscriminately.for more information, refer to the scenario in the default key policy section in the aws key management servicedeveloper guide.use this parameter only when you include a policy in the request and youintend to prevent the principal that is making the request from making asubsequent putkeypolicy request on the cmk.the default value is false.",
	"Method": "void setBypassPolicyLockoutSafetyCheck(Boolean bypassPolicyLockoutSafetyCheck){\r\n    this.bypassPolicyLockoutSafetyCheck = bypassPolicyLockoutSafetyCheck;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.MessageConfiguration.getGCMMessage",
	"Comment": "the message that the campaign delivers to gcm channels. overrides thedefault message.",
	"Method": "Message getGCMMessage(){\r\n    return gCMMessage;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMChannelRequest.getClientId",
	"Comment": "the client id that you obtained from the amazon app distribution portal.",
	"Method": "String getClientId(){\r\n    return clientId;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.AmazonCloudWatchLogsClient.putMetricFilter",
	"Comment": "creates or updates a metric filter and associates it with the specifiedlog group. metric filters allow you to configure rules to extract metricdata from log events ingested through putlogevents.the maximum number of metric filters that can be associated with a loggroup is 100.",
	"Method": "void putMetricFilter(PutMetricFilterRequest putMetricFilterRequest){\r\n    ExecutionContext executionContext = createExecutionContext(putMetricFilterRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<PutMetricFilterRequest> request = null;\r\n    Response<Void> response = null;\r\n    try {\r\n        awsRequestMetrics.startEvent(Field.RequestMarshallTime);\r\n        try {\r\n            request = new PutMetricFilterRequestMarshaller().marshall(putMetricFilterRequest);\r\n            request.setAWSRequestMetrics(awsRequestMetrics);\r\n        } finally {\r\n            awsRequestMetrics.endEvent(Field.RequestMarshallTime);\r\n        }\r\n        JsonResponseHandler<Void> responseHandler = new JsonResponseHandler<Void>(null);\r\n        invoke(request, responseHandler, executionContext);\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CompleteMultipartUploadResult.setBucketName",
	"Comment": "sets the name of the bucket containing the completed multipart object.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SMSMessage.getKeyword",
	"Comment": "the sms program name that you provided to aws support when you requestedyour dedicated number.",
	"Method": "String getKeyword(){\r\n    return keyword;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.ListSpeechSynthesisTasksRequest.getNextToken",
	"Comment": "the pagination token to use in the next request to continue the listingof speech synthesis tasks.",
	"Method": "String getNextToken(){\r\n    return nextToken;\r\n}"
}, {
	"Path": "org.bouncycastle.asn1.ASN1Primitive.toDERObject",
	"Comment": "return the current object as one which encodes using distinguished encoding rules.",
	"Method": "ASN1Primitive toDERObject(){\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GCMMessage.setSubstitutions",
	"Comment": "default message substitutions. can be overridden by individual addresssubstitutions.",
	"Method": "void setSubstitutions(java.util.Map<String, java.util.List<String>> substitutions){\r\n    this.substitutions = substitutions;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetContentModerationResult.getErrorCode",
	"Comment": "returns the value of the errorcode property for this object.",
	"Method": "String getErrorCode(){\r\n    return errorCode;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.MessageConfiguration.withADMMessage",
	"Comment": "the message that the campaign delivers to adm channels. overrides thedefault message.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "MessageConfiguration withADMMessage(Message aDMMessage){\r\n    this.aDMMessage = aDMMessage;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentImportResource.withChannelCounts",
	"Comment": "the number of channel types in the imported segment.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SegmentImportResource withChannelCounts(java.util.Map<String, Integer> channelCounts){\r\n    this.channelCounts = channelCounts;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.NotificationConfiguration.getEvents",
	"Comment": "returns the set of events associated with this notification configuration.",
	"Method": "Set<String> getEvents(){\r\n    return events;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.listCustomVerificationEmailTemplatesAsync",
	"Comment": "lists the existing custom verification email templates for your accountin the current aws region.for more information about custom verification email templates, see using custom verification email templates in the amazon sesdeveloper guide.you can execute this operation no more than once per second.",
	"Method": "Future<ListCustomVerificationEmailTemplatesResult> listCustomVerificationEmailTemplatesAsync(ListCustomVerificationEmailTemplatesRequest listCustomVerificationEmailTemplatesRequest,Future<ListCustomVerificationEmailTemplatesResult> listCustomVerificationEmailTemplatesAsync,ListCustomVerificationEmailTemplatesRequest listCustomVerificationEmailTemplatesRequest,AsyncHandler<ListCustomVerificationEmailTemplatesRequest, ListCustomVerificationEmailTemplatesResult> asyncHandler){\r\n    return executorService.submit(new Callable<ListCustomVerificationEmailTemplatesResult>() {\r\n        public ListCustomVerificationEmailTemplatesResult call() throws Exception {\r\n            ListCustomVerificationEmailTemplatesResult result = null;\r\n            try {\r\n                result = listCustomVerificationEmailTemplates(listCustomVerificationEmailTemplatesRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(listCustomVerificationEmailTemplatesRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.listCustomVerificationEmailTemplatesAsync",
	"Comment": "lists the existing custom verification email templates for your accountin the current aws region.for more information about custom verification email templates, see using custom verification email templates in the amazon sesdeveloper guide.you can execute this operation no more than once per second.",
	"Method": "Future<ListCustomVerificationEmailTemplatesResult> listCustomVerificationEmailTemplatesAsync(ListCustomVerificationEmailTemplatesRequest listCustomVerificationEmailTemplatesRequest,Future<ListCustomVerificationEmailTemplatesResult> listCustomVerificationEmailTemplatesAsync,ListCustomVerificationEmailTemplatesRequest listCustomVerificationEmailTemplatesRequest,AsyncHandler<ListCustomVerificationEmailTemplatesRequest, ListCustomVerificationEmailTemplatesResult> asyncHandler){\r\n    ListCustomVerificationEmailTemplatesResult result = null;\r\n    try {\r\n        result = listCustomVerificationEmailTemplates(listCustomVerificationEmailTemplatesRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(listCustomVerificationEmailTemplatesRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DeleteConfigurationSetRequest.withConfigurationSetName",
	"Comment": "the name of the configuration set to delete.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteConfigurationSetRequest withConfigurationSetName(String configurationSetName){\r\n    this.configurationSetName = configurationSetName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetFaceSearchResult.getErrorCode",
	"Comment": "returns the value of the errorcode property for this object.",
	"Method": "String getErrorCode(){\r\n    return errorCode;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.WriteCampaignRequest.getIsPaused",
	"Comment": "indicates whether the campaign is paused. a paused campaign does not sendmessages unless you resume it by setting ispaused to false.",
	"Method": "Boolean getIsPaused(){\r\n    return isPaused;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.util.SimpleDBUtils.quoteValue",
	"Comment": "quotes and escapes an attribute value by wrapping it with single quotesand escaping any single quotes inside the value.",
	"Method": "String quoteValue(String value){\r\n    return \"'\" + replaceChar(value, \"'\", \"''\") + \"'\";\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EmailChannelRequest.withFromAddress",
	"Comment": "the email address used to send emails from.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EmailChannelRequest withFromAddress(String fromAddress){\r\n    this.fromAddress = fromAddress;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ActivityResponse.withApplicationId",
	"Comment": "the id of the application to which the campaign applies.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ActivityResponse withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.PutEventStreamResult.withEventStream",
	"Comment": "model for an event publishing subscription export.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PutEventStreamResult withEventStream(EventStream eventStream){\r\n    this.eventStream = eventStream;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteObjectRequest.setRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "void setRequesterPays(boolean isRequesterPays){\r\n    this.isRequesterPays = isRequesterPays;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.RestoreObjectRequest.withVersionId",
	"Comment": "sets the id of the version to be restored and returns a reference to thisobject for method chaining.",
	"Method": "RestoreObjectRequest withVersionId(String versionId){\r\n    this.versionId = versionId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.deleteReceiptFilterAsync",
	"Comment": "deletes the specified ip address filter.for information about managing ip address filters, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "Future<DeleteReceiptFilterResult> deleteReceiptFilterAsync(DeleteReceiptFilterRequest deleteReceiptFilterRequest,Future<DeleteReceiptFilterResult> deleteReceiptFilterAsync,DeleteReceiptFilterRequest deleteReceiptFilterRequest,AsyncHandler<DeleteReceiptFilterRequest, DeleteReceiptFilterResult> asyncHandler){\r\n    return executorService.submit(new Callable<DeleteReceiptFilterResult>() {\r\n        public DeleteReceiptFilterResult call() throws Exception {\r\n            DeleteReceiptFilterResult result = null;\r\n            try {\r\n                result = deleteReceiptFilter(deleteReceiptFilterRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(deleteReceiptFilterRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.deleteReceiptFilterAsync",
	"Comment": "deletes the specified ip address filter.for information about managing ip address filters, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "Future<DeleteReceiptFilterResult> deleteReceiptFilterAsync(DeleteReceiptFilterRequest deleteReceiptFilterRequest,Future<DeleteReceiptFilterResult> deleteReceiptFilterAsync,DeleteReceiptFilterRequest deleteReceiptFilterRequest,AsyncHandler<DeleteReceiptFilterRequest, DeleteReceiptFilterResult> asyncHandler){\r\n    DeleteReceiptFilterResult result = null;\r\n    try {\r\n        result = deleteReceiptFilter(deleteReceiptFilterRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(deleteReceiptFilterRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetCampaignVersionResult.withCampaignResponse",
	"Comment": "campaign definitionreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetCampaignVersionResult withCampaignResponse(CampaignResponse campaignResponse){\r\n    this.campaignResponse = campaignResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DirectMessageConfiguration.withDefaultPushNotificationMessage",
	"Comment": "the default push notification message for all push channels.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DirectMessageConfiguration withDefaultPushNotificationMessage(DefaultPushNotificationMessage defaultPushNotificationMessage){\r\n    this.defaultPushNotificationMessage = defaultPushNotificationMessage;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteVersionRequest.getVersionId",
	"Comment": "gets the version id uniquely identifying which version of the object todelete.",
	"Method": "String getVersionId(){\r\n    return versionId;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme.newCipherLite",
	"Comment": "this is a factory method intended to be overridden by sublcasses toreturn the appropriate instance of cipher lite.",
	"Method": "CipherLite newCipherLite(Cipher cipher,SecretKey cek,int cipherMode){\r\n    return new CipherLite(cipher, this, cek, cipherMode);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointLocation.withLongitude",
	"Comment": "the longitude of the endpoint location, rounded to one decimal place.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointLocation withLongitude(Double longitude){\r\n    this.longitude = longitude;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.PutRecordsResult.getRecords",
	"Comment": "an array of successfully and unsuccessfully processed record results,correlated with the request by natural ordering. a record that issuccessfully added to a stream includes sequencenumber andshardid in the result. a record that fails to be added to astream includes errorcode and errormessage inthe result.",
	"Method": "java.util.List<PutRecordsResultEntry> getRecords(){\r\n    return records;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsRequest.setMarker",
	"Comment": "sets the optional marker parameter indicating where in the bucket tobegin listing. the list will only include keys that occurlexicographically after the marker.",
	"Method": "void setMarker(String marker){\r\n    this.marker = marker;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.FilterLogEventsRequest.isInterleaved",
	"Comment": "if the value is true, the operation makes a best effort to provideresponses that contain events from multiple log streams within the loggroup, interleaved in a single response. if the value is false, all thematched log events in the first log stream are searched first, then thosein the next log stream, and so on. the default is false.",
	"Method": "Boolean isInterleaved(){\r\n    return interleaved;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ActivityResponse.setTimezonesTotalCount",
	"Comment": "the total number of unique timezones present in the segment.",
	"Method": "void setTimezonesTotalCount(Integer timezonesTotalCount){\r\n    this.timezonesTotalCount = timezonesTotalCount;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SendBulkTemplatedEmailRequest.getConfigurationSetName",
	"Comment": "the name of the configuration set to use when you send an email usingsendbulktemplatedemail.",
	"Method": "String getConfigurationSetName(){\r\n    return configurationSetName;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CustomVerificationEmailTemplate.withFailureRedirectionURL",
	"Comment": "the url that the recipient of the verification email is sent to if his orher address is not successfully verified.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CustomVerificationEmailTemplate withFailureRedirectionURL(String failureRedirectionURL){\r\n    this.failureRedirectionURL = failureRedirectionURL;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.Event.withSession",
	"Comment": "the sessionreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Event withSession(Session session){\r\n    this.session = session;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketVersioningConfigurationRequest.setBucketName",
	"Comment": "sets the name of the bucket whose versioning configuration is being set.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.amazonmobileanalytics.internal.session.client.ActiveSessionState.start",
	"Comment": "if the session is already running, start a new one only if a specifiedamount of time has elapsed. the old session should be stopped beforestarting the new one.",
	"Method": "void start(){\r\n    if (System.currentTimeMillis() - client.session.getStartTime() > client.getRestartDelay()) {\r\n        super.executeStop();\r\n        super.executeStart();\r\n    } else {\r\n        Log.i(TAG, \"Session Start Failed: Previous session was started too recently\");\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSChannelResponse.withHasCredential",
	"Comment": "not used. retained for backwards compatibility.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSChannelResponse withHasCredential(Boolean hasCredential){\r\n    this.hasCredential = hasCredential;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.MouthOpen.withValue",
	"Comment": "boolean value that indicates whether the mouth on the face is open ornot.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "MouthOpen withValue(Boolean value){\r\n    this.value = value;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartContentModerationRequest.setNotificationChannel",
	"Comment": "the amazon sns topic arn that you want amazon rekognition video topublish the completion status of the content moderation analysis to.",
	"Method": "void setNotificationChannel(NotificationChannel notificationChannel){\r\n    this.notificationChannel = notificationChannel;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ResponseHeaderOverrides.getContentEncoding",
	"Comment": "returns the content encoding response header override if it has beenspecified, or null otherwise.",
	"Method": "String getContentEncoding(){\r\n    return contentEncoding;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ApplicationSettingsResource.withLimits",
	"Comment": "the default campaign limits for the app. these limits apply to eachcampaign for the app, unless the campaign overrides the default withlimits of its own.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ApplicationSettingsResource withLimits(CampaignLimits limits){\r\n    this.limits = limits;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMMessage.withImageUrl",
	"Comment": "the url that points to an image used in the push notification.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ADMMessage withImageUrl(String imageUrl){\r\n    this.imageUrl = imageUrl;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.InitiateMultipartUploadRequest.setRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "void setRequesterPays(boolean isRequesterPays){\r\n    this.isRequesterPays = isRequesterPays;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.amazonmobileanalytics.monetization.VirtualMonetizationEventBuilder.withProductId",
	"Comment": "sets the product identifier field of the item being purchased.",
	"Method": "VirtualMonetizationEventBuilder withProductId(String productId){\r\n    setProductId(productId);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.SelectRequest.withNextToken",
	"Comment": "a string informing amazon simpledb where to start the next list ofitemnames.returns a reference to this object so that method calls can be chained together.",
	"Method": "SelectRequest withNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SendDataPoint.getComplaints",
	"Comment": "number of unwanted emails that were rejected by recipients.",
	"Method": "Long getComplaints(){\r\n    return complaints;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateGcmChannelRequest.withGCMChannelRequest",
	"Comment": "google cloud messaging credentialsreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateGcmChannelRequest withGCMChannelRequest(GCMChannelRequest gCMChannelRequest){\r\n    this.gCMChannelRequest = gCMChannelRequest;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.AmazonCloudWatchLogsClient.deleteDestination",
	"Comment": "deletes the specified destination, and eventually disables all thesubscription filters that publish to it. this operation does not deletethe physical resource encapsulated by the destination.",
	"Method": "void deleteDestination(DeleteDestinationRequest deleteDestinationRequest){\r\n    ExecutionContext executionContext = createExecutionContext(deleteDestinationRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<DeleteDestinationRequest> request = null;\r\n    Response<Void> response = null;\r\n    try {\r\n        awsRequestMetrics.startEvent(Field.RequestMarshallTime);\r\n        try {\r\n            request = new DeleteDestinationRequestMarshaller().marshall(deleteDestinationRequest);\r\n            request.setAWSRequestMetrics(awsRequestMetrics);\r\n        } finally {\r\n            awsRequestMetrics.endEvent(Field.RequestMarshallTime);\r\n        }\r\n        JsonResponseHandler<Void> responseHandler = new JsonResponseHandler<Void>(null);\r\n        invoke(request, responseHandler, executionContext);\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.StartTranscriptionJobResult.getTranscriptionJob",
	"Comment": "an object containing details of the asynchronous transcription job.",
	"Method": "TranscriptionJob getTranscriptionJob(){\r\n    return transcriptionJob;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.S3ObjectInputStream.doAbort",
	"Comment": "to allow customers to override abort to just close. we can think about exposing this methodas protected to allow customers to completely prevent the abort behavior if there is a need",
	"Method": "void doAbort(){\r\n    try {\r\n        close();\r\n    } catch (final IOException e) {\r\n        LogFactory.getLog(getClass()).debug(\"FYI\", e);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.BaiduMessage.isSilentPush",
	"Comment": "indicates if the message should display on the users device. silentpushes can be used for remote configuration and phone home use cases.",
	"Method": "Boolean isSilentPush(){\r\n    return silentPush;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EmailChannelResponse.setCreationDate",
	"Comment": "the date that the settings were last updated in iso 8601 format.",
	"Method": "void setCreationDate(String creationDate){\r\n    this.creationDate = creationDate;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateApnsSandboxChannelResult.withAPNSSandboxChannelResponse",
	"Comment": "apple development push notification service channel definition.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateApnsSandboxChannelResult withAPNSSandboxChannelResponse(APNSSandboxChannelResponse aPNSSandboxChannelResponse){\r\n    this.aPNSSandboxChannelResponse = aPNSSandboxChannelResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.RecognizeCelebritiesResult.withUnrecognizedFaces",
	"Comment": "details about each unrecognized face in the image.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "RecognizeCelebritiesResult withUnrecognizedFaces(ComparedFace unrecognizedFaces,RecognizeCelebritiesResult withUnrecognizedFaces,java.util.Collection<ComparedFace> unrecognizedFaces){\r\n    setUnrecognizedFaces(unrecognizedFaces);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ListConfigurationSetsResult.withConfigurationSets",
	"Comment": "a list of configuration sets.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListConfigurationSetsResult withConfigurationSets(ConfigurationSet configurationSets,ListConfigurationSetsResult withConfigurationSets,java.util.Collection<ConfigurationSet> configurationSets){\r\n    setConfigurationSets(configurationSets);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.kinesisvideo.internal.producer.jni.NativeKinesisVideoProducerJni.free",
	"Comment": "frees the underlying kinesis video object. this call is prompt and will terminate the ongoing transmission anddrop the buffers.",
	"Method": "void free(){\r\n    Preconditions.checkState(isInitialized());\r\n    synchronized (mSyncObject) {\r\n        freeKinesisVideoClient(mClientHandle);\r\n        mClientHandle = INVALID_CLIENT_HANDLE_VALUE;\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ExportJobRequest.withSegmentVersion",
	"Comment": "the version of the segment to export if specified.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ExportJobRequest withSegmentVersion(Integer segmentVersion){\r\n    this.segmentVersion = segmentVersion;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.IdentityNotificationAttributes.setForwardingEnabled",
	"Comment": "describes whether amazon ses will forward bounce and complaintnotifications as email. true indicates that amazon ses willforward bounce and complaint notifications as email, whilefalse indicates that bounce and complaint notifications willbe published only to the specified bounce and complaint amazon snstopics.",
	"Method": "void setForwardingEnabled(Boolean forwardingEnabled){\r\n    this.forwardingEnabled = forwardingEnabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteUserEndpointsRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteUserEndpointsRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ReceiptRule.getRecipients",
	"Comment": "the recipient domains and email addresses that the receipt rule appliesto. if this field is not specified, this rule will match all recipientsunder all verified domains.",
	"Method": "java.util.List<String> getRecipients(){\r\n    return recipients;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.DomainMetadataRequest.withDomainName",
	"Comment": "the name of the domain for which to display the metadata of.returns a reference to this object so that method calls can be chained together.",
	"Method": "DomainMetadataRequest withDomainName(String domainName){\r\n    this.domainName = domainName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.SynthesizeSpeechPresignRequest.setText",
	"Comment": "input text to synthesize. if you specify ssml as thetexttype, follow the ssml format for the input text.",
	"Method": "void setText(String text){\r\n    this.text = text;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CreateConfigurationSetEventDestinationRequest.getEventDestination",
	"Comment": "an object that describes the aws service that email sending eventinformation will be published to.",
	"Method": "EventDestination getEventDestination(){\r\n    return eventDestination;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.MessageConfiguration.setGCMMessage",
	"Comment": "the message that the campaign delivers to gcm channels. overrides thedefault message.",
	"Method": "void setGCMMessage(Message gCMMessage){\r\n    this.gCMMessage = gCMMessage;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial.secureCEK",
	"Comment": "secure the given cek.note network calls are involved if the cek is tobe protected by kms.",
	"Method": "SecuredCEK secureCEK(SecretKey cek,EncryptionMaterials materials,S3KeyWrapScheme kwScheme,SecureRandom srand,Provider p,AWSKMSClient kms,AmazonWebServiceRequest req){\r\n    final Map<String, String> matdesc;\r\n    if (materials.isKMSEnabled()) {\r\n        matdesc = mergeMaterialDescriptions(materials, req);\r\n        final EncryptRequest encryptRequest = new EncryptRequest().withEncryptionContext(matdesc).withKeyId(materials.getCustomerMasterKeyId()).withPlaintext(ByteBuffer.wrap(cek.getEncoded()));\r\n        encryptRequest.withGeneralProgressListener(req.getGeneralProgressListener()).withRequestMetricCollector(req.getRequestMetricCollector());\r\n        final EncryptResult encryptResult = kms.encrypt(encryptRequest);\r\n        final byte[] keyBlob = copyAllBytesFrom(encryptResult.getCiphertextBlob());\r\n        return new KMSSecuredCEK(keyBlob, matdesc);\r\n    } else {\r\n        matdesc = materials.getMaterialsDescription();\r\n    }\r\n    Key kek;\r\n    if (materials.getKeyPair() != null) {\r\n        kek = materials.getKeyPair().getPublic();\r\n    } else {\r\n        kek = materials.getSymmetricKey();\r\n    }\r\n    final String keyWrapAlgo = kwScheme.getKeyWrapAlgorithm(kek, p);\r\n    try {\r\n        if (keyWrapAlgo != null) {\r\n            final Cipher cipher = p == null ? Cipher.getInstance(keyWrapAlgo) : Cipher.getInstance(keyWrapAlgo, p);\r\n            cipher.init(Cipher.WRAP_MODE, kek, srand);\r\n            return new SecuredCEK(cipher.wrap(cek), keyWrapAlgo, matdesc);\r\n        }\r\n        Cipher cipher;\r\n        final byte[] toBeEncryptedBytes = cek.getEncoded();\r\n        final String algo = kek.getAlgorithm();\r\n        if (p != null) {\r\n            cipher = Cipher.getInstance(algo, p);\r\n        } else {\r\n            cipher = Cipher.getInstance(algo);\r\n        }\r\n        cipher.init(Cipher.ENCRYPT_MODE, kek);\r\n        return new SecuredCEK(cipher.doFinal(toBeEncryptedBytes), null, matdesc);\r\n    } catch (final Exception e) {\r\n        throw new AmazonClientException(\"Unable to encrypt symmetric key\", e);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.AmazonS3Client.populateRequestWithCopyObjectParameters",
	"Comment": "populates the specified request with the numerous options available incopyobjectrequest.",
	"Method": "void populateRequestWithCopyObjectParameters(Request<? extends AmazonWebServiceRequest> request,CopyObjectRequest copyObjectRequest){\r\n    String copySourceHeader = \"/\" + S3HttpUtils.urlEncode(copyObjectRequest.getSourceBucketName(), true) + \"/\" + S3HttpUtils.urlEncode(copyObjectRequest.getSourceKey(), true);\r\n    if (copyObjectRequest.getSourceVersionId() != null) {\r\n        copySourceHeader += \"?versionId=\" + copyObjectRequest.getSourceVersionId();\r\n    }\r\n    request.addHeader(\"x-amz-copy-source\", copySourceHeader);\r\n    addDateHeader(request, Headers.COPY_SOURCE_IF_MODIFIED_SINCE, copyObjectRequest.getModifiedSinceConstraint());\r\n    addDateHeader(request, Headers.COPY_SOURCE_IF_UNMODIFIED_SINCE, copyObjectRequest.getUnmodifiedSinceConstraint());\r\n    addStringListHeader(request, Headers.COPY_SOURCE_IF_MATCH, copyObjectRequest.getMatchingETagConstraints());\r\n    addStringListHeader(request, Headers.COPY_SOURCE_IF_NO_MATCH, copyObjectRequest.getNonmatchingETagConstraints());\r\n    if (copyObjectRequest.getAccessControlList() != null) {\r\n        addAclHeaders(request, copyObjectRequest.getAccessControlList());\r\n    } else if (copyObjectRequest.getCannedAccessControlList() != null) {\r\n        request.addHeader(Headers.S3_CANNED_ACL, copyObjectRequest.getCannedAccessControlList().toString());\r\n    }\r\n    if (copyObjectRequest.getStorageClass() != null) {\r\n        request.addHeader(Headers.STORAGE_CLASS, copyObjectRequest.getStorageClass());\r\n    }\r\n    if (copyObjectRequest.getRedirectLocation() != null) {\r\n        request.addHeader(Headers.REDIRECT_LOCATION, copyObjectRequest.getRedirectLocation());\r\n    }\r\n    populateRequesterPaysHeader(request, copyObjectRequest.isRequesterPays());\r\n    final ObjectMetadata newObjectMetadata = copyObjectRequest.getNewObjectMetadata();\r\n    if (newObjectMetadata != null) {\r\n        request.addHeader(Headers.METADATA_DIRECTIVE, \"REPLACE\");\r\n        populateRequestMetadata(request, newObjectMetadata);\r\n    }\r\n    populateSourceSSE_C(request, copyObjectRequest.getSourceSSECustomerKey());\r\n    populateSSE_C(request, copyObjectRequest.getDestinationSSECustomerKey());\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.iterable.S3Versions.withPrefix",
	"Comment": "constructs an iterable that covers the versions in an amazon s3 bucketwhere the object key begins with the given prefix.",
	"Method": "S3Versions withPrefix(AmazonS3 s3,String bucketName,String prefix){\r\n    S3Versions versions = new S3Versions(s3, bucketName);\r\n    versions.prefix = prefix;\r\n    return versions;\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.InvokeRequest.withPayload",
	"Comment": "json that you want to provide to your lambda function as input.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "InvokeRequest withPayload(java.nio.ByteBuffer payload){\r\n    this.payload = payload;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.kinesisvideo.common.logging.Log.addFlattenedArray",
	"Comment": "converts an object array to a flat string representation, recursively expanding subarrays,and appends the result to the stringbuilder.",
	"Method": "void addFlattenedArray(Object[] args){\r\n    for (final Object item : args) {\r\n        if (null == item) {\r\n            mStringBuilder.append(\"null\");\r\n        } else if (item instanceof byte[]) {\r\n            addHexString((byte[]) item);\r\n        } else if (item instanceof Object[]) {\r\n            addFlattenedArray((Object[]) item);\r\n        } else {\r\n            mStringBuilder.append(item.toString());\r\n        }\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMChannelResponse.isEnabled",
	"Comment": "indicates whether or not the channel is enabled for sending messages.",
	"Method": "Boolean isEnabled(){\r\n    return enabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EmailChannelResponse.getApplicationId",
	"Comment": "the unique id of the application to which the email channel belongs.",
	"Method": "String getApplicationId(){\r\n    return applicationId;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteObjectRequest.withRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket. it returns thisupdated deleteobjectrequest object so that additional method calls can bechained together.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "DeleteObjectRequest withRequesterPays(boolean isRequesterPays){\r\n    setRequesterPays(isRequesterPays);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CreateImportJobRequest.withImportJobRequest",
	"Comment": "import job request.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreateImportJobRequest withImportJobRequest(ImportJobRequest importJobRequest){\r\n    this.importJobRequest = importJobRequest;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transferutility.TransferUtility.createMultipartUploadRecords",
	"Comment": "inserts a multipart summary record and actual part records into database",
	"Method": "int createMultipartUploadRecords(String bucket,String key,File file,ObjectMetadata metadata,CannedAccessControlList cannedAcl){\r\n    long remainingLenth = file.length();\r\n    double partSize = (double) remainingLenth / (double) MAXIMUM_UPLOAD_PARTS;\r\n    partSize = Math.ceil(partSize);\r\n    final long optimalPartSize = (long) Math.max(partSize, MINIMUM_UPLOAD_PART_SIZE);\r\n    long fileOffset = 0;\r\n    int partNumber = 1;\r\n    final int partCount = (int) Math.ceil((double) remainingLenth / (double) optimalPartSize);\r\n    final ContentValues[] valuesArray = new ContentValues[partCount + 1];\r\n    valuesArray[0] = dbUtil.generateContentValuesForMultiPartUpload(bucket, key, file, fileOffset, 0, \"\", file.length(), 0, metadata, cannedAcl);\r\n    for (int i = 1; i < partCount + 1; i++) {\r\n        final long bytesForPart = Math.min(optimalPartSize, remainingLenth);\r\n        valuesArray[i] = dbUtil.generateContentValuesForMultiPartUpload(bucket, key, file, fileOffset, partNumber, \"\", bytesForPart, remainingLenth - optimalPartSize <= 0 ? 1 : 0, metadata, cannedAcl);\r\n        fileOffset += optimalPartSize;\r\n        remainingLenth -= optimalPartSize;\r\n        partNumber++;\r\n    }\r\n    return dbUtil.bulkInsertTransferRecords(valuesArray);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketTaggingConfigurationRequest.withTaggingConfiguration",
	"Comment": "sets the new tagging configuration for the specified bucket and returnsthis object, enabling additional method calls to be chained together.",
	"Method": "SetBucketTaggingConfigurationRequest withTaggingConfiguration(BucketTaggingConfiguration taggingConfiguration){\r\n    setTaggingConfiguration(taggingConfiguration);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClient.testRenderTemplate",
	"Comment": "creates a preview of the mime content of an email when provided with atemplate and a set of replacement data.you can execute this operation no more than once per second.",
	"Method": "TestRenderTemplateResult testRenderTemplate(TestRenderTemplateRequest testRenderTemplateRequest){\r\n    ExecutionContext executionContext = createExecutionContext(testRenderTemplateRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<TestRenderTemplateRequest> request = null;\r\n    Response<TestRenderTemplateResult> response = null;\r\n    try {\r\n        request = new TestRenderTemplateRequestMarshaller().marshall(testRenderTemplateRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        response = invoke(request, new TestRenderTemplateResultStaxUnmarshaller(), executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.SendMessageBatchRequestEntry.withMessageAttributes",
	"Comment": "each message attribute consists of a name, type, and value. for moreinformation, see message attribute items in the amazon sqs developer guide.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendMessageBatchRequestEntry withMessageAttributes(java.util.Map<String, MessageAttributeValue> messageAttributes){\r\n    this.messageAttributes = messageAttributes;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointRequest.setRequestId",
	"Comment": "the unique id for the most recent request to update the endpoint.",
	"Method": "void setRequestId(String requestId){\r\n    this.requestId = requestId;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SetIdentityFeedbackForwardingEnabledRequest.getForwardingEnabled",
	"Comment": "sets whether amazon ses will forward bounce and complaint notificationsas email. true specifies that amazon ses will forward bounceand complaint notifications as email, in addition to any amazon sns topicpublishing otherwise specified. false specifies that amazonses will publish bounce and complaint notifications only through amazonsns. this value can only be set to false when amazon snstopics are set for both bounce and complaintnotification types.",
	"Method": "Boolean getForwardingEnabled(){\r\n    return forwardingEnabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.S3ObjectId.instructionFileId",
	"Comment": "returns the instruction file id of an instruction file with the givensuffix.",
	"Method": "InstructionFileId instructionFileId(InstructionFileId instructionFileId,String suffix){\r\n    String ifileKey = key + DOT;\r\n    ifileKey += (suffix == null || suffix.trim().length() == 0) ? DEFAULT_INSTRUCTION_FILE_SUFFIX : suffix;\r\n    return new InstructionFileId(bucket, ifileKey, versionId);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ChannelResponse.withEnabled",
	"Comment": "if the channel is enabled for sending messages.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ChannelResponse withEnabled(Boolean enabled){\r\n    this.enabled = enabled;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListSubscriptionsResult.setNextToken",
	"Comment": "token to pass along to the next listsubscriptions request.this element is returned if there are more subscriptions to retrieve.",
	"Method": "void setNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectAclRequest.setBucketName",
	"Comment": "sets the name of the bucket containing the object whose acl is to be retrieved.",
	"Method": "void setBucketName(String bucketName){\r\n    s3ObjectIdBuilder.setBucket(bucketName);\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ReceiptRule.setRecipients",
	"Comment": "the recipient domains and email addresses that the receipt rule appliesto. if this field is not specified, this rule will match all recipientsunder all verified domains.",
	"Method": "void setRecipients(java.util.Collection<String> recipients){\r\n    if (recipients == null) {\r\n        this.recipients = null;\r\n        return;\r\n    }\r\n    this.recipients = new java.util.ArrayList<String>(recipients);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GCMMessage.isSilentPush",
	"Comment": "indicates if the message should display on the users device. silentpushes can be used for remote configuration and phone home use cases.",
	"Method": "Boolean isSilentPush(){\r\n    return silentPush;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.InitiateMultipartUploadRequest.withRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket. it returns thisupdated initiatemultipartuploadrequest object so that additional method calls can bechained together.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "InitiateMultipartUploadRequest withRequesterPays(boolean isRequesterPays){\r\n    setRequesterPays(isRequesterPays);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SendDataPoint.setComplaints",
	"Comment": "number of unwanted emails that were rejected by recipients.",
	"Method": "void setComplaints(Long complaints){\r\n    this.complaints = complaints;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.CreatePlatformApplicationResult.withPlatformApplicationArn",
	"Comment": "platformapplicationarn is returned.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreatePlatformApplicationResult withPlatformApplicationArn(String platformApplicationArn){\r\n    this.platformApplicationArn = platformApplicationArn;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.IdentityVerificationAttributes.withVerificationToken",
	"Comment": "the verification token for a domain identity. null for email addressidentities.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "IdentityVerificationAttributes withVerificationToken(String verificationToken){\r\n    this.verificationToken = verificationToken;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.EventDestination.setKinesisFirehoseDestination",
	"Comment": "an object that contains the delivery stream arn and the iam role arnassociated with an amazon kinesis firehose event destination.",
	"Method": "void setKinesisFirehoseDestination(KinesisFirehoseDestination kinesisFirehoseDestination){\r\n    this.kinesisFirehoseDestination = kinesisFirehoseDestination;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GCMMessage.withIconReference",
	"Comment": "the icon image name of the asset saved in your application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GCMMessage withIconReference(String iconReference){\r\n    this.iconReference = iconReference;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.BaiduChannelResponse.withCreationDate",
	"Comment": "when was this segment createdreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "BaiduChannelResponse withCreationDate(String creationDate){\r\n    this.creationDate = creationDate;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CORSRule.withAllowedMethods",
	"Comment": "sets the allowed methods of this rule and returns a reference to thisobject for method chaining.",
	"Method": "CORSRule withAllowedMethods(List<AllowedMethods> allowedMethods){\r\n    this.allowedMethods = allowedMethods;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.Message.clearMessageAttributesEntries",
	"Comment": "removes all the entries added into messageattributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Message clearMessageAttributesEntries(){\r\n    this.messageAttributes = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.BounceAction.withSmtpReplyCode",
	"Comment": "the smtp reply code, as defined by rfc 5321.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "BounceAction withSmtpReplyCode(String smtpReplyCode){\r\n    this.smtpReplyCode = smtpReplyCode;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CreateReceiptRuleRequest.getRuleSetName",
	"Comment": "the name of the rule set that the receipt rule will be added to.",
	"Method": "String getRuleSetName(){\r\n    return ruleSetName;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.SynthesisTask.withTaskStatusReason",
	"Comment": "reason for the current status of a specific speech synthesis task,including errors if the task has failed.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SynthesisTask withTaskStatusReason(String taskStatusReason){\r\n    this.taskStatusReason = taskStatusReason;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSVoipChannelResponse.isHasTokenKey",
	"Comment": "if the channel is registered with a token key for authentication.",
	"Method": "Boolean isHasTokenKey(){\r\n    return hasTokenKey;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetEventStreamResult.withEventStream",
	"Comment": "model for an event publishing subscription export.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetEventStreamResult withEventStream(EventStream eventStream){\r\n    this.eventStream = eventStream;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSChannelResponse.withApplicationId",
	"Comment": "the id of the application that the channel applies to.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSChannelResponse withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Sunglasses.isValue",
	"Comment": "boolean value that indicates whether the face is wearing sunglasses ornot.",
	"Method": "Boolean isValue(){\r\n    return value;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateEndpointsBatchRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateEndpointsBatchRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.GetQueueAttributesResult.withAttributes",
	"Comment": "a map of attributes to the respective values.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetQueueAttributesResult withAttributes(java.util.Map<String, String> attributes){\r\n    this.attributes = attributes;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ListRetirableGrantsResult.isTruncated",
	"Comment": "a flag that indicates whether there are more items in the list. when thisvalue is true, the list in this response is truncated. to get more items,pass the value of the nextmarker element in this response tothe marker parameter in a subsequent request.",
	"Method": "Boolean isTruncated(){\r\n    return truncated;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectMetadataRequest.setBucketName",
	"Comment": "sets the name of the bucket containing the object whose metadata isbeing retrieved.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListPlatformApplicationsResult.withPlatformApplications",
	"Comment": "platform applications returned when calling listplatformapplicationsaction.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListPlatformApplicationsResult withPlatformApplications(PlatformApplication platformApplications,ListPlatformApplicationsResult withPlatformApplications,java.util.Collection<PlatformApplication> platformApplications){\r\n    setPlatformApplications(platformApplications);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.PutRecordsResultEntry.withErrorCode",
	"Comment": "the error code for an individual record result. errorcodescan be either provisionedthroughputexceededexception orinternalfailure.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PutRecordsResultEntry withErrorCode(String errorCode){\r\n    this.errorCode = errorCode;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.RecognizeCelebritiesResult.getCelebrityFaces",
	"Comment": "details about each celebrity found in the image. amazon rekognition candetect a maximum of 15 celebrities in an image.",
	"Method": "java.util.List<Celebrity> getCelebrityFaces(){\r\n    return celebrityFaces;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DeleteIdentityRequest.setIdentity",
	"Comment": "the identity to be removed from the list of identities for the awsaccount.",
	"Method": "void setIdentity(String identity){\r\n    this.identity = identity;\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.TranscriptionJob.withCompletionTime",
	"Comment": "a timestamp that shows when the job was completed.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "TranscriptionJob withCompletionTime(java.util.Date completionTime){\r\n    this.completionTime = completionTime;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GeneratePresignedUrlRequest.getResponseHeaders",
	"Comment": "returns the headers to be overridden in the service response.",
	"Method": "ResponseHeaderOverrides getResponseHeaders(){\r\n    return responseHeaders;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteBucketAnalyticsConfigurationRequest.setId",
	"Comment": "sets the identifier used to represent an analytics configuration.",
	"Method": "void setId(String id){\r\n    this.id = id;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMMessage.withSubstitutions",
	"Comment": "default message substitutions. can be overridden by individual addresssubstitutions.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ADMMessage withSubstitutions(java.util.Map<String, java.util.List<String>> substitutions){\r\n    this.substitutions = substitutions;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.SynthesizeSpeechPresignRequest.withText",
	"Comment": "input text to synthesize. if you specify ssml as thetexttype, follow the ssml format for the input text.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SynthesizeSpeechPresignRequest withText(String text){\r\n    this.text = text;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartCelebrityRecognitionRequest.getEnablePersonTracking",
	"Comment": "returns the value of the enablepersontracking property for this object.",
	"Method": "Boolean getEnablePersonTracking(){\r\n    return enablePersonTracking;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.getUploadId",
	"Comment": "returns the id of the existing, initiated multipart upload with whichthis new part will be associated.",
	"Method": "String getUploadId(){\r\n    return uploadId;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DefaultMessage.setBody",
	"Comment": "the message body of the notification, the email body or the text message.",
	"Method": "void setBody(String body){\r\n    this.body = body;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SendBulkTemplatedEmailRequest.setDestinations",
	"Comment": "one or more destination objects. all of the recipients in adestination will receive the same version of the email. youcan specify up to 50 destination objects within adestinations array.",
	"Method": "void setDestinations(java.util.Collection<BulkEmailDestination> destinations){\r\n    if (destinations == null) {\r\n        this.destinations = null;\r\n        return;\r\n    }\r\n    this.destinations = new java.util.ArrayList<BulkEmailDestination>(destinations);\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.GetTopicAttributesResult.clearAttributesEntries",
	"Comment": "removes all the entries added into attributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetTopicAttributesResult clearAttributesEntries(){\r\n    this.attributes = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSChannelResponse.withIsArchived",
	"Comment": "indicates whether or not the channel is archived.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSChannelResponse withIsArchived(Boolean isArchived){\r\n    this.isArchived = isArchived;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetPersonTrackingResult.getErrorCode",
	"Comment": "returns the value of the errorcode property for this object.",
	"Method": "String getErrorCode(){\r\n    return errorCode;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetCampaignActivitiesResult.withActivitiesResponse",
	"Comment": "activities for campaign.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetCampaignActivitiesResult withActivitiesResponse(ActivitiesResponse activitiesResponse){\r\n    this.activitiesResponse = activitiesResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetCampaignVersionRequest.withVersion",
	"Comment": "the version of the campaign.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetCampaignVersionRequest withVersion(String version){\r\n    this.version = version;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.Destination.withArn",
	"Comment": "the arn of this destination.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Destination withArn(String arn){\r\n    this.arn = arn;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.MessageRequest.clearAddressesEntries",
	"Comment": "removes all the entries added into addresses.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "MessageRequest clearAddressesEntries(){\r\n    this.addresses = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteBucketAnalyticsConfigurationRequest.getBucketName",
	"Comment": "returns the name of the bucket from which an analytics configuration is deleted.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DeleteReceiptRuleSetRequest.withRuleSetName",
	"Comment": "the name of the receipt rule set to delete.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteReceiptRuleSetRequest withRuleSetName(String ruleSetName){\r\n    this.ruleSetName = ruleSetName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.BatchResultErrorEntry.withId",
	"Comment": "the id of an entry in a batch request.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "BatchResultErrorEntry withId(String id){\r\n    this.id = id;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideoarchivedmedia.model.HLSFragmentSelector.withTimestampRange",
	"Comment": "the start and end of the time stamp range for the requested media.this value should not be present if playbacktype islive.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "HLSFragmentSelector withTimestampRange(HLSTimestampRange timestampRange){\r\n    this.timestampRange = timestampRange;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.CreateGrantRequest.withConstraints",
	"Comment": "a structure that you can use to allow certain operations in the grantonly when the desired encryption context is present. for more informationabout encryption context, see encryption context in the aws key management service developerguide.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreateGrantRequest withConstraints(GrantConstraints constraints){\r\n    this.constraints = constraints;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.DeleteTopicRequest.withTopicArn",
	"Comment": "the arn of the topic you want to delete.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteTopicRequest withTopicArn(String topicArn){\r\n    this.topicArn = topicArn;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.model.ListTagsForStreamResult.withTags",
	"Comment": "a map of tag keys and values associated with the specified stream.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListTagsForStreamResult withTags(java.util.Map<String, String> tags){\r\n    this.tags = tags;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointResponse.getApplicationId",
	"Comment": "the id of the application that is associated with the endpoint.",
	"Method": "String getApplicationId(){\r\n    return applicationId;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ReceiptAction.setStopAction",
	"Comment": "terminates the evaluation of the receipt rule set and optionallypublishes a notification to amazon sns.",
	"Method": "void setStopAction(StopAction stopAction){\r\n    this.stopAction = stopAction;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.BatchPutAttributesRequest.withDomainName",
	"Comment": "the name of the domain in which the attributes are being stored.returns a reference to this object so that method calls can be chained together.",
	"Method": "BatchPutAttributesRequest withDomainName(String domainName){\r\n    this.domainName = domainName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.model.ListTagsForStreamResult.getTags",
	"Comment": "a map of tag keys and values associated with the specified stream.",
	"Method": "java.util.Map<String, String> getTags(){\r\n    return tags;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ListReceiptRuleSetsRequest.setNextToken",
	"Comment": "a token returned from a previous call to listreceiptrulesetsto indicate the position in the receipt rule set list.",
	"Method": "void setNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Sunglasses.withValue",
	"Comment": "boolean value that indicates whether the face is wearing sunglasses ornot.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Sunglasses withValue(Boolean value){\r\n    this.value = value;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.ChangeMessageVisibilityBatchRequestEntry.withReceiptHandle",
	"Comment": "a receipt handle.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ChangeMessageVisibilityBatchRequestEntry withReceiptHandle(String receiptHandle){\r\n    this.receiptHandle = receiptHandle;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointItemResponse.withStatusCode",
	"Comment": "the status code to respond with for a particular endpoint id afterendpoint registrationreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointItemResponse withStatusCode(Integer statusCode){\r\n    this.statusCode = statusCode;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketNotificationConfigurationRequest.getBucketName",
	"Comment": "gets the name of the bucket whose notification configuration is beingset.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSVoipChannelResponse.withId",
	"Comment": "channel id. not used, only for backwards compatibility.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSVoipChannelResponse withId(String id){\r\n    this.id = id;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.GetSendStatisticsResult.withSendDataPoints",
	"Comment": "a list of data points, each of which represents 15 minutes of activity.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetSendStatisticsResult withSendDataPoints(SendDataPoint sendDataPoints,GetSendStatisticsResult withSendDataPoints,java.util.Collection<SendDataPoint> sendDataPoints){\r\n    setSendDataPoints(sendDataPoints);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsRequest.setPrefix",
	"Comment": "sets the optional prefix parameter, restricting the response to keys thatbegin with the specified prefix.",
	"Method": "void setPrefix(String prefix){\r\n    this.prefix = prefix;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetSegmentRequest.withSegmentId",
	"Comment": "the unique id of the segment.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetSegmentRequest withSegmentId(String segmentId){\r\n    this.segmentId = segmentId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMMessage.setImageIconUrl",
	"Comment": "the url that points to an image used as the large icon to thenotification content view.",
	"Method": "void setImageIconUrl(String imageIconUrl){\r\n    this.imageIconUrl = imageIconUrl;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.StreamDescription.getHasMoreShards",
	"Comment": "if set to true, more shards in the stream are available todescribe.",
	"Method": "Boolean getHasMoreShards(){\r\n    return hasMoreShards;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GCMChannelResponse.withVersion",
	"Comment": "version of channelreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GCMChannelResponse withVersion(Integer version){\r\n    this.version = version;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClient.listConfigurationSets",
	"Comment": "provides a list of the configuration sets associated with your amazon sesaccount in the current aws region. for information about usingconfiguration sets, see monitoring your amazon ses sending activity in the amazon sesdeveloper guide.you can execute this operation no more than once per second. thisoperation will return up to 1,000 configuration sets each time it is run.if your amazon ses account has more than 1,000 configuration sets, thisoperation will also return a nexttoken element. you can then execute thelistconfigurationsets operation again, passing thenexttoken parameter and the value of the nexttoken elementto retrieve additional results.",
	"Method": "ListConfigurationSetsResult listConfigurationSets(ListConfigurationSetsRequest listConfigurationSetsRequest){\r\n    ExecutionContext executionContext = createExecutionContext(listConfigurationSetsRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<ListConfigurationSetsRequest> request = null;\r\n    Response<ListConfigurationSetsResult> response = null;\r\n    try {\r\n        request = new ListConfigurationSetsRequestMarshaller().marshall(listConfigurationSetsRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        response = invoke(request, new ListConfigurationSetsResultStaxUnmarshaller(), executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.DecryptRequest.setGrantTokens",
	"Comment": "a list of grant tokens.for more information, see grant tokens in the aws key management service developerguide.",
	"Method": "void setGrantTokens(java.util.Collection<String> grantTokens){\r\n    if (grantTokens == null) {\r\n        this.grantTokens = null;\r\n        return;\r\n    }\r\n    this.grantTokens = new java.util.ArrayList<String>(grantTokens);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.PutEventsRequest.withApplicationId",
	"Comment": "sets the value of the applicationid property for this object.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PutEventsRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SMSMessage.setKeyword",
	"Comment": "the sms program name that you provided to aws support when you requestedyour dedicated number.",
	"Method": "void setKeyword(String keyword){\r\n    this.keyword = keyword;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.CelebrityDetail.withUrls",
	"Comment": "an array of urls pointing to additional celebrity information.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CelebrityDetail withUrls(String urls,CelebrityDetail withUrls,java.util.Collection<String> urls){\r\n    setUrls(urls);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.AttributeDimension.getValues",
	"Comment": "the criteria values for the segment dimension. endpoints with matchingattribute values are included or excluded from the segment, depending onthe setting for type.",
	"Method": "java.util.List<String> getValues(){\r\n    return values;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobResponse.withTotalProcessed",
	"Comment": "the number of endpoints that were processed by the import job.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ImportJobResponse withTotalProcessed(Integer totalProcessed){\r\n    this.totalProcessed = totalProcessed;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CreateConfigurationSetRequest.getConfigurationSet",
	"Comment": "a data structure that contains the name of the configuration set.",
	"Method": "ConfigurationSet getConfigurationSet(){\r\n    return configurationSet;\r\n}"
}, {
	"Path": "com.amazonaws.serverless.proxy.spark.SparkLambdaContainerHandler.getAwsProxyHandler",
	"Comment": "returns a new instance of an sparklambdacontainerhandler initialized to work with awsproxyrequestand awsproxyresponse objects.",
	"Method": "SparkLambdaContainerHandler<AwsProxyRequest, AwsProxyResponse> getAwsProxyHandler(){\r\n    SparkLambdaContainerHandler<AwsProxyRequest, AwsProxyResponse> newHandler = new SparkLambdaContainerHandler(AwsProxyRequest.class, AwsProxyResponse.class, new AwsProxyHttpServletRequestReader(), new AwsProxyHttpServletResponseWriter(), new AwsProxySecurityContextWriter(), new AwsProxyExceptionHandler(), new LambdaEmbeddedServerFactory());\r\n    return newHandler;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.PersistableUpload.getMutlipartUploadThreshold",
	"Comment": "returns the upper threshold for file size after which multipart upload isused..",
	"Method": "long getMutlipartUploadThreshold(){\r\n    return mutlipartUploadThreshold;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointSendConfiguration.getRawContent",
	"Comment": "the raw json formatted string to be used as the payload. this valueoverrides the message.",
	"Method": "String getRawContent(){\r\n    return rawContent;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.ListDomainsResult.setNextToken",
	"Comment": "an opaque token indicating that there are more domains than thespecified maxnumberofdomains still available.",
	"Method": "void setNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DescribeReceiptRuleSetRequest.withRuleSetName",
	"Comment": "the name of the receipt rule set to describe.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DescribeReceiptRuleSetRequest withRuleSetName(String ruleSetName){\r\n    this.ruleSetName = ruleSetName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetSegmentImportJobsRequest.withToken",
	"Comment": "the nexttoken string returned on a previous page that you use to get thenext page of results in a paginated response.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetSegmentImportJobsRequest withToken(String token){\r\n    this.token = token;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.ComparedFace.withBoundingBox",
	"Comment": "bounding box of the face.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ComparedFace withBoundingBox(BoundingBox boundingBox){\r\n    this.boundingBox = boundingBox;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartCelebrityRecognitionRequest.getVideo",
	"Comment": "the video in which you want to recognize celebrities. the video must bestored in an amazon s3 bucket.",
	"Method": "Video getVideo(){\r\n    return video;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.MessageConfiguration.withGCMMessage",
	"Comment": "the message that the campaign delivers to gcm channels. overrides thedefault message.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "MessageConfiguration withGCMMessage(Message gCMMessage){\r\n    this.gCMMessage = gCMMessage;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.ListShardsRequest.setStreamCreationTimestamp",
	"Comment": "specify this input parameter to distinguish data streams that have thesame name. for example, if you create a data stream and then delete it,and you later create another data stream with the same name, you can usethis input parameter to specify which of the two streams you want to listthe shards for.you cannot specify this parameter if you specify thenexttoken parameter.",
	"Method": "void setStreamCreationTimestamp(java.util.Date streamCreationTimestamp){\r\n    this.streamCreationTimestamp = streamCreationTimestamp;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListTopicsResult.getNextToken",
	"Comment": "token to pass along to the next listtopics request. thiselement is returned if there are additional topics to retrieve.",
	"Method": "String getNextToken(){\r\n    return nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideoarchivedmedia.model.Fragment.getFragmentSizeInBytes",
	"Comment": "the total fragment size, including information about the fragment andcontained media data.",
	"Method": "Long getFragmentSizeInBytes(){\r\n    return fragmentSizeInBytes;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.BounceAction.withStatusCode",
	"Comment": "the smtp enhanced status code, as defined by rfc 3463.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "BounceAction withStatusCode(String statusCode){\r\n    this.statusCode = statusCode;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.Shard.withHashKeyRange",
	"Comment": "the range of possible hash key values for the shard, which is a set ofordered contiguous positive integers.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Shard withHashKeyRange(HashKeyRange hashKeyRange){\r\n    this.hashKeyRange = hashKeyRange;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.DeleteAttributesRequest.withAttributes",
	"Comment": "a list of attributes. similar to columns on a spreadsheet, attributesrepresent categories of data that can be assigned to items.returns a reference to this object so that method calls can be chained together.",
	"Method": "DeleteAttributesRequest withAttributes(Attribute attributes,DeleteAttributesRequest withAttributes,java.util.Collection<Attribute> attributes){\r\n    if (attributes == null) {\r\n        this.attributes = null;\r\n    } else {\r\n        com.amazonaws.internal.ListWithAutoConstructFlag<Attribute> attributesCopy = new com.amazonaws.internal.ListWithAutoConstructFlag<Attribute>(attributes.size());\r\n        attributesCopy.addAll(attributes);\r\n        this.attributes = attributesCopy;\r\n    }\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ReceiptRule.getScanEnabled",
	"Comment": "if true, then messages that this receipt rule applies to arescanned for spam and viruses. the default value is false.",
	"Method": "Boolean getScanEnabled(){\r\n    return scanEnabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceDetail.withEyeglasses",
	"Comment": "indicates whether or not the face is wearing eye glasses, and theconfidence level in the determination.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "FaceDetail withEyeglasses(Eyeglasses eyeglasses){\r\n    this.eyeglasses = eyeglasses;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.AmazonS3Client.addHeaderIfNotNull",
	"Comment": "adds the specified header to the specified request, if the header valueis not null.",
	"Method": "void addHeaderIfNotNull(Request<?> request,String header,String value){\r\n    if (value != null) {\r\n        request.addHeader(header, value);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.StreamDescription.withHasMoreShards",
	"Comment": "if set to true, more shards in the stream are available todescribe.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "StreamDescription withHasMoreShards(Boolean hasMoreShards){\r\n    this.hasMoreShards = hasMoreShards;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.WriteSegmentRequest.withSegmentGroups",
	"Comment": "a segment group, which consists of zero or more source segments, plusdimensions that are applied to those source segments. your request canonly include one segment group. your request can include either asegmentgroups object or a dimensions object, but not both.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "WriteSegmentRequest withSegmentGroups(SegmentGroupList segmentGroups){\r\n    this.segmentGroups = segmentGroups;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectResult.getVersionId",
	"Comment": "gets the version id of the newly copied object. this field is onlypresent if object versioning has been enabled for the bucket the objectwas copied to.",
	"Method": "String getVersionId(){\r\n    return versionId;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateAttributesRequest.setBlacklist",
	"Comment": "the glob wildcard for removing the attributes in the application",
	"Method": "void setBlacklist(java.util.Collection<String> blacklist){\r\n    if (blacklist == null) {\r\n        this.blacklist = null;\r\n        return;\r\n    }\r\n    this.blacklist = new java.util.ArrayList<String>(blacklist);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetAppsRequest.withToken",
	"Comment": "the nexttoken string returned on a previous page that you use to get thenext page of results in a paginated response.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetAppsRequest withToken(String token){\r\n    this.token = token;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.GetCustomVerificationEmailTemplateResult.withSuccessRedirectionURL",
	"Comment": "the url that the recipient of the verification email is sent to if his orher address is successfully verified.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetCustomVerificationEmailTemplateResult withSuccessRedirectionURL(String successRedirectionURL){\r\n    this.successRedirectionURL = successRedirectionURL;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListMultipartUploadsRequest.withMaxUploads",
	"Comment": "sets the optional maximum number of uploads to return and returns thisupdated listmultipartuploadsrequest object so that additional methodcalls can be chained together.",
	"Method": "ListMultipartUploadsRequest withMaxUploads(int maxUploadsInt){\r\n    this.maxUploads = maxUploadsInt;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyPartRequest.setUploadId",
	"Comment": "sets the id of the existing, initiated multipart upload with which thisnew part will be associated.",
	"Method": "void setUploadId(String uploadId){\r\n    this.uploadId = uploadId;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ExportJobResponse.withId",
	"Comment": "the unique id of the job.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ExportJobResponse withId(String id){\r\n    this.id = id;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointBatchItem.withRequestId",
	"Comment": "the unique id for the most recent request to update the endpoint.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointBatchItem withRequestId(String requestId){\r\n    this.requestId = requestId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSSandboxChannelResponse.withVersion",
	"Comment": "version of channelreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSSandboxChannelResponse withVersion(Integer version){\r\n    this.version = version;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.UpdateVocabularyRequest.withPhrases",
	"Comment": "an array of strings containing the vocabulary entries.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateVocabularyRequest withPhrases(String phrases,UpdateVocabularyRequest withPhrases,java.util.Collection<String> phrases){\r\n    setPhrases(phrases);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketAnalyticsConfigurationRequest.withBucketName",
	"Comment": "sets the name of the bucket to which an analytics configuration is storedand returns this object for method chaining.",
	"Method": "SetBucketAnalyticsConfigurationRequest withBucketName(String bucketName){\r\n    setBucketName(bucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.WriteCampaignRequest.withTreatmentDescription",
	"Comment": "a custom description for the treatment.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "WriteCampaignRequest withTreatmentDescription(String treatmentDescription){\r\n    this.treatmentDescription = treatmentDescription;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectMetadataRequest.getBucketName",
	"Comment": "gets the name of the bucket containing the object whose metadata isbeing retrieved.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketMetricsConfigurationRequest.getMetricsConfiguration",
	"Comment": "returns the metrics configuration that is set on the bucket.",
	"Method": "MetricsConfiguration getMetricsConfiguration(){\r\n    return metricsConfiguration;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.kinesisvideo.encoding.EncoderFrameSubmitter.copyCameraFrameIntoInputImage",
	"Comment": "this assumes that camera frame and encoder input image have the same format",
	"Method": "void copyCameraFrameIntoInputImage(int inputBufferIndex,Image cameraFrame){\r\n    final Image codecInputImage = mEncoder.getInputImage(inputBufferIndex);\r\n    for (int i = 0; i < cameraFrame.getPlanes().length; i++) {\r\n        final ByteBuffer sourceImagePlane = cameraFrame.getPlanes()[i].getBuffer();\r\n        final ByteBuffer destinationImagePlane = codecInputImage.getPlanes()[i].getBuffer();\r\n        copyBuffer(sourceImagePlane, destinationImagePlane);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.Body.withHtml",
	"Comment": "the content of the message, in html format. use this for email clientsthat can process html. you can include clickable links, formatted text,and much more in an html message.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Body withHtml(Content html){\r\n    this.html = html;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PutObjectRequest.setRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "void setRequesterPays(boolean isRequesterPays){\r\n    this.isRequesterPays = isRequesterPays;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointBatchItem.clearMetricsEntries",
	"Comment": "removes all the entries added into metrics.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointBatchItem clearMetricsEntries(){\r\n    this.metrics = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.UpdateCustomVerificationEmailTemplateRequest.withFailureRedirectionURL",
	"Comment": "the url that the recipient of the verification email is sent to if his orher address is not successfully verified.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateCustomVerificationEmailTemplateRequest withFailureRedirectionURL(String failureRedirectionURL){\r\n    this.failureRedirectionURL = failureRedirectionURL;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GCMChannelRequest.withApiKey",
	"Comment": "platform credential api key from google.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GCMChannelRequest withApiKey(String apiKey){\r\n    this.apiKey = apiKey;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.pinpoint.PinpointConfiguration.withCredentialsProvider",
	"Comment": "please provide a cognitocredentialsprovider in order to authenticate.",
	"Method": "PinpointConfiguration withCredentialsProvider(AWSCredentialsProvider credentialsProvider){\r\n    this.credentialsProvider = credentialsProvider;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ListTemplatesRequest.withNextToken",
	"Comment": "a token returned from a previous call to listtemplates toindicate the position in the list of email templates.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListTemplatesRequest withNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteBucketAnalyticsConfigurationRequest.withId",
	"Comment": "sets the identifier used to represent an analytics configurationand returns this object for method chaining.",
	"Method": "DeleteBucketAnalyticsConfigurationRequest withId(String id){\r\n    setId(id);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetCampaignActivitiesRequest.setToken",
	"Comment": "the nexttoken string returned on a previous page that you use to get thenext page of results in a paginated response.",
	"Method": "void setToken(String token){\r\n    this.token = token;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.IdentityMailFromDomainAttributes.getMailFromDomain",
	"Comment": "the custom mail from domain that the identity is configured to use.",
	"Method": "String getMailFromDomain(){\r\n    return mailFromDomain;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.kinesis.kinesisrecorder.KinesisRecorderConfig.withMaxStorageSize",
	"Comment": "sets the max storage in bytes that kinesisrecorder is allowed to use.requests saved that exceed the max storage limit will be dropped.",
	"Method": "KinesisRecorderConfig withMaxStorageSize(long maxStorage){\r\n    this.maxStorageSize = maxStorage;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ChannelsResponse.clearChannelsEntries",
	"Comment": "removes all the entries added into channels.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ChannelsResponse clearChannelsEntries(){\r\n    this.channels = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ReceiptAction.setWorkmailAction",
	"Comment": "calls amazon workmail and, optionally, publishes a notification to amazonamazon sns.",
	"Method": "void setWorkmailAction(WorkmailAction workmailAction){\r\n    this.workmailAction = workmailAction;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointSendConfiguration.getTitleOverride",
	"Comment": "title override. if specified will override default title if applicable.",
	"Method": "String getTitleOverride(){\r\n    return titleOverride;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ReplicationRule.withPrefix",
	"Comment": "sets the amazon s3 object prefix for the replication rule. returns theupdated object.",
	"Method": "ReplicationRule withPrefix(String prefix){\r\n    setPrefix(prefix);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteGcmChannelResult.withGCMChannelResponse",
	"Comment": "google cloud messaging channel definitionreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteGcmChannelResult withGCMChannelResponse(GCMChannelResponse gCMChannelResponse){\r\n    this.gCMChannelResponse = gCMChannelResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetCampaignVersionRequest.withCampaignId",
	"Comment": "the unique id of the campaign.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetCampaignVersionRequest withCampaignId(String campaignId){\r\n    this.campaignId = campaignId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ListReceiptFiltersResult.getFilters",
	"Comment": "a list of ip address filter data structures, which each consist of aname, an ip address range, and whether to allow or block mail from it.",
	"Method": "java.util.List<ReceiptFilter> getFilters(){\r\n    return filters;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.SendMessageRequest.setMessageBody",
	"Comment": "the message to send. string maximum 256 kb in size. for a list of allowedcharacters, see the preceding note.",
	"Method": "void setMessageBody(String messageBody){\r\n    this.messageBody = messageBody;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.WriteSegmentRequest.withName",
	"Comment": "the name of segmentreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "WriteSegmentRequest withName(String name){\r\n    this.name = name;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ExportJobResponse.getFailures",
	"Comment": "provides up to 100 of the first failed entries for the job, if any exist.",
	"Method": "java.util.List<String> getFailures(){\r\n    return failures;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.GetSMSAttributesResult.clearattributesEntries",
	"Comment": "removes all the entries added into attributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetSMSAttributesResult clearattributesEntries(){\r\n    this.attributes = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSVoipChannelResponse.withVersion",
	"Comment": "version of channelreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSVoipChannelResponse withVersion(Integer version){\r\n    this.version = version;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobRequest.getRegisterEndpoints",
	"Comment": "sets whether the endpoints are registered with amazon pinpoint when theyare imported.",
	"Method": "Boolean getRegisterEndpoints(){\r\n    return registerEndpoints;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.WriteTreatmentResource.withMessageConfiguration",
	"Comment": "the message configuration settings.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "WriteTreatmentResource withMessageConfiguration(MessageConfiguration messageConfiguration){\r\n    this.messageConfiguration = messageConfiguration;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.CompareFacesResult.setUnmatchedFaces",
	"Comment": "an array of faces in the target image that did not match the source imageface.",
	"Method": "void setUnmatchedFaces(java.util.Collection<ComparedFace> unmatchedFaces){\r\n    if (unmatchedFaces == null) {\r\n        this.unmatchedFaces = null;\r\n        return;\r\n    }\r\n    this.unmatchedFaces = new java.util.ArrayList<ComparedFace>(unmatchedFaces);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial.getKEKMaterialsDescription",
	"Comment": "returns the description of the kek materials that were used to encryptthe cek.",
	"Method": "Map<String, String> getKEKMaterialsDescription(){\r\n    return this.kekMaterialsDescription;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignHook.withWebUrl",
	"Comment": "web url to call for hook. if the url has authentication specified it willbe added as authentication to the requestreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CampaignHook withWebUrl(String webUrl){\r\n    this.webUrl = webUrl;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteBaiduChannelRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteBaiduChannelRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.AbstractPutObjectRequest.setProgressListener",
	"Comment": "sets the optional progress listener for receiving updates for objectupload status.",
	"Method": "void setProgressListener(com.amazonaws.services.s3.model.ProgressListener progressListener){\r\n    setGeneralProgressListener(new LegacyS3ProgressListener(progressListener));\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadObjectRequest.setMaterialsDescription",
	"Comment": "sets the materials description for the encryption materials to be usedwith the current request.",
	"Method": "void setMaterialsDescription(Map<String, String> materialsDescription){\r\n    this.materialsDescription = materialsDescription == null ? null : Collections.unmodifiableMap(new HashMap<String, String>(materialsDescription));\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSClient.deleteEndpoint",
	"Comment": "deletes the endpoint for a device and mobile app from amazon sns. thisaction is idempotent. for more information, see usingamazon sns mobile push notifications.when you delete an endpoint that is also subscribed to a topic, then youmust also unsubscribe the endpoint from the topic.",
	"Method": "void deleteEndpoint(DeleteEndpointRequest deleteEndpointRequest){\r\n    ExecutionContext executionContext = createExecutionContext(deleteEndpointRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<DeleteEndpointRequest> request = null;\r\n    Response<Void> response = null;\r\n    try {\r\n        request = new DeleteEndpointRequestMarshaller().marshall(deleteEndpointRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        invoke(request, null, executionContext);\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.serverless.proxy.internal.servlet.AwsLambdaServletContainerHandler.getServletContext",
	"Comment": "returns the current servletcontext. if the framework implementation does not set the value forservlet context this method will return null.",
	"Method": "ServletContext getServletContext(){\r\n    return servletContext;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ReputationOptions.getSendingEnabled",
	"Comment": "describes whether email sending is enabled or disabled for theconfiguration set. if the value is true, then amazon seswill send emails that use the configuration set. if the value isfalse, amazon ses will not send emails that use theconfiguration set. the default value is true. you can changethis setting using updateconfigurationsetsendingenabled.",
	"Method": "Boolean getSendingEnabled(){\r\n    return sendingEnabled;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.pinpoint.analytics.monetization.MonetizationEventBuilder.setQuantity",
	"Comment": "sets the quantity that will be used to build the monetization event",
	"Method": "void setQuantity(Double quantity){\r\n    this.quantity = quantity;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.updateCustomVerificationEmailTemplateAsync",
	"Comment": "updates an existing custom verification email template.for more information about custom verification email templates, see using custom verification email templates in the amazon sesdeveloper guide.you can execute this operation no more than once per second.",
	"Method": "Future<Void> updateCustomVerificationEmailTemplateAsync(UpdateCustomVerificationEmailTemplateRequest updateCustomVerificationEmailTemplateRequest,Future<Void> updateCustomVerificationEmailTemplateAsync,UpdateCustomVerificationEmailTemplateRequest updateCustomVerificationEmailTemplateRequest,AsyncHandler<UpdateCustomVerificationEmailTemplateRequest, Void> asyncHandler){\r\n    return executorService.submit(new Callable<Void>() {\r\n        public Void call() throws Exception {\r\n            Void result = null;\r\n            try {\r\n                updateCustomVerificationEmailTemplate(updateCustomVerificationEmailTemplateRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(updateCustomVerificationEmailTemplateRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.updateCustomVerificationEmailTemplateAsync",
	"Comment": "updates an existing custom verification email template.for more information about custom verification email templates, see using custom verification email templates in the amazon sesdeveloper guide.you can execute this operation no more than once per second.",
	"Method": "Future<Void> updateCustomVerificationEmailTemplateAsync(UpdateCustomVerificationEmailTemplateRequest updateCustomVerificationEmailTemplateRequest,Future<Void> updateCustomVerificationEmailTemplateAsync,UpdateCustomVerificationEmailTemplateRequest updateCustomVerificationEmailTemplateRequest,AsyncHandler<UpdateCustomVerificationEmailTemplateRequest, Void> asyncHandler){\r\n    Void result = null;\r\n    try {\r\n        updateCustomVerificationEmailTemplate(updateCustomVerificationEmailTemplateRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(updateCustomVerificationEmailTemplateRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetApnsVoipSandboxChannelResult.withAPNSVoipSandboxChannelResponse",
	"Comment": "apple voip developer push notification service channel definition.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetApnsVoipSandboxChannelResult withAPNSVoipSandboxChannelResponse(APNSVoipSandboxChannelResponse aPNSVoipSandboxChannelResponse){\r\n    this.aPNSVoipSandboxChannelResponse = aPNSVoipSandboxChannelResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointRequest.withEndpointStatus",
	"Comment": "unused.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointRequest withEndpointStatus(String endpointStatus){\r\n    this.endpointStatus = endpointStatus;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SendUsersMessageResponse.clearResultEntries",
	"Comment": "removes all the entries added into result.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendUsersMessageResponse clearResultEntries(){\r\n    this.result = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetGcmChannelRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetGcmChannelRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetImportJobRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetImportJobRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.CreateGrantRequest.setConstraints",
	"Comment": "a structure that you can use to allow certain operations in the grantonly when the desired encryption context is present. for more informationabout encryption context, see encryption context in the aws key management service developerguide.",
	"Method": "void setConstraints(GrantConstraints constraints){\r\n    this.constraints = constraints;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ListKeysResult.isTruncated",
	"Comment": "a flag that indicates whether there are more items in the list. when thisvalue is true, the list in this response is truncated. to get more items,pass the value of the nextmarker element in this response tothe marker parameter in a subsequent request.",
	"Method": "Boolean isTruncated(){\r\n    return truncated;\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.GetMLModelResult.withScoreThresholdLastUpdatedAt",
	"Comment": "the time of the most recent edit to the scorethreshold. thetime is expressed in epoch time.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetMLModelResult withScoreThresholdLastUpdatedAt(java.util.Date scoreThresholdLastUpdatedAt){\r\n    this.scoreThresholdLastUpdatedAt = scoreThresholdLastUpdatedAt;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSChannelResponse.withDefaultAuthenticationMethod",
	"Comment": "the default authentication method used for apns.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSChannelResponse withDefaultAuthenticationMethod(String defaultAuthenticationMethod){\r\n    this.defaultAuthenticationMethod = defaultAuthenticationMethod;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.S3VersionSummary.isLatest",
	"Comment": "returns whether or not this version is the latest version for theassociated object.",
	"Method": "boolean isLatest(){\r\n    return this.isLatest;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobsResponse.getNextToken",
	"Comment": "the string that you use in a subsequent request to get the next page ofresults in a paginated response.",
	"Method": "String getNextToken(){\r\n    return nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.verifyEmailIdentityAsync",
	"Comment": "adds an email address to the list of identities for your amazon sesaccount in the current aws region and attempts to verify it. as a resultof executing this operation, a verification email is sent to thespecified address.you can execute this operation no more than once per second.",
	"Method": "Future<VerifyEmailIdentityResult> verifyEmailIdentityAsync(VerifyEmailIdentityRequest verifyEmailIdentityRequest,Future<VerifyEmailIdentityResult> verifyEmailIdentityAsync,VerifyEmailIdentityRequest verifyEmailIdentityRequest,AsyncHandler<VerifyEmailIdentityRequest, VerifyEmailIdentityResult> asyncHandler){\r\n    return executorService.submit(new Callable<VerifyEmailIdentityResult>() {\r\n        public VerifyEmailIdentityResult call() throws Exception {\r\n            VerifyEmailIdentityResult result = null;\r\n            try {\r\n                result = verifyEmailIdentity(verifyEmailIdentityRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(verifyEmailIdentityRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.verifyEmailIdentityAsync",
	"Comment": "adds an email address to the list of identities for your amazon sesaccount in the current aws region and attempts to verify it. as a resultof executing this operation, a verification email is sent to thespecified address.you can execute this operation no more than once per second.",
	"Method": "Future<VerifyEmailIdentityResult> verifyEmailIdentityAsync(VerifyEmailIdentityRequest verifyEmailIdentityRequest,Future<VerifyEmailIdentityResult> verifyEmailIdentityAsync,VerifyEmailIdentityRequest verifyEmailIdentityRequest,AsyncHandler<VerifyEmailIdentityRequest, VerifyEmailIdentityResult> asyncHandler){\r\n    VerifyEmailIdentityResult result = null;\r\n    try {\r\n        result = verifyEmailIdentity(verifyEmailIdentityRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(verifyEmailIdentityRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SendCustomVerificationEmailRequest.withEmailAddress",
	"Comment": "the email address to verify.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendCustomVerificationEmailRequest withEmailAddress(String emailAddress){\r\n    this.emailAddress = emailAddress;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.serverless.proxy.internal.servlet.AwsLambdaServletContainerHandler.forward",
	"Comment": "fowards a request to the existing framework container. this is called by the awsproxyrequestdispatcher object",
	"Method": "void forward(ContainerRequestType servletRequest,ContainerResponseType servletResponse){\r\n    try {\r\n        handleRequest(servletRequest, (ContainerResponseType) getServletResponse(servletResponse), lambdaContext);\r\n    } catch (Exception e) {\r\n        log.error(\"Could not forward request\", e);\r\n        throw new ServletException(e);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.DescribeStreamProcessorResult.withStatusMessage",
	"Comment": "detailed status message about the stream processor.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DescribeStreamProcessorResult withStatusMessage(String statusMessage){\r\n    this.statusMessage = statusMessage;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.lex.interactionkit.ui.InteractiveVoiceViewAdapter.setSessionAttributes",
	"Comment": "set session attributes, these will be picked for the next dialog transaction.",
	"Method": "void setSessionAttributes(Map<String, String> sessionAttributes){\r\n    this.sessionAttributes = sessionAttributes;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.ListDomainsResult.withNextToken",
	"Comment": "an opaque token indicating that there are more domains than thespecified maxnumberofdomains still available.returns a reference to this object so that method calls can be chained together.",
	"Method": "ListDomainsResult withNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ReceiptRule.isScanEnabled",
	"Comment": "if true, then messages that this receipt rule applies to arescanned for spam and viruses. the default value is false.",
	"Method": "Boolean isScanEnabled(){\r\n    return scanEnabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser.parseListVersionsResponse",
	"Comment": "parses a listversions response xml document from an input stream.",
	"Method": "ListVersionsHandler parseListVersionsResponse(InputStream inputStream,boolean shouldSDKDecodeResponse){\r\n    final ListVersionsHandler handler = new ListVersionsHandler(shouldSDKDecodeResponse);\r\n    parseXmlInputStream(handler, sanitizeXmlDocument(handler, inputStream));\r\n    return handler;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.SelectRequest.setConsistentRead",
	"Comment": "determines whether or not strong consistency should be enforced whendata is read from simpledb. if true, any data previouslywritten to simpledb will be returned. otherwise, results will beconsistent eventually, and the client may not see data that waswritten immediately before your read.",
	"Method": "void setConsistentRead(Boolean consistentRead){\r\n    this.consistentRead = consistentRead;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateEndpointResult.withMessageBody",
	"Comment": "simple message object.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateEndpointResult withMessageBody(MessageBody messageBody){\r\n    this.messageBody = messageBody;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointResponse.withCreationDate",
	"Comment": "the date and time when the endpoint was created, shown in iso 8601format.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointResponse withCreationDate(String creationDate){\r\n    this.creationDate = creationDate;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.ListSpeechSynthesisTasksResult.setNextToken",
	"Comment": "an opaque pagination token returned from the previous list operation inthis request. if present, this indicates where to continue the listing.",
	"Method": "void setNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.AmazonTranscribeAsyncClient.listVocabulariesAsync",
	"Comment": "returns a list of vocabularies that match the specified criteria. if nocriteria are specified, returns the entire list of vocabularies.",
	"Method": "Future<ListVocabulariesResult> listVocabulariesAsync(ListVocabulariesRequest listVocabulariesRequest,Future<ListVocabulariesResult> listVocabulariesAsync,ListVocabulariesRequest listVocabulariesRequest,AsyncHandler<ListVocabulariesRequest, ListVocabulariesResult> asyncHandler){\r\n    return executorService.submit(new Callable<ListVocabulariesResult>() {\r\n        public ListVocabulariesResult call() throws Exception {\r\n            ListVocabulariesResult result = null;\r\n            try {\r\n                result = listVocabularies(listVocabulariesRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(listVocabulariesRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.AmazonTranscribeAsyncClient.listVocabulariesAsync",
	"Comment": "returns a list of vocabularies that match the specified criteria. if nocriteria are specified, returns the entire list of vocabularies.",
	"Method": "Future<ListVocabulariesResult> listVocabulariesAsync(ListVocabulariesRequest listVocabulariesRequest,Future<ListVocabulariesResult> listVocabulariesAsync,ListVocabulariesRequest listVocabulariesRequest,AsyncHandler<ListVocabulariesRequest, ListVocabulariesResult> asyncHandler){\r\n    ListVocabulariesResult result = null;\r\n    try {\r\n        result = listVocabularies(listVocabulariesRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(listVocabulariesRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClient.createReceiptFilter",
	"Comment": "creates a new ip address filter.for information about setting up ip address filters, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "CreateReceiptFilterResult createReceiptFilter(CreateReceiptFilterRequest createReceiptFilterRequest){\r\n    ExecutionContext executionContext = createExecutionContext(createReceiptFilterRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<CreateReceiptFilterRequest> request = null;\r\n    Response<CreateReceiptFilterResult> response = null;\r\n    try {\r\n        request = new CreateReceiptFilterRequestMarshaller().marshall(createReceiptFilterRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        response = invoke(request, new CreateReceiptFilterResultStaxUnmarshaller(), executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetApnsVoipChannelResult.withAPNSVoipChannelResponse",
	"Comment": "apple voip push notification service channel definition.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetApnsVoipChannelResult withAPNSVoipChannelResponse(APNSVoipChannelResponse aPNSVoipChannelResponse){\r\n    this.aPNSVoipChannelResponse = aPNSVoipChannelResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.GetSubscriptionAttributesRequest.getSubscriptionArn",
	"Comment": "the arn of the subscription whose properties you want to get.",
	"Method": "String getSubscriptionArn(){\r\n    return subscriptionArn;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyPartRequest.getUploadId",
	"Comment": "returns the id of the existing, initiated multipart upload with whichthis new part will be associated.",
	"Method": "String getUploadId(){\r\n    return uploadId;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.FromEmailAddressNotVerifiedException.setFromEmailAddress",
	"Comment": "indicates that the from email address associated with the customverification email template is not verified.",
	"Method": "void setFromEmailAddress(String fromEmailAddress){\r\n    this.fromEmailAddress = fromEmailAddress;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.S3ObjectSummary.getLastModified",
	"Comment": "gets the date when, according to amazon s3, this object was lastmodified.",
	"Method": "Date getLastModified(){\r\n    return lastModified;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CreateCustomVerificationEmailTemplateRequest.withTemplateName",
	"Comment": "the name of the custom verification email template.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreateCustomVerificationEmailTemplateRequest withTemplateName(String templateName){\r\n    this.templateName = templateName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SendBulkTemplatedEmailRequest.withDestinations",
	"Comment": "one or more destination objects. all of the recipients in adestination will receive the same version of the email. youcan specify up to 50 destination objects within adestinations array.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendBulkTemplatedEmailRequest withDestinations(BulkEmailDestination destinations,SendBulkTemplatedEmailRequest withDestinations,java.util.Collection<BulkEmailDestination> destinations){\r\n    setDestinations(destinations);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetCampaignsResult.withCampaignsResponse",
	"Comment": "list of available campaigns.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetCampaignsResult withCampaignsResponse(CampaignsResponse campaignsResponse){\r\n    this.campaignsResponse = campaignsResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.DescribeStreamSummaryResult.setStreamDescriptionSummary",
	"Comment": "a streamdescriptionsummary containing information about thestream.",
	"Method": "void setStreamDescriptionSummary(StreamDescriptionSummary streamDescriptionSummary){\r\n    this.streamDescriptionSummary = streamDescriptionSummary;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.SynthesisTask.getLexiconNames",
	"Comment": "list of one or more pronunciation lexicon names you want the service toapply during synthesis. lexicons are applied only if the language of thelexicon is the same as the language of the voice.",
	"Method": "java.util.List<String> getLexiconNames(){\r\n    return lexiconNames;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSAsyncClient.listEndpointsByPlatformApplicationAsync",
	"Comment": "lists the endpoints and endpoint attributes for devices in a supportedpush notification service, such as gcm and apns. the results forlistendpointsbyplatformapplication are paginated and returna limited list of endpoints, up to 100. if additional records areavailable after the first page results, then a nexttoken string will bereturned. to receive the next page, you calllistendpointsbyplatformapplication again using the nexttokenstring received from the previous call. when there are no more records toreturn, nexttoken will be null. for more information, see usingamazon sns mobile push notifications.",
	"Method": "Future<ListEndpointsByPlatformApplicationResult> listEndpointsByPlatformApplicationAsync(ListEndpointsByPlatformApplicationRequest listEndpointsByPlatformApplicationRequest,Future<ListEndpointsByPlatformApplicationResult> listEndpointsByPlatformApplicationAsync,ListEndpointsByPlatformApplicationRequest listEndpointsByPlatformApplicationRequest,AsyncHandler<ListEndpointsByPlatformApplicationRequest, ListEndpointsByPlatformApplicationResult> asyncHandler){\r\n    return executorService.submit(new Callable<ListEndpointsByPlatformApplicationResult>() {\r\n        public ListEndpointsByPlatformApplicationResult call() throws Exception {\r\n            ListEndpointsByPlatformApplicationResult result = null;\r\n            try {\r\n                result = listEndpointsByPlatformApplication(listEndpointsByPlatformApplicationRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(listEndpointsByPlatformApplicationRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSAsyncClient.listEndpointsByPlatformApplicationAsync",
	"Comment": "lists the endpoints and endpoint attributes for devices in a supportedpush notification service, such as gcm and apns. the results forlistendpointsbyplatformapplication are paginated and returna limited list of endpoints, up to 100. if additional records areavailable after the first page results, then a nexttoken string will bereturned. to receive the next page, you calllistendpointsbyplatformapplication again using the nexttokenstring received from the previous call. when there are no more records toreturn, nexttoken will be null. for more information, see usingamazon sns mobile push notifications.",
	"Method": "Future<ListEndpointsByPlatformApplicationResult> listEndpointsByPlatformApplicationAsync(ListEndpointsByPlatformApplicationRequest listEndpointsByPlatformApplicationRequest,Future<ListEndpointsByPlatformApplicationResult> listEndpointsByPlatformApplicationAsync,ListEndpointsByPlatformApplicationRequest listEndpointsByPlatformApplicationRequest,AsyncHandler<ListEndpointsByPlatformApplicationRequest, ListEndpointsByPlatformApplicationResult> asyncHandler){\r\n    ListEndpointsByPlatformApplicationResult result = null;\r\n    try {\r\n        result = listEndpointsByPlatformApplication(listEndpointsByPlatformApplicationRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(listEndpointsByPlatformApplicationRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSVoipSandboxChannelResponse.withVersion",
	"Comment": "version of channelreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSVoipSandboxChannelResponse withVersion(Integer version){\r\n    this.version = version;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.lexrts.model.PostContentResult.withIntentName",
	"Comment": "current user intent that amazon lex is aware of.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PostContentResult withIntentName(String intentName){\r\n    this.intentName = intentName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CreateExportJobRequest.withExportJobRequest",
	"Comment": "export job request.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreateExportJobRequest withExportJobRequest(ExportJobRequest exportJobRequest){\r\n    this.exportJobRequest = exportJobRequest;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignsResponse.setNextToken",
	"Comment": "the string that you use in a subsequent request to get the next page ofresults in a paginated response.",
	"Method": "void setNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketCrossOriginConfigurationRequest.setBucketName",
	"Comment": "sets the name of the bucket whose cross origin configuration is beingset.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.KeyMetadata.withEnabled",
	"Comment": "specifies whether the cmk is enabled. when keystate isenabled this value is true, otherwise it is false.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "KeyMetadata withEnabled(Boolean enabled){\r\n    this.enabled = enabled;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CreateCustomVerificationEmailTemplateRequest.getFromEmailAddress",
	"Comment": "the email address that the custom verification email is sent from.",
	"Method": "String getFromEmailAddress(){\r\n    return fromEmailAddress;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMChannelRequest.withClientId",
	"Comment": "the client id that you obtained from the amazon app distribution portal.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ADMChannelRequest withClientId(String clientId){\r\n    this.clientId = clientId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.PutRecordsResult.setRecords",
	"Comment": "an array of successfully and unsuccessfully processed record results,correlated with the request by natural ordering. a record that issuccessfully added to a stream includes sequencenumber andshardid in the result. a record that fails to be added to astream includes errorcode and errormessage inthe result.",
	"Method": "void setRecords(java.util.Collection<PutRecordsResultEntry> records){\r\n    if (records == null) {\r\n        this.records = null;\r\n        return;\r\n    }\r\n    this.records = new java.util.ArrayList<PutRecordsResultEntry>(records);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.VersionListing.getNextVersionIdMarker",
	"Comment": "gets the version id marker to use in the next listversionsrequest in order to obtain the next page of results. returnsnull if the version listing is not truncated.",
	"Method": "String getNextVersionIdMarker(){\r\n    return nextVersionIdMarker;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSVoipChannelRequest.withCertificate",
	"Comment": "the distribution certificate from apple.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSVoipChannelRequest withCertificate(String certificate){\r\n    this.certificate = certificate;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListPhoneNumbersOptedOutResult.withPhoneNumbers",
	"Comment": "a list of phone numbers that are opted out of receiving sms messages. thelist is paginated, and each page can contain up to 100 phone numbers.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListPhoneNumbersOptedOutResult withPhoneNumbers(String phoneNumbers,ListPhoneNumbersOptedOutResult withPhoneNumbers,java.util.Collection<String> phoneNumbers){\r\n    setPhoneNumbers(phoneNumbers);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.S3CryptoModuleAE.decrypt",
	"Comment": "returns an updated object where the object content input stream contains the decrypted contents.",
	"Method": "S3ObjectWrapper decrypt(S3ObjectWrapper wrapper,ContentCryptoMaterial cekMaterial,long[] range){\r\n    final S3ObjectInputStream objectContent = wrapper.getObjectContent();\r\n    wrapper.setObjectContent(new S3ObjectInputStream(new CipherLiteInputStream(objectContent, cekMaterial.getCipherLite(), DEFAULT_BUFFER_SIZE), objectContent.getHttpRequest()));\r\n    return wrapper;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.EnableEnhancedMonitoringResult.withDesiredShardLevelMetrics",
	"Comment": "represents the list of all the metrics that would be in the enhancedstate after the operation.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EnableEnhancedMonitoringResult withDesiredShardLevelMetrics(String desiredShardLevelMetrics,EnableEnhancedMonitoringResult withDesiredShardLevelMetrics,java.util.Collection<String> desiredShardLevelMetrics){\r\n    setDesiredShardLevelMetrics(desiredShardLevelMetrics);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CustomVerificationEmailTemplateDoesNotExistException.setCustomVerificationEmailTemplateName",
	"Comment": "indicates that the provided custom verification email template does notexist.",
	"Method": "void setCustomVerificationEmailTemplateName(String customVerificationEmailTemplateName){\r\n    this.customVerificationEmailTemplateName = customVerificationEmailTemplateName;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.internal.MultipleFileUploadImpl.getKeyPrefix",
	"Comment": "returns the key prefix of the virtual directory being uploaded to.",
	"Method": "String getKeyPrefix(){\r\n    return keyPrefix;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateAdmChannelRequest.withADMChannelRequest",
	"Comment": "amazon device messaging channel definition.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateAdmChannelRequest withADMChannelRequest(ADMChannelRequest aDMChannelRequest){\r\n    this.aDMChannelRequest = aDMChannelRequest;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DeleteIdentityRequest.getIdentity",
	"Comment": "the identity to be removed from the list of identities for the awsaccount.",
	"Method": "String getIdentity(){\r\n    return identity;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.NumberValidateResponse.withCleansedPhoneNumberE164",
	"Comment": "the cleansed phone number, shown in e.164 format.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "NumberValidateResponse withCleansedPhoneNumberE164(String cleansedPhoneNumberE164){\r\n    this.cleansedPhoneNumberE164 = cleansedPhoneNumberE164;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.RecipientDsnFields.getStatus",
	"Comment": "the status code that indicates what went wrong. this is required by rfc 3464.",
	"Method": "String getStatus(){\r\n    return status;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSClient.getTopicAttributes",
	"Comment": "returns all of the properties of a topic. topic properties returned mightdiffer based on the authorization of the user.",
	"Method": "GetTopicAttributesResult getTopicAttributes(GetTopicAttributesRequest getTopicAttributesRequest,GetTopicAttributesResult getTopicAttributes,String topicArn){\r\n    GetTopicAttributesRequest getTopicAttributesRequest = new GetTopicAttributesRequest();\r\n    getTopicAttributesRequest.setTopicArn(topicArn);\r\n    return getTopicAttributes(getTopicAttributesRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.AddPermissionRequest.withAWSAccountIds",
	"Comment": "the aws account number of the principal who will be given permission. the principal must have anaws account, but does not need to be signed up for amazon sqs. forinformation about locating the aws account identification, see your aws identifiers in the amazon sqs developer guide.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "AddPermissionRequest withAWSAccountIds(String aWSAccountIds,AddPermissionRequest withAWSAccountIds,java.util.Collection<String> aWSAccountIds){\r\n    setAWSAccountIds(aWSAccountIds);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.CreatePlatformEndpointRequest.withToken",
	"Comment": "unique identifier created by the notification service for an app on adevice. the specific name for token will vary, depending on whichnotification service is being used. for example, when using apns as thenotification service, you need the device token. alternatively, whenusing gcm or adm, the device token equivalent is called the registrationid.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreatePlatformEndpointRequest withToken(String token){\r\n    this.token = token;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.LogGroup.withMetricFilterCount",
	"Comment": "the number of metric filters.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "LogGroup withMetricFilterCount(Integer metricFilterCount){\r\n    this.metricFilterCount = metricFilterCount;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.amazonmobileanalytics.monetization.MonetizationEventBuilder.setTransactionId",
	"Comment": "sets the transaction id to use when building the monetization event",
	"Method": "void setTransactionId(String transactionId){\r\n    this.transactionId = transactionId;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ApplicationSettingsResource.getLastModifiedDate",
	"Comment": "the date that the settings were last updated in iso 8601 format.",
	"Method": "String getLastModifiedDate(){\r\n    return lastModifiedDate;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketAclRequest.getBucketName",
	"Comment": "returns the name of the bucket whose acl will be modified by this requestwhen executed.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.UpdateConfigurationSetEventDestinationRequest.setConfigurationSetName",
	"Comment": "the name of the configuration set that contains the event destinationthat you want to update.",
	"Method": "void setConfigurationSetName(String configurationSetName){\r\n    this.configurationSetName = configurationSetName;\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.GetVocabularyResult.getFailureReason",
	"Comment": "if the vocabularystate field is failed, thisfield contains information about why the job failed.",
	"Method": "String getFailureReason(){\r\n    return failureReason;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointBatchItem.getRequestId",
	"Comment": "the unique id for the most recent request to update the endpoint.",
	"Method": "String getRequestId(){\r\n    return requestId;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartListing.getInitiator",
	"Comment": "returns details on the user who initiated the associated multipartupload.",
	"Method": "Owner getInitiator(){\r\n    return initiator;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.DefaultSigningMethodTest.testStandardEndpointWithRegionOverride",
	"Comment": "tests the behavior when using s3 standard endpoint with explicit region.",
	"Method": "void testStandardEndpointWithRegionOverride(){\r\n    final AmazonS3Client s3 = new AmazonS3Client();\r\n    s3.setEndpoint(\"s3.amazonaws.com\", \"s3\", \"us-west-1\");\r\n    assertSigV4WithRegion(s3, \"us-west-1\");\r\n    System.setProperty(\"com.amazonaws.services.s3.enforceV4\", \"true\");\r\n    assertSigV4WithRegion(s3, \"us-west-1\");\r\n    s3.setEndpoint(\"s3.amazonaws.com\", \"s3\", \"eu-west-1\");\r\n    assertSigV4WithRegion(s3, \"eu-west-1\");\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EventStream.setRoleArn",
	"Comment": "the iam role that authorizes amazon pinpoint to publish events to thestream in your account.",
	"Method": "void setRoleArn(String roleArn){\r\n    this.roleArn = roleArn;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetFaceSearchResult.getVideoMetadata",
	"Comment": "information about a video that amazon rekognition analyzed.videometadata is returned in every page of paginatedresponses from a amazon rekognition video operation.",
	"Method": "VideoMetadata getVideoMetadata(){\r\n    return videoMetadata;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.lex.interactionkit.config.InteractionConfig.getAudioEncoding",
	"Comment": "returns current audio encoding, if no encoding is set returns defaultencoding.",
	"Method": "AudioEncoding getAudioEncoding(){\r\n    return audioEncoding;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointBatchItem.withMetrics",
	"Comment": "custom metrics that your app reports to amazon pinpoint.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointBatchItem withMetrics(java.util.Map<String, Double> metrics){\r\n    this.metrics = metrics;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DescribeActiveReceiptRuleSetResult.withMetadata",
	"Comment": "the metadata for the currently active receipt rule set. the metadataconsists of the rule set name and a timestamp of when the rule set wascreated.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DescribeActiveReceiptRuleSetResult withMetadata(ReceiptRuleSetMetadata metadata){\r\n    this.metadata = metadata;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.demo.s3transferutility.Util.fillMap",
	"Comment": "fills in the map with information in the observer so that it can be usedwith a simpleadapter to populate the ui",
	"Method": "void fillMap(Map<String, Object> map,TransferObserver observer,boolean isChecked){\r\n    int progress = (int) ((double) observer.getBytesTransferred() * 100 / observer.getBytesTotal());\r\n    map.put(\"id\", observer.getId());\r\n    map.put(\"checked\", isChecked);\r\n    map.put(\"fileName\", observer.getAbsoluteFilePath());\r\n    map.put(\"progress\", progress);\r\n    map.put(\"bytes\", getBytesString(observer.getBytesTransferred()) + \"/\" + getBytesString(observer.getBytesTotal()));\r\n    map.put(\"state\", observer.getState());\r\n    map.put(\"percentage\", progress + \"%\");\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.DeleteResourcePolicyRequest.getPolicyName",
	"Comment": "the name of the policy to be revoked. this parameter is required.",
	"Method": "String getPolicyName(){\r\n    return policyName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.WriteCampaignRequest.getSegmentVersion",
	"Comment": "the version of the segment to which the campaign sends messages.",
	"Method": "Integer getSegmentVersion(){\r\n    return segmentVersion;\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.Prediction.getPredictedScores",
	"Comment": "provides the raw classification score corresponding to each label.",
	"Method": "java.util.Map<String, Float> getPredictedScores(){\r\n    return predictedScores;\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.TooManyRequestsException.getRetryAfterSeconds",
	"Comment": "the number of seconds the caller should wait before retrying.",
	"Method": "String getRetryAfterSeconds(){\r\n    return retryAfterSeconds;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteCampaignRequest.withCampaignId",
	"Comment": "the unique id of the campaign.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteCampaignRequest withCampaignId(String campaignId){\r\n    this.campaignId = campaignId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetPersonTrackingResult.setVideoMetadata",
	"Comment": "information about a video that amazon rekognition video analyzed.videometadata is returned in every page of paginatedresponses from a amazon rekognition video operation.",
	"Method": "void setVideoMetadata(VideoMetadata videoMetadata){\r\n    this.videoMetadata = videoMetadata;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.pinpoint.PinpointConfiguration.withPostNotificationsInForeground",
	"Comment": "configuration option to post notifications even if the app is in the foreground. by default notifications arenot posted when the app is in the foreground.",
	"Method": "PinpointConfiguration withPostNotificationsInForeground(boolean shouldPostNotificationsInForeground){\r\n    this.shouldPostNotificationsInForeground = shouldPostNotificationsInForeground;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.BouncedRecipientInfo.getRecipientArn",
	"Comment": "this parameter is used only for sending authorization. it is the arn ofthe identity that is associated with the sending authorization policythat permits you to receive email for the recipient of the bounced email.for more information about sending authorization, see the amazon ses developer guide.",
	"Method": "String getRecipientArn(){\r\n    return recipientArn;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartCelebrityRecognitionRequest.withEnablePersonTracking",
	"Comment": "sets the value of the enablepersontracking property for this object.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "StartCelebrityRecognitionRequest withEnablePersonTracking(Boolean enablePersonTracking){\r\n    this.enablePersonTracking = enablePersonTracking;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobResource.withRegisterEndpoints",
	"Comment": "sets whether the endpoints are registered with amazon pinpoint when theyare imported.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ImportJobResource withRegisterEndpoints(Boolean registerEndpoints){\r\n    this.registerEndpoints = registerEndpoints;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.AmazonKinesisClient.listStreams",
	"Comment": "lists your kinesis data streams.the number of streams may be too large to return from a single call toliststreams. you can limit the number of returned streamsusing the limit parameter. if you do not specify a value forthe limit parameter, kinesis data streams uses the defaultlimit, which is currently 10.you can detect if there are more streams available to list by using thehasmorestreams flag from the returned output. if there aremore streams available, you can request more streams by using the name ofthe last stream returned by the liststreams request in theexclusivestartstreamname parameter in a subsequent requestto liststreams. the group of stream names returned by thesubsequent request is then added to the list. you can continue thisprocess until all the stream names have been collected in the list.liststreams has a limit of five transactions per second peraccount.",
	"Method": "ListStreamsResult listStreams(ListStreamsRequest listStreamsRequest,ListStreamsResult listStreams,ListStreamsResult listStreams,String exclusiveStartStreamName,ListStreamsResult listStreams,Integer limit,String exclusiveStartStreamName){\r\n    ListStreamsRequest listStreamsRequest = new ListStreamsRequest();\r\n    listStreamsRequest.setLimit(limit);\r\n    listStreamsRequest.setExclusiveStartStreamName(exclusiveStartStreamName);\r\n    return listStreams(listStreamsRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ConfigurationSetSendingPausedException.setConfigurationSetName",
	"Comment": "the name of the configuration set for which email sending is disabled.",
	"Method": "void setConfigurationSetName(String configurationSetName){\r\n    this.configurationSetName = configurationSetName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentResponse.withSegmentGroups",
	"Comment": "a segment group, which consists of zero or more source segments, plusdimensions that are applied to those source segments.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SegmentResponse withSegmentGroups(SegmentGroupList segmentGroups){\r\n    this.segmentGroups = segmentGroups;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetCampaignsRequest.getToken",
	"Comment": "the nexttoken string returned on a previous page that you use to get thenext page of results in a paginated response.",
	"Method": "String getToken(){\r\n    return token;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ListTemplatesResult.withNextToken",
	"Comment": "a token indicating that there are additional email templates available tobe listed. pass this token to a subsequent call tolisttemplates to retrieve the next 50 email templates.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListTemplatesResult withNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.model.CopyResult.setSourceBucketName",
	"Comment": "sets the name of the bucket containing the source object to be copied.",
	"Method": "void setSourceBucketName(String sourceBucketName){\r\n    this.sourceBucketName = sourceBucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetPersonTrackingResult.withVideoMetadata",
	"Comment": "information about a video that amazon rekognition video analyzed.videometadata is returned in every page of paginatedresponses from a amazon rekognition video operation.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetPersonTrackingResult withVideoMetadata(VideoMetadata videoMetadata){\r\n    this.videoMetadata = videoMetadata;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.GetIdentityVerificationAttributesResult.withVerificationAttributes",
	"Comment": "a map of identities to identityverificationattributes objects.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetIdentityVerificationAttributesResult withVerificationAttributes(java.util.Map<String, IdentityVerificationAttributes> verificationAttributes){\r\n    this.verificationAttributes = verificationAttributes;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListSubscriptionsByTopicRequest.withNextToken",
	"Comment": "token returned by the previous listsubscriptionsbytopicrequest.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListSubscriptionsByTopicRequest withNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideoarchivedmedia.model.TimestampRange.getStartTimestamp",
	"Comment": "the starting time stamp in the range of time stamps for which to returnfragments.",
	"Method": "java.util.Date getStartTimestamp(){\r\n    return startTimestamp;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.GenerateDataKeyRequest.clearEncryptionContextEntries",
	"Comment": "removes all the entries added into encryptioncontext.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GenerateDataKeyRequest clearEncryptionContextEntries(){\r\n    this.encryptionContext = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetApplicationSettingsResult.withApplicationSettingsResource",
	"Comment": "application settings.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetApplicationSettingsResult withApplicationSettingsResource(ApplicationSettingsResource applicationSettingsResource){\r\n    this.applicationSettingsResource = applicationSettingsResource;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.GetMLModelResult.withEndpointInfo",
	"Comment": "the current endpoint of the mlmodelreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetMLModelResult withEndpointInfo(RealtimeEndpointInfo endpointInfo){\r\n    this.endpointInfo = endpointInfo;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectTaggingResult.setVersionId",
	"Comment": "set the version id of the object the tags were retrieved from.",
	"Method": "void setVersionId(String versionId){\r\n    this.versionId = versionId;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.lex.interactionkit.InteractionClient.terminateAudioDecoder",
	"Comment": "terminates active audio decoder and release any allocated audiorecorder system resources.",
	"Method": "void terminateAudioDecoder(){\r\n    try {\r\n        if (lexAudioRecorder != null) {\r\n            lexAudioRecorder.cancel();\r\n        }\r\n    } catch (final Exception e) {\r\n        Log.e(TAG, \"InteractionClient: Bluefront audio decoder error\", e);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.Event.withTimestamp",
	"Comment": "the date and time when the event occurred, in iso 8601 format.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Event withTimestamp(String timestamp){\r\n    this.timestamp = timestamp;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketVersioningConfigurationRequest.withVersioningConfiguration",
	"Comment": "sets the new versioning configuration for the specified bucket andreturns this object, enabling additional method calls to be chainedtogether.",
	"Method": "SetBucketVersioningConfigurationRequest withVersioningConfiguration(BucketVersioningConfiguration versioningConfiguration){\r\n    setVersioningConfiguration(versioningConfiguration);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.Message.isSilentPush",
	"Comment": "indicates if the message should display on the users device. silentpushes can be used for remote configuration and phone home use cases.",
	"Method": "Boolean isSilentPush(){\r\n    return silentPush;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetLabelDetectionResult.withVideoMetadata",
	"Comment": "information about a video that amazon rekognition video analyzed.videometadata is returned in every page of paginatedresponses from a amazon rekognition video operation.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetLabelDetectionResult withVideoMetadata(VideoMetadata videoMetadata){\r\n    this.videoMetadata = videoMetadata;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.UpdateReceiptRuleRequest.getRuleSetName",
	"Comment": "the name of the receipt rule set that the receipt rule belongs to.",
	"Method": "String getRuleSetName(){\r\n    return ruleSetName;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.RemovePermissionRequest.getTopicArn",
	"Comment": "the arn of the topic whose access control policy you wish to modify.",
	"Method": "String getTopicArn(){\r\n    return topicArn;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.MessageConfiguration.withSMSMessage",
	"Comment": "the sms message configuration.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "MessageConfiguration withSMSMessage(CampaignSmsMessage sMSMessage){\r\n    this.sMSMessage = sMSMessage;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SendBulkTemplatedEmailResult.getStatus",
	"Comment": "the unique message identifier returned from thesendbulktemplatedemail action.",
	"Method": "java.util.List<BulkEmailDestinationStatus> getStatus(){\r\n    return status;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ActivitiesResponse.getNextToken",
	"Comment": "the string that you use in a subsequent request to get the next page ofresults in a paginated response.",
	"Method": "String getNextToken(){\r\n    return nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ReorderReceiptRuleSetRequest.withRuleSetName",
	"Comment": "the name of the receipt rule set to reorder.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ReorderReceiptRuleSetRequest withRuleSetName(String ruleSetName){\r\n    this.ruleSetName = ruleSetName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetBucketAnalyticsConfigurationRequest.getId",
	"Comment": "returns the identifier used to represent an analytics configuration.",
	"Method": "String getId(){\r\n    return id;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.ReceiveMessageRequest.setMaxNumberOfMessages",
	"Comment": "the maximum number of messages to return. amazon sqs never returns moremessages than this value but might return fewer. values can be from 1 to10. default is 1.all of the messages are not necessarily returned.",
	"Method": "void setMaxNumberOfMessages(Integer maxNumberOfMessages){\r\n    this.maxNumberOfMessages = maxNumberOfMessages;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.AmazonS3Client.populateSSE_C",
	"Comment": "populates the specified request with the numerous attributes available inssewithcustomerkeyrequest.",
	"Method": "void populateSSE_C(Request<?> request,SSECustomerKey sseKey){\r\n    if (sseKey == null) {\r\n        return;\r\n    }\r\n    addHeaderIfNotNull(request, Headers.SERVER_SIDE_ENCRYPTION_CUSTOMER_ALGORITHM, sseKey.getAlgorithm());\r\n    addHeaderIfNotNull(request, Headers.SERVER_SIDE_ENCRYPTION_CUSTOMER_KEY, sseKey.getKey());\r\n    addHeaderIfNotNull(request, Headers.SERVER_SIDE_ENCRYPTION_CUSTOMER_KEY_MD5, sseKey.getMd5());\r\n    if (sseKey.getKey() != null && sseKey.getMd5() == null) {\r\n        final String encryptionKey_b64 = sseKey.getKey();\r\n        final byte[] encryptionKey = Base64.decode(encryptionKey_b64);\r\n        request.addHeader(Headers.SERVER_SIDE_ENCRYPTION_CUSTOMER_KEY_MD5, Md5Utils.md5AsBase64(encryptionKey));\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMMessage.withConsolidationKey",
	"Comment": "optional. arbitrary string used to indicate multiple messages arelogically the same and that adm is allowed to drop previously enqueuedmessages in favor of this one.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ADMMessage withConsolidationKey(String consolidationKey){\r\n    this.consolidationKey = consolidationKey;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.GetLexiconResult.withLexiconAttributes",
	"Comment": "metadata of the lexicon, including phonetic alphabetic used, languagecode, lexicon arn, number of lexemes defined in the lexicon, and size oflexicon in bytes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetLexiconResult withLexiconAttributes(LexiconAttributes lexiconAttributes){\r\n    this.lexiconAttributes = lexiconAttributes;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListNextBatchOfObjectsRequest.setPreviousObjectListing",
	"Comment": "sets the previous object listing and all the features of the next object listing as well.",
	"Method": "void setPreviousObjectListing(ObjectListing previousObjectListing){\r\n    if (previousObjectListing == null) {\r\n        throw new IllegalArgumentException(\"The parameter previousObjectListing must be specified.\");\r\n    }\r\n    this.previousObjectListing = previousObjectListing;\r\n}"
}, {
	"Path": "org.bouncycastle.asn1.ASN1Integer.isMalformed",
	"Comment": "apply the correct validation for an integer primitive following the ber rules.",
	"Method": "boolean isMalformed(byte[] bytes){\r\n    if (bytes.length > 1) {\r\n        if (bytes[0] == 0 && (bytes[1] & 0x80) == 0) {\r\n            return true;\r\n        }\r\n        if (bytes[0] == (byte) 0xff && (bytes[1] & 0x80) != 0) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ReceiptAction.withWorkmailAction",
	"Comment": "calls amazon workmail and, optionally, publishes a notification to amazonamazon sns.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ReceiptAction withWorkmailAction(WorkmailAction workmailAction){\r\n    this.workmailAction = workmailAction;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointDemographic.getAppVersion",
	"Comment": "the version of the application associated with the endpoint.",
	"Method": "String getAppVersion(){\r\n    return appVersion;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignsResponse.getNextToken",
	"Comment": "the string that you use in a subsequent request to get the next page ofresults in a paginated response.",
	"Method": "String getNextToken(){\r\n    return nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DescribeReceiptRuleRequest.setRuleSetName",
	"Comment": "the name of the receipt rule set that the receipt rule belongs to.",
	"Method": "void setRuleSetName(String ruleSetName){\r\n    this.ruleSetName = ruleSetName;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.model.UploadResult.setVersionId",
	"Comment": "sets the version id of the new object, only present if versioning hasbeen enabled for the bucket.",
	"Method": "void setVersionId(String versionId){\r\n    this.versionId = versionId;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClient.sendCustomVerificationEmail",
	"Comment": "adds an email address to the list of identities for your amazon sesaccount in the current aws region and attempts to verify it. as a resultof executing this operation, a customized verification email is sent tothe specified address.to use this operation, you must first create a custom verification emailtemplate. for more information about creating and using customverification email templates, see using custom verification email templates in the amazon sesdeveloper guide.you can execute this operation no more than once per second.",
	"Method": "SendCustomVerificationEmailResult sendCustomVerificationEmail(SendCustomVerificationEmailRequest sendCustomVerificationEmailRequest){\r\n    ExecutionContext executionContext = createExecutionContext(sendCustomVerificationEmailRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<SendCustomVerificationEmailRequest> request = null;\r\n    Response<SendCustomVerificationEmailResult> response = null;\r\n    try {\r\n        request = new SendCustomVerificationEmailRequestMarshaller().marshall(sendCustomVerificationEmailRequest);\r\n        request.setAWSRequestMetrics(awsRequestMetrics);\r\n        response = invoke(request, new SendCustomVerificationEmailResultStaxUnmarshaller(), executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.demo.s3transferutility.DownloadActivity.beginDownload",
	"Comment": "begins to download the file specified by the key in the bucket.",
	"Method": "void beginDownload(String key){\r\n    File file = new File(Environment.getExternalStorageDirectory().toString() + \"/\" + key);\r\n    TransferObserver observer = transferUtility.download(key, file);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.EnableEnhancedMonitoringResult.getCurrentShardLevelMetrics",
	"Comment": "represents the current state of the metrics that are in the enhancedstate before the operation.",
	"Method": "java.util.List<String> getCurrentShardLevelMetrics(){\r\n    return currentShardLevelMetrics;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.buffered.QueueBufferConfig.validate",
	"Comment": "this method checks the config for validity. if the config is deemed to beinvalid, an informative exception is thrown.",
	"Method": "void validate(){\r\n    if (visibilityTimeoutSeconds == 0) {\r\n        throw new AmazonClientException(\"Visibility timeout value may not be equal to zero \");\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideoarchivedmedia.model.ListFragmentsResult.withFragments",
	"Comment": "a list of fragment numbers that correspond to the time stamp rangeprovided.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListFragmentsResult withFragments(Fragment fragments,ListFragmentsResult withFragments,java.util.Collection<Fragment> fragments){\r\n    setFragments(fragments);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignResponse.setHoldoutPercent",
	"Comment": "the allocated percentage of end users who will not receive messages fromthis campaign.",
	"Method": "void setHoldoutPercent(Integer holdoutPercent){\r\n    this.holdoutPercent = holdoutPercent;\r\n}"
}, {
	"Path": "com.amazonaws.services.mobileanalytics.model.PutEventsRequest.setClientContext",
	"Comment": "the client context including the client id, app title, app version andpackage name.",
	"Method": "void setClientContext(String clientContext){\r\n    this.clientContext = clientContext;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.BaiduMessage.setSmallImageIconUrl",
	"Comment": "the url that points to an image used as the small icon for thenotification which will be used to represent the notification in thestatus bar and content view",
	"Method": "void setSmallImageIconUrl(String smallImageIconUrl){\r\n    this.smallImageIconUrl = smallImageIconUrl;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SMSChannelRequest.withShortCode",
	"Comment": "shortcode registered with phone provider.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SMSChannelRequest withShortCode(String shortCode){\r\n    this.shortCode = shortCode;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListTopicsResult.setNextToken",
	"Comment": "token to pass along to the next listtopics request. thiselement is returned if there are additional topics to retrieve.",
	"Method": "void setNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.PutEventsResult.clearResultsEntries",
	"Comment": "removes all the entries added into results.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PutEventsResult clearResultsEntries(){\r\n    this.results = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DescribeConfigurationSetResult.withReputationOptions",
	"Comment": "an object that represents the reputation settings for the configurationset.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DescribeConfigurationSetResult withReputationOptions(ReputationOptions reputationOptions){\r\n    this.reputationOptions = reputationOptions;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateApnsVoipChannelResult.withAPNSVoipChannelResponse",
	"Comment": "apple voip push notification service channel definition.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateApnsVoipChannelResult withAPNSVoipChannelResponse(APNSVoipChannelResponse aPNSVoipChannelResponse){\r\n    this.aPNSVoipChannelResponse = aPNSVoipChannelResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.DomainMetadataResult.getAttributeNamesSizeBytes",
	"Comment": "the total size of all unique attribute names in the domain, in bytes.",
	"Method": "Long getAttributeNamesSizeBytes(){\r\n    return attributeNamesSizeBytes;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetSmsChannelResult.withSMSChannelResponse",
	"Comment": "sms channel response.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetSmsChannelResult withSMSChannelResponse(SMSChannelResponse sMSChannelResponse){\r\n    this.sMSChannelResponse = sMSChannelResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ObjectMetadata.getVersionId",
	"Comment": "gets the version id of the associated amazon s3 object if available.version ids are only assigned to objects when an object is uploaded to anamazon s3 bucket that has object versioning enabled.",
	"Method": "String getVersionId(){\r\n    return (String) metadata.get(Headers.S3_VERSION_ID);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PutInstructionFileRequest.setAccessControlList",
	"Comment": "sets the optional access control list for the new object. if specified,cannedacl will be ignored.",
	"Method": "void setAccessControlList(AccessControlList accessControlList){\r\n    this.accessControlList = accessControlList;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.UntagResourceRequest.withTagKeys",
	"Comment": "one or more tag keys. specify only the tag keys, not the tag values.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UntagResourceRequest withTagKeys(String tagKeys,UntagResourceRequest withTagKeys,java.util.Collection<String> tagKeys){\r\n    setTagKeys(tagKeys);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ListRetirableGrantsResult.withTruncated",
	"Comment": "a flag that indicates whether there are more items in the list. when thisvalue is true, the list in this response is truncated. to get more items,pass the value of the nextmarker element in this response tothe marker parameter in a subsequent request.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListRetirableGrantsResult withTruncated(Boolean truncated){\r\n    this.truncated = truncated;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ReplicationRule.setDestinationConfig",
	"Comment": "sets the destination configuration for the replication rule.",
	"Method": "void setDestinationConfig(ReplicationDestinationConfig destinationConfig){\r\n    if (destinationConfig == null) {\r\n        throw new IllegalArgumentException(\"Destination cannot be null in the replication rule\");\r\n    }\r\n    this.destinationConfig = destinationConfig;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Result.getContinuationToken",
	"Comment": "gets the optional continuation token. continuation token allows a list tobe continued from a specific point. continuationtoken is provided intruncated list results.",
	"Method": "String getContinuationToken(){\r\n    return continuationToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.EncryptionUtils.encryptRequestUsingMetadata",
	"Comment": "returns an updated request where the metadata contains encryptioninformation and the input stream contains the encrypted object contents.the specified encryption materials will be used to encrypt and decryptdata.",
	"Method": "PutObjectRequest encryptRequestUsingMetadata(PutObjectRequest request,EncryptionMaterials materials,Provider cryptoProvider){\r\n    EncryptionInstruction instruction = EncryptionUtils.generateInstruction(materials, cryptoProvider);\r\n    PutObjectRequest encryptedObjectRequest = EncryptionUtils.encryptRequestUsingInstruction(request, instruction);\r\n    EncryptionUtils.updateMetadataWithEncryptionInstruction(request, instruction);\r\n    return encryptedObjectRequest;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.AmazonPollyClient.listSpeechSynthesisTasks",
	"Comment": "returns a list of speechsynthesistask objects ordered by their creationdate. this operation can filter the tasks by their status, for example,allowing users to list only tasks that are completed.",
	"Method": "ListSpeechSynthesisTasksResult listSpeechSynthesisTasks(ListSpeechSynthesisTasksRequest listSpeechSynthesisTasksRequest){\r\n    ExecutionContext executionContext = createExecutionContext(listSpeechSynthesisTasksRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<ListSpeechSynthesisTasksRequest> request = null;\r\n    Response<ListSpeechSynthesisTasksResult> response = null;\r\n    try {\r\n        awsRequestMetrics.startEvent(Field.RequestMarshallTime);\r\n        try {\r\n            request = new ListSpeechSynthesisTasksRequestMarshaller().marshall(listSpeechSynthesisTasksRequest);\r\n            request.setAWSRequestMetrics(awsRequestMetrics);\r\n        } finally {\r\n            awsRequestMetrics.endEvent(Field.RequestMarshallTime);\r\n        }\r\n        Unmarshaller<ListSpeechSynthesisTasksResult, JsonUnmarshallerContext> unmarshaller = new ListSpeechSynthesisTasksResultJsonUnmarshaller();\r\n        JsonResponseHandler<ListSpeechSynthesisTasksResult> responseHandler = new JsonResponseHandler<ListSpeechSynthesisTasksResult>(unmarshaller);\r\n        response = invoke(request, responseHandler, executionContext);\r\n        return response.getAwsResponse();\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.TreatmentResource.withState",
	"Comment": "the treatment status.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "TreatmentResource withState(CampaignState state){\r\n    this.state = state;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.AttributesResource.withAttributeType",
	"Comment": "the attribute type for the application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "AttributesResource withAttributeType(String attributeType){\r\n    this.attributeType = attributeType;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ReEncryptRequest.getSourceEncryptionContext",
	"Comment": "encryption context used to encrypt and decrypt the data specified in theciphertextblob parameter.",
	"Method": "java.util.Map<String, String> getSourceEncryptionContext(){\r\n    return sourceEncryptionContext;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EventStream.withLastModifiedDate",
	"Comment": "the date the event stream was last updated in iso 8601 format.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EventStream withLastModifiedDate(String lastModifiedDate){\r\n    this.lastModifiedDate = lastModifiedDate;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobsResponse.setNextToken",
	"Comment": "the string that you use in a subsequent request to get the next page ofresults in a paginated response.",
	"Method": "void setNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.ComparedFace.setPose",
	"Comment": "indicates the pose of the face as determined by its pitch, roll, and yaw.",
	"Method": "void setPose(Pose pose){\r\n    this.pose = pose;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.EncryptionUtils.getEncryptedSymmetricKey",
	"Comment": "encrypts a symmetric key using the provided encryption materials andreturns it in raw byte array form.",
	"Method": "byte[] getEncryptedSymmetricKey(SecretKey toBeEncrypted,EncryptionMaterials materials,Provider cryptoProvider){\r\n    Key keyToDoEncryption;\r\n    if (materials.getKeyPair() != null) {\r\n        keyToDoEncryption = materials.getKeyPair().getPublic();\r\n    } else {\r\n        keyToDoEncryption = materials.getSymmetricKey();\r\n    }\r\n    try {\r\n        Cipher cipher;\r\n        byte[] toBeEncryptedBytes = toBeEncrypted.getEncoded();\r\n        if (cryptoProvider != null) {\r\n            cipher = Cipher.getInstance(keyToDoEncryption.getAlgorithm(), cryptoProvider);\r\n        } else {\r\n            cipher = Cipher.getInstance(keyToDoEncryption.getAlgorithm());\r\n        }\r\n        cipher.init(Cipher.ENCRYPT_MODE, keyToDoEncryption);\r\n        return cipher.doFinal(toBeEncryptedBytes);\r\n    } catch (Exception e) {\r\n        throw new AmazonClientException(\"Unable to encrypt symmetric key: \" + e.getMessage(), e);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DescribeConfigurationSetResult.getEventDestinations",
	"Comment": "a list of event destinations associated with the configuration set.",
	"Method": "java.util.List<EventDestination> getEventDestinations(){\r\n    return eventDestinations;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.pinpoint.PinpointConfiguration.getEnableTargeting",
	"Comment": "indicates whether or not endpoint registration for pinpoint is enabled for the sdk.",
	"Method": "boolean getEnableTargeting(){\r\n    return this.enableTargeting;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartLabelDetectionRequest.setVideo",
	"Comment": "the video in which you want to detect labels. the video must be stored inan amazon s3 bucket.",
	"Method": "void setVideo(Video video){\r\n    this.video = video;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SendUsersMessageRequest.withUsers",
	"Comment": "a map that associates user ids with endpointsendconfiguration objects.within an endpointsendconfiguration object, you can tailor the messagefor a user by specifying message overrides or substitutions.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendUsersMessageRequest withUsers(java.util.Map<String, EndpointSendConfiguration> users){\r\n    this.users = users;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetCampaignRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetCampaignRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceDetail.setBeard",
	"Comment": "indicates whether or not the face has a beard, and the confidence levelin the determination.",
	"Method": "void setBeard(Beard beard){\r\n    this.beard = beard;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.MouthOpen.getValue",
	"Comment": "boolean value that indicates whether the mouth on the face is open ornot.",
	"Method": "Boolean getValue(){\r\n    return value;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.buffered.SendQueueBuffer.submitOutboundRequest",
	"Comment": "submits an outbound request for delivery to the queue associated withthis buffer.",
	"Method": "QueueBufferFuture<R, Result> submitOutboundRequest(Object operationLock,OBT[] openOutboundBatchTask,R request,Semaphore inflightOperationBatches,QueueBufferCallback<R, Result> callback){\r\n    QueueBufferFuture<R, Result> theFuture = null;\r\n    try {\r\n        synchronized (operationLock) {\r\n            if (openOutboundBatchTask[0] == null || ((theFuture = openOutboundBatchTask[0].addRequest(request, callback))) == null) {\r\n                OBT obt = (OBT) newOutboundBatchTask(request);\r\n                inflightOperationBatches.acquire();\r\n                openOutboundBatchTask[0] = obt;\r\n                openOutboundBatchTask[0].onCompleted = new Listener<OutboundBatchTask<R, Result>>() {\r\n                    @Override\r\n                    public void invoke(OutboundBatchTask<R, Result> task) {\r\n                        inflightOperationBatches.release();\r\n                    }\r\n                };\r\n                if (log.isTraceEnabled()) {\r\n                    log.trace(\"Queue \" + qUrl + \" created new batch for \" + request.getClass().toString() + \" \" + inflightOperationBatches.availablePermits() + \" free slots remain\");\r\n                }\r\n                theFuture = openOutboundBatchTask[0].addRequest(request, callback);\r\n                executor.execute(openOutboundBatchTask[0]);\r\n                if (null == theFuture) {\r\n                    throw new AmazonClientException(\"Failed to schedule request \" + request + \" for execution\");\r\n                }\r\n            }\r\n        }\r\n    } catch (InterruptedException e) {\r\n        Thread.currentThread().interrupt();\r\n        AmazonClientException toThrow = new AmazonClientException(\"Interrupted while waiting for lock.\");\r\n        toThrow.initCause(e);\r\n        throw toThrow;\r\n    }\r\n    return theFuture;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.buffered.SendQueueBuffer.submitOutboundRequest",
	"Comment": "submits an outbound request for delivery to the queue associated withthis buffer.",
	"Method": "QueueBufferFuture<R, Result> submitOutboundRequest(Object operationLock,OBT[] openOutboundBatchTask,R request,Semaphore inflightOperationBatches,QueueBufferCallback<R, Result> callback){\r\n    inflightOperationBatches.release();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketAccelerateConfiguration.isAccelerateEnabled",
	"Comment": "a convenience method that returns whether the bucket is enabledaccelerate mode.",
	"Method": "boolean isAccelerateEnabled(){\r\n    return BucketAccelerateStatus.Enabled.toString().equals(getStatus());\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.CreateQueueRequest.clearAttributesEntries",
	"Comment": "removes all the entries added into attributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreateQueueRequest clearAttributesEntries(){\r\n    this.attributes = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.lex.interactionkit.internal.audio.LexAudioRecorder.cleanUpUtilityComponents",
	"Comment": "clean up the resources of components used by the audio recorder.",
	"Method": "void cleanUpUtilityComponents(){\r\n    mProducerStream.close();\r\n    Log.v(TAG, \"Released producer stream\");\r\n    mAudioEncoder.close();\r\n    Log.v(TAG, \"Clean up audio encoder\");\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignResponse.getIsPaused",
	"Comment": "indicates whether the campaign is paused. a paused campaign does not sendmessages unless you resume it by setting ispaused to false.",
	"Method": "Boolean getIsPaused(){\r\n    return isPaused;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMMessage.getRawContent",
	"Comment": "the raw json formatted string to be used as the payload. this valueoverrides the message.",
	"Method": "String getRawContent(){\r\n    return rawContent;\r\n}"
}, {
	"Path": "com.amazonaws.services.transcribe.model.ListVocabulariesResult.setVocabularies",
	"Comment": "a list of objects that describe the vocabularies that match the searchcriteria in the request.",
	"Method": "void setVocabularies(java.util.Collection<VocabularyInfo> vocabularies){\r\n    if (vocabularies == null) {\r\n        this.vocabularies = null;\r\n        return;\r\n    }\r\n    this.vocabularies = new java.util.ArrayList<VocabularyInfo>(vocabularies);\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.SynthesizeSpeechRequest.withSpeechMarkTypes",
	"Comment": "the type of speech marks returned for the input text.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SynthesizeSpeechRequest withSpeechMarkTypes(String speechMarkTypes,SynthesizeSpeechRequest withSpeechMarkTypes,java.util.Collection<String> speechMarkTypes){\r\n    setSpeechMarkTypes(speechMarkTypes);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.GetMLModelResult.setCreatedAt",
	"Comment": "the time that the mlmodel was created. the time is expressedin epoch time.",
	"Method": "void setCreatedAt(java.util.Date createdAt){\r\n    this.createdAt = createdAt;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyPartRequest.withSourceBucketName",
	"Comment": "sets the name of the bucket containing the source object to be copied.",
	"Method": "CopyPartRequest withSourceBucketName(String sourceBucketName){\r\n    this.sourceBucketName = sourceBucketName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.S3VersionSummary.setBucketName",
	"Comment": "sets the name of the amazon s3 bucket in which this version is stored.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.GetCustomVerificationEmailTemplateResult.withTemplateContent",
	"Comment": "the content of the custom verification email.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetCustomVerificationEmailTemplateResult withTemplateContent(String templateContent){\r\n    this.templateContent = templateContent;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.serverless.proxy.internal.servlet.AwsLambdaServletContainerHandler.include",
	"Comment": "includes a request to the existing framework container. this is called by the awsproxyrequestdispatcher object",
	"Method": "void include(ContainerRequestType servletRequest,ContainerResponseType servletResponse){\r\n    try {\r\n        handleRequest(servletRequest, (ContainerResponseType) getServletResponse(servletResponse), lambdaContext);\r\n    } catch (Exception e) {\r\n        log.error(\"Could not include request\", e);\r\n        throw new ServletException(e);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.GetSendStatisticsResult.setSendDataPoints",
	"Comment": "a list of data points, each of which represents 15 minutes of activity.",
	"Method": "void setSendDataPoints(java.util.Collection<SendDataPoint> sendDataPoints){\r\n    if (sendDataPoints == null) {\r\n        this.sendDataPoints = null;\r\n        return;\r\n    }\r\n    this.sendDataPoints = new java.util.ArrayList<SendDataPoint>(sendDataPoints);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetSegmentExportJobsRequest.withToken",
	"Comment": "the nexttoken string returned on a previous page that you use to get thenext page of results in a paginated response.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetSegmentExportJobsRequest withToken(String token){\r\n    this.token = token;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.PersonDetail.withFace",
	"Comment": "face details for the detected person.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PersonDetail withFace(FaceDetail face){\r\n    this.face = face;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Request.setPrefix",
	"Comment": "sets the optional prefix parameter, restricting the response to keys thatbegin with the specified prefix.",
	"Method": "void setPrefix(String prefix){\r\n    this.prefix = prefix;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetBucketAnalyticsConfigurationRequest.withId",
	"Comment": "sets the identifier used to represent an analytics configurationand returns this object for method chaining.",
	"Method": "GetBucketAnalyticsConfigurationRequest withId(String id){\r\n    setId(id);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.PredictRequest.clearRecordEntries",
	"Comment": "removes all the entries added into record.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PredictRequest clearRecordEntries(){\r\n    this.record = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DefaultMessage.withBody",
	"Comment": "the message body of the notification, the email body or the text message.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DefaultMessage withBody(String body){\r\n    this.body = body;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointBatchItem.withId",
	"Comment": "the unique id for the endpoint in the batch.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointBatchItem withId(String id){\r\n    this.id = id;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.Template.getTextPart",
	"Comment": "the email body that will be visible to recipients whose email clients donot display html.",
	"Method": "String getTextPart(){\r\n    return textPart;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateCampaignResult.withCampaignResponse",
	"Comment": "campaign definitionreturns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateCampaignResult withCampaignResponse(CampaignResponse campaignResponse){\r\n    this.campaignResponse = campaignResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SendUsersMessageResponse.getApplicationId",
	"Comment": "the unique id of the amazon pinpoint project used to send the message.",
	"Method": "String getApplicationId(){\r\n    return applicationId;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.internal.MultipleFileDownloadImpl.getKeyPrefix",
	"Comment": "returns the key prefix of the virtual directory being downloaded.",
	"Method": "String getKeyPrefix(){\r\n    return keyPrefix;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.UntagResourceRequest.getTagKeys",
	"Comment": "one or more tag keys. specify only the tag keys, not the tag values.",
	"Method": "java.util.List<String> getTagKeys(){\r\n    return tagKeys;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DeleteVerifiedEmailAddressRequest.setEmailAddress",
	"Comment": "an email address to be removed from the list of verified addresses.",
	"Method": "void setEmailAddress(String emailAddress){\r\n    this.emailAddress = emailAddress;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.SendCustomVerificationEmailResult.getMessageId",
	"Comment": "the unique message identifier returned from thesendcustomverificationemail operation.",
	"Method": "String getMessageId(){\r\n    return messageId;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignResponse.withHoldoutPercent",
	"Comment": "the allocated percentage of end users who will not receive messages fromthis campaign.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CampaignResponse withHoldoutPercent(Integer holdoutPercent){\r\n    this.holdoutPercent = holdoutPercent;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.amazonmobileanalytics.monetization.AmazonMonetizationEventBuilder.create",
	"Comment": "create a amazonmonetizationeventbuilder with the specified event client",
	"Method": "AmazonMonetizationEventBuilder create(EventClient eventClient){\r\n    return new AmazonMonetizationEventBuilder(eventClient);\r\n}"
}, {
	"Path": "com.amazonaws.services.mobileanalytics.model.PutEventsRequest.withClientContextEncoding",
	"Comment": "the encoding used for the client context.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "PutEventsRequest withClientContextEncoding(String clientContextEncoding){\r\n    this.clientContextEncoding = clientContextEncoding;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketLoggingConfigurationRequest.withBucketName",
	"Comment": "sets the name of the bucket whose logging configuration is being set andreturns this object, enabling additional method calls to be chainedtogether.",
	"Method": "SetBucketLoggingConfigurationRequest withBucketName(String bucketName){\r\n    setBucketName(bucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketVersioningConfigurationRequest.setVersioningConfiguration",
	"Comment": "sets the new versioning configuration for the specified bucket.",
	"Method": "void setVersioningConfiguration(BucketVersioningConfiguration versioningConfiguration){\r\n    this.versioningConfiguration = versioningConfiguration;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.InitiateMultipartUploadResult.setKey",
	"Comment": "sets the object key for which the multipart upload was initiated.",
	"Method": "void setKey(String key){\r\n    this.key = key;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DirectMessageConfiguration.getADMMessage",
	"Comment": "the message to adm channels. overrides the default push notificationmessage.",
	"Method": "ADMMessage getADMMessage(){\r\n    return aDMMessage;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobResponse.setTotalProcessed",
	"Comment": "the number of endpoints that were processed by the import job.",
	"Method": "void setTotalProcessed(Integer totalProcessed){\r\n    this.totalProcessed = totalProcessed;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.ListPlatformApplicationsRequest.setNextToken",
	"Comment": "nexttoken string is used when calling listplatformapplications action toretrieve additional records that are available after the first pageresults.",
	"Method": "void setNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ReEncryptRequest.getGrantTokens",
	"Comment": "a list of grant tokens.for more information, see grant tokens in the aws key management service developerguide.",
	"Method": "java.util.List<String> getGrantTokens(){\r\n    return grantTokens;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.pinpoint.analytics.monetization.VirtualMonetizationEventBuilder.create",
	"Comment": "create a virtualmonetizationeventbuilder with the specified event client",
	"Method": "VirtualMonetizationEventBuilder create(AnalyticsClient analyticsClient){\r\n    return new VirtualMonetizationEventBuilder(analyticsClient);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetEmailChannelRequest.withApplicationId",
	"Comment": "the unique id of your amazon pinpoint application.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "GetEmailChannelRequest withApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.KeyMetadata.setDeletionDate",
	"Comment": "the date and time after which aws kms deletes the cmk. this value ispresent only when keystate is pendingdeletion,otherwise this value is omitted.",
	"Method": "void setDeletionDate(java.util.Date deletionDate){\r\n    this.deletionDate = deletionDate;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.SearchFacesByImageResult.withSearchedFaceBoundingBox",
	"Comment": "the bounding box around the face in the input image that amazonrekognition used for the search.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SearchFacesByImageResult withSearchedFaceBoundingBox(BoundingBox searchedFaceBoundingBox){\r\n    this.searchedFaceBoundingBox = searchedFaceBoundingBox;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.setReceiptRulePositionAsync",
	"Comment": "sets the position of the specified receipt rule in the receipt rule set.for information about managing receipt rules, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "Future<SetReceiptRulePositionResult> setReceiptRulePositionAsync(SetReceiptRulePositionRequest setReceiptRulePositionRequest,Future<SetReceiptRulePositionResult> setReceiptRulePositionAsync,SetReceiptRulePositionRequest setReceiptRulePositionRequest,AsyncHandler<SetReceiptRulePositionRequest, SetReceiptRulePositionResult> asyncHandler){\r\n    return executorService.submit(new Callable<SetReceiptRulePositionResult>() {\r\n        public SetReceiptRulePositionResult call() throws Exception {\r\n            SetReceiptRulePositionResult result = null;\r\n            try {\r\n                result = setReceiptRulePosition(setReceiptRulePositionRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(setReceiptRulePositionRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient.setReceiptRulePositionAsync",
	"Comment": "sets the position of the specified receipt rule in the receipt rule set.for information about managing receipt rules, see the amazon ses developer guide.you can execute this operation no more than once per second.",
	"Method": "Future<SetReceiptRulePositionResult> setReceiptRulePositionAsync(SetReceiptRulePositionRequest setReceiptRulePositionRequest,Future<SetReceiptRulePositionResult> setReceiptRulePositionAsync,SetReceiptRulePositionRequest setReceiptRulePositionRequest,AsyncHandler<SetReceiptRulePositionRequest, SetReceiptRulePositionResult> asyncHandler){\r\n    SetReceiptRulePositionResult result = null;\r\n    try {\r\n        result = setReceiptRulePosition(setReceiptRulePositionRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(setReceiptRulePositionRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.DisableEnhancedMonitoringResult.setDesiredShardLevelMetrics",
	"Comment": "represents the list of all the metrics that would be in the enhancedstate after the operation.",
	"Method": "void setDesiredShardLevelMetrics(java.util.Collection<String> desiredShardLevelMetrics){\r\n    if (desiredShardLevelMetrics == null) {\r\n        this.desiredShardLevelMetrics = null;\r\n        return;\r\n    }\r\n    this.desiredShardLevelMetrics = new java.util.ArrayList<String>(desiredShardLevelMetrics);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.AbstractPutObjectRequest.withKey",
	"Comment": "sets the key under which to store the new object. returns this object,enabling additional method calls to be chained together.",
	"Method": "T withKey(String key){\r\n    setKey(key);\r\n    @SuppressWarnings(\"unchecked\")\r\n    final T t = (T) this;\r\n    return t;\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateSecurityProfileRequest.getExpectedVersion",
	"Comment": "the expected version of the security profile. a new version is generatedwhenever the security profile is updated. if you specify a value that isdifferent than the actual version, aversionconflictexception is thrown.",
	"Method": "Long getExpectedVersion(){\r\n    return expectedVersion;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteApnsChannelResult.withAPNSChannelResponse",
	"Comment": "apple distribution push notification service channel definition.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteApnsChannelResult withAPNSChannelResponse(APNSChannelResponse aPNSChannelResponse){\r\n    this.aPNSChannelResponse = aPNSChannelResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSAsyncClient.setPlatformApplicationAttributesAsync",
	"Comment": "sets the attributes of the platform application object for the supportedpush notification services, such as apns and gcm. for more information,see usingamazon sns mobile push notifications. for information on configuringattributes for message delivery status, see usingamazon sns application attributes for message delivery status.",
	"Method": "Future<Void> setPlatformApplicationAttributesAsync(SetPlatformApplicationAttributesRequest setPlatformApplicationAttributesRequest,Future<Void> setPlatformApplicationAttributesAsync,SetPlatformApplicationAttributesRequest setPlatformApplicationAttributesRequest,AsyncHandler<SetPlatformApplicationAttributesRequest, Void> asyncHandler){\r\n    return executorService.submit(new Callable<Void>() {\r\n        public Void call() throws Exception {\r\n            Void result = null;\r\n            try {\r\n                setPlatformApplicationAttributes(setPlatformApplicationAttributesRequest);\r\n            } catch (Exception ex) {\r\n                asyncHandler.onError(ex);\r\n                throw ex;\r\n            }\r\n            asyncHandler.onSuccess(setPlatformApplicationAttributesRequest, result);\r\n            return result;\r\n        }\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.AmazonSNSAsyncClient.setPlatformApplicationAttributesAsync",
	"Comment": "sets the attributes of the platform application object for the supportedpush notification services, such as apns and gcm. for more information,see usingamazon sns mobile push notifications. for information on configuringattributes for message delivery status, see usingamazon sns application attributes for message delivery status.",
	"Method": "Future<Void> setPlatformApplicationAttributesAsync(SetPlatformApplicationAttributesRequest setPlatformApplicationAttributesRequest,Future<Void> setPlatformApplicationAttributesAsync,SetPlatformApplicationAttributesRequest setPlatformApplicationAttributesRequest,AsyncHandler<SetPlatformApplicationAttributesRequest, Void> asyncHandler){\r\n    Void result = null;\r\n    try {\r\n        setPlatformApplicationAttributes(setPlatformApplicationAttributesRequest);\r\n    } catch (Exception ex) {\r\n        asyncHandler.onError(ex);\r\n        throw ex;\r\n    }\r\n    asyncHandler.onSuccess(setPlatformApplicationAttributesRequest, result);\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateAttributesRequest.getBlacklist",
	"Comment": "the glob wildcard for removing the attributes in the application",
	"Method": "java.util.List<String> getBlacklist(){\r\n    return blacklist;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SMSMessage.withBody",
	"Comment": "the body of the sms message.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SMSMessage withBody(String body){\r\n    this.body = body;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ExportJobResponse.setApplicationId",
	"Comment": "the unique id of the application associated with the export job.",
	"Method": "void setApplicationId(String applicationId){\r\n    this.applicationId = applicationId;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.ListConfigurationSetsRequest.withMaxItems",
	"Comment": "the number of configuration sets to return.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListConfigurationSetsRequest withMaxItems(Integer maxItems){\r\n    this.maxItems = maxItems;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.CreatePlatformEndpointRequest.withPlatformApplicationArn",
	"Comment": "platformapplicationarn returned from createplatformapplication is used tocreate a an endpoint.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreatePlatformEndpointRequest withPlatformApplicationArn(String platformApplicationArn){\r\n    this.platformApplicationArn = platformApplicationArn;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.iotdata.model.UpdateThingShadowRequest.withPayload",
	"Comment": "the state information, in json format.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "UpdateThingShadowRequest withPayload(java.nio.ByteBuffer payload){\r\n    this.payload = payload;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.SynthesizeSpeechRequest.withLexiconNames",
	"Comment": "list of one or more pronunciation lexicon names you want the service toapply during synthesis. lexicons are applied only if the language of thelexicon is the same as the language of the voice. for information aboutstoring lexicons, see putlexicon.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SynthesizeSpeechRequest withLexiconNames(String lexiconNames,SynthesizeSpeechRequest withLexiconNames,java.util.Collection<String> lexiconNames){\r\n    setLexiconNames(lexiconNames);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMChannelResponse.withEnabled",
	"Comment": "indicates whether or not the channel is enabled for sending messages.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ADMChannelResponse withEnabled(Boolean enabled){\r\n    this.enabled = enabled;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CompleteMultipartUploadRequest.withBucketName",
	"Comment": "sets the name of the bucket containing the multipart upload to complete,and returns this updated completemultipartuploadrequest so thatadditional method calls can be chained together.",
	"Method": "CompleteMultipartUploadRequest withBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DescribeConfigurationSetRequest.withConfigurationSetAttributeNames",
	"Comment": "a list of configuration set attributes to return.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DescribeConfigurationSetRequest withConfigurationSetAttributeNames(String configurationSetAttributeNames,DescribeConfigurationSetRequest withConfigurationSetAttributeNames,java.util.Collection<String> configurationSetAttributeNames){\r\n    setConfigurationSetAttributeNames(configurationSetAttributeNames);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.AmazonS3Exception.getErrorResponseXml",
	"Comment": "returns the error xml received in the http response or null if theexception is constructed from the headers.",
	"Method": "String getErrorResponseXml(){\r\n    return errorResponseXml;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.pinpoint.analytics.monetization.AmazonMonetizationEventBuilder.withProductId",
	"Comment": "sets the product identifier field of the item being purchased",
	"Method": "AmazonMonetizationEventBuilder withProductId(String productId){\r\n    setProductId(productId);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectRequest.setKey",
	"Comment": "sets the key under which the object to be downloaded is stored.",
	"Method": "void setKey(String key){\r\n    s3ObjectIdBuilder.setKey(key);\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CreateConfigurationSetEventDestinationRequest.withEventDestination",
	"Comment": "an object that describes the aws service that email sending eventinformation will be published to.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreateConfigurationSetEventDestinationRequest withEventDestination(EventDestination eventDestination){\r\n    this.eventDestination = eventDestination;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ListKeysResult.withTruncated",
	"Comment": "a flag that indicates whether there are more items in the list. when thisvalue is true, the list in this response is truncated. to get more items,pass the value of the nextmarker element in this response tothe marker parameter in a subsequent request.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "ListKeysResult withTruncated(Boolean truncated){\r\n    this.truncated = truncated;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.CloudWatchDestination.getDimensionConfigurations",
	"Comment": "a list of dimensions upon which to categorize your emails when youpublish email sending events to amazon cloudwatch.",
	"Method": "java.util.List<CloudWatchDimensionConfiguration> getDimensionConfigurations(){\r\n    return dimensionConfigurations;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointanalytics.AmazonPinpointAnalyticsClient.putEvents",
	"Comment": "the putevents operation records one or more events. you can have up to1,500 unique custom events per app, any combination of up to 40attributes and metrics per custom event, and any number of attribute ormetric values.",
	"Method": "void putEvents(PutEventsRequest putEventsRequest){\r\n    ExecutionContext executionContext = createExecutionContext(putEventsRequest);\r\n    AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();\r\n    awsRequestMetrics.startEvent(Field.ClientExecuteTime);\r\n    Request<PutEventsRequest> request = null;\r\n    Response<Void> response = null;\r\n    try {\r\n        awsRequestMetrics.startEvent(Field.RequestMarshallTime);\r\n        try {\r\n            request = new PutEventsRequestMarshaller().marshall(putEventsRequest);\r\n            request.setAWSRequestMetrics(awsRequestMetrics);\r\n        } finally {\r\n            awsRequestMetrics.endEvent(Field.RequestMarshallTime);\r\n        }\r\n        JsonResponseHandler<Void> responseHandler = new JsonResponseHandler<Void>(null);\r\n        invoke(request, responseHandler, executionContext);\r\n    } finally {\r\n        awsRequestMetrics.endEvent(Field.ClientExecuteTime);\r\n        endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentDimensions.clearUserAttributesEntries",
	"Comment": "removes all the entries added into userattributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SegmentDimensions clearUserAttributesEntries(){\r\n    this.userAttributes = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.FilteredLogEvent.withEventId",
	"Comment": "the id of the event.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "FilteredLogEvent withEventId(String eventId){\r\n    this.eventId = eventId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSMessage.setBadge",
	"Comment": "include this key when you want the system to modify the badge of your appicon. if this key is not included in the dictionary, the badge is notchanged. to remove the badge, set the value of this key to 0.",
	"Method": "void setBadge(Integer badge){\r\n    this.badge = badge;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.GetPlatformApplicationAttributesRequest.setPlatformApplicationArn",
	"Comment": "platformapplicationarn for getplatformapplicationattributesinput.",
	"Method": "void setPlatformApplicationArn(String platformApplicationArn){\r\n    this.platformApplicationArn = platformApplicationArn;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.GetKeyRotationStatusResult.setKeyRotationEnabled",
	"Comment": "a boolean value that specifies whether key rotation is enabled.",
	"Method": "void setKeyRotationEnabled(Boolean keyRotationEnabled){\r\n    this.keyRotationEnabled = keyRotationEnabled;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transferutility.TransferUtility.cancelAllWithType",
	"Comment": "sets all transfers which have the given type to be canceled. note thetransferstate must be transferstate.canceled before the transfer isguaranteed to have stopped, and can be safely deleted",
	"Method": "void cancelAllWithType(TransferType type){\r\n    Cursor c = null;\r\n    try {\r\n        c = dbUtil.queryAllTransfersWithType(type);\r\n        while (c.moveToNext()) {\r\n            final int id = c.getInt(c.getColumnIndexOrThrow(TransferTable.COLUMN_ID));\r\n            cancel(id);\r\n        }\r\n    } finally {\r\n        if (c != null) {\r\n            c.close();\r\n        }\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.AbstractPutObjectRequest.getSSEAwsKeyManagementParams",
	"Comment": "returns the aws key management system parameters used to encrypt theobject on server side.",
	"Method": "SSEAwsKeyManagementParams getSSEAwsKeyManagementParams(){\r\n    return sseAwsKeyManagementParams;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.MessageAttributeValue.setStringValue",
	"Comment": "strings are unicode with utf8 binary encoding. for a list of code values,see ascii printable characters.",
	"Method": "void setStringValue(String stringValue){\r\n    this.stringValue = stringValue;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobResource.setDefineSegment",
	"Comment": "sets whether the endpoints create a segment when they are imported.",
	"Method": "void setDefineSegment(Boolean defineSegment){\r\n    this.defineSegment = defineSegment;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.EncryptionMaterials.getKeyPair",
	"Comment": "returns the key pair stored in this encryptionmaterials object.",
	"Method": "KeyPair getKeyPair(){\r\n    return this.keyPair;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.lex.interactionkit.ui.InteractiveVoiceViewAdapter.setVoiceListener",
	"Comment": "assign a listener for the voice interactions with the amazon lex bot.",
	"Method": "void setVoiceListener(InteractiveVoiceView.InteractiveVoiceListener voiceListener){\r\n    this.voiceListener = voiceListener;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.Record.setApproximateArrivalTimestamp",
	"Comment": "the approximate time that the record was inserted into the stream.",
	"Method": "void setApproximateArrivalTimestamp(java.util.Date approximateArrivalTimestamp){\r\n    this.approximateArrivalTimestamp = approximateArrivalTimestamp;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.PlatformApplication.setPlatformApplicationArn",
	"Comment": "platformapplicationarn for platform application object.",
	"Method": "void setPlatformApplicationArn(String platformApplicationArn){\r\n    this.platformApplicationArn = platformApplicationArn;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Mustache.getValue",
	"Comment": "boolean value that indicates whether the face has mustache or not.",
	"Method": "Boolean getValue(){\r\n    return value;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.AesGcm.getTagLengthInBits",
	"Comment": "used to explicitly record the tag length in s3 for interoperability withother services.",
	"Method": "int getTagLengthInBits(){\r\n    return DEFAULT_TAG_LENGTH_IN_BITS;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.GetAttributesRequest.setConsistentRead",
	"Comment": "determines whether or not strong consistency should be enforced whendata is read from simpledb. if true, any data previouslywritten to simpledb will be returned. otherwise, results will beconsistent eventually, and the client may not see data that waswritten immediately before your read.",
	"Method": "void setConsistentRead(Boolean consistentRead){\r\n    this.consistentRead = consistentRead;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSSandboxChannelResponse.withId",
	"Comment": "channel id. not used, only for backwards compatibility.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSSandboxChannelResponse withId(String id){\r\n    this.id = id;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DescribeConfigurationSetResult.getTrackingOptions",
	"Comment": "the name of the custom open and click tracking domain associated with theconfiguration set.",
	"Method": "TrackingOptions getTrackingOptions(){\r\n    return trackingOptions;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.InvalidRenderingParameterException.getTemplateName",
	"Comment": "returns the value of the templatename property for this object.",
	"Method": "String getTemplateName(){\r\n    return templateName;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.s3.transfermanager.TransferManager.setConfiguration",
	"Comment": "sets the configuration which specifies how thistransfermanager processes requests.",
	"Method": "void setConfiguration(TransferManagerConfiguration configuration){\r\n    this.configuration = configuration;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.SendMessageBatchResult.getFailed",
	"Comment": "a list of batchresulterrorentry items with the error detail abouteach message that could not be enqueued.",
	"Method": "java.util.List<BatchResultErrorEntry> getFailed(){\r\n    return failed;\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.Prediction.cleardetailsEntries",
	"Comment": "removes all the entries added into details.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "Prediction cleardetailsEntries(){\r\n    this.details = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SendUsersMessagesRequest.withSendUsersMessageRequest",
	"Comment": "send message request.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "SendUsersMessagesRequest withSendUsersMessageRequest(SendUsersMessageRequest sendUsersMessageRequest){\r\n    this.sendUsersMessageRequest = sendUsersMessageRequest;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.MessageAttributeValue.getBinaryValue",
	"Comment": "binary type attributes can store any binary data, for example, compresseddata, encrypted data, or images.",
	"Method": "java.nio.ByteBuffer getBinaryValue(){\r\n    return binaryValue;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpleemail.model.DeleteConfigurationSetTrackingOptionsRequest.withConfigurationSetName",
	"Comment": "the name of the configuration set from which you want to delete thetracking options.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteConfigurationSetTrackingOptionsRequest withConfigurationSetName(String configurationSetName){\r\n    this.configurationSetName = configurationSetName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSVoipSandboxChannelRequest.withBundleId",
	"Comment": "the bundle id used for apns tokens.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "APNSVoipSandboxChannelRequest withBundleId(String bundleId){\r\n    this.bundleId = bundleId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointResponse.clearMetricsEntries",
	"Comment": "removes all the entries added into metrics.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "EndpointResponse clearMetricsEntries(){\r\n    this.metrics = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.getDestinationKey",
	"Comment": "gets the destination bucket key under which the new, copied object willbe stored.",
	"Method": "String getDestinationKey(){\r\n    return destinationKey;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.amazonmobileanalytics.internal.delivery.DefaultDeliveryClient.getNextBatchToSubmit",
	"Comment": "gets the next array of json objects to submit, up to the max number ofevents these events will be removed from the iterator",
	"Method": "JSONArray getNextBatchToSubmit(EventIterator iter,long maxRequestSize){\r\n    if (iter == null) {\r\n        throw new IllegalArgumentException(\"Iterator cannot be null\");\r\n    }\r\n    long currentRequestSize = 0;\r\n    long eventLength = (iter.peek() != null) ? iter.peek().length() : 0L;\r\n    JSONArray eventArray = new JSONArray();\r\n    while (currentRequestSize + eventLength <= maxRequestSize && iter.hasNext()) {\r\n        currentRequestSize += eventLength;\r\n        eventLength = (iter.peek() != null) ? iter.peek().length() : 0L;\r\n        eventArray.put(new JSONObject(iter.next()));\r\n    }\r\n    return eventArray;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceDetail.setMouthOpen",
	"Comment": "indicates whether or not the mouth on the face is open, and theconfidence level in the determination.",
	"Method": "void setMouthOpen(MouthOpen mouthOpen){\r\n    this.mouthOpen = mouthOpen;\r\n}"
}, {
	"Path": "com.amazonaws.services.simpledb.model.ListDomainsRequest.setMaxNumberOfDomains",
	"Comment": "the maximum number of domain names you want returned. the range is 1to 100. the default setting is 100.",
	"Method": "void setMaxNumberOfDomains(Integer maxNumberOfDomains){\r\n    this.maxNumberOfDomains = maxNumberOfDomains;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.CompareFacesResult.withSourceImageFace",
	"Comment": "the face in the source image that was used for comparison.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CompareFacesResult withSourceImageFace(ComparedSourceImageFace sourceImageFace){\r\n    this.sourceImageFace = sourceImageFace;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Section.getStartTimestamp",
	"Comment": "returns the value of the starttimestamp property for this object.",
	"Method": "Long getStartTimestamp(){\r\n    return startTimestamp;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.SearchFacesResult.setFaceMatches",
	"Comment": "an array of faces that matched the input face, along with the confidencein the match.",
	"Method": "void setFaceMatches(java.util.Collection<FaceMatch> faceMatches){\r\n    if (faceMatches == null) {\r\n        this.faceMatches = null;\r\n        return;\r\n    }\r\n    this.faceMatches = new java.util.ArrayList<FaceMatch>(faceMatches);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteApnsVoipChannelResult.withAPNSVoipChannelResponse",
	"Comment": "apple voip push notification service channel definition.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DeleteApnsVoipChannelResult withAPNSVoipChannelResponse(APNSVoipChannelResponse aPNSVoipChannelResponse){\r\n    this.aPNSVoipChannelResponse = aPNSVoipChannelResponse;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DirectMessageConfiguration.setBaiduMessage",
	"Comment": "the message to baidu gcm channels. overrides the default pushnotification message.",
	"Method": "void setBaiduMessage(BaiduMessage baiduMessage){\r\n    this.baiduMessage = baiduMessage;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.CelebrityRecognition.withTimestamp",
	"Comment": "the time, in milliseconds from the start of the video, that the celebritywas recognized.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CelebrityRecognition withTimestamp(Long timestamp){\r\n    this.timestamp = timestamp;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentsResponse.setNextToken",
	"Comment": "an identifier used to retrieve the next page of results. the token isnull if no additional pages exist.",
	"Method": "void setNextToken(String nextToken){\r\n    this.nextToken = nextToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideoarchivedmedia.model.Fragment.setServerTimestamp",
	"Comment": "the time stamp from the aws server corresponding to the fragment.",
	"Method": "void setServerTimestamp(java.util.Date serverTimestamp){\r\n    this.serverTimestamp = serverTimestamp;\r\n}"
}, {
	"Path": "com.amazonaws.mobileconnectors.kinesis.kinesisrecorder.AbstractKinesisRecorder.deleteAllRecords",
	"Comment": "removes all requests saved to disk in the directory provided thiskinesisrecorder.",
	"Method": "void deleteAllRecords(){\r\n    try {\r\n        recordStore.iterator().removeAllRecords();\r\n    } catch (final IOException e) {\r\n        throw new AmazonClientException(\"Error deleting events\", e);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.S3Object.getBucketName",
	"Comment": "gets the name of the bucket in which this object is contained.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ReplicationDestinationConfig.withBucketARN",
	"Comment": "sets the destination bucket arn for the replication rule. returns theupdated object.",
	"Method": "ReplicationDestinationConfig withBucketARN(String bucketARN){\r\n    setBucketARN(bucketARN);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sqs.model.MessageAttributeValue.withStringListValues",
	"Comment": "not implemented. reserved for future use.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "MessageAttributeValue withStringListValues(String stringListValues,MessageAttributeValue withStringListValues,java.util.Collection<String> stringListValues){\r\n    setStringListValues(stringListValues);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sns.model.CreatePlatformEndpointRequest.clearAttributesEntries",
	"Comment": "removes all the entries added into attributes.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "CreatePlatformEndpointRequest clearAttributesEntries(){\r\n    this.attributes = null;\r\n    return this;\r\n}"
}]